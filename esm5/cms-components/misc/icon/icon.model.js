export var ICON_TYPE;
(function (ICON_TYPE) {
    ICON_TYPE["STAR"] = "STAR";
    ICON_TYPE["SEARCH"] = "SEARCH";
    ICON_TYPE["CART"] = "CART";
    ICON_TYPE["INFO"] = "INFO";
    ICON_TYPE["GRID"] = "GRID";
    ICON_TYPE["LIST"] = "LIST";
    ICON_TYPE["CARET_DOWN"] = "CARET_DOWN";
    ICON_TYPE["CARET_LEFT"] = "CARET_LEFT";
    ICON_TYPE["CARET_RIGHT"] = "CARET_RIGHT";
    ICON_TYPE["CLOSE"] = "CLOSE";
    ICON_TYPE["ERROR"] = "ERROR";
    ICON_TYPE["WARNING"] = "WARNING";
    ICON_TYPE["SUCCESS"] = "SUCCESS";
    ICON_TYPE["VISA"] = "VISA";
    ICON_TYPE["MASTER_CARD"] = "MASTER_CARD";
    ICON_TYPE["AMEX"] = "AMEX";
    ICON_TYPE["DINERS_CLUB"] = "DINERS_CLUB";
    ICON_TYPE["CREDIT_CARD"] = "CREDIT_CARD";
    ICON_TYPE["EXPAND"] = "EXPAND";
    ICON_TYPE["COLLAPSE"] = "COLLAPSE";
    ICON_TYPE["RESET"] = "RESET";
    ICON_TYPE["CIRCLE"] = "CIRCLE";
    ICON_TYPE["HEART"] = "HEART";
    ICON_TYPE["EMPTY_HEART"] = "EMPTY_HEART";
})(ICON_TYPE || (ICON_TYPE = {}));
var IconConfig = /** @class */ (function () {
    function IconConfig() {
    }
    return IconConfig;
}());
export { IconConfig };
/**
 * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.
 * The resources will be automitacally loaded in case they're required for the `ICON_TYPE`.
 */
export var IconResourceType;
(function (IconResourceType) {
    /**
     * An svg based icon requires an SVG resource that must be loaded,
     * this is typically a sprite svg file.
     */
    IconResourceType["SVG"] = "svg";
    /**
     * A font based ICON might require an additional CSS file to be loaded.
     */
    IconResourceType["LINK"] = "link";
    /**
     * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image
     * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)
     */
    IconResourceType["TEXT"] = "text";
})(IconResourceType || (IconResourceType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL21pc2MvaWNvbi9pY29uLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBTixJQUFZLFNBeUJYO0FBekJELFdBQVksU0FBUztJQUNuQiwwQkFBYSxDQUFBO0lBQ2IsOEJBQWlCLENBQUE7SUFDakIsMEJBQWEsQ0FBQTtJQUNiLDBCQUFhLENBQUE7SUFDYiwwQkFBYSxDQUFBO0lBQ2IsMEJBQWEsQ0FBQTtJQUNiLHNDQUF5QixDQUFBO0lBQ3pCLHNDQUF5QixDQUFBO0lBQ3pCLHdDQUEyQixDQUFBO0lBQzNCLDRCQUFlLENBQUE7SUFDZiw0QkFBZSxDQUFBO0lBQ2YsZ0NBQW1CLENBQUE7SUFDbkIsZ0NBQW1CLENBQUE7SUFDbkIsMEJBQWEsQ0FBQTtJQUNiLHdDQUEyQixDQUFBO0lBQzNCLDBCQUFhLENBQUE7SUFDYix3Q0FBMkIsQ0FBQTtJQUMzQix3Q0FBMkIsQ0FBQTtJQUMzQiw4QkFBaUIsQ0FBQTtJQUNqQixrQ0FBcUIsQ0FBQTtJQUNyQiw0QkFBZSxDQUFBO0lBQ2YsOEJBQWlCLENBQUE7SUFDakIsNEJBQWUsQ0FBQTtJQUNmLHdDQUEyQixDQUFBO0FBQzdCLENBQUMsRUF6QlcsU0FBUyxLQUFULFNBQVMsUUF5QnBCO0FBRUQ7SUFBQTtJQUVBLENBQUM7SUFBRCxpQkFBQztBQUFELENBQUMsQUFGRCxJQUVDOztBQWlDRDs7O0dBR0c7QUFDSCxNQUFNLENBQU4sSUFBWSxnQkFnQlg7QUFoQkQsV0FBWSxnQkFBZ0I7SUFDMUI7OztPQUdHO0lBQ0gsK0JBQVcsQ0FBQTtJQUVYOztPQUVHO0lBQ0gsaUNBQWEsQ0FBQTtJQUNiOzs7T0FHRztJQUNILGlDQUFhLENBQUE7QUFDZixDQUFDLEVBaEJXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFnQjNCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gSUNPTl9UWVBFIHtcbiAgU1RBUiA9ICdTVEFSJyxcbiAgU0VBUkNIID0gJ1NFQVJDSCcsXG4gIENBUlQgPSAnQ0FSVCcsXG4gIElORk8gPSAnSU5GTycsXG4gIEdSSUQgPSAnR1JJRCcsXG4gIExJU1QgPSAnTElTVCcsXG4gIENBUkVUX0RPV04gPSAnQ0FSRVRfRE9XTicsXG4gIENBUkVUX0xFRlQgPSAnQ0FSRVRfTEVGVCcsXG4gIENBUkVUX1JJR0hUID0gJ0NBUkVUX1JJR0hUJyxcbiAgQ0xPU0UgPSAnQ0xPU0UnLFxuICBFUlJPUiA9ICdFUlJPUicsXG4gIFdBUk5JTkcgPSAnV0FSTklORycsXG4gIFNVQ0NFU1MgPSAnU1VDQ0VTUycsXG4gIFZJU0EgPSAnVklTQScsXG4gIE1BU1RFUl9DQVJEID0gJ01BU1RFUl9DQVJEJyxcbiAgQU1FWCA9ICdBTUVYJyxcbiAgRElORVJTX0NMVUIgPSAnRElORVJTX0NMVUInLFxuICBDUkVESVRfQ0FSRCA9ICdDUkVESVRfQ0FSRCcsXG4gIEVYUEFORCA9ICdFWFBBTkQnLFxuICBDT0xMQVBTRSA9ICdDT0xMQVBTRScsXG4gIFJFU0VUID0gJ1JFU0VUJyxcbiAgQ0lSQ0xFID0gJ0NJUkNMRScsXG4gIEhFQVJUID0gJ0hFQVJUJyxcbiAgRU1QVFlfSEVBUlQgPSAnRU1QVFlfSEVBUlQnLFxufVxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSWNvbkNvbmZpZyB7XG4gIGljb24/OiBJY29uT3B0aW9ucztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJY29uT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBFYWNoIGljb24gdHlwZSBjYW4gYmUgY29uZmlndXJlZCB3aXRoIGEgc28tY2FsbGVkIHN5bWJvbC4gVGhlIHN5bWJvbCB3aWxsXG4gICAqIGJlIHVzZWQgdG8gbWFwIHRoZSBpY29uIHRvIGFuIFNWRyBgc3ltYm9sYCAoaWQpIG9yIHRvIHRoZSBzdHlsZSBjbGFzc2VzIG9mXG4gICAqIGEgZm9udCBiYXNlZCBpY29uLiBUaGUgZm9sbG93aW5nIGNvbmZpZ3VyYXRpb24gd291bGQgbWFwIHRvIGEgZm9udGF3ZXNvbWVcbiAgICogaWNvbjpcbiAgICpcbiAgICogaWNvbjoge1xuICAgKiAgIHN5bWJvbHM6IHtcbiAgICogICAgIENBUlQ6ICdmYXMgZmEtc2hvcHBpbmctY2FydCdcbiAgICogICB9XG4gICAqIH1cbiAgICovXG4gIHN5bWJvbHM/OiB7XG4gICAgW0lDT05fVFlQRTogc3RyaW5nXTogc3RyaW5nO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXNvdXJjZXMgYXJlIHVzZWQgdG8gbWFwIGljb24gdHlwZXMgdG8gY2VydGFpbiBhc3NldCwgc3VjaCBhcyBhbiBTVkcgKHNwcml0ZSkgaW1hZ2UuXG4gICAqIFRoZSByZXNvdXJjZSB0eXBlIChgSWNvblJlc291cmNlVHlwZWApIGRpY3RhdGVzIHdoZXRoZXIgYW4gU1ZHIGltYWdlIGlzIHVzZWQuIFRoZSBVUkxcbiAgICogaXMgdXNlZCBmb3IgdGhlIFNWRyB4bGluayByZWZlcmVuY2UuXG4gICAqL1xuICByZXNvdXJjZXM/OiBJY29uQ29uZmlnUmVzb3VyY2VbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJY29uQ29uZmlnUmVzb3VyY2Uge1xuICB0eXBlOiBJY29uUmVzb3VyY2VUeXBlIHwgc3RyaW5nO1xuICB1cmw/OiBzdHJpbmc7XG4gIHR5cGVzPzogKElDT05fVFlQRSB8IHN0cmluZylbXTtcbn1cblxuLyoqXG4gKiBFYWNoIElDT04gdHlwZSBjYW4gaGF2ZSBhbiBjb21wYW5pZWQgcmVzb3VyY2UgdHlwZSwgc3VjaCBhcyBTVkcsIExJTksgKGZvbnQpIG9yIGp1c3QgVEVYVC5cbiAqIFRoZSByZXNvdXJjZXMgd2lsbCBiZSBhdXRvbWl0YWNhbGx5IGxvYWRlZCBpbiBjYXNlIHRoZXkncmUgcmVxdWlyZWQgZm9yIHRoZSBgSUNPTl9UWVBFYC5cbiAqL1xuZXhwb3J0IGVudW0gSWNvblJlc291cmNlVHlwZSB7XG4gIC8qKlxuICAgKiBBbiBzdmcgYmFzZWQgaWNvbiByZXF1aXJlcyBhbiBTVkcgcmVzb3VyY2UgdGhhdCBtdXN0IGJlIGxvYWRlZCxcbiAgICogdGhpcyBpcyB0eXBpY2FsbHkgYSBzcHJpdGUgc3ZnIGZpbGUuXG4gICAqL1xuICBTVkcgPSAnc3ZnJyxcblxuICAvKipcbiAgICogQSBmb250IGJhc2VkIElDT04gbWlnaHQgcmVxdWlyZSBhbiBhZGRpdGlvbmFsIENTUyBmaWxlIHRvIGJlIGxvYWRlZC5cbiAgICovXG4gIExJTksgPSAnbGluaycsXG4gIC8qKlxuICAgKiBUZXh0IGJhc2VkIGljb25zIHdpbGwgc2ltcGx5IGFkZCB0aGUgSUNPTiBzdHJpbmcgdG8gdGhlIERPTS4gVGV4dCBpY29ucyBkbyBub3QgbmVlZCBhbiBpbWFnZVxuICAgKiBvciBDU1MgcHNldWRvIGNsYXNzIChpLmUuIDpiZWZvcmUpLCBhcyB0aGUgdGV4dCBpdHNlbGYgaXMgdGhlIGljb24gKGkuZS4gKylcbiAgICovXG4gIFRFWFQgPSAndGV4dCcsXG59XG4iXX0=