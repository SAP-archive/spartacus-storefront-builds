import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { Config } from '@spartacus/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
export var ICON_TYPE;
(function (ICON_TYPE) {
    ICON_TYPE["STAR"] = "STAR";
    ICON_TYPE["SEARCH"] = "SEARCH";
    ICON_TYPE["CART"] = "CART";
    ICON_TYPE["INFO"] = "INFO";
    ICON_TYPE["GRID"] = "GRID";
    ICON_TYPE["LIST"] = "LIST";
    ICON_TYPE["CARET_DOWN"] = "CARET_DOWN";
    ICON_TYPE["CARET_LEFT"] = "CARET_LEFT";
    ICON_TYPE["CARET_RIGHT"] = "CARET_RIGHT";
    ICON_TYPE["CLOSE"] = "CLOSE";
    ICON_TYPE["ERROR"] = "ERROR";
    ICON_TYPE["WARNING"] = "WARNING";
    ICON_TYPE["SUCCESS"] = "SUCCESS";
    ICON_TYPE["VISA"] = "VISA";
    ICON_TYPE["MASTER_CARD"] = "MASTER_CARD";
    ICON_TYPE["AMEX"] = "AMEX";
    ICON_TYPE["DINERS_CLUB"] = "DINERS_CLUB";
    ICON_TYPE["CREDIT_CARD"] = "CREDIT_CARD";
    ICON_TYPE["EXPAND"] = "EXPAND";
    ICON_TYPE["COLLAPSE"] = "COLLAPSE";
    ICON_TYPE["RESET"] = "RESET";
    ICON_TYPE["CIRCLE"] = "CIRCLE";
    ICON_TYPE["HEART"] = "HEART";
    ICON_TYPE["EMPTY_HEART"] = "EMPTY_HEART";
    ICON_TYPE["FILTER"] = "FILTER";
})(ICON_TYPE || (ICON_TYPE = {}));
var IconConfig = /** @class */ (function () {
    function IconConfig() {
    }
    IconConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function IconConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: IconConfig, providedIn: "root" });
    IconConfig = __decorate([
        Injectable({
            providedIn: 'root',
            useExisting: Config,
        })
    ], IconConfig);
    return IconConfig;
}());
export { IconConfig };
/**
 * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.
 * The resources will be automitacally loaded in case they're required for the `ICON_TYPE`.
 */
export var IconResourceType;
(function (IconResourceType) {
    /**
     * An svg based icon requires an SVG resource that must be loaded,
     * this is typically a sprite svg file.
     */
    IconResourceType["SVG"] = "svg";
    /**
     * A font based ICON might require an additional CSS file to be loaded.
     */
    IconResourceType["LINK"] = "link";
    /**
     * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image
     * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)
     */
    IconResourceType["TEXT"] = "text";
})(IconResourceType || (IconResourceType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL21pc2MvaWNvbi9pY29uLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7O0FBRXpDLE1BQU0sQ0FBTixJQUFZLFNBMEJYO0FBMUJELFdBQVksU0FBUztJQUNuQiwwQkFBYSxDQUFBO0lBQ2IsOEJBQWlCLENBQUE7SUFDakIsMEJBQWEsQ0FBQTtJQUNiLDBCQUFhLENBQUE7SUFDYiwwQkFBYSxDQUFBO0lBQ2IsMEJBQWEsQ0FBQTtJQUNiLHNDQUF5QixDQUFBO0lBQ3pCLHNDQUF5QixDQUFBO0lBQ3pCLHdDQUEyQixDQUFBO0lBQzNCLDRCQUFlLENBQUE7SUFDZiw0QkFBZSxDQUFBO0lBQ2YsZ0NBQW1CLENBQUE7SUFDbkIsZ0NBQW1CLENBQUE7SUFDbkIsMEJBQWEsQ0FBQTtJQUNiLHdDQUEyQixDQUFBO0lBQzNCLDBCQUFhLENBQUE7SUFDYix3Q0FBMkIsQ0FBQTtJQUMzQix3Q0FBMkIsQ0FBQTtJQUMzQiw4QkFBaUIsQ0FBQTtJQUNqQixrQ0FBcUIsQ0FBQTtJQUNyQiw0QkFBZSxDQUFBO0lBQ2YsOEJBQWlCLENBQUE7SUFDakIsNEJBQWUsQ0FBQTtJQUNmLHdDQUEyQixDQUFBO0lBQzNCLDhCQUFpQixDQUFBO0FBQ25CLENBQUMsRUExQlcsU0FBUyxLQUFULFNBQVMsUUEwQnBCO0FBTUQ7SUFBQTtLQUVDOztJQUZxQixVQUFVO1FBSi9CLFVBQVUsQ0FBQztZQUNWLFVBQVUsRUFBRSxNQUFNO1lBQ2xCLFdBQVcsRUFBRSxNQUFNO1NBQ3BCLENBQUM7T0FDb0IsVUFBVSxDQUUvQjtxQkFyQ0Q7Q0FxQ0MsQUFGRCxJQUVDO1NBRnFCLFVBQVU7QUFtQ2hDOzs7R0FHRztBQUNILE1BQU0sQ0FBTixJQUFZLGdCQWdCWDtBQWhCRCxXQUFZLGdCQUFnQjtJQUMxQjs7O09BR0c7SUFDSCwrQkFBVyxDQUFBO0lBRVg7O09BRUc7SUFDSCxpQ0FBYSxDQUFBO0lBQ2I7OztPQUdHO0lBQ0gsaUNBQWEsQ0FBQTtBQUNmLENBQUMsRUFoQlcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQWdCM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuXG5leHBvcnQgZW51bSBJQ09OX1RZUEUge1xuICBTVEFSID0gJ1NUQVInLFxuICBTRUFSQ0ggPSAnU0VBUkNIJyxcbiAgQ0FSVCA9ICdDQVJUJyxcbiAgSU5GTyA9ICdJTkZPJyxcbiAgR1JJRCA9ICdHUklEJyxcbiAgTElTVCA9ICdMSVNUJyxcbiAgQ0FSRVRfRE9XTiA9ICdDQVJFVF9ET1dOJyxcbiAgQ0FSRVRfTEVGVCA9ICdDQVJFVF9MRUZUJyxcbiAgQ0FSRVRfUklHSFQgPSAnQ0FSRVRfUklHSFQnLFxuICBDTE9TRSA9ICdDTE9TRScsXG4gIEVSUk9SID0gJ0VSUk9SJyxcbiAgV0FSTklORyA9ICdXQVJOSU5HJyxcbiAgU1VDQ0VTUyA9ICdTVUNDRVNTJyxcbiAgVklTQSA9ICdWSVNBJyxcbiAgTUFTVEVSX0NBUkQgPSAnTUFTVEVSX0NBUkQnLFxuICBBTUVYID0gJ0FNRVgnLFxuICBESU5FUlNfQ0xVQiA9ICdESU5FUlNfQ0xVQicsXG4gIENSRURJVF9DQVJEID0gJ0NSRURJVF9DQVJEJyxcbiAgRVhQQU5EID0gJ0VYUEFORCcsXG4gIENPTExBUFNFID0gJ0NPTExBUFNFJyxcbiAgUkVTRVQgPSAnUkVTRVQnLFxuICBDSVJDTEUgPSAnQ0lSQ0xFJyxcbiAgSEVBUlQgPSAnSEVBUlQnLFxuICBFTVBUWV9IRUFSVCA9ICdFTVBUWV9IRUFSVCcsXG4gIEZJTFRFUiA9ICdGSUxURVInLFxufVxuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290JyxcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSWNvbkNvbmZpZyB7XG4gIGljb24/OiBJY29uT3B0aW9ucztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJY29uT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBFYWNoIGljb24gdHlwZSBjYW4gYmUgY29uZmlndXJlZCB3aXRoIGEgc28tY2FsbGVkIHN5bWJvbC4gVGhlIHN5bWJvbCB3aWxsXG4gICAqIGJlIHVzZWQgdG8gbWFwIHRoZSBpY29uIHRvIGFuIFNWRyBgc3ltYm9sYCAoaWQpIG9yIHRvIHRoZSBzdHlsZSBjbGFzc2VzIG9mXG4gICAqIGEgZm9udCBiYXNlZCBpY29uLiBUaGUgZm9sbG93aW5nIGNvbmZpZ3VyYXRpb24gd291bGQgbWFwIHRvIGEgZm9udGF3ZXNvbWVcbiAgICogaWNvbjpcbiAgICpcbiAgICogaWNvbjoge1xuICAgKiAgIHN5bWJvbHM6IHtcbiAgICogICAgIENBUlQ6ICdmYXMgZmEtc2hvcHBpbmctY2FydCdcbiAgICogICB9XG4gICAqIH1cbiAgICovXG4gIHN5bWJvbHM/OiB7XG4gICAgW0lDT05fVFlQRTogc3RyaW5nXTogc3RyaW5nO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXNvdXJjZXMgYXJlIHVzZWQgdG8gbWFwIGljb24gdHlwZXMgdG8gY2VydGFpbiBhc3NldCwgc3VjaCBhcyBhbiBTVkcgKHNwcml0ZSkgaW1hZ2UuXG4gICAqIFRoZSByZXNvdXJjZSB0eXBlIChgSWNvblJlc291cmNlVHlwZWApIGRpY3RhdGVzIHdoZXRoZXIgYW4gU1ZHIGltYWdlIGlzIHVzZWQuIFRoZSBVUkxcbiAgICogaXMgdXNlZCBmb3IgdGhlIFNWRyB4bGluayByZWZlcmVuY2UuXG4gICAqL1xuICByZXNvdXJjZXM/OiBJY29uQ29uZmlnUmVzb3VyY2VbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJY29uQ29uZmlnUmVzb3VyY2Uge1xuICB0eXBlOiBJY29uUmVzb3VyY2VUeXBlIHwgc3RyaW5nO1xuICB1cmw/OiBzdHJpbmc7XG4gIHR5cGVzPzogKElDT05fVFlQRSB8IHN0cmluZylbXTtcbn1cblxuLyoqXG4gKiBFYWNoIElDT04gdHlwZSBjYW4gaGF2ZSBhbiBjb21wYW5pZWQgcmVzb3VyY2UgdHlwZSwgc3VjaCBhcyBTVkcsIExJTksgKGZvbnQpIG9yIGp1c3QgVEVYVC5cbiAqIFRoZSByZXNvdXJjZXMgd2lsbCBiZSBhdXRvbWl0YWNhbGx5IGxvYWRlZCBpbiBjYXNlIHRoZXkncmUgcmVxdWlyZWQgZm9yIHRoZSBgSUNPTl9UWVBFYC5cbiAqL1xuZXhwb3J0IGVudW0gSWNvblJlc291cmNlVHlwZSB7XG4gIC8qKlxuICAgKiBBbiBzdmcgYmFzZWQgaWNvbiByZXF1aXJlcyBhbiBTVkcgcmVzb3VyY2UgdGhhdCBtdXN0IGJlIGxvYWRlZCxcbiAgICogdGhpcyBpcyB0eXBpY2FsbHkgYSBzcHJpdGUgc3ZnIGZpbGUuXG4gICAqL1xuICBTVkcgPSAnc3ZnJyxcblxuICAvKipcbiAgICogQSBmb250IGJhc2VkIElDT04gbWlnaHQgcmVxdWlyZSBhbiBhZGRpdGlvbmFsIENTUyBmaWxlIHRvIGJlIGxvYWRlZC5cbiAgICovXG4gIExJTksgPSAnbGluaycsXG4gIC8qKlxuICAgKiBUZXh0IGJhc2VkIGljb25zIHdpbGwgc2ltcGx5IGFkZCB0aGUgSUNPTiBzdHJpbmcgdG8gdGhlIERPTS4gVGV4dCBpY29ucyBkbyBub3QgbmVlZCBhbiBpbWFnZVxuICAgKiBvciBDU1MgcHNldWRvIGNsYXNzIChpLmUuIDpiZWZvcmUpLCBhcyB0aGUgdGV4dCBpdHNlbGYgaXMgdGhlIGljb24gKGkuZS4gKylcbiAgICovXG4gIFRFWFQgPSAndGV4dCcsXG59XG4iXX0=