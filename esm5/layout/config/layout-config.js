import { __decorate } from "tslib";
import { Config } from '@spartacus/core';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
export var BREAKPOINT;
(function (BREAKPOINT) {
    BREAKPOINT["xs"] = "xs";
    BREAKPOINT["sm"] = "sm";
    BREAKPOINT["md"] = "md";
    BREAKPOINT["lg"] = "lg";
    BREAKPOINT["xl"] = "xl";
})(BREAKPOINT || (BREAKPOINT = {}));
/**
 * The LayoutConfig supports the configuration of page slots by page templates
 * or page sections, such as headers and footers. The configuration also supports
 * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered
 * por a given breakpoint.
 */
var LayoutConfig = /** @class */ (function () {
    function LayoutConfig() {
    }
    LayoutConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function LayoutConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: LayoutConfig, providedIn: "root" });
    LayoutConfig = __decorate([
        Injectable({
            providedIn: 'root',
            useExisting: Config,
        })
    ], LayoutConfig);
    return LayoutConfig;
}());
export { LayoutConfig };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImxheW91dC9jb25maWcvbGF5b3V0LWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUF3QixNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFFM0MsTUFBTSxDQUFOLElBQVksVUFNWDtBQU5ELFdBQVksVUFBVTtJQUNwQix1QkFBUyxDQUFBO0lBQ1QsdUJBQVMsQ0FBQTtJQUNULHVCQUFTLENBQUE7SUFDVCx1QkFBUyxDQUFBO0lBQ1QsdUJBQVMsQ0FBQTtBQUNYLENBQUMsRUFOVyxVQUFVLEtBQVYsVUFBVSxRQU1yQjtBQW1DRDs7Ozs7R0FLRztBQUtIO0lBQUE7S0E4QkM7O0lBOUJxQixZQUFZO1FBSmpDLFVBQVUsQ0FBQztZQUNWLFVBQVUsRUFBRSxNQUFNO1lBQ2xCLFdBQVcsRUFBRSxNQUFNO1NBQ3BCLENBQUM7T0FDb0IsWUFBWSxDQThCakM7dUJBcEZEO0NBb0ZDLEFBOUJELElBOEJDO1NBOUJxQixZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVmZXJMb2FkaW5nU3RyYXRlZ3ksIENvbmZpZyB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBlbnVtIEJSRUFLUE9JTlQge1xuICB4cyA9ICd4cycsXG4gIHNtID0gJ3NtJyxcbiAgbWQgPSAnbWQnLFxuICBsZyA9ICdsZycsXG4gIHhsID0gJ3hsJyxcbn1cblxuZXhwb3J0IHR5cGUgTGF5b3V0U2VjdGlvbnMgPVxuICB8ICdoZWFkZXInXG4gIHwgJ2Zvb3RlcidcbiAgfCAnTGFuZGluZ1BhZ2UyVGVtcGxhdGUnXG4gIHwgc3RyaW5nO1xuXG5leHBvcnQgdHlwZSBTbG90Q29uZmlnID0ge1xuICAvKiogVGhlIGNtcyBwYWdlIHNsb3RzIGFyZSBtYXBwZWQgYnkgdGhlIGBzbG90LnBvc2l0aW9uYC4gKi9cbiAgc2xvdHM/OiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogVGhlIHBhZ2UgZm9sZCBpZGVudGlmaWVzIHRoZSBsYXN0IGV4cGVjdGVkIHBhZ2Ugc2xvdCBhYm92ZS10aGUtZm9sZC5cbiAgICogSXQncyBwZXJmZWN0bHkgZmluZSB0byBzcGVjaWZ5IHRoaXMgYnkgaWRpY2F0aW9uLCBob3dldmVyIGEgbW9yZVxuICAgKiBwcmVjaXNlIGluZGljYXRpb24gd2lsbCBoYXZlIGFuIHBvc2l0aXZlIGltcGFjdCBvbiBwZXJmb3JtYW5jZS5cbiAgICovXG4gIHBhZ2VGb2xkPzogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgU2xvdEdyb3VwID0ge1xuICAvKiogVGhlIHBhZ2Ugc2xvdCBjb25maWd1cmF0aW9uIGZvciBsYXJnZSBzY3JlZW5zICovXG4gIFtCUkVBS1BPSU5ULmxnXT86IFNsb3RDb25maWc7XG4gIC8qKiBUaGUgcGFnZSBzbG90IGNvbmZpZ3VyYXRpb24gZm9yIG1lZGl1bSBzY3JlZW5zICovXG4gIFtCUkVBS1BPSU5ULm1kXT86IFNsb3RDb25maWc7XG4gIC8qKiBUaGUgcGFnZSBzbG90IGNvbmZpZ3VyYXRpb24gZm9yIHNtYWxsIHNjcmVlbnMgKi9cbiAgW0JSRUFLUE9JTlQuc21dPzogU2xvdENvbmZpZztcbiAgLyoqIFRoZSBwYWdlIHNsb3QgY29uZmlndXJhdGlvbiBmb3IgZXh0cmEgc21hbGwgc2NyZWVucyAqL1xuICBbQlJFQUtQT0lOVC54c10/OiBTbG90Q29uZmlnO1xufTtcblxuZXhwb3J0IHR5cGUgTGF5b3V0U2xvdENvbmZpZyA9IHtcbiAgW3NlY3Rpb24gaW4gTGF5b3V0U2VjdGlvbnNdOiBTbG90Q29uZmlnIHwgU2xvdEdyb3VwIHwgTGF5b3V0U2xvdENvbmZpZztcbn07XG5cbi8qKlxuICogVGhlIExheW91dENvbmZpZyBzdXBwb3J0cyB0aGUgY29uZmlndXJhdGlvbiBvZiBwYWdlIHNsb3RzIGJ5IHBhZ2UgdGVtcGxhdGVzXG4gKiBvciBwYWdlIHNlY3Rpb25zLCBzdWNoIGFzIGhlYWRlcnMgYW5kIGZvb3RlcnMuIFRoZSBjb25maWd1cmF0aW9uIGFsc28gc3VwcG9ydHNcbiAqIGFkYXB0aXZlIGRlc2lnbiBwZXIgYnJlYWRwb2ludCAobm90IHBlciBkZXZpY2UgdHlwZSksIHNvIHRoYXQgdGhlIERPTSBpcyAocmUpcmVuZGVyZWRcbiAqIHBvciBhIGdpdmVuIGJyZWFrcG9pbnQuXG4gKi9cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICB1c2VFeGlzdGluZzogQ29uZmlnLFxufSlcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBMYXlvdXRDb25maWcge1xuICAvKiogVGhlIGJyZWFrcG9pbnQgY29uZmlndXJhdGlvbiBpcyB1c2VkIHdoZW4gdGhlIERPTSBpcyAocmUpcmVuZGVyZWQgaW4gc3BlY2lmaWMgdmlldy5cbiAgICogVGhpcyBhbGxvd3MgZm9yIGFkYXB0aXZlIHJlbmRlcmluZywgc28gdGhhdCB0aGUgRE9NIGlzIHJlbmRlcmVkIGZvciBzcGVjaWZpYyBicmVha3BvaW50cy4gKi9cbiAgYnJlYWtwb2ludHM/OiB7XG4gICAgW0JSRUFLUE9JTlQueHNdPzogbnVtYmVyO1xuICAgIFtCUkVBS1BPSU5ULnNtXT86IG51bWJlcjtcbiAgICBbQlJFQUtQT0lOVC5tZF0/OiBudW1iZXI7XG4gICAgW0JSRUFLUE9JTlQubGddPzogbnVtYmVyO1xuICB9O1xuICBsYXlvdXRTbG90cz86IExheW91dFNsb3RDb25maWc7XG5cbiAgLyoqXG4gICAqIERlZmVycnJlZCBsb2FkaW5nIGlzIGEgdGVjaG5pcXVlIHRvIGhvbGQgb2Ygd2l0aCB0aGUgbG9hZGluZyAvIGNyZWF0aW9uXG4gICAqIG9mIERPTSBlbGVtZW50cyB3aGljaCBhcmUgbm90IG5vdCBpbiB0aGUgaW5pdGlhbCB2aWV3IHBvcnQuXG4gICAqIFRoaXMgdGVjaG5pcXVlIHdpbCBpbmNyZWFzZSBwZXJmb3JtYW5jZS5cbiAgICovXG4gIGRlZmVycmVkTG9hZGluZz86IHtcbiAgICAvKipcbiAgICAgKiBUaGUgZ2xvYmFsIHN0cmF0ZWd5IHdpbGwgYmUgdXNlZCBhcyBhIGZhbGxiYWNrIHN0cmF0ZWd5IGZvciBhbGwgRE9NIGNyZWF0aW9uLFxuICAgICAqIGJ1dCBjYW4gYmUgb3ZlcnJpZGVuIGJ5IGxvY2FsIGNvbmZpZ3VyYXRpb24sIGkuZS4gZm9yIGNtcyBjb21wb25lbnRzLlxuICAgICAqL1xuICAgIHN0cmF0ZWd5PzogRGVmZXJMb2FkaW5nU3RyYXRlZ3k7XG4gICAgLyoqXG4gICAgICogVGhlIGludGVyc2VjdGlvbiBtYXJnaW4gY29udGFpbnMgdGhlIG9mZnNldCB1c2VkIGJ5IHRoZSBJbnRlcnNlY3Rpb24gT2JzZXJ2ZXJcbiAgICAgKiB0byBvYnNlcnZlIGVsZW1lbnRzIG91dHNpZGUgdGhlIHZpZXcgcG9ydC5cbiAgICAgKlxuICAgICAqIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSW50ZXJzZWN0aW9uT2JzZXJ2ZXIvcm9vdE1hcmdpblxuICAgICAqL1xuICAgIGludGVyc2VjdGlvbk1hcmdpbj86IHN0cmluZztcbiAgfTtcbn1cbiJdfQ==