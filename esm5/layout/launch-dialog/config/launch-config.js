import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { Config } from '@spartacus/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
var LaunchConfig = /** @class */ (function () {
    function LaunchConfig() {
    }
    LaunchConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function LaunchConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: LaunchConfig, providedIn: "root" });
    LaunchConfig = __decorate([
        Injectable({
            providedIn: 'root',
            useExisting: Config,
        })
    ], LaunchConfig);
    return LaunchConfig;
}());
export { LaunchConfig };
/**
 * Types of dialog openings supported
 */
export var DIALOG_TYPE;
(function (DIALOG_TYPE) {
    DIALOG_TYPE["POPOVER"] = "POPOVER";
    DIALOG_TYPE["DIALOG"] = "DIALOG";
    DIALOG_TYPE["SIDEBAR_START"] = "SIDEBAR_START";
    DIALOG_TYPE["SIDEBAR_END"] = "SIDEBAR_END";
})(DIALOG_TYPE || (DIALOG_TYPE = {}));
/**
 * List of available callers
 */
export var LAUNCH_CALLER;
(function (LAUNCH_CALLER) {
    LAUNCH_CALLER["ASM"] = "ASM";
    LAUNCH_CALLER["SKIP_LINKS"] = "SKIP_LINKS";
})(LAUNCH_CALLER || (LAUNCH_CALLER = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF1bmNoLWNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImxheW91dC9sYXVuY2gtZGlhbG9nL2NvbmZpZy9sYXVuY2gtY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7O0FBTXpDO0lBQUE7S0FJQzs7SUFKcUIsWUFBWTtRQUpqQyxVQUFVLENBQUM7WUFDVixVQUFVLEVBQUUsTUFBTTtZQUNsQixXQUFXLEVBQUUsTUFBTTtTQUNwQixDQUFDO09BQ29CLFlBQVksQ0FJakM7dUJBWkQ7Q0FZQyxBQUpELElBSUM7U0FKcUIsWUFBWTtBQWtFbEM7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxXQUtYO0FBTEQsV0FBWSxXQUFXO0lBQ3JCLGtDQUFtQixDQUFBO0lBQ25CLGdDQUFpQixDQUFBO0lBQ2pCLDhDQUErQixDQUFBO0lBQy9CLDBDQUEyQixDQUFBO0FBQzdCLENBQUMsRUFMVyxXQUFXLEtBQVgsV0FBVyxRQUt0QjtBQUVEOztHQUVHO0FBQ0gsTUFBTSxDQUFOLElBQVksYUFHWDtBQUhELFdBQVksYUFBYTtJQUN2Qiw0QkFBVyxDQUFBO0lBQ1gsMENBQXlCLENBQUE7QUFDM0IsQ0FBQyxFQUhXLGFBQWEsS0FBYixhQUFhLFFBR3hCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3V0bGV0UG9zaXRpb24gfSBmcm9tICcuLi8uLi8uLi9jbXMtc3RydWN0dXJlL291dGxldC9vdXRsZXQubW9kZWwnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG4gIHVzZUV4aXN0aW5nOiBDb25maWcsXG59KVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIExhdW5jaENvbmZpZyB7XG4gIGxhdW5jaD86IHtcbiAgICBba2V5OiBzdHJpbmddOiBMYXVuY2hPcHRpb25zO1xuICB9O1xufVxuXG5leHBvcnQgdHlwZSBMYXVuY2hPcHRpb25zID1cbiAgfCBMYXVuY2hPdXRsZXREaWFsb2dcbiAgfCBMYXVuY2hJbmxpbmVEaWFsb2dcbiAgfCBMYXVuY2hSb3V0ZTtcblxuLyoqXG4gKiBQYXJlbnQgdHlwZSBmb3IgY29uZmlndXJhdGlvbnMgdGhhdCByZW5kZXIgY29tcG9uZW50c1xuICovXG5leHBvcnQgaW50ZXJmYWNlIExhdW5jaERpYWxvZyB7XG4gIGNvbXBvbmVudDogYW55O1xuICAvKipcbiAgICogQ2FuIHRoZSBlbGVtZW50IGJlIHJlbmRlcmVkIG11bHRpcGxlIHRpbWVzXG4gICAqL1xuICBtdWx0aT86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBPcHRpb25hbCBlbGVtZW50cyBmb3Igb3RoZXIgY29uZmlndXJhdGlvbnNcbiAgICovXG4gIG9wdGlvbnM/OiB7XG4gICAgLyoqXG4gICAgICogRGlhbG9nIHR5cGUgaXMgdXNlZCB0byBhcHBseSBDU1MgY2xhc3Nlc1xuICAgICAqL1xuICAgIGRpYWxvZ1R5cGU/OiBESUFMT0dfVFlQRTtcbiAgfTtcbn1cblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIHR5cGUgdG8gcmVuZGVyIGEgY29tcG9uZW50IGluIGFuIG91dGxldFxuICovXG5leHBvcnQgaW50ZXJmYWNlIExhdW5jaE91dGxldERpYWxvZyBleHRlbmRzIExhdW5jaERpYWxvZyB7XG4gIC8qKlxuICAgKiBUaGUgb3V0bGV0IHRvIHJlbmRlciB0aGUgZWxlbWVudCBpblxuICAgKi9cbiAgb3V0bGV0OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBEZWZhdWx0OiBPdXRsZXRQb3NpdGlvbi5CRUZPUkVcbiAgICovXG4gIHBvc2l0aW9uPzogT3V0bGV0UG9zaXRpb247XG59XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiB0eXBlIHRvIHJlbmRlciBhIGNvbXBvbmVudCBpbmxpbmUgKG5leHQgdG8gdGhlIHRyaWdnZXIpXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTGF1bmNoSW5saW5lRGlhbG9nIGV4dGVuZHMgTGF1bmNoRGlhbG9nIHtcbiAgaW5saW5lOiBib29sZWFuO1xufVxuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gdHlwZSB0byByZW5kZXIgYXMgbGlua1xuICovXG5leHBvcnQgaW50ZXJmYWNlIExhdW5jaFJvdXRlIHtcbiAgLyoqXG4gICAqIFRoZSByb3V0ZSBmb3IgdGhlIHVybFxuICAgKi9cbiAgY3hSb3V0ZTogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIHBhcmFtZXRlcnMgZm9yIHRoZSByb3V0ZVxuICAgKi9cbiAgcGFyYW1zPzogeyBbcGFyYW06IHN0cmluZ106IGFueSB9O1xufVxuXG4vKipcbiAqIFR5cGVzIG9mIGRpYWxvZyBvcGVuaW5ncyBzdXBwb3J0ZWRcbiAqL1xuZXhwb3J0IGVudW0gRElBTE9HX1RZUEUge1xuICBQT1BPVkVSID0gJ1BPUE9WRVInLFxuICBESUFMT0cgPSAnRElBTE9HJyxcbiAgU0lERUJBUl9TVEFSVCA9ICdTSURFQkFSX1NUQVJUJyxcbiAgU0lERUJBUl9FTkQgPSAnU0lERUJBUl9FTkQnLFxufVxuXG4vKipcbiAqIExpc3Qgb2YgYXZhaWxhYmxlIGNhbGxlcnNcbiAqL1xuZXhwb3J0IGVudW0gTEFVTkNIX0NBTExFUiB7XG4gIEFTTSA9ICdBU00nLFxuICBTS0lQX0xJTktTID0gJ1NLSVBfTElOS1MnLFxufVxuIl19