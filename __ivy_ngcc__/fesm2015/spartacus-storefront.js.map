{"version":3,"file":"spartacus-storefront.js","sources":["ng:/@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng:/@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng:/@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng:/@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng:/@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng:/@spartacus/storefront/shared/components/modal/modal-ref.ts","ng:/@spartacus/storefront/shared/components/modal/modal.service.ts","ng:/@spartacus/storefront/shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","ng:/@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","ng:/@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng:/@spartacus/storefront/cms-structure/page/component/component-mapper.service.ts","ng:/@spartacus/storefront/cms-structure/page/component/cx-api.service.ts","ng:/@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng:/@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng:/@spartacus/storefront/cms-structure/services/cms-mapping.service.ts","ng:/@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng:/@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng:/@spartacus/storefront/layout/config/layout-config.ts","ng:/@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng:/@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng:/@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng:/@spartacus/storefront/layout/loading/intersection.service.ts","ng:/@spartacus/storefront/layout/loading/defer-loader.service.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng:/@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng:/@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng:/@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng:/@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng:/@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng:/@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng:/@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng:/@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng:/@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng:/@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng:/@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng:/@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng:/@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng:/@spartacus/storefront/cms-structure/routing/routing.module.ts","ng:/@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng:/@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng:/@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/json-ld-script.factory.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/json-ld.directive.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/tokens.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/structured-data.factory.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/structured-data.module.ts","ng:/@spartacus/storefront/cms-structure/seo/seo.module.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","ng:/@spartacus/storefront/cms-components/product/current-product.service.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","ng:/@spartacus/storefront/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","ng:/@spartacus/storefront/cms-components/asm/asm-constants.ts","ng:/@spartacus/storefront/cms-components/asm/services/asm-component.service.ts","ng:/@spartacus/storefront/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","ng:/@spartacus/storefront/cms-components/asm/services/asm-enabler.service.ts","ng:/@spartacus/storefront/cms-components/asm/asm-loader.module.ts","ng:/@spartacus/storefront/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","ng:/@spartacus/storefront/cms-components/asm/asm-session-timer/format-timer.pipe.ts","ng:/@spartacus/storefront/shared/utils/forms/form-utils.ts","ng:/@spartacus/storefront/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","ng:/@spartacus/storefront/cms-components/asm/customer-emulation/customer-emulation.component.ts","ng:/@spartacus/storefront/cms-components/asm/customer-selection/customer-selection.component.ts","ng:/@spartacus/storefront/cms-components/asm/asm.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng:/@spartacus/storefront/shared/services/promotion/promotion.service.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.model.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/block/block-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/services/select-focus.util.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/focus.directive.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.module.ts","ng:/@spartacus/storefront/shared/components/card/card.component.ts","ng:/@spartacus/storefront/shared/components/card/card.module.ts","ng:/@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng:/@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng:/@spartacus/storefront/shared/components/media/media.service.ts","ng:/@spartacus/storefront/shared/components/media/media.component.ts","ng:/@spartacus/storefront/shared/components/media/media.module.ts","ng:/@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng:/@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng:/@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng:/@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng:/@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/config/default-pagination.config.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/config/pagination.config.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.model.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.builder.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng:/@spartacus/storefront/shared/components/list-navigation/pagination/pagination.module.ts","ng:/@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng:/@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng:/@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng:/@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng:/@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng:/@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/config/qualtrics-config.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/qualtrics-loader.service.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.component.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","ng:/@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.module.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng:/@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng:/@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng:/@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng:/@spartacus/storefront/shared/config/view-config.ts","ng:/@spartacus/storefront/shared/config/view-config.module.ts","ng:/@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng:/@spartacus/storefront/shared/utils/forms/title-utils.ts","ng:/@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng:/@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng:/@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng:/@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng:/@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng:/@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","ng:/@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","ng:/@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.component.ts","ng:/@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.module.ts","ng:/@spartacus/storefront/cms-components/cart/cart.module.ts","ng:/@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng:/@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng:/@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng:/@spartacus/storefront/cms-components/checkout/services/checkout-config.service.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/checkout-auth.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng:/@spartacus/storefront/cms-components/checkout/services/express-checkout.service.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/checkout-details-loaded.guard.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng:/@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng:/@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng:/@spartacus/storefront/cms-components/checkout/guards/not-checkout-auth.guard.ts","ng:/@spartacus/storefront/layout/a11y/keyboard-focus/index.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/config/skip-link.config.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/service/skip-link.service.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/component/skip-link.component.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/config/default-skip-link.config.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/directive/skip-link.directive.ts","ng:/@spartacus/storefront/layout/a11y/skip-link/skip-link.module.ts","ng:/@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng:/@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng:/@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng:/@spartacus/storefront/layout/layout.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng:/@spartacus/storefront/shared/components/anonymous-consents/anonymous-consents.module.ts","ng:/@spartacus/storefront/layout/main/storefront.component.ts","ng:/@spartacus/storefront/layout/main/main.module.ts","ng:/@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.component.ts","ng:/@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.module.ts","ng:/@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng:/@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng:/@spartacus/storefront/cms-components/content/link/link.component.ts","ng:/@spartacus/storefront/cms-components/content/link/link.module.ts","ng:/@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng:/@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng:/@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng:/@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.model.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.module.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.component.ts","ng:/@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.module.ts","ng:/@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng:/@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng:/@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng:/@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng:/@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng:/@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng:/@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng:/@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng:/@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng:/@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng:/@spartacus/storefront/cms-components/product/config/default-scroll-config.ts","ng:/@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng:/@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng:/@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng:/@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/product-variants.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/guards/product-variant.guard.ts","ng:/@spartacus/storefront/cms-components/product/product-variants/product-variants.module.ts","ng:/@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng:/@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng:/@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng:/@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng:/@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng:/@spartacus/storefront/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","ng:/@spartacus/storefront/cms-components/product/stock-notification/stock-notification.component.ts","ng:/@spartacus/storefront/cms-components/product/stock-notification/stock-notification.module.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/schedule-component/schedule.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder/store-finder.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","ng:/@spartacus/storefront/cms-components/storefinder/store-finder.module.ts","ng:/@spartacus/storefront/cms-components/user/checkout-login/checkout-login.component.ts","ng:/@spartacus/storefront/cms-components/user/checkout-login/checkout-login.module.ts","ng:/@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng:/@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng:/@spartacus/storefront/cms-components/user/login/login.component.ts","ng:/@spartacus/storefront/cms-components/user/login/login.module.ts","ng:/@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng:/@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng:/@spartacus/storefront/cms-components/user/register/register.component.ts","ng:/@spartacus/storefront/cms-components/user/register/register.module.ts","ng:/@spartacus/storefront/cms-components/user/user.module.ts","ng:/@spartacus/storefront/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","ng:/@spartacus/storefront/cms-components/wish-list/components/wish-list/wish-list.component.ts","ng:/@spartacus/storefront/cms-components/wish-list/wish-list.module.ts","ng:/@spartacus/storefront/cms-components/cms-lib.module.ts","ng:/@spartacus/storefront/cms-pages/product-details-page/product-details-url-matcher.ts","ng:/@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng:/@spartacus/storefront/cms-pages/product-listing-page/product-listing-url-matcher.ts","ng:/@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng:/@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng:/@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng:/@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng:/@spartacus/storefront/recipes/storefront-foundation.module.ts","ng:/@spartacus/storefront/recipes/storefront.module.ts","ng:/@spartacus/storefront/recipes/b2c-storefront.module.ts","ng:/@spartacus/storefront/recipes/config/optional-layouts/plp-accessibility-layout-config.ts","ng:/@spartacus/storefront/public_api.ts","ng:/@spartacus/storefront/spartacus-storefront.ts"],"names":["CoreRoutingModule","AsmCoreModule","AnonymousConsentsModule"],"mappingsnB,0BAAa,CAAA;IACb,8BAAiB,CAAA;IACjB,0BAAa,CAAA;IACb,0BAAa,CAAA;IACb,0BAAa,CAAA;IACb,0BAAa,CAAA;IACb,sCAAyB,CAAA;IACzB,sCAAyB,CAAA;IACzB,wCAA2B,CAAA;IAC3B,4BAAe,CAAA;IACf,4BAAe,CAAA;IACf,gCAAmB,CAAA;IACnB,gCAAmB,CAAA;IACnB,0BAAa,CAAA;IACb,wCAA2B,CAAA;IAC3B,0BAAa,CAAA;IACb,wCAA2B,CAAA;IAC3B,wCAA2B,CAAA;IAC3B,8BAAiB,CAAA;IACjB,kCAAqB,CAAA;IACrB,4BAAe,CAAA;IACf,8BAAiB,CAAA;IACjB,4BAAe,CAAA;IACf,wCAA2B,CAAA;AAC7B,CAAC,EAzBW,SAAS,KAAT,SAAS,QAyBpB;MAEqB,UAAU;CAE/B;AAiCD;;;;IAIY;AAAZ,WAAY,gBAAgB;;;;;IAK1B,+BAAW,CAAA;;;;IAKX,iCAAa,CAAA;;;;;IAKb,iCAAa,CAAA;AACf,CAAC,EAhBW,gBAAgB,KAAhB,gBAAgB;;MChEf,qBAAqB,GAAe;IAC/C,IAAI,EAAE;QACJ,OAAO,EAAE;YACP,MAAM,EAAE,eAAe;YACvB,IAAI,EAAE,sBAAsB;YAC5B,IAAI,EAAE,oBAAoB;YAC1B,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,aAAa;YACnB,UAAU,EAAE,mBAAmB;YAC/B,WAAW,EAAE,oBAAoB;YACjC,UAAU,EAAE,mBAAmB;YAC/B,KAAK,EAAE,2BAA2B;YAClC,OAAO,EAAE,6BAA6B;YACtC,OAAO,EAAE,qBAAqB;YAC9B,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,gBAAgB;YACtB,WAAW,EAAE,sBAAsB;YACnC,IAAI,EAAE,gBAAgB;YACtB,WAAW,EAAE,uBAAuB;YACpC,WAAW,EAAE,oBAAoB;YACjC,QAAQ,EAAE,cAAc;YACxB,MAAM,EAAE,aAAa;YACrB,KAAK,EAAE,qBAAqB;YAC5B,MAAM,EAAE,eAAe;YACvB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,cAAc;SAC5B;QACD,SAAS,EAAE;YACT;gBACE,IAAI,EAAE,gBAAgB,CAAC,IAAI;gBAC3B,GAAG,EAAE,yDAAyD;aAC/D;SACF;KACF;CACF;;ICvBY,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YACY,MAAiB,EACjB,UAAsB,EACtB,SAAuB;QAFvB,WAAM,GAAN,MAAM,CAAW;QACjB,eAAU,GAAV,UAAU,CAAY;QACtB,cAAS,GAAT,SAAS,CAAc;QAJ3B,oBAAe,GAAG,EAAE,CAAC;KAKzB;;;;IAKJ,OAAO,CAAC,IAAwB;QAC9B,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC,EAAE;YACnD,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAC3C,yBAAyB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAC/D,CAAC;SACH;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,EAAE;YACpD,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACrE;KACF;;;;;IAMD,eAAe,CAAC,QAA4B;QAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACvC;;;;;IAMO,cAAc,CACpB,QAA4B,EAC5B,YAA8B;QAE9B,QACE,IAAI,CAAC,MAAM,CAAC,SAAS;YACrB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAC1B,GAAG,IACD,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACzE,EACD;KACH;;;;;;;IAQO,UAAU,CAAC,QAA4B;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAC5C,GAAG,IACD,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,GAAG;YACjC,GAAG,CAAC,KAAK;YACT,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAC/B,CAAC;QACF,IAAI,WAAW,EAAE;YACf,OAAO,WAAW,CAAC,GAAG;kBAClB,GAAG,WAAW,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;kBAChD,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;SACpC;KACF;;;;;;;;;IAUD,eAAe,CAAC,QAA4B;QAC1C,MAAM,QAAQ,GAAuB,IAAI,CAAC,YAAY,CACpD,QAAQ,EACR,gBAAgB,CAAC,IAAI,CACtB,CAAC;QACF,IACE,QAAQ;YACR,QAAQ,CAAC,GAAG;YACZ,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC5C;YACA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACxC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;YACxB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;KACF;IAEO,YAAY,CAClB,QAA4B,EAC5B,YAA8B;QAE9B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACvC,GAAG,IACD,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACzE,CAAC;;QAEF,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACnC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,KAAK,EAAE,CACrE,CAAC;SACH;QACD,OAAO,QAAQ,CAAC;KACjB;IAED,SAAS,CAAC,QAA4B;QACpC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACvE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SACtC;KACF;IAED,IAAY,MAAM;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;KAC7B;CACF;8MAAA;;YA1HqB,SAAS;YACL,UAAU;YACX,YAAY;;mPAQS,AAiH9C;AA9Ha;ACTb;;SDS8B,oBAH7B,UAAU,CAAC,UACV;;GAAU,EAAE,MAAM,OACnB,CAAC,IACW;QAAiB,CA6H7B;;;;;;;;;;;;;;;AC9GD,IAAa,aAAa,GAA1B,MAAa,aAAa;IA4BxB,YACY,UAA6B,EAC7B,UAAmC,EACnC,QAAmB;QAFnB,eAAU,GAAV,UAAU,CAAmB;QAC7B,eAAU,GAAV,UAAU,CAAyB;QACnC,aAAQ,GAAR,QAAQ,CAAW;KAC3B;;;;;IA3BK,IAAI,MAAM,CAAC,IAAe;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACpB;;;;;IAMQ,IAAI,IAAI,CAAC,IAAe;QAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACpB;IAmBS,OAAO,CAAC,IAAe;QAC/B,IAAI,CAAC,IAAI,IAAY,IAAI,KAAK,EAAE,EAAE;YAChC,OAAO;SACR;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KACvC;;;;IAKS,eAAe,CAAC,IAAe;QACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAE7C,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,IAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAC1C,CAAC;SACH;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAErE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG;YAC3B,IAAI,GAAG,KAAK,EAAE,EAAE;gBACd,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;aACxC;SACF,CAAC,CAAC;KACJ;IAED,IAAc,IAAI;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACtC;CACF;;;;;;;;6BAAA;;YAtCyB,iBAAiB;YACjB,UAAU;YACZ,SAAS;;AA1BtB;IAAR,KAAK,EAAE;2CAEP;AAMQ;IAAR,KAAK,EAAE;yCAEP,CACH,AAoDA;AApEa;YAAa,oBAJzB,5BCTY,UAAU,GAAvB,MAAa,UAAU;CAAG;EDShB,CAAC,UACT,QAAQ,EAAE,kBAAkB,UAC5B;qDAAoC,MACrC,CAAC,IACW,aAAa,CAmEzB;;;EChFyB,CAAb,UAAU,oBATtB,GAUD;;GAVS,HCLT;ADKU,UACR,YAAY,EAAE,CAAC,aAAa;AAAC;OAC7B,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,SAAS,EAAE,cACT;;IAAoB,CAAC,qBAAqB,CAAC,3BCJ/C,MAAa,QAAS,SAAQ,WAAW;CAAG;;CDKxC,EAAE,HEPN;MFOa,EAAE,UAAU,EAAE;EAAW;AAAE,MAAM,EAAE,WAC7C,UACD,OAAO,EAAE,CAAC,vCEHZ,IAAa,YAAY,GAAzB,MAAa,YAAY;YFGA,CAAC,OACzB,CAAC,IACW,rBEHX,YAAoB,eAAyB;AFGxB,CAAG,OEHJ,oBAAe,GAAf,eAAe,CAAU;QADrC,WAAM,GAAe,EAAE,CAAC;KACiB;IAEjD,IAAI,CAAC,OAAY,EAAE,OAAsB;QACvC,IAAI,WAAqB,CAAC;QAE1B,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9B,OAAO,WAAW,CAAC;KACpB;IAED,cAAc;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAClD,OAAO,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;KAC7B;IAED,kBAAkB,CAAC,MAAY;QAC7B,MAAM,KAAK,GAAa,IAAI,CAAC,cAAc,EAAE,CAAC;QAE9C,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACnB;KACF;IAED,gBAAgB,CAAC,MAAY;QAC3B,MAAM,KAAK,GAAa,IAAI,CAAC,cAAc,EAAE,CAAC;QAE9C,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACnB;KACF;CACF;2HAAA;;YAjCsC,QAAQ;;gLAMvB,AA4BxB;AApCa;WAAY,oBAHxB,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,zECOY,+BAA+B,GAA5C,MAAa,+BAA+B;ADP1C,IACW,YAAY,CAmCxB,bCfC,YACU,MAA+B,EAC/B,YAA0B,EAC1B,wBAAkD;QAFlD,WAAM,GAAN,MAAM,CAAyB;QAC/B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAhBpD,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAE3C,yBAAoB,GAAG,IAAI,CAAC;QAC5B,cAAS,GAAG,SAAS,CAAC;QACtB,qBAAgB,GAAa,EAAE,CAAC;;QAOhC,cAAS,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAO7C,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;YAC1C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,4BAA4B,CAAC;YACvF,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,EAAE;gBAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;aACxE;SACF;KACF;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;QAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,EAAE,CAAC;KACzE;IAED,UAAU,CAAC,MAAY;QACrB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;KAC5C;IAED,SAAS;QACP,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7C,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,KACxB,SAAS,CAAC,OAAO,CAAC,QAAQ;YACxB,MAAM,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACjE,IAAI,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;gBACzD,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;iBACR;gBAED,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC5D;SACF,CAAC,CACH,CACF;aACA,SAAS,EAAE,CACf,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;KAC9B;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7C,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,KACxB,SAAS,CAAC,OAAO,CAAC,QAAQ;YACxB,MAAM,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACjE,IACE,CAAC,OAAO,IAAI,OAAO,CAAC,YAAY,IAAI,IAAI;gBACxC,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,OAAO,CAAC,EACzD;gBACA,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;iBACR;gBAED,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACxD;SACF,CAAC,CACH,CACF;aACA,SAAS,EAAE,CACf,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC7B;IAEO,iBAAiB,CAAC,QAAyB;QACjD,QACE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YACtC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EACpE;KACH;IAED,eAAe,CAAC,EACd,KAAK,EACL,QAAQ,GAIT;QACC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACxD;aAAM;YACL,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC5D;KACF;IAED,uBAAuB,CACrB,QAAyB,EACzB,WAA+B,EAAE;QAEjC,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC9B,IAAI,QAAQ,CAAC,EAAE,KAAK,OAAO,CAAC,YAAY,EAAE;gBACxC,OAAO,OAAO,CAAC;aAChB;SACF;QACD,OAAO,IAAI,CAAC;KACb;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;CACF;;;;;;;;;;;;;wKAAA;;YA9GmB,uBAAuB;YACjB,YAAY;YACA,wBAAwB;EAC1D,AA4GJ;AA9Ha;8BAA+B,oBAJ3C,SAAS,CAAC,UACT,QAAQ,EAAE,5ECHC,yCAAyC,GAAtD,MAAa,yCAAyC;WDGb,UACvC,jBCGA,YACU,YAA0B,EAC1B,wBAAkD;QADlD,iBAAY,GAAZ,YAAY,CAAc;QAC1B,6BAAwB,GAAxB,wBAAwB,CAA0B;QARpD,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAE3C,mBAAc,GAEV,IAAI,CAAC,wBAAwB,CAAC,eAAe,EAAE,CAAC;KAKhD;IAEJ,WAAW;QACT,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+BAA+B,EAAE;YACtD,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;KACJ;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,wBAAwB;aAC1B,eAAe,EAAE;aACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;aACjC,SAAS,EAAE,CACf,CAAC;KACH;IAED,UAAU;QACR,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC3D;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;CACF;;;;;;;yHAAA;;YA5ByB,YAAY;YACA,wBAAwB;EAC1D,AA2BJ;AArCa;oCDI6C,MACzD,CAAC,IACW,+BAA+B,CA6H3C,vCCnIqD,oBAJrD,SAAS,CAAC,UACT,5ECAW,mCAAmC,GAAhD,MAAa,mCAAmC;EDAtC,EAAE,ACCV,YAAsB,YAA0B;YDDE,UAClD,dCAsB,iBAAY,GAAZ,YAAY,CAAc;KAAI;IAEpD,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+BAA+B,EAAE;YACtD,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;KACJ;CACF;;;;;;;;YDRoE,MACpE,CAAC,IACW;;EAAyC,CAoCrD;;;4DC9BA;;YARqC,YAAY;EAClD,AAQA;AAVa;kCAAmC,oBAJ/C,SAAS,CAAC,UACT,QAAQ,EAAE,hFCmCC,sCAAsC,GAAnD,MAAa,sCAAsC;CAAG;uBDnCR,UAC5C;kGAA6D,MAC9D,CAAC,IACW,mCAAmC,CAS/C;;;;;;;;;;;;ECuBqD,CAAzC,sCAAsC,oBA5BlD,QAAQ,CAAC,AA6BV;;QA5BE,OAAO,EAAE,CAAC,ZCVU,gBAAgB;CAGrC;;EDOuB,EAAE,UAAU,EAAE,oBAAoB,CAAC,UACzD,SAAS,EAAE,tDEHA,sBAAsB,GAAnC,MAAa,sBAAsB;YFI/B,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,9DEAnB,YACY,wBAAkD,EAClD,MAAiB,EACC,QAAa,EACV,QAAa;gBFHxC,yCAAyC,EAAE,nDEArC,6BAAwB,GAAxB,wBAAwB,CAA0B;mBFCtD,SAAS,pBEAL,WAAM,GAAN,MAAM,CAAW;AFAV,QECW,aAAQ,GAAR,QAAQ,CAAK;OFDiB,0BACpD,zBECyB,aAAQ,GAAR,QAAQ,CAAK;WFD1B,EAAE,oBAAoB,CAAC,1BEP3C,sBAAiB,GAAa,EAAE,CAAC;IFOiB,uBAC3C,nBENC,wBAAmB,GAA4B,EAAE,CAAC;KAOtD;IFAE;;kBAAmC,EAAE,0BACnC;EAAS,EAAE;gCAAmC,uBAC/C,mBACF;cACF,CAAC,WACH,UACD,YAAY,EAAE;;EACZ;;;MAAyC,cACzC;MAAmC,WACpC,UACD,OAAO,EAAE,cACP;SAAyC;IACzC;;sBAAmC,WACpC,UACD,eAAe,EAAE,cACf;wCAAyC,cACzC;;kBAAmC,WACpC,OACF,CAAC,IACW;;IEGD,YAAY,CAAC,QAAgB;AFHU,CAAG,OEIlD,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC9C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,OAAO,CAAC,IAAI,CACV,iEAAiE,QAAQ,MAAM,EAC/E,oEAAoE,CACrE,CAAC;aACH;SACF;QACD,OAAO,eAAe,GAAG,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC;KAC3D;IAED,yBAAyB,CAAC,QAAgB;QACxC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,IAAI,CAAC;SACb;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACnE,SAAS,CACV,CAAC;QAEF,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,CAAC,IAAI,CACV,0DAA0D,QAAQ,MAAM,EACxE,+EAA+E,CAChF,CAAC;YACF,OAAO,IAAI,CAAC;SACb;QACD,OAAO,OAAO,CAAC;KAChB;IAED,cAAc,CAAC,QAAgB;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC9C,OAAO,OAAO,SAAS,KAAK,QAAQ,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;KACzE;IAED,gBAAgB,CACd,aAAqB,EACrB,QAAmB;QAEnB,OAAO,IAAI,OAAO,CAAC,OAAO;YACxB,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAErE,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,MAAM,EAAE;gBACX,IAAI,IAAI,EAAE;oBACR,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;oBACxC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBACjC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBACjD,IAAI,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;wBACpC,MAAM,CAAC,MAAM,GAAG;4BACd,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;yBACtB,CAAC;qBACH;iBACF;qBAAM;oBACL,MAAM,GAAG,EAAE,CAAC;iBACb;aACF;YAED,IAAI,MAAM,CAAC,MAAM,EAAE;;;;gBAIjB,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC;gBACpC,MAAM,CAAC,MAAM,GAAG;oBACd,aAAa,EAAE,CAAC;oBAChB,OAAO,CAAC,QAAQ,CAAC,CAAC;iBACnB,CAAC;aACH;iBAAM;gBACL,OAAO,CAAC,QAAQ,CAAC,CAAC;aACnB;SACF,CAAC,CAAC;KACJ;CACF;qQAAA;;YAvGuC,wBAAwB;YAC1C,SAAS;4CAC1B,MAAM,SAAC,QAAQ;4CACf,MAAM,SAAC,WAAW;;;AATV,sBAAsB,eACvB,KAFX,UAAU,CAAC,EAAE,UAAU,EAAE,9BACtB,CAQC,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;KATW,EAAE,CAAC,JAU9B,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;GATX,sBAAsB,CA6GlC;;ACnFD,IAAa,YAAY,GAAzB,MAAa,YAAY;IAGvB;;IAEqB,IAAiB;;IAEjB,IAAuB;;IAEvB,QAAyB,EACzB,gBAAyC,EACzC,eAAuC;;IAEvC,GAAe,EACf,QAAyB;;IAEzB,aAAmC;;IAEnC,aAAmC;;IAEnC,WAA+B;;IAE/B,IAAiB;;IAEjB,YAAiC;;IAEjC,OAAuB,EACvB,aAAmC,EACnC,aAAmC,EACnC,gBAAyC,EACzC,SAA2B;;IAE3B,OAAuB;;IAEvB,QAAyB,EACzB,QAAyB,EACzB,QAAyB;;IAEzB,IAAiB,EACjB,WAA+B,EAC/B,WAA+B,EAC/B,SAA2B,EAC3B,WAA+B,EAE3C,iCAAoE,EAEpE,oBAA0C,EAC9B,oBAA0C;;IAEtD,MAAc;QA5CF,SAAI,GAAJ,IAAI,CAAa;QAEjB,SAAI,GAAJ,IAAI,CAAmB;QAEvB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,qBAAgB,GAAhB,gBAAgB,CAAyB;QACzC,oBAAe,GAAf,eAAe,CAAwB;QAEvC,QAAG,GAAH,GAAG,CAAY;QACf,aAAQ,GAAR,QAAQ,CAAiB;QAEzB,kBAAa,GAAb,aAAa,CAAsB;QAEnC,kBAAa,GAAb,aAAa,CAAsB;QAEnC,gBAAW,GAAX,WAAW,CAAoB;QAE/B,SAAI,GAAJ,IAAI,CAAa;QAEjB,iBAAY,GAAZ,YAAY,CAAqB;QAEjC,YAAO,GAAP,OAAO,CAAgB;QACvB,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAsB;QACnC,qBAAgB,GAAhB,gBAAgB,CAAyB;QACzC,cAAS,GAAT,SAAS,CAAkB;QAE3B,YAAO,GAAP,OAAO,CAAgB;QAEvB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAiB;QAEzB,SAAI,GAAJ,IAAI,CAAa;QACjB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,cAAS,GAAT,SAAS,CAAkB;QAC3B,gBAAW,GAAX,WAAW,CAAoB;QAE3C,sCAAiC,GAAjC,iCAAiC,CAAmC;QAEpE,yBAAoB,GAApB,oBAAoB,CAAsB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAEtD,WAAM,GAAN,MAAM,CAAQ;KACnB;CACL;67CAAA;;YA9C4B,WAAW,uBAAnC,QAAQ;YAEgB,iBAAiB,uBAAzC,QAAQ;YAEoB,eAAe,uBAA3C,QAAQ;YAC4B,uBAAuB,uBAA3D,QAAQ;YAC2B,sBAAsB,uBAAzD,QAAQ;YAEe,UAAU,uBAAjC,QAAQ;YACoB,eAAe,uBAA3C,QAAQ;YAEyB,oBAAoB,uBAArD,QAAQ;YAEyB,oBAAoB,uBAArD,QAAQ;YAEuB,kBAAkB,uBAAjD,QAAQ;YAEgB,WAAW,uBAAnC,QAAQ;YAEwB,mBAAmB,uBAAnD,QAAQ;YAEmB,cAAc,uBAAzC,QAAQ;YACyB,oBAAoB,uBAArD,QAAQ;YACyB,oBAAoB,uBAArD,QAAQ;YAC4B,uBAAuB,uBAA3D,QAAQ;YACqB,gBAAgB,uBAA7C,QAAQ;YAEmB,cAAc,uBAAzC,QAAQ;YAEoB,eAAe,uBAA3C,QAAQ;YACoB,eAAe,uBAA3C,QAAQ;YACoB,eAAe,uBAA3C,QAAQ;YAEgB,WAAW,uBAAnC,QAAQ;YACuB,kBAAkB,uBAAjD,QAAQ;YACuB,kBAAkB,uBAAjD,QAAQ;YACqB,gBAAgB,uBAA7C,QAAQ;YACuB,kBAAkB,uBAAjD,QAAQ;YAEiC,iCAAiC,uBAD1E,QAAQ;YAGoB,oBAAoB,uBADhD,QAAQ;YAEgC,oBAAoB,uBAA5D,QAAQ;YAEM,MAAM;;;AAjDZ,YAAY,eACb,KAJX,UAAU,CAAC,hBAGR,CAKC,WAAA,QAAQ,EAAE,CAAA;CAPb,UAAU,EAAE,MAAM,OACnB,CAAC,vBAQG,WAAA,QAAQ,EAAE,CAAA;IAEV,WAAA,QAAQ,EAAE,CAAA;IACV,WAAA,QAAQ,EAAE,CAAA;IACV,WAAA,QAAQ,EAAE,CAAA;IAEV,WAAA,QAAQ,EAAE,CAAA;IACV,WAAA,QAAQ,EAAE,CAAA;IAEV,WAAA,QAAQ,EAAE,CAAA;IAEV,WAAA,QAAQ,EAAE,CAAA;IAEV,WAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IACV,YAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;IAEV,YAAA,QAAQ,EAAE,CAAA;GA/CF,YAAY,CAmDxB;;IC7DY,yBAAyB,GAAtC,MAAa,yBAAyB;IAMpC,YACU,GAAqB,EACrB,eAAuC,EACvC,QAAkB,EAClB,UAAsB,EACtB,uBAAgD,EAChD,QAAmB,EACnB,MAAiB,EACI,UAAkB;QAPvC,QAAG,GAAH,GAAG,CAAkB;QACrB,oBAAe,GAAf,eAAe,CAAwB;QACvC,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QACtB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,aAAQ,GAAR,QAAQ,CAAW;QACnB,WAAM,GAAN,MAAM,CAAW;QACI,eAAU,GAAV,UAAU,CAAQ;KAC7C;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE;YACjC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;YACzE,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;IAEO,qBAAqB;QAC3B,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,wBAAwB,GAAG,CAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE,EACjE,UAAU,CAAC;QACb,OAAO,EAAE,KAAK,IAAI,wBAAwB,CAAC,CAAC;KAC7C;IAEO,eAAe;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAC5D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CACjC,CAAC;QAEF,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CACpC,OAAO,EACP,SAAS,EACT,IAAI,CAAC,uBAAuB,EAAE,CAC/B,CAAC;YAEF,IAAI,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,EAAE;gBACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC/D;SACF;KACF;IAEa,kBAAkB;;YAC9B,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAC7D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAChC,IAAI,CAAC,QAAQ,CACd,CAAC;YAEF,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;gBAE3D,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAEvD,IAAI,CAAC,UAAU,CAAC,KAAK,mCAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,KAClC,gBAAgB,GACjB,CAAC;gBAEF,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,EAC5C,IAAI,CAAC,UAAU,CAChB,CAAC;gBAEF,IAAI,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,EAAE;oBACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBAC5C;aACF;SACF;KAAA;IAEO,sBAAsB;QAG5B,OAAO;YACL,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG;YAChC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;SACrE,CAAC;KACH;IAEO,uBAAuB;QAC7B,MAAM,eAAe,GACnB,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE;aAC/D,SAAS,IAAI,EAAE,CAAC;QACrB,OAAO,QAAQ,CAAC,MAAM,CAAC;YACrB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gBAAgB;oBACzB,QAAQ,EAAE,IAAI,CAAC,sBAAsB,EAAE;iBACxC;gBACD,GAAG,eAAe;aACnB;YACD,MAAM,EAAE,IAAI,CAAC,QAAQ;SACtB,CAAC,CAAC;KACJ;IAEO,oBAAoB,CAAC,OAAgB;QAC3C,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAC/C,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAClC,OAAO,EACP,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;IAED,WAAW;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;SAC1B;KACF;CACF;;kMAAA;;YAnHgB,gBAAgB;YACJ,sBAAsB;YAC7B,QAAQ;YACN,UAAU;YACG,uBAAuB;YACtC,SAAS;YACX,SAAS;YACgB,MAAM,uBAA9C,MAAM,SAAC,WAAW;;AAbZ;IAAR,KAAK,EAAE;qEAA8C;AAD3C,yBAAyB,eAAe,KAHpD,SAAS,CAAC,UACT,zBAEE,CAcC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;AAhBd,EAAE,sBAAsB,rBAErB,yBAAyB,CA0HrC;AA3HA;AAAC,IChBW,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;;EAAA,CAAtB,mBAAmB,oBAN/B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,SAAS,EAAE,EAAE,UACb,YAAY,EAAE,CAAC,yBAAyB,CAAC,UACzC,OAAO,EAAE,CAAC,cAGZ;;ACNA;KDGqC,CAAC,OACrC,CAAC,IACW,mBAAmB,CAAG;;ACCnC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YACU,MAAiB,EACI,UAAkB;QADvC,WAAM,GAAN,MAAM,CAAW;QACI,eAAU,GAAV,UAAU,CAAQ;KAC7C;IAEJ,kBAAkB,CAAC,QAAgB;QACjC,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,wBAAwB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE;aACxE,UAAU,CAAC;QACd,OAAO,EAAE,KAAK,IAAI,wBAAwB,CAAC,CAAC;KAC7C;IAED,sBAAsB,CAAC,cAAwB;QAC7C,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;YAC1C,IAAI,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,EAAE;gBAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC;aAC3D;SACF;QACD,OAAO,MAAM,CAAC;KACf;IAED,sBAAsB,CAAC,cAAwB;QAC7C,MAAM,MAAM,GAAG,IAAI,GAAG,EAAO,CAAC;QAC9B,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;YAC1C,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,KAAK,IACrD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAClB,CAAC;SACH;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;IAED,wBAAwB,CAAC,cAAwB;QAC/C,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAU,CAAC;QACnC,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;YAC1C,IAAI,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,EAAE;gBAC1C,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,GAAG,IACrD,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAClB,CAAC;aACH;SACF;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7B;IAEO,qBAAqB,CAAC,aAAqB;QACjD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC/D,OAAO,CAAC,aAAa,IAAI,aAAa,CAAC,WAAW,KAAK,EAAE,CAAC;KAC3D;IAEO,qBAAqB,CAAC,aAAqB;QACjD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC/D,OAAO,CAAC,aAAa,IAAI,aAAa,CAAC,MAAM,KAAK,EAAE,CAAC;KACtD;IAEO,uBAAuB,CAAC,aAAqB;QACnD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC/D,OAAO,CAAC,aAAa,IAAI,aAAa,CAAC,QAAQ,KAAK,EAAE,CAAC;KACxD;CACF;yKAAA;;YAzDmB,SAAS;YACgB,MAAM,uBAA9C,MAAM,SAAC,WAAW;;;AAHV,iBAAiB,eAClB,KAJX,UAAU,CAAC,UACV,1BAEE,CAGC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;GALZ,EAAE,MAAM,OACnB,CAAC,hBACW,iBAAiB,CA2D7B;;AC/DD;;;AAMA,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAC3B,YACU,UAA6B,EAC7B,QAAkB;QADlB,eAAU,GAAV,UAAU,CAAmB;QAC7B,aAAQ,GAAR,QAAQ,CAAU;KACxB;IAEJ,kBAAkB,CAChB,cAAwB,EACxB,KAAgC,EAChC,KAA0B;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QAEtE,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,MAAM,sBAAsB,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU;gBAClD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAc,UAAU,EAAE,IAAI,CAAC,CAAC;gBAC/D,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;oBACxB,OAAO,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAC7D,KAAK,EAAE,CACR,CAAC;iBACH;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;iBAC5D;aACF,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC,GAAG,sBAAsB,CAAC,CAAC,IAAI,CAC3C,SAAS,CAAC,CAAC,WAA8B,KAAK,WAAW,KAAK,IAAI,CAAC,EACnE,OAAO,CAAC,IAAI,CAAC,EACb,KAAK,EAAE,CACR,CAAC;SACH;aAAM;YACL,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB;KACF;CACF;2KAAA;;YAhCuB,iBAAiB;YACnB,QAAQ;;6NAQ8B,AAwB5D;AAnCa,gBAAgB,oBAH5B,pCAuCD,SAAS,kBAAkB,CACzB,KAAqC;SAxC5B,CAAC,UACV,UAAU,1BAyCV,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;CAzCb,MAAM,OACnB,CAAC,IACW,XAwCT,OAAO,KAAK,CAAC;KACd;OAzC0B,CAkC5B,JASC,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;KACrC;IAED,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AACnB,CAAC;AAED,SAAS,SAAS,CAAC,GAAQ;IACzB,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;AACjD,CAAC;AAED,SAAS,aAAa,CAAC,KAAU;IAC/B,OAAO,KAAK,IAAI,UAAU,CAAc,KAAK,CAAC,WAAW,CAAC,CAAC;AAC7D,CAAC;AAED,SAAS,UAAU,CAAI,CAAM;IAC3B,OAAO,OAAO,CAAC,KAAK,UAAU,CAAC;AACjC,CAAC;;ACrED;;;AAMA,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,YACU,UAA6B,EAC7B,WAA+B,EAC/B,gBAAyC;QAFzC,eAAU,GAAV,UAAU,CAAmB;QAC7B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAyB;KAC/C;IAEJ,uBAAuB,CAAC,cAAwB;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;QAC1E,MAAM,UAAU,GAAG,IAAI,GAAG,EAAU,CAAC;QACrC,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;YAC1B,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/D;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;KACrD;CACF;gOAAA;;YAbuB,iBAAiB;YAChB,kBAAkB;YACb,uBAAuB;;kQAOP,AAK9C;AAhBa;aAAc,TCRf,UAMX;iBDDA,jBCLD,WAAY,UAAU;EDKX,CAAC,UACV,UAAU,EAAE,rBCLZ,uBAAS,CAAA;EDKS,OACnB,CAAC,IACW,cAAc,xBCNzB,uBAAS,CAAA;ADqBV,ICpBC,uBAAS,CAAA;IACT,uBAAS,CAAA;IACT,uBAAS,CAAA;AACX,CAAC,EANW,UAAU,KAAV,UAAU,QAMrB;AAmCD;;;;;;AAMA,MAAsB,YAAY;CA8BjC;;ACzED,MAAM,mBAAmB,GAAG;IAC1B,CAAC,UAAU,CAAC,EAAE,GAAG,GAAG;IACpB,CAAC,UAAU,CAAC,EAAE,GAAG,GAAG;IACpB,CAAC,UAAU,CAAC,EAAE,GAAG,GAAG;IACpB,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI;CACtB,CAAC;AAKF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YAAoB,MAAiB,EAAU,MAAoB;QAA/C,WAAM,GAAN,MAAM,CAAW;QAAU,WAAM,GAAN,MAAM,CAAc;KAAI;IAEvE,IAAI,WAAW;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAC7B,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAU,KAAK,CAAC,MAAO,CAAC,UAAU,CAAC,CAAC,EACnE,oBAAoB,EAAE,CACvB,CAAC;KACH;;;;;;;;;;IAWD,OAAO,CAAC,UAAsB;;QAC5B,OAAO,OAAA,IAAI,CAAC,MAAM,CAAC,WAAW,0CAAE,cAAc,CAAC,UAAU,KACrD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC;cACnC,mBAAmB,CAAC,UAAU,CAAC,CAAC;KACrC;;;;IAKD,IAAI,WAAW;QACb,OAAO;YACL,UAAU,CAAC,EAAE;YACb,UAAU,CAAC,EAAE;YACb,UAAU,CAAC,EAAE;YACb,UAAU,CAAC,EAAE;YACb,UAAU,CAAC,EAAE;SACd,CAAC;KACH;;;;;;;;IASD,MAAM,CAAC,UAAsB;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1B,GAAG,CAAC,EAAE,IACJ,IAAI,CAAC,WAAW;aACb,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aAClD,QAAQ,CAAC,EAAE,CAAC,CAChB,CACF,CAAC;KACH;;;;;;;;IASD,IAAI,CAAC,UAAsB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1B,GAAG,CAAC,EAAE,IACJ,IAAI,CAAC,WAAW;aACb,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC3C,QAAQ,CAAC,EAAE,CAAC,CAChB,CACF,CAAC;KACH;;;;IAKD,OAAO,CAAC,UAAsB;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,UAAU,CAAC,CAAC,CAAC;KAC5D;IAES,aAAa,CAAC,WAAmB;QACzC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAChD,OAAO,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;KAChD;IAES,UAAU,CAAC,WAAoB;QACvC,IAAI,CAAC,WAAW,EAAE;YAChB,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;SACtC;QAED,OAAO,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;cAC5C,UAAU,CAAC,EAAE;cACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;KAClE;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;KACjC;CACF;0KAAA;;YAnG6B,SAAS;YAAkB,YAAY;;6NAQpE,AA4FD;AArGa;gBAAiB,oBAH7B,UAAU,CAAC,UACV,UAAU,7DCVC,mBAAmB,GAAG,IAAI,cAAc,CACnD,mBAAmB,CACpB;ADQa;KAAM,OACnB,CAAC,IACW,iBAAiB,CAoG7B,/BEtGY,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YACU,GAAe,EACf,MAAoB,EACpB,iBAAoC,EAGpC,QAA6B;QAL7B,QAAG,GAAH,GAAG,CAAY;QACf,WAAM,GAAN,MAAM,CAAc;QACpB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAGpC,aAAQ,GAAR,QAAQ,CAAqB;;;;QAM/B,oBAAe,GAAG,EAAE,CAAC;QACrB,aAAQ,GAAG,EAAE,CAAC;KANlB;IAQJ,QAAQ,CAAC,OAAgB;QACvB,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CACzE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC;YACrB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;YAC3D,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC;SAC5C,CAAC,EACF,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE;YAC5C,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;YACvB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;gBACzC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;aACpE;YACD,OAAO,MAAM,CAAC;SACf,CAAC,EACF,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC;YACxB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;gBACzB,OAAO,KAAK,CAAC;aACd;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjB,OAAO,KAAK,CAAC;iBACd;aACF;YACD,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;KACH;;;;;;;IAQD,eAAe,CAAC,YAAoB;QAClC,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAC5C,GAAG,CAAC,UAAU;YACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;;gBAE5B,OAAO,IAAI,CAAC;aACb;YACD,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACjE,MAAM,MAAM,GAAG,IAAI,CAAC,uBAAuB,CACvB,kBAAkB,EACpC,UAAU,EACV,UAAU,CACX,CAAC;YACF,OAAO,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxC,CAAC,CACH,CAAC;KACH;IAEO,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAC/B,IAAI,CAAC,QAAQ,EACb,OAAO,EACP,OAAO,EACP,UAAU,CACX,CAAC;QACF,IAAI,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE;YAC1B,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1C,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;SAC9D;aAAM,IAAI,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YAClC,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC3C,OAAO,EAAE,CAAC;SACX;KACF;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/D;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CACpB,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC/B,GAAG,CAAC,CAAC,IAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,CACnC,CAAC;KACH;;;;;;;IAQS,aAAa,CACrB,WAAmB,EACnB,eAAuB,EACvB,OAAgB,EAChB,UAAuB;QAEvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC5B,OAAO,IAAI,CAAC;SACb;QACD,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAEhE,IAAI,OAAO,EAAE;YACX,OAAO,IAAI,CAAC,uBAAuB,CACjC,WAAW,EACX,eAAe,EACf,OAAO,EACP,UAAU,CACX,CAAC;SACH;QAED,IAAI,kBAAkB,EAAE;YACtB,OAAO,IAAI,CAAC,uBAAuB,CACf,kBAAkB,EACpC,eAAe,EACf,UAAU,CACX,CAAC;SACH;KACF;IAES,uBAAuB,CAC/B,WAAmB,EACnB,eAAuB,EACvB,OAAgB,EAChB,UAAuB;QAEvB,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAEhE,IAAI,CAAC,kBAAkB,EAAE;YACvB,OAAO,IAAI,CAAC;SACb;;;QAID,MAAM,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;cAC7C,kBAAkB,CAAC,OAAO,CAAC;cAC3B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAErC,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CACjC,aAAa,EAC/B,eAAe,EACf,UAAU,CACX,CAAC;QAEF,IAAI,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;YACpD,OAAO,gBAAgB,CAAC;SACzB;aAAM,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;YACtE,OAAO,kBAAkB,CAAC,OAAO,CAAC,CAAC;SACpC;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAC3C,OAAmB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACrD;KACF;;;;;;IAOS,uBAAuB,CAC/B,gBAAkC,EAClC,eAAuB,EACvB,UAAuB;QAEvB,IAAI,UAAU,GAAe,gBAAgB,CAAC;;QAG9C,IAAI,CAAC,gBAAgB,IAAI,CAAC,UAAU,EAAE;YACpC,OAAO,UAAU,CAAC;SACnB;;QAGD,IACE,gBAAgB,CAAC,UAAU,CAAC;YAC5B,gBAAgB,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,EAC5D;YACA,OAAmB,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACjD;;QAGD,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC;QAE/C,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;YACvD,IACE,gBAAgB,CAAC,EAAE,CAAC;gBACpB,gBAAgB,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,EACpD;gBACA,UAAU,GAAe,gBAAgB,CAAC,EAAE,CAAC,CAAC;aAC/C;SACF;QACD,OAAO,UAAU,CAAC;KACnB;;;;;;;IAQO,sBAAsB,CAAC,IAAU,EAAE,OAAgB;QACzD,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;;;YAGjC,OAAO,CAAC,IAAI,CACV,8BAA8B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CACrE,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;SACrC;QAED,MAAM,QAAQ,GAAG,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;YACnC,OAAO,CAAC,IAAI,CACV,8BAA8B,QAAQ,8EAA8E,CACrH,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;SACvC;KACF;CACF;;mHAAA;;YA1OgB,UAAU;YACP,YAAY;YACD,iBAAiB;wCAC3C,QAAQ,YACR,MAAM,SAAC,mBAAmB;;AANlB,iBAAiB,eAClB,KAFX,UAAU,EAAE,jBACT,CAKC,WAAA,QAAQ,EAAE,CAAA;IACV,WAAA,MAAM,CAAC,mBAAmB,CAAC,CAAA;GANnB,iBAAiB,CA4O7B;;IC1OY,mBAAmB,GAAhC,MAAa,mBAAmB;IA4B9B,YACU,EAAc,EACd,QAAmB,EACnB,iBAAoC;QAFpC,OAAE,GAAF,EAAE,CAAY;QACd,aAAQ,GAAR,QAAQ,CAAW;QACnB,sBAAiB,GAAjB,iBAAiB,CAAmB;QA3BrC,aAAQ,GAA4B,IAAI,eAAe,CAAC,SAAS,CAAC,CAAC;QACnE,kBAAa,GAAuB,IAAI,CAAC,iBAAiB;aAChE,aAAa,CAAC;QAER,gBAAW,GAAuB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC3D,SAAS,CAAC,OAAO,KAAK,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAClE,GAAG,CAAC,IAAI;YACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB,CAAC,CACH,CAAC;QAEO,WAAM,GAAyB,IAAI,CAAC,QAAQ,CAAC,IAAI,CACxD,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAC/D,CAAC;QAEO,kBAAa,GAAuB,IAAI,CAAC,aAAa,CAAC,IAAI,CAClE,SAAS,CAAC,YAAY,IACpB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,YAAY,CAAC,CACrD,EACD,oBAAoB,EAAE,CACvB,CAAC;KAQE;IA/BK,IAAI,OAAO,CAAC,KAAa;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;IA+BD,IAAI,UAAU,CAAC,GAAW;QACxB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SACrE;QACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;KACzB;CACF;;;;;;;;8LAAA;;YAZe,UAAU;YACJ,SAAS;YACA,iBAAiB;;AA9BrC;IAAR,KAAK,EAAE;kDAEP,CACH,AAsCA;AA1Ca;ACVb;cDUgC,oBAL/B,SAAS,CAAC;;AACT,QAAQ,EAAE,gBAAgB,UAC1B,pCCDF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAC3B,YAAoB,MAAc,EAAU,UAA6B;QAArD,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAmB;KAAI;IAE7E,aAAa,CAAC,GAAW;QACvB,MAAM,gBAAgB,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAE7C,IAAI,CAAC,gBAAgB,EAAE;YACrB,OAAO,KAAK,CAAC;SACd;QAED,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEhC,QACE,gBAAgB;qCDZuB,UAC3C,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,7FCUP,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACvB,CAAC,KAAe,KACd,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,iBAAiB,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,CACzE,EACD;CDd0B,CAyC/B,GC1BE;;;;;;;;;;IAWD,sBAAsB,CACpB,WAAwB,EACxB,cAAwB,EACxB,UAAkB,EAClB,gBAAwB;QAExB,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAC5D,cAAc,CACf,CAAC;QACF,IAAI,eAAe,CAAC,MAAM,EAAE;YAC1B,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,gBAAgB,EAAE,eAAe,CAAC,EAAE;gBACtE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBACtC,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;KACb;IAEO,aAAa,CACnB,WAAwB,EACxB,SAAiB,EACjB,MAAe;QAEf,IACE,WAAW,CAAC,IAAI,KAAK,QAAQ,CAAC,YAAY;YAC1C,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC;YACzB,SAAS,CAAC,MAAM,GAAG,CAAC,EACpB;YACA,MAAM,QAAQ,GAAa;gBACzB,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzB,SAAS,EAAE,mBAAmB;gBAC9B,QAAQ,EAAE,MAAM;gBAChB,IAAI,EAAE;oBACJ,iBAAiB,EAAE;wBACjB,IAAI,EAAE,WAAW,CAAC,IAAI;wBACtB,EAAE,EAAE,SAAS;qBACd;iBACF;aACF,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;CACF;yKAAA;;YA3E6B,MAAM;YAAsB,iBAAiB;;2NAYtD,AAgErB;AA7Ea;eAAgB,oBAH5B,/BCoBY,YAAY,GAAzB,MAAa,YAAY;KDpBd,CAAC,UACV,ZC8CA;SD9CU,EAAE,MAAM,OACnB,CAAC,IACW,gBAAgB,CA4E5B;IC9Ba,cAA8B,EAC9B,UAAsB,EACxB,SAA2B,EAC3B,OAAuB,EACvB,SAA2B,EACzB,mBAAwC,EACxC,oBAA2C;QAN3C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACxB,cAAS,GAAT,SAAS,CAAkB;QAC3B,YAAO,GAAP,OAAO,CAAgB;QACvB,cAAS,GAAT,SAAS,CAAkB;QACzB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAuB;KACnD;IAEJ,WAAW,CACT,KAAgC,EAChC,KAA0B;;;;QAK1B,OAAO,IAAI,CAAC,oBAAoB;cAC5B,IAAI,CAAC,oBAAoB;iBACtB,WAAW,CAAC,KAAK,CAAC;iBAClB,IAAI,CACH,SAAS,CAAC,MAAM,IACd,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CACpD,CACF;cACH,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACnC;IAEO,UAAU,CAChB,KAAgC,EAChC,KAA0B;QAE1B,OAAO,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAClD,SAAS,CAAC,WAAW,IACnB,IAAI,CAAC,UAAU;aACZ,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC;aAC1B,IAAI,CAAC,KAAK,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAClD,EACD,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,KAChC,QAAQ;cACJ,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC;cAC7D,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,CACvD,CACF,CAAC;KACH;IAEO,mBAAmB,CACzB,WAAwB,EACxB,QAAc,EACd,KAAgC,EAChC,KAA0B;QAE1B,OAAO,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,IAAI,CAC5D,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,cAAc,IACtB,IAAI,CAAC,SAAS;aACX,kBAAkB,CAAC,cAAc,EAAE,KAAK,EAAE,KAAK,CAAC;aAChD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAC5C,EACD,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,cAAc,CAAC;YAChC,IAAI,WAAW,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;aACtD;SACF,CAAC,EACF,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,cAAc,CAAC;YAChC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC;YACnD,IACE,WAAW,KAAK,IAAI;gBACpB,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB;gBAC7B,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,EACxC;gBACA,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAC1C,WAAW,EACX,cAAc,EACd,KAAK,CAAC,GAAG,EACT,SAAS,CACV,CAAC;aACH;YACD,OAAO,WAAW,CAAC;SACpB,CAAC,CACH,CAAC;KACH;IAEO,kBAAkB,CACxB,WAAwB,EACxB,KAAgC,EAChC,KAA0B;QAE1B,MAAM,sBAAsB,GAAgB;YAC1C,IAAI,EAAE,QAAQ,CAAC,YAAY;YAC3B,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC;SAC7C,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,IAAI,CACzD,SAAS,CAAC,YAAY;YACpB,IAAI,YAAY,EAAE;gBAChB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAC9D,GAAG,CAAC,aAAa;oBACf,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;iBAC9D,CAAC,EACF,SAAS,CAAC,aAAa,IACrB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI;;gBAE5C,MAAM,CAAC,KAAK,IAAI,KAAK,KAAK,aAAa,CAAC,CACzC,CACF,EACD,SAAS,CAAC,MACR,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAClE,CACF,CAAC;aACH;YACD,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;SAClB,CAAC,CACH,CAAC;KACH;CACF;uWAAA;AA7IQ,sBAAS,GAAG,cAAc,CAAC;;YA4BN,cAAc;YAClB,UAAU;YACb,gBAAgB;YAClB,cAAc;YACZ,gBAAgB;YACJ,mBAAmB;YACjB,oBAAoB;;6VAanD,AA+FN;AA/Ia;WAAY,PC7Bb,cAIX;WDsBA,UAAU,CAAC,tBC1BZ,WAAY,cAAc;GD2BxB,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,7BC5BX,qCAAmB,CAAA;ED4BI,CA8IxB,CCzKC,mCAAiB,CAAA;IACjB,iCAAe,CAAA;AACjB,CAAC,EAJW,cAAc,KAAd,cAAc,QAIzB;AAED,MAAa,qBAAqB,GAAG,KAAK,CAAC;AAC3C,MAAa,mBAAmB,GAAG,IAAI;;ICD1B,aAAa,GAA1B,MAAa,aAAa;IAA1B;QACU,kBAAa,GAAG,IAAI,GAAG,EAAe,CAAC;QACvC,wBAAmB,GAAG,IAAI,GAAG,EAAe,CAAC;QAC7C,uBAAkB,GAAG,IAAI,GAAG,EAAe,CAAC;KA6ErD;;;;IApDC,GAAG,CACD,MAAc,EACd,iBAAoB,EACpB,WAA2B,cAAc,CAAC,OAAO;QAEjD,IAAI,QAAQ,KAAK,cAAc,CAAC,MAAM,EAAE;YACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;SACjE;QACD,IAAI,QAAQ,KAAK,cAAc,CAAC,OAAO,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;SAC3D;QACD,IAAI,QAAQ,KAAK,cAAc,CAAC,KAAK,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;SAChE;KACF;;;;;;;;;;IAWD,GAAG,CACD,MAAc,EACd,WAA2B,cAAc,CAAC,OAAO,EACjD,OAAO,GAAG,qBAAqB;QAE/B,IAAI,WAAgB,CAAC;QACrB,QAAQ,QAAQ;YACd,KAAK,cAAc,CAAC,MAAM;gBACxB,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACnD,MAAM;YACR,KAAK,cAAc,CAAC,KAAK;gBACvB,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAClD,MAAM;YACR;gBACE,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAChD;QACD,IAAI,WAAW,IAAI,CAAC,OAAO,EAAE;YAC3B,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,OAAO,WAAW,CAAC;KACpB;IAEO,KAAK,CAAC,KAAuB,EAAE,MAAc,EAAE,KAAQ;QAC7D,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACzC,MAAM,QAAQ,GAAQ,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/C,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KAC7B;CACF;8FAAA;kKACiK,AAAlK;AAjFa;YAAa,oBAHzB,UAAU,CAAC,vCCKC,kBAAkB,GAA/B,MAAa,kBAAkB;CDJ7B,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,3BCQX,YACU,GAAqB,EACrB,aAA4B;MDVd,CAgFzB,CCvEW,QAAG,GAAH,GAAG,CAAkB;QACrB,kBAAa,GAAb,aAAa,CAAe;KAClC;IAEJ,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACtE;CACF;;2LAAA;;YAPgB,WAAW;YACD,aAAa;;AANtC;IADC,KAAK,EAAE;uDACY;AAEpB;IADC,KAAK,EAAE;uDACoB,CAC9B,AAUA;AAfa;iBAAkB,oBAH9B,jCCKY,eAAe,GAA5B,MAAa,eAAe;ADLlB,CAAC,ACKoB;QDJ7B,QAAQ,EAAE,eAAe,OAC1B,CAAC,IACW,kBAAkB,CAc9B;ECZ8B,CAAlB,eAAe,oBAL3B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC,UAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC,EAG/B;;GAFC,HCHD;ADGE,IACW,eAAe,CAAG;;;;ACI/B,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAC9B,YAAsB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;KAAI;;;;;;;;;IAU9C,aAAa,CACX,OAAoB,EACpB,OAA6B;QAE7B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;KACvE;;;;;;;;;IAUO,UAAU,CAChB,OAAoB,EACpB,OAA6B;QAE7B,MAAM,eAAe,GAAG,IAAI,UAAU,CAAC,QAAQ;YAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,gBAAgB,GAAG,EAAE,UAAU,EAAE,CAAC;YACxC,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,OAAO;gBAC3D,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxB,EAAE,gBAAgB,CAAC,CAAC;YACrB,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACtC,OAAO;gBACL,oBAAoB,CAAC,UAAU,EAAE,CAAC;aACnC,CAAC;SACH,CAAC,CAAC,IAAI,CACL,OAAO,CAAC,CAAC,OAAoC,KAAK,OAAO,CAAC,EAC1D,GAAG,CAAC,CAAC,KAAgC,KAAK,KAAK,CAAC,cAAc,CAAC,EAC/D,oBAAoB,EAAE,CACvB,CAAC;QAEF,OAAO,eAAe,CAAC;KACxB;IAEO,aAAa,CAAC,OAA6B;QACjD,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,OAAO,OAAO,CAAC,UAAU,CAAC;SAC3B;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,MAAsB,CAAC;QACjD,IACE,YAAY,CAAC,eAAe;YAC5B,YAAY,CAAC,eAAe,CAAC,kBAAkB,EAC/C;YACA,OAAO,YAAY,CAAC,eAAe,CAAC,kBAAkB,CAAC;SACxD;KACF;CACF;6IAAA;;YA5D+B,YAAY;;gNAOnC,AAsDT;AA9Da;ACNb;cDMgC,oBAH/B,UAAU,CAAC,UACV,UAAU,EAAE;GAAM,OACnB,CAAC,IACW,mBAAmB,CA6D/B;;AC5DD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAG7B,YAC+B,UAAkB,EACrC,MAAoB,EACpB,mBAAwC;QAFrB,eAAU,GAAV,UAAU,CAAQ;QACrC,WAAM,GAAN,MAAM,CAAc;QACpB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAElD,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,eAAe;cAC5C,MAAM,CAAC,eAAe,CAAC,QAAQ;cAC/B,oBAAoB,CAAC,OAAO,CAAC;KAClC;;;;;;;;;;;IAYD,IAAI,CACF,OAAoB,EACpB,OAA6B;QAE7B,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE;YAC1D,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB;aAAM;YACL,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACjE;KACF;IAEO,mBAAmB,CACzB,sBAA4C;QAE5C,QACE,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC;YACjC,sBAAsB,KAAK,oBAAoB,CAAC,OAAO;aACtD,sBAAsB,KAAK,oBAAoB,CAAC,KAAK;gBACpD,IAAI,CAAC,kBAAkB,KAAK,oBAAoB,CAAC,OAAO,CAAC,EAC3D;KACH;CACF;8MAAA;;YAxC4C,MAAM,uBAA9C,MAAM,SAAC,WAAW;YACD,YAAY;YACC,mBAAmB;;;AANzC,kBAAkB,eACnB,KAJX,UAAU,CAAC,UACV,1BAEE,CAIC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;GANZ,EAAE,MAAM,OACnB,CAAC,hBACW,kBAAkB,CA4C9B;;ICtCY,eAAe,GAA5B,MAAa,eAAe;IA8B1B,YACU,GAAqB,EACrB,WAA6B,EAC7B,aAEP,EACO,kBAAuC;QALvC,QAAG,GAAH,GAAG,CAAkB;QACrB,gBAAW,GAAX,WAAW,CAAkB;QAC7B,kBAAa,GAAb,aAAa,CAEpB;QACO,uBAAkB,GAAlB,kBAAkB,CAAqB;QA1BvC,WAAM,GAA0B,IAAI,YAAY,CAAU,IAAI,CAAC,CAAC;QAE1E,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAyB9B;IAEI,gBAAgB;QACtB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAEvC,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;KACF;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;IAEO,YAAY;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;;;;QAIxE,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,kBAAkB;aACpB,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;aACrC,SAAS,CAAC;YACT,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB,CAAC,CACL,CAAC;KACH;IAEO,MAAM;QACZ,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KACzC;IAEO,YAAY,CAAC,QAAwB;QAC3C,IAAI,SAAS,IACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CACrE,CAAC;QAEF,IAAI,CAAC,SAAS,IAAI,QAAQ,KAAK,cAAc,CAAC,OAAO,EAAE;YACrD,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAChC;;;QAID,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC7B,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;SACzB;QAED,SAAS,CAAC,OAAO,CAAC,GAAG;YACnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAClB,CAAC,CAAC;KACJ;IAEO,MAAM,CAAC,aAAkB;QAC/B,IAAI,aAAa,YAAY,gBAAgB,EAAE;YAC7C,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SACzC;aAAM,IAAI,aAAa,YAAY,WAAW,EAAE;YAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CACpB,aAAa,EAC/B;gBACE,SAAS,EAAE,IAAI,CAAC,eAAe;aAChC,CACF,CAAC;;;YAIF,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;;;;;;;IAQO,cAAc,CAAC,OAAgB;QACrC,IAAI,OAAO,YAAY,WAAW,EAAE;YAClC,OAAO,OAAO,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;KACnD;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;CACF;;4RAAA;;YArGgB,gBAAgB;YACR,WAAW;YACT,aAAa;YAGP,kBAAkB;;AAnCxC;IAAR,KAAK,EAAE;iDAAkB;AAEjB;IAAR,KAAK,EAAE;wDAAsB;AAKrB;IAAR,KAAK,EAAE;sDAAoC;AAElC;IAAT,MAAM,EAAE;+CAAiE,CAC5E,AA0HA;AArIa;cAAe,oBAH3B,9BCPY,YAAY,GAAzB,MAAa,YAAY;CAAG;ADOlB,CAAC,UACT,QAAQ,EAAE,YAAY,OACvB,CAAC,IACW,eAAe,CAoI3B;EC9I2B,CAAf,YAAY,oBANxB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,YAAY,EAAE,CAAC,eAAe,CAAC,UAC/B,SAAS,EAAE,CAAC,aAAa,CAAC,UAC1B,OAAO,EAAE,CAAC,UAGZ;;GAH2B,CAAC,OAC3B,CAAC,IACW,YAAY,CAAG,zBCgBf,iBAAiB,GAA9B,MAAa,iBAAiB;IAgE5B,YACY,UAAsB,EACtB,uBAAgD,EAChD,QAAmB,EACnB,WAAuB,EACvB,MAAkB;QAJlB,eAAU,GAAV,UAAU,CAAY;QACtB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,aAAQ,GAAR,QAAQ,CAAW;QACnB,gBAAW,GAAX,WAAW,CAAY;QACvB,WAAM,GAAN,MAAM,CAAY;QAtDG,cAAS,GAAG,IAAI,CAAC;QACb,kBAAa,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QAInD,cAAS,GAAG,IAAI,eAAe,CAAS,SAAS,CAAC,CAAC;;;;;;;QAQnD,UAAK,GAAgC,IAAI,CAAC,SAAS,CAAC,IAAI,CAC/D,SAAS,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAC/D,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAC9C,CAAC;QAEO,gBAAW,GAEhB,IAAI,CAAC,KAAK,CAAC,IAAI,CACjB,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,EAC7D,oBAAoB,CAClB,CAAC,CAAC,EAAE,CAAC,KACH,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAC3E,CACF,CAAC;QAEM,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KA0BtC;;;;;;IA/DJ,IAAI,QAAQ,CAAC,QAAgB;QAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;KAClE;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;KAC7B;IA2DD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU;YACnC,IAAI,CAAC,aAAa,GAAG,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YACzD,IAAI,CAAC,qBAAqB,GAAG,UAAU,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;SACjD,CAAC,CACH,CAAC;KACH;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;;;;;IAOD,QAAQ,CAAC,SAAkB;QACzB,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;KACjD;IAED,wBAAwB,CAAC,aAAqB;QAC5C,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;QACjE,OAAO,EAAE,YAAY,EAAE,CAAC;KACzB;;;;;IAMO,uBAAuB,CAAC,aAAqB;QACnD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,CAAE,IAAI,CAAC,MAAoB,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE;iBAClE,YAAY,CAAC;SACjB;KACF;IAEO,qBAAqB,CAAC,IAAI;QAChC,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,EAAE;YACjD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;SACjC;KACF;IAEO,oBAAoB,CAAC,IAAqB;QAChD,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAC/C,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CAAC,aAAa,EAC9B,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;CACF;;;;;;;;sJAAA;;YA9DyB,UAAU;YACG,uBAAuB;YACtC,SAAS;YACN,UAAU;YACd,SAAS;;AA9D9B;IADC,KAAK,EAAE;iDAIP;AAKgC;IAAhC,WAAW,CAAC,kBAAkB,CAAC;oDAAkB;AACb;IAApC,WAAW,CAAC,sBAAsB,CAAC;wDAAuB;AAClB;IAAxC,WAAW,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE;qDAAoB,CAC9D,AA8GA;AAhIa;gBAAiB,oBAL7B,hCCVY,cAAc,GAA3B,MAAa,cAAc;CDUjB,CAAC,DCVmB;SDW5B,QAAQ,EAAE,6BAA6B,UACvC;ECZ4B,CAAjB,cAAc,oBAN1B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,mBAAmB,CAAC,UAC1D,SAAS,EAAE,EAAE,UACb,YAAY,EAAE,CAAC,iBAAiB,CAAC,UACjC,OAAO,EAAE,CAAC,YAGZ;;GAH6B,CAAC,OAC7B,CAAC,IACW,cAAc,CAAG,3BCCjB,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;;+HFWW,UACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,iBAAiB,CA+H7B,nNE7I+B,CAAnB,gBAAgB,oBAN5B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC,UACrD,YAAY,EAAE,CAAC,mBAAmB,CAAC,UACnC,SAAS,EAAE,CAAC,iBAAiB,CAAC,UAC9B,OAAO,EAAE,CAAC,cAGZ;;GAH+B,CAAC,OAC/B,CAAC,IACW,VCbS,eAAe;CAKpC;MDQ4B,CAAG,PCNhC,MAAa,sBAAsB,GAAoB;IACrD,GAAG,EAAE;QACH,OAAO,EAAE,KAAK;QACd,eAAe,EAAE,KAAK;KACvB;CACF;;ICFY,sBAAsB,GAAnC,MAAa,sBAAsB;IAOjC,YACU,MAAuB,EACvB,oBAA0C,EAC1C,MAAiB;QAFjB,WAAM,GAAN,MAAM,CAAiB;QACvB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAW;QAPnB,cAAS,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAExD,eAAU,GAAwB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAO9D,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE;YACnC,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;KACF;IAED,IAAI;QACF,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAgB,CACvC,qBAAqB,EACrB,KAAK;gBACH,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B,CACF,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE;gBACxD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,uBAAuB,EAAE,EAChC,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;gBAEF,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B,CAAC,CAAC;SACJ;KACF;IAED,qBAAqB;QACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;IAED,sBAAsB;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;IAED,UAAU;QACR,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;SAC7B;KACF;CACF;;kIAAA;;YA7CmB,eAAe;YACD,oBAAoB;YAClC,SAAS;EACzB,AA2CJ;AAtDa;qBAAsB,fCNb,wBAAwB;QDK7C,UAAU,EAAE,IACA,pBCJX,YAAsB,sBAA8C;IDInC,CAqDlC,GCzDuB,2BAAsB,GAAtB,sBAAsB,CAAwB;KAAI;IAExE,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC;KAC1D;IAED,MAAM;QACJ,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,CAAC;KAC1C;;;6FACF;;ICPY,8BAA8B,GAA3C,MAAa,8BAA+B,SAAQ,wBAAwB;IAC1E,YAAsB,sBAA8C;QAClE,KAAK,CAAC,sBAAsB,CAAC,CAAC;QADV,2BAAsB,GAAtB,sBAAsB,CAAwB;KAEnE;CACF;;;;;;;yGAAA;;YAH+C,sBAAsB;EACrE,AAGD;AALa;6BAA8B,oBAJ1C,SAAS,CAAC,UACT,QAAQ,EAAE,3ECGC,2BAA2B,GAAxC,MAAa,2BAA4B,SAAQ,wBAAwB;MDH/B,UACxC,ZCGA,YAAsB,sBAA8C;QAClE,KAAK,CAAC,sBAAsB,CAAC,CAAC;QADV,2BAAsB,GAAtB,sBAAsB,CAAwB;KAEnE;CACF;;2ODN0D,MAC1D,CAAC,IACW,8BAA8B,CAI1C;;;;;;;;;;mFCAA;;YAH+C,sBAAsB;EACrE,AAGD;AALa;0BAA2B,jBCIxB,uBAAuB,CACrC,SAA0B;ADT3B,SAAS,CAAC,UACT,QAAQ,EAAE,2BAA2B,UACrC,/DCSA,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,SAAS,CAAC,GAAG,CAAC,OAAO,KAAK,KAAK,EAAE,CAAC;AACvE,CAAC;AAED,SAAgB,UAAU,CAAC,sBAAsB;IAC/C,MAAM,MAAM,GAAG,MAAM,sBAAsB,CAAC;IDbU,MACvD,CAAC,IACW,XCYX,OAAO,MAAM,CAAC;AAChB,CAAC;qBDbuC,CAIvC,tBCoCD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;;;;;;;;;;;;;;;;;;;;;EAAA,CAAZ,SAAS,EACtB;;gBA1BC,hBClBD,MAAM,QAAQ,GAAU;KDkBf,CAAC,FCjBR,IAAI,EAAE,IAAI;ADkBV,OAAO,EAAE,cACP,nBClBF,WAAW,EAAE,CAAC,YAAY,CAAC;EDkBb,cACZ,mBAAmB,/BClBrB,SAAS,EAAE,mBAAmB;ADkBR,CCjBvB,CAAC;KDiB8B,CAAC,iBAAiB,CAAC,xBCfnD,SAAgB,WAAW,CAAC,QAAkB;KDgB1C,UAAU,WACX,tBChBD,MAAM,MAAM,GAAG;SDiBf,SAAS,EAAE,cACT,1BCjBA,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SDiBhB,CAAC,sBAAsB,CAAC,zBChB5C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC9B,CAAC;EDgBA,EAAE,OAAO,EAAE,TCfb,OAAO,MAAM,CAAC;AAChB,CAAC;;MDc6B,EAAE,WAAW,EAAE,VEtB3B,WAAW;GFsBsB,EAAE,cACjD,kBACE,rCEpBN,IAAa,cAAc,GAA3B,MAAa,cAAc;AFoBd,EAAE,DEpBe;oBFoBM,kBAC9B,UAAU,EAAE;AAAuB,kBACnC,IAAI,EAAE,CAAC,MAAM,CAAC,eACf,cACD,kBACE,OAAO,EAAE,eAAe,kBACxB,UAAU,EAAE,UAAU;;KACtB,IAAI,EAAE,CAAC,sBAAsB,CAAC;eAC9B,KAAK,EAAE;CAAI,eACZ;AACD,sBAAsB;MACvB;KACD,HEhC4B,CAAjB,MACb;;MF+Bc,EAAE,CAAC,2BAA2B,EAAE,hCEhCnB,oBAV1B,QAAQ,CAAC,7BCDG,6BAA6B,GAAiB;KDEzD,SAAS,EAAE,ZCDX,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;CH0CqD,CAAC,UAC3E,OAAO,EAAE,CAAC,nBEzCR,kBACE,OAAO,EAAE,1BCFb,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,EAAE;SH0CG,EAAE,NExCX,kBACxB,KAAK,EAAE,1BCFX,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE;UHyC4C,CAAC,OACvE,CAAC,IACW,SAAS,CAAG,9BEzCR,kBACX,IAAI,EAAE,CAAC,QAAQ,CAAC;SAChB,UAAU,IAAa,eACxB,WACF,7CCHD,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;KDI9C,CAAC,IACW,cAAc,CAAG,rBCJ5B,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IACzD,cAAc,EAAE,EAAE,KAAK,EAAE,CAAC,uBAAuB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IACtE,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,iBAAiB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IAC/D,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE;IAC7B,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,gBAAgB,CAAC,EAAE;IAE5C,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,CAAC,EAAE;IACjC,uBAAuB,EAAE,EAAE,KAAK,EAAE,CAAC,2BAA2B,CAAC,EAAE;IACjE,oBAAoB,EAAE,EAAE,KAAK,EAAE,CAAC,wBAAwB,CAAC,EAAE;IAC3D,sBAAsB,EAAE,EAAE,KAAK,EAAE,CAAC,0BAA0B,CAAC,EAAE;IAC/D,mBAAmB,EAAE,EAAE,KAAK,EAAE,CAAC,uBAAuB,CAAC,EAAE;IACzD,iBAAiB,EAAE,EAAE,KAAK,EAAE,CAAC,oBAAoB,CAAC,EAAE;;IAGpD,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,eAAe,CAAC,EAAE;IACpC,QAAQ,EAAE;QACR,KAAK,EAAE,CAAC,wBAAwB,CAAC;QACjC,aAAa,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE;KACxC;IACD,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,gCAAgC,CAAC,EAAE;;IAGpD,OAAO,EAAE;QACP,KAAK,EAAE,CAAC,4BAA4B,CAAC;QACrC,aAAa,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE;KACvC;IAED,kBAAkB,EAAE,EAAE,KAAK,EAAE,CAAC,sBAAsB,CAAC,EAAE;IACvD,MAAM,EAAE;QACN,KAAK,EAAE,CAAC,mBAAmB,CAAC;KAC7B;IACD,YAAY,EAAE;QACZ,KAAK,EAAE,CAAC,6BAA6B,CAAC;QACtC,aAAa,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;KACrC;IACD,UAAU,EAAE;QACV,KAAK,EAAE,CAAC,wBAAwB,CAAC;QACjC,aAAa,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;KACrC;IACD,WAAW,EAAE;QACX,KAAK,EAAE,CAAC,oCAAoC,CAAC;QAC7C,aAAa,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;KACrC;IACD,uBAAuB,EAAE;QACvB,KAAK,EAAE,CAAC,iDAAiD,CAAC;QAC1D,aAAa,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;KACrC;IACD,WAAW,EAAE;QACX,KAAK,EAAE,CAAC,oCAAoC,CAAC;QAC7C,aAAa,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;KACrC;IACD,uBAAuB,EAAE;QACvB,KAAK,EAAE,CAAC,iDAAiD,CAAC;QAC1D,aAAa,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;KACrC;IACD,oBAAoB,EAAE;QACpB,KAAK,EAAE,CAAC,uCAAuC,CAAC;QAChD,aAAa,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE;KACrC;IACD,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,oBAAoB,CAAC,EAAE;IAC1C,WAAW,EAAE;QACX,KAAK,EAAE,CAAC,qCAAqC,CAAC;QAC9C,aAAa,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE;KACtC;CACF,CAAC;AAEF,MAAa,oBAAoB,GAAkB;IACjD,OAAO,EAAE;QACP,MAAM,EAAE,6BAA6B;KACtC;CACF;;;ICpEY,aAAa,qBAA1B,MAAa,aAAa;IACxB,OAAO,OAAO;QACZ,OAAO;YACL,QAAQ,EAAE,eAAa;YACvB,SAAS,EAAE,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;SACxD,CAAC;KACH;CACF;;EAAA,CAPY,aAAa,sCAHzB,QAAQ,CAAC,UACR,OAAO,EAAE,CAACA,eAAiB,CAAC,OAAO,EAAE,EAAE,cAAc,CAAC,OACvD,CAAC,IACW,aAAa,CAOzB,qCACD;;AChBA;;;;;;;;AAQA,SAAgB,mBAAmB,CAAC,EAClC,MAAM,EACN,SAAS,EACT,kBAAkB,GAKnB;IACC,kBAAkB,GAAG,kBAAkB,IAAI,OAAO,CAAC;IACnD,MAAM,OAAO,GAAG,SAAS,gBAAgB,CACvC,QAAsB;QAEtB,MAAM,WAAW,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,KAAK,MAAM,CAAC,CAAC;QAC3E,MAAM,mBAAmB,GAAG,WAAW,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhE,IAAI,WAAW,KAAK,CAAC,CAAC,IAAI,mBAAmB,EAAE;YAC7C,OAAO,IAAI,CAAC;SACb;QAED,MAAM,UAAU,GAAG,WAAW,GAAG,CAAC,CAAC;QACnC,MAAM,SAAS,GAAmC;YAChD,CAAC,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC;SAClC,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,SAAS,CAAC,GAAG,kBAAkB,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC;KACnE,CAAC;IAEF,IAAI,SAAS,EAAE,EAAE;QACf,OAAO,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;KAC3E;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,aAAa,CAAI,QAAa,EAAE,SAA6B;IACpE,KAAK,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;QACzD,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;YAC9B,OAAO,KAAK,CAAC;SACd;KACF;IACD,OAAO,CAAC,CAAC,CAAC;AACZ,CAAC;;ICjDY,cAAc,GAA3B,MAAa,cAAc;IACzB,YACY,OAAc,EACd,MAAY,EACZ,eAAgC;QAFhC,YAAO,GAAP,OAAO,CAAO;QACd,WAAM,GAAN,MAAM,CAAM;QACZ,oBAAe,GAAf,eAAe,CAAiB;KACxC;IAEJ,IAAI;QACF,IAAI,CAAC,eAAe;aACjB,OAAO,EAAE;aACT,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACrB,SAAS,CAAC,CAAC,IAAc,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;KACtD;IAED,IAAc,IAAI,CAAC,IAAc;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;KAC5E;IAED,IAAc,KAAK,CAAC,KAAa;QAC/B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;KACpC;IAED,IAAc,WAAW,CAAC,KAAa;QACrC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;KACtD;IAED,IAAc,KAAK,CAAC,QAAgB;QAClC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;SACtD;KACF;IAED,IAAc,MAAM,CAAC,KAAuB;QAC1C,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC5D;KACF;IAES,MAAM,CAAC,IAAoB;QACnC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7B;KACF;CACF;qMAAA;;YA5CsB,KAAK;YACN,IAAI;YACK,eAAe;;gOAYtC,AA+BR;AA/Ca;aAAc,PCLd,gBAAgB,GAAa;MDEzC,UAAU,CAAC,UACV,vBCFA,OAAO,EAAE,eAAe;ODEd,EAAE,MAAM,XCDlB,KAAK,EAAE,IAAI;KDEZ,CAAC,IACW,cAAc,CA8C1B,rBChDC,UAAU,EAAE,oBAAoB;IAChC,IAAI,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;CACnC,CAAC;AAEF;;;AAGA,SAAgB,oBAAoB,CAClC,MAAiB,EACjB,eAAgC;IAEhC,MAAM,MAAM,GAAG;QACb,eAAe,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,IAAI;YACxC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;SAC7C,CAAC,CAAC;KACJ,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC;;ICPY,mBAAmB,GAAhC,MAAa,mBAAmB;IAC9B,YACiC,UAAkB,EACvC,MAAiB,EACjB,eAAiC,EACjC,SAAuB;QAHF,eAAU,GAAV,UAAU,CAAQ;QACvC,WAAM,GAAN,MAAM,CAAW;QACjB,oBAAe,GAAf,eAAe,CAAkB;QACjC,cAAS,GAAT,SAAS,CAAc;KAC/B;IAEJ,KAAK,CAAC,MAAY;QAChB,IAAI,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACrC,IAAI,CAAC,yBAAyB,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACpE;KACF;;;;;IAMD,gBAAgB;QACd,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,SAAS,EAAE,CAAC;KAC3D;IAEO,yBAAyB;QAC/B,MAAM,EAAE,GAAG,SAAS,CAAC;QACrB,IAAI,aAAa,IACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CACxC,CAAC;QAEF,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,QAAQ,GAAc,IAAI,CAAC,eAAe,CAAC,cAAc,CAC7D,IAAI,EACJ,IAAI,CACL,CAAC;YACF,MAAM,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACnE,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;YACf,MAAM,CAAC,IAAI,GAAG,qBAAqB,CAAC;YACpC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACxD,aAAa,GAAG,MAAM,CAAC;SACxB;QACD,OAAO,aAAa,CAAC;KACtB;;;;;;;IAQD,QAAQ,CAAC,MAAU;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,KACxC,OAAO,KAAK,KAAK,QAAQ;cACrB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC;cACpD,KAAK,CACV,CAAC;KACH;CACF;+PAAA;;yCArDI,MAAM,SAAC,WAAW;YACD,SAAS;YACA,gBAAgB;YACtB,YAAY;;;AALxB,mBAAmB,eACpB,KAJX,UAAU,CAAC,UACV,1BAEE,CAEC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;GAJZ,EAAE,MAAM,OACnB,CAAC,hBACW,mBAAmB,CAuD/B;;ACnED;;;;;AAQA,IAAa,eAAe,GAA5B,MAAa,eAAe;IAO1B,YACY,mBAAwC,EACxC,SAAuB;QADvB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,cAAS,GAAT,SAAS,CAAc;KAC/B;IATK,IAAI,QAAQ,CAAC,MAAuB;QAC3C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC1B;IASO,WAAW,CAAC,MAAU;QAC5B,IAAI,MAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,EAAE;YACzD,MAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAClE,MAAM,IAAI,GAAG,sCAAsC,eAAe,WAAW,CAAC;YAC9E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;SAC5D;KACF;CACF;;;;6CAAA;;YAXkC,mBAAmB;YAC7B,YAAY;;AAR1B;IAAR,KAAK,EAAE;+CAEP;AAEyB;IAAzB,WAAW,CAAC,WAAW,CAAC;+CAAkB,CAC7C,AAcA;AApBa;ACVb;UDU4B,oBAH3B,SAAS,CAAC,UACT,QAAQ,EAAE,YAAY,OACvB,CAAC;CACW;aAAe,CAmB3B;;;ACvBD,MAAa,cAAc,GAAG,IAAI,cAAc,CAAC,oBAAoB,CAAC,CAAC;AAEvE;;;;AAIA,MAAa,sBAAsB,GAAG,IAAI,cAAc,CACtD,2BAA2B,CAC5B;;ACPD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAChC,YACU,aAAkC,EAGlC,QAAyB;QAHzB,kBAAa,GAAb,aAAa,CAAqB;QAGlC,aAAQ,GAAR,QAAQ,CAAiB;KAC/B;IAEJ,KAAK;QACH,IAAI,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,MAAY;YAC3C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAClC,CAAC,CAAC;KACJ;IAEO,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC5D,OAAO,EAAE,EAAE,CAAC;SACb;QACD,OAAO,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;KAC5E;CACF;8LAAA;;YAlB0B,mBAAmB;wCACzC,QAAQ,YACR,MAAM,SAAC,cAAc;;;AAJb,qBAAqB,eACtB,KAJX,UAAU,CAAC,hBAGR,CAGC,WAAA,QAAQ,EAAE,CAAA;CALb,UAAU,EAAE,MAAM,OACnB,CAAC,vBAKG,WAAA,MAAM,CAAC,cAAc,CAAC,CAAA;GAJd,qBAAqB,CAoBjC;;ACxBD;;;;AAIA,SAAgB,wBAAwB,CAAC,QAAkB;IACzD,MAAM,MAAM,GAAG;QACb,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,EAAE,CAAC;KACjB,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC;AAeD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;;;;;;;;;EAAA,CAAvB,oBAAoB,aACjC;;KAdC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,zBCbI,cAAc,CAAC,QAAkB;UDazB,CAAC,UACvB,jBCbA,MAAM,MAAM,GAAG;MDaH,EAAE,CAAC,eAAe,CAAC,UAC/B,OAAO,EAAE,CAAC,rCCbR,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;MDatB,CAAC,UAC1B,TCbE,OAAO,CAAC,IAAI,EAAE,CAAC;EDaR,EAAE,CCZV,CAAC;WDaA,PCZF,OAAO,MAAM,CAAC;AAChB,CAAC;QDYK,OAAO,EAAE,eAAe,hCCE9B,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;aDDnB,UAAU,EAAE,wBAAwB;IACpC,IAAI,EAAE,CAAC,QAAQ,CAAC,kBAChB,KAAK,EAAE,IAAI,eACZ,WACF,OACF,CAAC,IACW,oBAAoB,CAAG;;;;;;;;ECLX,CAAZ,SAAS,oBAZrB,QAAQ,CAAC,GAaV;;KAZE,OAAO,EAAE,CAAC,oBAAoB,CAAC,UAC/B,SAAS,EAAE,rDCNA,uBAAuB,GAApC,MAAa,uBAAuB;SDOhC,kBACE,OAAO,9BCPX,YAAsB,eAAgC;CDOzC,eAAe,kBACxB,UAAU,EAAE,tCCRM,oBAAe,GAAf,eAAe,CAAiB;KAAI;MDQ5B,FCN9B,KAAK;UDOD,IAAI,EAAE,CAAC,QAAQ,CAAC,lBCNlB,OAAO,IAAI,CAAC,eAAe;QDOzB,KAAK,EAAE,IAAI,NCNV,OAAO,EAAE;WDOX,cACD,gBAAgB,WACjB,OACF,CAAC,/CCTK,IAAI,CAAC,GAAG,CAAC,CAAC,QAAkB,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EDUpD,GCTV;KDSmB,CAAG,FCPb,OAAO,CAAC,QAAkB;;QAClC,IAAI,QAAC,QAAQ,0CAAE,WAAW,CAAA,EAAE;YAC1B,OAAO;SACR;QACD,MAAM,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK;YACnD,OAAO;gBACL,OAAO,EAAE,UAAU;gBACnB,QAAQ,EAAE,KAAK,GAAG,CAAC;gBACnB,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK,CAAC,IAAI;oBACjB,IAAI,EAAE,KAAK,CAAC,KAAK;iBAClB;aACF,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,MAAM,CAAC,IAAI,CAAC;gBACV,OAAO,EAAE,UAAU;gBACnB,QAAQ,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC;gBAC3B,IAAI,EAAE;oBACJ,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACrB,IAAI,EAAE,QAAQ,CAAC,KAAK;iBACrB;aACF,CAAC,CAAC;SACJ;QAED,OAAO;YACL,UAAU,EAAE,mBAAmB;YAC/B,OAAO,EAAE,gBAAgB;YACzB,eAAe,EAAE,MAAM;SACxB,CAAC;KACH;CACF;mKAAA;;YAxCwC,eAAe;;mOASzB,AAgC/B;AA1Ca;ACJb;kBDIoC,oBAHnC,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,OACnB;AAAC,IACW,uBAAuB,CAyCnC;;ACtCD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IACnC,KAAK,CAAC,OAAgB;QACpB,OAAO,EAAE,+CACJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAC5B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAC7B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAChC,CAAC;KACJ;IAEO,cAAc,CAAC,OAAgB;QACrC,MAAM,MAAM,GAAQ,EAAE,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;QAC1C,IAAI,OAAO,CAAC,IAAI,EAAE;YAChB,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;SAC5B;QACD,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC;SACtC;QACD,OAAO,MAAM,CAAC;KACf;IAEO,eAAe,CAAC,OAAgB;QACtC,OAAO,OAAO,CAAC,MAAM;YACnB,OAAO,CAAC,MAAM,CAAC,OAAO;YACtB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC9B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG;cAChC;gBACE,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG;aAC1C;cACD,EAAE,CAAC;KACR;IAEO,eAAe,CAAC,OAAgB;QACtC,OAAO,OAAO,CAAC,cAAc,CAAC;cAC1B;gBACE,KAAK,EAAE,OAAO,CAAC,cAAc,CAAC;aAC/B;cACD,IAAI,CAAC;KACV;CACF;+HAAA;8MAC6M,AAA9M;AAvCa;ACPb;mBDOqC,oBAHpC,UAAU,CAAC,UACV,UAAU,EAAE,MAAM;CACnB,CAAC,IACW,wBAAwB,CAsCpC;;ACtCD,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IACpC,KAAK,CAAC,OAAgB;QACpB,MAAM,MAAM,GAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;QACzC,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE;gBACvB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;aACpC;YACD,IAAI,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE;gBAC7B,MAAM,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC;aAClD;SACF;QAED,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE;YACnD,MAAM,CAAC,YAAY;gBACjB,OAAO,CAAC,KAAK,CAAC,gBAAgB,KAAK,SAAS,GAAG,SAAS,GAAG,YAAY,CAAC;SAC3E;QAED,OAAO,EAAE,CAAC;YACR,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;KACJ;CACF;kIAAA;kNACiN,AAAlN;AAtBa;ACNb;oBDMsC,oBAHrC,UAAU,CAAC,UACV,UAAU,EAAE,MAAM;AACnB,CAAC,IACW,yBAAyB,CAqBrC;;ACpBD,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IACrC,YAAoB,aAAmC;QAAnC,kBAAa,GAAb,aAAa,CAAsB;KAAI;IAE3D,KAAK,CAAC,OAAgB;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAC3D,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,OAAiB;YACpB,OAAO;gBACL,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC9D,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aACzD,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAEO,sBAAsB,CAAC,OAAgB,EAAE,OAAiB;QAChE,MAAM,UAAU,GAAQ;YACtB,OAAO,EAAE,iBAAiB;SAC3B,CAAC;QACF,IAAI,OAAO,CAAC,aAAa,EAAE;YACzB,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC;SAChD;QACD,IAAI,OAAO,EAAE;YACX,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACpE,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACnB;IAEO,YAAY,CAAC,MAAc;QACjC,MAAM,YAAY,GAAQ;YACxB,OAAO,EAAE,QAAQ;SAClB,CAAC;QAEF,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;YAC7C,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC;SAC7C;QACD,IAAI,MAAM,CAAC,IAAI,EAAE;YACf,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,YAAY,CAAC,aAAa,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACnE,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;SACzB;QACD,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;SACrC;QACD,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,YAAY,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;SAC3C;QACD,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,YAAY,CAAC,YAAY,GAAG;gBAC1B,OAAO,EAAE,QAAQ;gBACjB,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;aACtC,CAAC;SACH;QAED,OAAO,YAAY,CAAC;KACrB;CACF;iLAAA;;YAxDoC,oBAAoB;;oPAOA,AAkDzD;AA1Da;yBAA0B,oBAHtC,UAAU,CAAC,pDCGC,qBAAqB,GAAlC,MAAa,qBAAqB;QDFhC,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,lCCCX,YACU,cAA8B,EAC9B,cAA8B;cDHH,CAyDtC,PCvDW,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAGrB,0BAAqB,GAAG,YAAY,CAAC,OAAO,CAAC;KAF5D;;;;;;IASJ,UAAU,CACR,MAA0D;QAE1D,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAC9C,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,EAC/C,SAAS,CAAC,CAAC,WAAmB;YAC5B,OAAO,WAAW;kBACd,IAAI,CAAC,cAAc,CAAC,GAAG,CACrB,WAAW,EACX,MAAM,IAAI,IAAI,CAAC,qBAAqB,CACrC;kBACD,EAAE,CAAC,IAAI,CAAC,CAAC;SACd,CAAC,EACF,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,EAC5B,oBAAoB,EAAE,CACvB,CAAC;KACH;CACF;oMAAA;;YA5B2B,cAAc;YACd,cAAc;;oPAWf,AAiB3B;AA/Ba;ACLb;gBDKkC,oBAHjC,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC;EACW,qBAAqB,CA8BjC;;;AC3BD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC/B,YACU,cAAqC,EAGnC,QAAkC;QAHpC,mBAAc,GAAd,cAAc,CAAuB;QAGnC,aAAQ,GAAR,QAAQ,CAA0B;KAC1C;IAEJ,KAAK;QACH,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,IAAI,CAC1C,SAAS,CAAC,CAAC,OAAgB;YACzB,IAAI,OAAO,EAAE;gBACX,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAC9C,GAAG,CAAC,CAAC,GAAS,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,CAC9C,CAAC;aACH;YACD,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,CACH,CAAC;KACH;IAES,OAAO,CAAC,OAAgB;QAChC,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YAC7B,OAAO,EAAE,CAAC;SACX;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;cAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;cACpD,EAAE,CAAC;QACP,OAAO;YACL,EAAE,CAAC;gBACD,UAAU,EAAE,mBAAmB;gBAC/B,OAAO,EAAE,SAAS;aACnB,CAAC;YACF,GAAG,QAAQ;SACZ,CAAC;KACH;CACF;qMAAA;;YAlC2B,qBAAqB;wCAC5C,QAAQ,YACR,MAAM,SAAC,sBAAsB;;;AAJrB,oBAAoB,eAAe,KAH/C,UAAU,CAAC,hBAGR,CAGC,WAAA,QAAQ,EAAE,CAAA;CALb,UAAU,EAAE,MAAM,OACnB,CAAC,vBAKG,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;GAJtB,oBAAoB,CAoChC;;AC1CD;;;;AAmCA,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,CAAtB,MACb;;WADgC,oBA/B/B,QAAQ,CAAC,UACR,lDCfK,MAAM,6BAA6B,GAAG,aAAa,CAAC;;KDehD,EAAE,cACT,kBACE,OAAO,EAAE,5CEHF,mBAAmB,GAAhC,MAAa,mBAAmB;QFGH,kBACvB,WAAW,EAAE,oBAAoB,vDEHrC,YACY,WAAwB,EACxB,cAA8B,EAC9B,cAA8B,EAC9B,MAAiB;MFAzB,KAAK,EAAE,IAAI,eACZ,xBEJS,gBAAW,GAAX,WAAW,CAAa;MFKlC,kBACE,OAAO,EAAE,zBELD,mBAAc,GAAd,cAAc,CAAgB;CFKf,kBACvB,WAAW,EAAE,xBELL,mBAAc,GAAd,cAAc,CAAgB;SFKF,kBACpC,nBELQ,WAAM,GAAN,MAAM,CAAW;EFKpB,EAAE,CEJP;EFIW,eACZ,bEHH,qCAAqC;QACnC,IAAI,CAAC,WAAW;aACb,YAAY,EAAE;aACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;8BFGhB,jBEFG,SAAS,CAAC,KAAK;cFGhB,OAAO,EAAE,sBAAsB,kBAC/B,nDEHE,IAAI,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE;GFGhD,EAAE,wBAAwB,bEFjC,IAAI,CAAC,cAAc,EAAE,CAAC;QFG1B,KAAK,AEFF;CFEI,IAAI,eACZ,cACD,kBACE,OAAO,EAAE,jDEJP,IAAI,CAAC,cAAc,CAAC,0BAA0B,EAAE,CAAC;SAClD,CAAC,CAAC;KACN;GFEkC,kBAC/B,jBEDJ,cAAc;SFCC,EAAE,HEAf,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;CFAc,kBACtC,KAAK,EAAE,IAAI,eACZ,rCEDD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7C;AFCC,kBACE,OAAO,EAAE,vBEAb,oCAAoC;IFAD,kBAC/B,dEAF,OAAO,IAAI,CAAC,WAAW;CFAV,EAAE,UECZ,YAAY,EAAE;CFDwB,kBACvC,KAAK,EAAE,IAAI,eACZ,WACF,OACF,CAAC,IACW,mBAAmB,CAAG,3EEH5B,IAAI,CACH,QAAQ,CAAC,SAAS,IAChB,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,CAC5D,CACF,CAAC;KACL;;;;;;;;IASD,MAAM;QACJ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;SACpE;KACF;CACF;sQAAA;;YA7C0B,WAAW;YACR,cAAc;YACd,cAAc;YACtB,SAAS;;wRAWN,AAgCzB;AAhDa;kBAAmB,oBAH/B,UAAU,CAAC,7CCeC,kBAAkB,GAA/B,MAAa,kBAAkB;ODd7B,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,mBAAmB,CA+C/B,rDC1BC,YACY,WAAwB,EACxB,cAA8B,EAC9B,WAAwB,EACxB,mBAAwC,EACxC,oBAA0C,EAC1C,cAA8B;QAL9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,mBAAc,GAAd,cAAc,CAAgB;QAVb,aAAQ,GAAG,KAAK,CAAC;QAEtC,4BAAuB,GAAG,KAAK,CAAC;KASpC;IAEJ,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,4BAA4B,EAAE,CAAC;QACxE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,mCAAmC,EAAE,CAAC;QACtF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CACnD,SAAS,CAAC,KAAK;YACb,IAAI,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE;gBACjC,IAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC,CAAC;gBAClD,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC/B;iBAAM;gBACL,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;aACtB;SACF,CAAC,CACH,CAAC;KACH;IAEO,qCAAqC,CAAC,KAAgB;QAC5D,IACE,IAAI,CAAC,uBAAuB;YAC5B,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,KAAK,CAAC,EACnD;YACA,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;YACrC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;YACnE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAC7B;KACF;IAED,yBAAyB,CAAC,EACxB,MAAM,EACN,QAAQ,GAIT;QACC,IAAI,CAAC,cAAc,CAAC,6BAA6B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KACrE;IAED,MAAM;QACJ,IAAI,CAAC,mBAAmB,CAAC,qCAAqC,EAAE,CAAC;KAClE;IAED,6BAA6B,CAAC,EAAE,UAAU,EAA0B;QAClE,IAAI,CAAC,cAAc;aAChB,4BAA4B,EAAE;aAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,yBAAyB,IAClC,IAAI,CAAC,cAAc,CAAC,6BAA6B,CAC/C,yBAAyB,EACzB,UAAU,CACX,CACF;aACA,WAAW,EAAE,CAAC;QACjB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;KACrC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;KACnC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;giHAAA;;YAlE0B,WAAW;YACR,cAAc;YACjB,WAAW;YACH,mBAAmB;YAClB,oBAAoB;YAC1B,cAAc;;AAVb;IAA5B,WAAW,CAAC,cAAc,CAAC;oDAAkB,CAChD,AAuEA;AA7Ea;ACfb;aDe+B,oBAN9B,SAAS,CAAC,UACT,QAAQ,EAAE;WAAgB,UAC1B;;;ACHF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAI5B,YACY,QAAkB,EAClB,MAAiB,EACjB,wBAAkD,EAClD,aAAmD;QAHnD,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAW;QACjB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,kBAAa,GAAb,aAAa,CAAsC;;QANvD,cAAS,GAAG,KAAK,CAAC;KAOtB;;;;;IAMJ,IAAI;QACF,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YACpB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;;;IAKD,SAAS;QACP,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;YAC7C,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;gBAC5B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,6BAA6B,EAAE,MAAM,CAAC,CAAC;aACzE;SACF;QACD,OAAO,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;KACjD;;;;;IAMO,UAAU;QAChB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,OAAO,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;KACzD;;;;IAKO,YAAY;QAClB,QACE,IAAI,CAAC,MAAM,CAAC,YAAY;YACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,6BAA6B,CAAC,KAAK,MAAM,EAC1E;KACH;;;;IAKO,KAAK;QACX,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO;SACR;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACnE,kBAAkB,CACnB,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;QACxE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;CACF;+PAAA;;YA5DuB,QAAQ;YACV,SAAS;YACS,wBAAwB;YACnC,aAAa;;sRAc/B,AA4CX;AAlEa;ACdb;YDc8B,oBAH7B,UAAU,CAAC,UACV;KAAU,EAAE,MAAM,OACnB,CAAC,IACW,iBAAiB;AAiE7B;AChED,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;;;;;;;;;EAAA,CAAlB,eAAe,oBAX3B,QAAQ,CAAC,UACR,AAWF;AACA;EAZS;CAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC,UAC5C,SAAS,EAAE,cACT;eACE,OAAO,EAAE,eAAe,kBACxB,UAAU,EAAE;CAAU,kBACtB,IAAI,EAAE,CAAC;;IAAiB,CAAC,kBACzB,KAAK,EAAE,IAAI,lCAYjB,SAAgB,UAAU,CAAC,iBAAoC;QAX1D,WACF,OACF,CAAC,vBAUA,MAAM,OAAO,GAAG;GATL,eAAe,CAAG,XAU3B,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC1B,CAAC;IACF,OAAO,OAAO,CAAC;AACjB,CAAC;;ICfY,wBAAwB,GAArC,MAAa,wBAAwB;IAMnC,YACU,MAAiB,EACjB,mBAAwC,EACxC,WAAwB,EACxB,cAA8B,EAC9B,iBAAoC;QAJpC,WAAM,GAAN,MAAM,CAAW;QACjB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAVtC,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAEnC,2BAAsB,GAAG,KAAK,CAAC;KASnC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC1B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7B,IAAI,CAAC,mBAAmB,CAAC,qCAAqC,EAAE,CAAC;aAClE;YACD,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACvC,EAAE,IAAI,CAAC,CAAC;QAET,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,4BAA4B,EAAE,CAAC;KACrC;IAEO,eAAe;QACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,YAAY;YACvD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;SACF,CAAC,CACH,CAAC;KACH;IAEO,4BAA4B;QAClC,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,WAAW;aACb,YAAY,EAAE;aACd,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,CACrC,CAAC;KACH;IAED,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACpD;KACF;IAEO,2BAA2B;QACjC,IACE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,sBAAsB;YACxD,IAAI,CAAC,sBAAsB,EAC3B;YACA,OAAO,IAAI,CAAC,sBAAsB,CAAC;SACpC;aAAM;YACL,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,sBAAsB,CAAC;SACjE;KACF;IACD,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9B;KACF;CACF;;;;;;;;;;;;;;;;;;6DHnE4C,UAE3C,aAAa,EAAE;EAAiB,CAAC,IAAI;;;;2oCGiEtC;;YAhEmB,SAAS;YACI,mBAAmB;YAC3B,WAAW;YACR,cAAc;YACX,iBAAiB;EAC5C,AA4DJ;AAxEa;uBAAwB,oBANpC,vCCPY,eAAe,GAA5B,MAAa,eAAe;MDOlB,CAAC,UACT,QAAQ,EAAE,vBCPV,SAAS,CAAC,YAAoB;mBDOE,UAChC,rBCPE,IAAI,YAAY,GAAG,CAAC,EAAE;YACpB,YAAY,GAAG,CAAC,CAAC;SAClB;QACD,MAAM,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;QACtD,MAAM,OAAO,GAAW,YAAY,GAAG,EAAE,CAAC;QAC1C,IAAI,iBAAyB,CAAC;QAC9B,IAAI,OAAO,GAAG,EAAE,EAAE;YAChB,iBAAiB,GAAG,CAAC,IAAI,GAAG,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAChD;aAAM;YACL,iBAAiB,GAAG,OAAO,GAAG,EAAE,CAAC;SAClC;EDH8C,UAEjD,aAAa,EAAE,iBAAiB,CAAC,IAAI,zCCEnC,MAAM,iBAAiB,GAAW,CAAC,IAAI,GAAG,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,OAAO,GAAG,iBAAiB,IAAI,iBAAiB,EAAE,CAAC;KACpD;CACF;;EAAA,CAhBY,eAAe,oBAH3B,IAAI,CAAC,UACJ,IAAI,EAAE,aAAa,OACpB,CAAC,IACW,eAAe,CAgB3B,IACD;;ACpBA;;;AAGA,MAAa,SAAS;;;;;;;;;;;IAWpB,OAAO,eAAe,CACpB,IAAe,EACf,eAAuB,EACvB,SAAkB;QAElB,MAAM,OAAO,GAAoB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC3D,OAAO,OAAO,CAAC,OAAO,KAAK,SAAS,KAAK,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;KAC7E;CACF;;ICPY,yBAAyB,GAAtC,MAAa,yBAAyB;IAUpC,YAAoB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;QAR3B,kBAAa,GAAG,KAAK,CAAC;QAG9B,wBAAmB,GAAG,KAAK,CAAC;IHL7B,CAAC,IACW,wBAAwB,CAuEpC,1BGhEC,gBAAW,GAAG,IAAI,YAAY,EAAwC,CAAC;KAEhC;IAEvC,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;KACJ;IAED,QAAQ;oBNXT,CAAC,IACW,jBMWT,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QNXC,CA4E9B,DMhEG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;YACvC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;SAC5C,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,eAAuB;QAChC,OAAO,SAAS,CAAC,eAAe,CAC9B,IAAI,CAAC,IAAI,EACT,eAAe,EACf,IAAI,CAAC,aAAa,CACnB,CAAC;KACH;CACF;;;;;;;;;oyBAAA;;YA5ByB,WAAW;;AALnC;IADC,KAAK,EAAE;sEACoB;AAG5B;IADC,MAAM,EAAE;8DAC8D,CACzE,AA8BA;AAvCa;wBAAyB,oBANrC,SAAS,CAAC,UACT,5DCDW,0BAA0B,GAAvC,MAAa,0BAA0B;IDC7B,EAAE,uBAAuB,UACjC,nCCGA,YACY,mBAAwC,EACxC,WAAwB;QADxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QAJ5B,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAKtC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CACjE,CAAC;QACF,IAAI,CAAC,qCAAqC,GAAG,IAAI,CAAC,mBAAmB,CAAC,oCAAoC,EAAE,CAAC;KAC9G;IAED,cAAc;QACZ,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;KAC3C;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;CACF;;+VDtBmD,UAElD,aAAa,EAAE,iBAAiB,CAAC,IAAI;;;;;;;oDACtC,CAAC,IACW,yBAAyB,CAsCrC,m/CCpBA;;YAlBkC,mBAAmB;YAC3B,WAAW;EAClC,AAiBJ;AAzBa;yBAA0B,oBANtC,SAAS,CAAC,UACT,7DCuBW,0BAA0B,GAAvC,MAAa,0BAA0B;KDvB7B,EAAE,uBAAuB,UACjC,pCCmCA,YACU,EAAe,EACf,UAAsB,EACtB,MAAiB;QAFjB,OAAE,GAAF,EAAE,CAAa;QACf,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAW;QAdnB,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAM1C,gBAAW,GAAG,IAAI,YAAY,EAA0B,CAAC;KASrD;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,UAAU,EAAE,CAAC,EAAE,CAAC;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QACtC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,+BAA+B,EAAE,CAAC;QAC/E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,wBAAwB,EAAE,CAAC;mED/ChB,3DCiDhD,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY;IDhD9C,aAAa,EAAE,iBAAiB,vBCiDzB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;ADjDG,IAAI,SCkD9B,SAAS,CAAC,eAAe;YACxB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;SACxC,CAAC,CACL,CAAC;KACH;IAEO,gBAAgB,CAAC,eAAuB;QAC9C,IACE,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAC9B,eAAe,KAAK,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAC9C;YACA,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;SACnC;QACD,IAAI,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YAClC,OAAO;SACR;QACD,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QACtC,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;gBAC7B,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,UAAU;aACpD,CAAC,CAAC;SACJ;KACF;IAED,sBAAsB,CAAC,QAAc;QACnC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;KACvC;IAED,QAAQ;QACN,IAAI,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC;SACzE;KACF;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC5B,IACE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;gBACpD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EACpD;gBACA,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;aACvC;SACF;KACF;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;KACvC;IAED,WAAW;iBDvGZ,CAAC,IACW,dCuGT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;ODvGG,CAwBtC,ACgFG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;KACvC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qnPAAA;;YA1Ee,WAAW;YACH,UAAU;YACd,SAAS;;AAR3B;IADC,MAAM,EAAE;+DACgD;AAEhC;IAAxB,SAAS,CAAC,YAAY,CAAC;8DAAwB;AACvB;IAAxB,SAAS,CAAC,YAAY,CAAC;8DAAwB,CAClD,AA6EA;AAzFa;yBAA0B,rBCC1B,SAAS,GAAtB,MAAa,SAAS;CAAG;QDVxB,SAAS,CAAC,UACT,QAAQ,EAAE,uBAAuB;QACjC;;;;;;ECQuB,CAAZ,SAAS,EACtB;;gBAnBC,QAAQ,CAAC,UACR,OAAO,EAAE,xCCLE,mBAAmB,GAAhC,MAAa,mBAAmB;IDM5B,YAAY,cACZ,mBAAmB,7CCHrB,YACU,gBAAkC,EAClC,cAA8B;WDEtC,UAAU,cACVC,WAAa,CAAC,vCCJN,qBAAgB,GAAhB,gBAAgB,CAAkB;IDIrB,EAAE,cACvB,eAAe,3BCJP,mBAAc,GAAd,cAAc,CAAgB;ADKvC,UACD,YAAY,EAAE,cACZ,9BCLA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc;UDKnB,cAClB,XCLG,cAAc,EAAE;mBDKM,cACzB,0BAA0B,cAC1B,5DCNG,IAAI,CAAC,GAAG,CAAC,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;sBDMxC,cACxB,eAAe,cACf,zDCNA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CACpC,GAAG,CAAC,SAAS;yBDKW,bCJtB,IAAI,SAAS,EAAE;ODKpB,UACD,eAAe,EAAE,CAAC,kBAAkB,CAAC,OACtC,CAAC,IACW,lDCPH,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QDOtC,CAAG,ICNhB;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;aAC3C;SACF,CAAC,EACF,WAAW,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAC/C,CAAC;KACH;IAED,eAAe;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACzB,SAAS,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,CACzD,CAAC;KACH;CACF;2FFfmD,UAElD,aAAa,EAAE,iBAAiB,CAAC,IAAI,UACrC,IAAI,EAAE,cACJ,kBAAkB,EAAE,IEWvB;oBFXgD,WAC9C;YEd2B,gBAAgB;YAClB,cAAc;;8OASnC,AAeP;AA9Ba;kBAAmB,oBAH/B,lCCYY,gBAAgB,GAA7B,MAAa,gBAAgB;ADZlB,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,mBAAmB,CA6B/B,zDCnBC,YACY,mBAAwC,EACxC,eAAgC,EAChC,iBAAoC;QAFpC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;KAC5C;IAEJ,kBAAkB,CAChB,iBAAoC;QAEpC,QAAQ,iBAAiB;YACvB,KAAK,iBAAiB,CAAC,UAAU;gBAC/B,OAAO,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAC3C,KAAK,iBAAiB,CAAC,QAAQ;gBAC7B,OAAO,IAAI,CAAC,8BAA8B,EAAE,CAAC;YAC/C,KAAK,iBAAiB,CAAC,KAAK;gBAC1B,OAAO,IAAI,CAAC,2BAA2B,EAAE,CAAC;YAC5C;gBACE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACjB;KACF;IAED,0BAA0B;QACxB,OAAO,IAAI,CAAC,iBAAiB;aAC1B,SAAS,EAAE;aACX,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACnE;IAEO,gCAAgC,CAAC,IAAU;QACjD,MAAM,mBAAmB,GAAG,EAAE,CAAC;QAC/B,mBAAmB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,wBAAwB,IAAI,EAAE,CAAC,CAAC,CAAC;QAEnE,MAAM,iBAAiB,GAAG,EAAE,CAAC;QAC7B,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAC;QAE/D,OAAO,CAAC,GAAG,mBAAmB,EAAE,GAAG,iBAAiB,CAAC,CAAC;KACvD;IAED,8BAA8B;QAC5B,OAAO,IAAI,CAAC,eAAe;aACxB,eAAe,EAAE;aACjB,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACtE;IAED,2BAA2B;QACzB,OAAO,IAAI,CAAC,mBAAmB;aAC5B,eAAe,EAAE;aACjB,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACtE;IAEO,iCAAiC,CAAC,KAAY;QACpD,MAAM,sBAAsB,GAAG,EAAE,CAAC;QAClC,sBAAsB,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAC;QAErE,OAAO,sBAAsB,CAAC;KAC/B;IAED,2BAA2B,CACzB,IAAgB,EAChB,iBAAoC;QAEpC,QAAQ,iBAAiB;YACvB,KAAK,iBAAiB,CAAC,UAAU;gBAC/B,OAAO,IAAI,CAAC,iBAAiB;qBAC1B,SAAS,EAAE;qBACX,IAAI,CACH,GAAG,CAAC,IAAI,IACN,IAAI,CAAC,mBAAmB,CACtB,IAAI,EACJ,IAAI,CAAC,wBAAwB,IAAI,EAAE,CACpC,CACF,CACF,CAAC;YACN,KAAK,iBAAiB,CAAC,QAAQ;gBAC7B,OAAO,IAAI,CAAC,eAAe;qBACxB,eAAe,EAAE;qBACjB,IAAI,CACH,GAAG,CAAC,KAAK,IACP,IAAI,CAAC,mBAAmB,CACtB,IAAI,EACJ,KAAK,CAAC,wBAAwB,IAAI,EAAE,CACrC,CACF,CACF,CAAC;YACN,KAAK,iBAAiB,CAAC,KAAK;gBAC1B,OAAO,IAAI,CAAC,mBAAmB;qBAC5B,eAAe,EAAE;qBACjB,IAAI,CACH,GAAG,CAAC,KAAK,IACP,IAAI,CAAC,mBAAmB,CACtB,IAAI,EACJ,KAAK,CAAC,wBAAwB,IAAI,EAAE,CACrC,CACF,CACF,CAAC;SACP;KACF;IAEO,mBAAmB,CACzB,IAAgB,EAChB,UAA6B;QAE7B,MAAM,eAAe,GAAsB,EAAE,CAAC;QAC9C,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACvC,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;gBAClC,IACE,SAAS,CAAC,WAAW;oBACrB,SAAS,CAAC,eAAe;oBACzB,SAAS,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EACpC;oBACA,KAAK,MAAM,aAAa,IAAI,SAAS,CAAC,eAAe,EAAE;wBACrD,IAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;4BAC/C,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBACjC;qBACF;iBACF;aACF;SACF;QACD,OAAO,eAAe,CAAC;KACxB;IAEO,iBAAiB,CAAC,aAAkB,EAAE,KAAU;QACtD,MAAM,mBAAmB,GAAG,aAAa,CAAC,gBAAgB,CAAC;QAC3D,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,KAAK,MAAM,QAAQ,IAAI,KAAK,CAAC,OAAO,EAAE;gBACpC,IAAI,QAAQ,CAAC,WAAW,KAAK,mBAAmB,EAAE;oBAChD,OAAO,IAAI,CAAC;iBACb;aACF;YACD,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,mBAAmB,KAAK,KAAK,CAAC,WAAW,CAAC;SAClD;KACF;CACF;+NAAA;;YApIkC,mBAAmB;YACvB,eAAe;YACb,iBAAiB;;mQASlB,AA0HhC;AAvIa;eAAgB,oBAH5B,UAAU,CAAC,UACV,UAAU,9DCIC,0BAA0B,GAAvC,MAAa,0BAA0B;ADJzB,MAAM,OACnB,CAAC,IACW,gBAAgB,CAsI5B,/BChHC,YACY,YAA0B,EAC1B,WAA8B,EAC9B,gBAAkC;QAFlC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAtB9C,cAAS,GAAG,SAAS,CAAC;QAOtB,sBAAiB,GAAsB,iBAAiB,CAAC,UAAU,CAAC;QAEpE,aAAQ,GAAG,CAAC,CAAC;QACb,gBAAW,GAAG,KAAK,CAAC;QAKpB,SAAI,GAAc,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;KAQhC;;;;;;IAMJ,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACtC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAChB,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EACxC,SAAS,CAAC,MACR,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI;;YAEzB,SAAS,CAAC,IAAI,CAAC,EACf,GAAG,CAAC,WAAW;gBACb,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,WAAW,CAAC,WAAW,CAC1B,WAAW,CAAC,WAAW,EACvB,WAAW,CAAC,QAAQ,CACrB,CAAC;oBACF,IAAI,WAAW,CAAC,QAAQ,KAAK,CAAC,EAAE;wBAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;qBAC9B;iBACF;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;iBAC5B;aACF,CAAC,CACH,CACF,EACD,GAAG,CAAC,MAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAClD,CAAC;SACH;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC9D,IAAI,CAAC,iBAAiB,CACvB,CAAC;KACH;IAEO,cAAc,CAAC,KAAiB;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YAC9B,MAAM,QAAQ,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAE3C,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACvD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;SAClD;QACD,OAAoB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;KAC/C;IAED,YAAY,CAAC,MAAY;QACvB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;KAC9C;CACF;;;;;;uCJvEA,CAAC,IACW,0BAA0B,CAwFtC;;;;;;;;;;;;;2IIlBA;;YA3D2B,YAAY;YACb,iBAAiB;YACZ,gBAAgB;;AAT9C;IADC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;0DACvB,CACrB,AAkEA;AAjFa;yBAA0B,oBAJtC,zCCOY,kBAAkB,GAA/B,MAAa,kBAAkB;EDPrB,CAAC,UACT,QAAQ,EAAE,yBAAyB,UACnC,tDC6BA,YACY,YAA0B,EAC1B,qBAA4C,EAC9C,EAAqB,EACnB,iBAAoC;QAHpC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC9C,OAAE,GAAF,EAAE,CAAmB;QACnB,sBAAiB,GAAjB,iBAAiB,CAAmB;QA1BvC,iBAAY,GAAG,IAAI,CAAC;QAW7B,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,KAAK,CAAC;QAKlB,kBAAa,GAAG,IAAI,SAAS,CAAC;YAC5B,QAAQ,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;SAC7B,CAAC,CAAC;KAOC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,WAAW,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;YAEpE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB;iBAC3C,UAAU,EAAE;iBACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBACrB,SAAS,CAAC,CAAC,OAAgB;gBAC1B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACpE,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;aACxB,CAAC,CAAC;SACN;KACF;IAEO,YAAY,CAAC,OAAgB;QACnC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ;YACX,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,KAAK,YAAY,CAAC;QACnE,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE;YAC7C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC;SAC7C;KACF;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAED,SAAS;QACP,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,QAAQ,IAAI,CAAC,EAAE;YACtC,OAAO;SACR;;;QAGD,IAAI,CAAC,iBAAiB;aACnB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;aAC1B,SAAS,CAAC,KAAK;YACd,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB,CAAC;aACD,WAAW,EAAE,CAAC;KAClB;IAEO,SAAS;QACf,IAAI,aAAkB,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAE;YACjE,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAChD,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QACvC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;QACzD,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QAC1D,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACvC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;KAC1C;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;CACF;;uODlHqD,MACrD,CAAC,IACW,0BAA0B,CAgFtC;;;;iRCgCA;;YApF2B,YAAY;YACH,qBAAqB;YAC1C,iBAAiB;YACA,iBAAiB;;AA3BvC;IAAR,KAAK,EAAE;uDAAqB;AACpB;IAAR,KAAK,EAAE;wDAAqB;AAMpB;IAAR,KAAK,EAAE;mDAAkB,CAC5B,AAqGA;AA9Ga;iBAAkB,oBAL9B,SAAS,CAAC,UACT,zDClBF;MDkBU,EAAE,gBAAgB,UAC1B,lCClBF,MAAa,UAAU,GAAG,eAAe,CAAC;AAC1C;AACA,AAAO,MAAM,gBAAgB,GAAG,qBAAqB,CAAC;;ICEhC,gBAAgB,GAAtC,MAAsB,gBAAgB;CAAG;uGAAA;8KACqI,AAA9K;AADsB;ACKtB;WDLsC,oBAHrC,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC;CACoB;AAAgB,CAAG;;;;;;;ACgBzC,IAAsB,kBAAkB,GAAxC,MAAsB,kBAAkB;IAetC,YACY,UAAmC,EACnC,OAAyB;kBHnBM,UAC3C,pBGiBY,eAAU,GAAV,UAAU,CAAyB;KHjBhC,EAAE,uBAAuB,CAAC,vBGkB7B,YAAO,GAAP,OAAO,CAAkB;KHlBU,MAChD;AAAC,IACW,kBAAkB,CA6G9B;;;QGnGW,kBAAa,GAAoB,EAAE,CAAC;KAO1C;IAEJ,QAAQ;QACN,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;KAC5B;;;;;;;IAQS,uBAAuB;QAC/B,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,KAAK,IAAI,CAAC,aAAa,EAAE;YAC9D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;SAClC;KACF;;;;;IAMD,IAAc,IAAI;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACtC;;;;;;;;IASD,IAAc,gBAAgB,CAAC,QAAgB;QAC7C,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;KACF;;;;;;IAOD,IAAc,wBAAwB;QACpC,QACE,IAAI,CAAC,QAAQ,KAAK,SAAS;YAC3B,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,OAAO,CAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAChC,KAAK,CAAC,CAAC;YACR,EACE,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG;iBACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CACzE,EACD;KACH;CACF;;;;6CAAA;;YA3DyB,UAAU;YACb,gBAAgB;;AAJE;IAAtC,KAAK,EAAE,EAAE,WAAW,CAAC,eAAe,CAAC;oDAAkB,CAC1D,AA8DA;AA5EsB;ACjBtB;aDiBwC,oBADvC,SAAS,EAAE,IACU,kBAAkB,CA2EvC;;;;ACtFD,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,kBAAkB;IAA7D;;QACY,kBAAa,GAAuB,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;;QAMxC,eAAU,GAAG,KAAK,CAAC;KAiBtD;IAf4B,eAAe;QACxC,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;KACF;IAEwB,aAAa;QACpC,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;KACF;IAED,IAAc,kBAAkB;;QAC9B,aAAO,IAAI,CAAC,MAAM,0CAAE,iBAAiB,CAAC;KACvC;CACF;;;;;;0DAAA;AAjBmC;IAAjC,WAAW,CAAC,mBAAmB,CAAC;yDAAoB;AAE1B;IAA1B,YAAY,CAAC,WAAW,CAAC;4DAIzB;AAEwB;IAAxB,YAAY,CAAC,SAAS,CAAC;0DAIvB,CACH,AAKA;AAzBa;oBAAqB,hBCHrB,mBAAmB;aDE/B,SAAS,EAAE,xBCHZ;0BDIa,qBAAqB,CAwBjC,hDC3BD,MAAa,mBAAoB,SAAQ,qBAAqB;IAO5D,YACY,UAAsB,EACtB,OAAyB;QAEnC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAkB;QAP3B,kBAAa,GAAqB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;QAGlD,WAAM,GAAqB,EAAE,CAAC;KAOvC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;SACpB;KACF;CACF;;kIAAA;;YAZyB,UAAU;YACb,gBAAgB;EACnC,AAWJ;AArBa;kBAAmB,lBCHhC,MAAM,YAAY,GAAG,KAAK,CAAC;AAE3B;MDDC,SAAS,EAAE,0CAEC;aAAmB,CAoB/B;;;;ACZD,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,gBAAgB;IAAzD;;;;QAGY,UAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;KA8B7C;IA5BC,GAAG,CAAC,KAAc;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC;KAC9C;;;;;IAMD,GAAG,CAAC,GAAW,EAAE,KAAc;QAC7B,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,YAAY,EAAE,GAAG,CAAC,CAAC;SAC5C;KACF;;;;IAKD,KAAK,CAAC,KAAc;QAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC;KAC1C;;;;;IAMD,mBAAmB,CAAC,IAAiB,EAAE,MAA2B;;QAChE,OAAO,OAAA,MAAM,0CAAE,KAAK,IAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;KAC3E;CACF;0IAAA;0LACyL,AAA1L;AAlCa;ACHb;cDGgC,oBAH/B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM;IACnB,CAAC,IACW,mBAAmB,CAiC/B;;;;;;;;;;;;;;;;;;;;;;;;ACTD,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,mBAAmB;IA2B5D,YACY,UAAsB,EACtB,OAA4B;QAEtC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAqB;QA3B9B,kBAAa,GAAuB,EAAE,CAAC;;;;;;;QAQvC,WAAM,GAAuB,EAAE,CAAC;KAsBzC;IAZD,WAAW,CAAC,KAAqB;;QAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAEvC,MAAA,KAAK,0CAAE,cAAc,GAAG;QACxB,MAAA,KAAK,0CAAE,eAAe,GAAG;KAC1B;IASD,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;KAC7C;IAES,uBAAuB;QAC/B,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;SACpC;QACD,KAAK,CAAC,uBAAuB,EAAE,CAAC;KACjC;;;;IAKD,eAAe;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;SAC1C;KACF;IAED,IAAc,WAAW;QACvB,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC;KAChE;;;;;IAMD,IAAc,GAAG;;QACf,aAAQ,IAAI,CAAC,MAA6B,0CAAE,GAAG,CAAC;KACjD;;;;IAKD,IAAc,KAAK;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CACrC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAA4B,CAClC,CAAC;KACH;CACF;;;;;;0DAAA;;YAhDyB,UAAU;YACb,mBAAmB;;AAZL;IAAlC,WAAW,CAAC,QAAQ,UAAU,EAAE,CAAC;mDAAc;AAGhD;IADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;wDAMjC,CACH,AAmDA;AA7Ea;oBAAqB,oBADjC,SAAS,EAAE,/CChCC,kBAAkB,GAA/B,MAAa,kBAAkB;IAA/B;;IDiCa,qBAAqB,CA4EjC;;;QCxGW,uBAAkB,GAAa;YACvC,SAAS;YACT,QAAQ;YACR,YAAY;YACZ,OAAO;YACP,QAAQ;YACR,UAAU;SACX,CAAC;;;;;QAOQ,4BAAuB,GAAG,gCAAgC,CAAC;KA4DtE;IA1DC,KAAK,CAAC,IAAiB,EAAE,QAAgB;QACvC,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,EAAE,EAAE;YAChC,OAAO,EAAE,CAAC;SACX;QACD,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAA4B,CAC3D,CAAC;KACH;IAED,kBAAkB,CAChB,IAAiB,EACjB,SAA0B,EAAE,SAAS,EAAE,IAAI,EAAE;;QAE7C,MAAM,QAAQ,GACZ,cAAO,MAAM,0CAAE,SAAS,CAAA,KAAK,QAAQ,GAAG,MAAM,CAAC,SAAS,GAAG,aAAa,CAAC;;QAE3E,QACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC,EAChD;KACH;;;;;;;;;IAUD,aAAa,CACX,IAAiB,EACjB,MAAM,GAAG,KAAK,EACd,SAAS,GAAG,KAAK;QAEjB,IAAI,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC1C,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,uBAAuB,CAAC;SACnC;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3E,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,IACzC,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,CAC9C,CAAC;KACH;;;;;;;;;;;IAYS,QAAQ,CAAC,EAAe;QAChC,OAAO,EAAE,CAAC,YAAY,KAAK,IAAI,CAAC;KACjC;CACF;6GAAA;sLACqL,AAAtL;AAhFa;iBAAkB,oBAH9B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,xECIP,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,mBAAmB;GDH1D,CAAC,IACW,kBAAkB,CA+E9B,vBC5EC,YAAsB,eAAmC;QACvD,KAAK,EAAE,CAAC;QADY,oBAAe,GAAf,eAAe,CAAoB;KAExD;IAED,WAAW,CAAC,MAAyB;;QACnC,OAAO,CAAC,QAAC,MAAM,0CAAE,aAAa,CAAA,CAAC;KAChC;IAED,YAAY,CACV,IAAiB,EACjB,MAAyB,EACzB,KAAoB;;QAEpB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;YAC5B,IAAI,IAAI,KAAK,KAAK,CAAC,MAAM,EAAE;gBACzB,IAAI,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;gBACpC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;aACzB;iBAAM;gBACL,UAAI,MAAM,0CAAE,mBAAmB,EAAE;oBAC/B,MAAA,IAAI,CAAC,eAAe;yBACjB,kBAAkB,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,0CAC5C,KAAK,GAAG;iBACb;aACF;SACF;KACF;CACF;gJAAA;;YA3BwC,kBAAkB;;kNAYrD,AAgBN;AA7Ba;ACIb;aDJ+B,oBAH9B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM;CACnB,CAAC,IACW,kBAAkB,CA4B9B;;;;;AChBD,IAAa,oBAAoB,GAAjC,MAAa,oBAAqB,SAAQ,qBAAqB;IAqB7D,YACY,UAAsB,EACtB,OAA2B;QAErC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAoB;QArB7B,kBAAa,GAAsB,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;QAK3D,QAAG,GAAG,IAAI,YAAY,EAAW,CAAC;KAmB3C;;;;;IAZD,YAAY,CAAC,KAAoB;QAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KACtD;IASD,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;SAC5B;QACD,KAAK,CAAC,QAAQ,EAAE,CAAC;KAClB;CACF;;;;mFAAA;;YAZyB,UAAU;YACb,kBAAkB;;AAhB7B;IAAT,MAAM,EAAE;iDAAmC;AAO5C;IADC,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC;wDAM1C,CACH,AAeA;AAnCa;mBAAoB,oBADhC,SAAS,EAAE,9CCRC,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,kBAAkB;;ADS3C,oBAAoB,CAkChC;;ICvCC,kBAAkB,CAChB,IAAiB,EACjB,SAA0B,EAAE,SAAS,EAAE,IAAI,EAAE;;QAE7C,IAAI,OAAA,MAAM,0CAAE,SAAS,MAAK,OAAO,EAAE;YACjC,OAAO,IAAI,CAAC;SACb;aAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;YAC/C,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;SACxE;aAAM;YACL,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC;SACtE;KACF;;;;IAKD,iBAAiB,CAAC,IAAiB,EAAE,MAA0B;QAC7D,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;KAC1E;;;;;;;;IASS,YAAY,CAAC,IAAiB,EAAE,KAAc;QACtD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACpB,OAAO;SACR;QACD,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CACzB,IAAI,CAAC,gBAAgB,CACnB,IAAI,UAAU,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CACZ,CAC7B,CAAC;QACF,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KACjD;CACF;8HAAA;0MACyM,AAA1M;AA3Ca;ACNb;WDM6B,oBAH5B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC,IACW;;AAAgB,CA0C5B;;;;;;;;;;;;;;;;;AC3BD,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,oBAAoB;IAQ1D,YACY,UAAsB,EACtB,OAAyB;QAEnC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAkB;;QAP3B,kBAAa,GAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;KAU9D;;;;IAKD,eAAe;QACb,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACnD,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;;;;;IAMD,WAAW,CAAC,KAAqB;;QAC/B,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,QAAC,KAAK,0CAAE,MAAM,CAAA,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,EAAE;gBAChD,MAAA,IAAI,CAAC,cAAc,0CAAE,KAAK,GAAG;aAC9B;iBAAM;gBACJ,KAAK,CAAC,MAAsB,CAAC,KAAK,EAAE,CAAC;aACvC;SACF;QACD,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1B;;;;IAKD,IAAc,iBAAiB;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/D;;;;;IAMD,IAAc,eAAe;;QAC3B,OAAO,CAAC,QAAC,IAAI,CAAC,MAAM,0CAAE,SAAS,CAAA,CAAC;KACjC;;;;;;IAOD,IAAY,cAAc;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAChE;CACF;;gIAAA;;YAxDyB,UAAU;YACb,gBAAgB;EACnC,AAuDJ;AAlEa;iBAAkB,oBAD9B,SAAS,EAAE,5CClBC,eAAe,GAA5B,MAAa,eAAgB,SAAQ,gBAAgB;;EDmBxC,kBAAkB,CAiE9B;;IChFC,OAAO,CACL,IAAiB,EACjB,MAAsB,EACtB,SAAqB,EACrB,KAAoB;;QAEpB,UAAI,MAAM,0CAAE,GAAG,EAAE;YACf,MAAM,IAAI,GACR,MAAM,CAAC,GAAG,KAAK,QAAQ;kBACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;kBAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;YAE7C,MAAA,IAAI,0CAAE,KAAK,GAAG;YAEd,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;;;;;;IAOS,kBAAkB,CAC1B,IAAiB,EACjB,MAAsB,EACtB,SAAqB;;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;;QAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;;QAG1E,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CACpC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,CAC3D,CAAC;QAEF,IAAI,gBAAgB,GAAG,mBAAmB,GAAG,SAAS,CAAC;QACvD,IACE,SAAS;YACT,gBAAgB,IAAI,iBAAiB,EACrC;YACA,gBAAgB,GAAG,CAAC,CAAC;SACtB;QACD,IAAI,SAAS,sBAAwB,gBAAgB,GAAG,CAAC,EAAE;YACzD,gBAAgB,GAAG,iBAAiB,GAAG,CAAC,CAAC;SAC1C;QAED,MAAM,oBAAoB,SAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,0CAAE,IAAI,CAC/D,GAAG,IACD,GAAG,CAAC,UAAU;YACd,CAAC,IAAI,CAAC,WAAW,GAAG,iBAAiB,IAAI,gBAAgB,CAC5D,CAAC;QAEF,OAAO,oBAAoB,CAAC;KAC7B;IAES,QAAQ,CAChB,IAAiB,EACjB,MAAsB,EACtB,SAAqB;;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9C,IAAI,WAAW,SAAG,MAAM,0CAAE,SAAS,CACjC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAC7C,CAAC;QAEF,IAAI,CAAC,WAAW,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;YACtC,WAAW,GAAG,CAAC,CAAC;SACjB;QACD,WAAW,IAAI,SAAS,CAAC;QAEzB,IAAI,SAAS,qBAAwB,WAAW,WAAI,MAAM,0CAAE,MAAM,CAAA,EAAE;YAClE,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;SACjC;QACD,IAAI,SAAS,sBAAwB,WAAW,GAAG,CAAC,EAAE;YACpD,WAAW,GAAG,CAAC,CAAC;SACjB;QACD,OAAO,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;KACjD;;;;;IAMS,cAAc,CACtB,IAAiB,EACjB,MAAsB;;QAEtB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,QAAE,MAAM,0CAAE,KAAK,CAAC,CAAC;QACzD,IAAI,SAAS,EAAE;YACb,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,IAAI,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAC1B,KAAK,GAAG,CAAC,CAAC;SACX;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;KACxB;IAES,WAAW,CACnB,IAAiB,EACjB,MAAsB;QAEtB,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,IAAI,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;YAC7D,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;SACrD;aAAM;YACL,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACvC;KACF;;;;;;;;IASD,aAAa,CACX,IAAiB,EACjB,MAAM,GAAG,KAAK,EACd,SAAS,GAAG,KAAK;QAEjB,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;KACpE;IAES,QAAQ,CAAC,EAAe;QAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC;QACrC,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;QAE/B,QACE,EAAE,KAAK,KAAK;YACZ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,EAClE;KACH;CACF;0HAAA;sMACqM,AAAtM;AAlJa;ACFb;UDE4B,oBAH3B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM;AACnB,CAAC,IACW,eAAe,CAiJ3B;;;AC7ID,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,kBAAkB;IAqBvD,YACY,UAAsB,EACtB,OAAwB;QAElC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAiB;;QArB1B,kBAAa,GAAmB,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;;QAG9C,WAAM,GAAmB,EAAE,CAAC;KAqBrC;IAlBD,aAAa,CAAC,KAAoB;;QAChC,UAAI,IAAI,CAAC,MAAM,0CAAE,GAAG,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,gBAAmB,KAAK,CAAC,CAAC;SACtE;KACF;IAGD,iBAAiB,CAAC,KAAoB;;QACpC,UAAI,IAAI,CAAC,MAAM,0CAAE,GAAG,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,iBAAmB,KAAK,CAAC,CAAC;SACtE;KACF;CAQF;;;;0DAAA;;YALyB,UAAU;YACb,eAAe;;AAfpC;IADC,YAAY,CAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,CAAC;sDAK9C;AAGD;IADC,YAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;0DAK7C,CACH,AAQA;AA5Ba;gBAAiB,oBAD7B,SAAS,EAAE,3CCHC,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,eAAe;ODIxC;gBAAiB,CA2B7B;;;;ICzBC,oBAAoB,CAAC,IAAiB;QACpC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KAC5C;;;;;;IAOD,SAAS,CACP,IAAiB,EACjB,MAAuB,EACvB,SAAqB,EACrB,KAAc;QAEd,MAAM,SAAS,GAAkB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE1D,IAAI,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;QAErE,MAAM,eAAe,GACnB,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,SAAS,CAAC,MAAM;aACtC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC5C,KAAK,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAE9D,IAAI,eAAe,EAAE;YACnB,IAAI,KAAK,IAAI,SAAS,CAAC,MAAM,EAAE;gBAC7B,KAAK,GAAG,CAAC,CAAC;aACX;YACD,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;aAC9B;YAED,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,MAAM,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YAE5B,EAAE,CAAC,KAAK,EAAE,CAAC;SACZ;KACF;IAES,YAAY,CAAC,IAA+B;QACpD,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,OAAO,CAAC;KAC1C;IAES,UAAU,CAAC,IAA+B;QAClD,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC;KACxC;CACF;8HAAA;0MACyM,AAA1M;AAvDa;ACFb;WDE6B,oBAH5B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM;KACnB,CAAC,IACW,gBAAgB,CAsD5B;;ACnDD,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,iBAAiB;IAsBvD,YACY,UAAsB,EACtB,OAAyB;QAEnC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAHjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAkB;QAvB3B,kBAAa,GAAoB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;QAGhD,WAAM,GAAoB,EAAE,CAAC;QAIvC,mBAAc,GAAG,CAAC,KAAoB;YACpC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,KAAK,eAAkB,CAAC;aACxC;SACF,CAAC;QAIF,iBAAY,GAAG,CAAC,KAAoB;YAClC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,KAAK,gBAAkB,CAAC;aACxC;SACF,CAAC;KAOD;;;;;;;;;IAUS,SAAS,CAAC,KAAc,EAAE,SAAiB;QACnD,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChD,IAAI,CAAC,OAAO,CAAC,SAAS,CACpB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,SAAS,EACT,KAAgB,CACjB,CAAC;SACH;KACF;CACF;;;;0DAAA;;YAxByB,UAAU;YACb,gBAAgB;;AAhBrC;IAFC,YAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC7C,YAAY,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;0DAKtC;AAIF;IAFC,YAAY,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC3C,YAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;wDAK5C,CACJ,AA2BA;AAhDa;iBAAkB,oBAD9B,SAAS,EAAE,5CCHC,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,gBAAgB;CAAG;KDI5C,kBAAkB,CA+C9B,sGCnDwD;0MACiJ,AAA1M;AADa;ACSb;WDT6B,oBAH5B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC,IACW;cAAgB,CAA4B;;ACazD,MAAM,sBAAsB,GAAG,IAAI,CAAC;AACpC;;;;;AAMA,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,kBAAkB;IAgDxD,YACY,UAAsB,EACtB,OAAyB,EACzB,QAAmB;QAE7B,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAJjB,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAkB;QACzB,aAAQ,GAAR,QAAQ,CAAW;QAjDrB,kBAAa,GAAoB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;QAGhD,WAAM,GAAoB,EAAE,CAAC;;;;QAgB7B,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;KAiC9C;;;;;IAzBD,WAAW,CAAC,KAAoB;QAC9B,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,KAAM,KAAK,CAAC,MAAsB,EAAE;YAClE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;;;;;IAOD,WAAW,CAAC,KAAc;QACxB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAUS,SAAS;QACjB,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;KAChC;IAES,WAAW,CAAC,KAAe;;QACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;;QAE9B,IAAI,OAAA,KAAK,0CAAE,MAAM,MAAK,IAAI,CAAC,IAAI,EAAE;YAC/B,KAAK,CAAC,WAAW,CAAC,KAAsB,CAAC,CAAC;SAC3C;KACF;IAED,QAAQ;;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,UAAU,SAAG,IAAI,CAAC,MAAM,0CAAE,IAAI,CAAC;QAEpC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;;;YAIlB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;gBAC5C,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;aAC9B;;;;YAID,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;gBAChD,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,EAAE,OAAA,IAAI,CAAC,MAAM,0CAAE,aAAa,MAAK,KAAK,CAAC,CAAC;aACrE;SACF;KACF;IAED,eAAe;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;;;;;;YAMnB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE;;gBAE9C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,CAC7D,CAAC;aACH;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;QACD,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;IAED,WAAW,CAAC,KAAqB;;QAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE;;gBAE1C,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3C;iBAAM;gBACL,UAAU,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBACnC,MAAA,KAAK,0CAAE,eAAe,GAAG;gBACzB,OAAO;aACR;SACF;QACD,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1B;IAED,YAAY,CAAC,KAAoB;QAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvC;QACD,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC3B;;;;;;;;IASO,0BAA0B,CAAC,KAAqB;QACtD,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACzE;;;;IAKS,qBAAqB,CAAC,CAAC,GAAG,CAAC;QACnC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,oBAAoB,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IACvB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CACzD,CAAC;aACH;SACF;KACF;;;;;;IAOD,IAAY,oBAAoB;QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD;;;;;;;;IASD,IAAY,SAAS;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAC/B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,UAAU,EACf,sBAAsB,CACvB,CAAC;KACH;CACF;;;;;;yFAAA;;YApIyB,UAAU;YACb,gBAAgB;YACf,SAAS;;AAxCE;IAAhC,WAAW,CAAC,kBAAkB,CAAC;sDAAqB;AAKrD;IADC,WAAW,CAAC,iBAAiB,CAAC;oDACb;AAKR;IAAT,MAAM,EAAE;kDAAsC;AAQ/C;IAFC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;IACzC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;qDAMzC;AAOD;IADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;qDAMjC,CACH,AAuIA;AAtLa;iBAAkB,oBAD9B,SAAS,EAAE,5CCnBC,oBAAoB,GAAjC,MAAa,oBAAqB,SAAQ,gBAAgB;ADoB7C,CCpBgD;eDoB9B,CAqL9B,8HCzM4D;0NAC6J,AAA1N;AADa;mBAAoB,oBAHhC,UAAU,CAAC,UACV,UAAU,lECIC,cAAc,GAA3B,MAAa,cAAe,SAAQ,kBAAkB;CDJxC,MAAM,OACnB,CAAC,IACW,oBAAoB,CAA4B,pCCO3D,YACY,UAAsB,EACtB,OAA6B,EAC7B,QAAmB;QAE7B,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAJ3B,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAsB;QAC7B,aAAQ,GAAR,QAAQ,CAAW;QAPrB,kBAAa,GAAgB,EAAE,CAAC;;QAEd,WAAM,GAAgB,EAAE,CAAC;KAQpD;CACF;;qMAAA;;YANyB,UAAU;YACb,oBAAoB;YACnB,SAAS;;AALb;IAAjB,KAAK,CAAC,SAAS,CAAC;8CAAoC,CACvD,AASA;AAba;aAAc,bCJ3B,MAAM,UAAU,GAAG;YDClB,SAAS,CAAC;EACT,QAAQ,EAAE,WAAW;AACtB,CAAC,IACW,cAAc,CAY1B;;;;;;ICPC,cAAc;CACf,CAAC;AAOF,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;;EAAA,CAAtB,mBAAmB,oBAL/B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,YAAY,EAAE,CAAC,GAAG,UAAU,CAAC,UAC7B,OAAO,EAAE,CAAC,GAAG,UAAU,CAAC,OACzB,CAAC,IACW,QACb;;SADgC,CAAG,NCMtB,aAAa,GAA1B,MAAa,aAAa;IAwDxB;QAvDA,cAAS,GAAG,SAAS,CAAC;QAGtB,eAAU,GAAyB,IAAI,YAAY,EAAE,CAAC;QAEtD,mBAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;QAE1D,aAAQ,GAAyB,IAAI,YAAY,EAAE,CAAC;QAEpD,aAAQ,GAAyB,IAAI,YAAY,EAAE,CAAC;QAEpD,eAAU,GAAyB,IAAI,YAAY,EAAE,CAAC;QAGtD,WAAM,GAAG,KAAK,CAAC;QAGf,aAAQ,GAAG,KAAK,CAAC;QAGjB,cAAS,GAAG,KAAK,CAAC;QAKlB,mBAAc,GAAG,KAAK,CAAC;KA8BP;;IA1BhB,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC7B;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;IAID,QAAQ,MAAK;CACd;;;;;;oLAAA;AAvDC;IADC,MAAM,EAAE;iDAC6C;AAEtD;IADC,MAAM,EAAE;qDACiD;AAE1D;IADC,MAAM,EAAE;+CAC2C;AAEpD;IADC,MAAM,EAAE;+CAC2C;AAEpD;IADC,MAAM,EAAE;iDAC6C;AAGtD;IADC,KAAK,EAAE;6CACO;AAGf;IADC,KAAK,EAAE;+CACS;AAGjB;IADC,KAAK,EAAE;gDACU;AAGlB;IADC,KAAK,EAAE;8CACM;AAEd;IADC,KAAK,EAAE;qDACe,CACzB,AAiCA;AA5Da;YAAa,oBAJzB,5BCZY,UAAU,GAAvB,MAAa,UAAU;CAAG;EDYhB,CAAC,UACT,QAAQ,EAAE,SAAS,UACnB;ECdwB,CAAb,UAAU,oBALtB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,UAC/C,YAAY,EAAE,CAAC,aAAa,CAAC,UAC7B,OAAO,EAAE,CAAC,aAAa,CAAC,EAG1B;;GAFC,CAAC,IACW,UAAU,CAAG,fCHb,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;KAAI;;;;;;;;;;;;IAazC,gBAAgB,CACd,aAA0B,EAC1B,SAAiB;QAEjB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAC7B,GAAG,CAAC,MAAO,aAA6B,CAAC,WAAW,CAAC,EACrD,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAC9D,CAAC;KACH;;;;;;;;IASO,cAAc,CAAC,cAAsB,EAAE,SAAiB;QAC9D,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC5B,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACzD,eAAe,GAAG,cAAc,GAAiB,GAAI,CAAC;SACvD;QAED,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC3B,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC1D,eAAe;gBACb,cAAc,IAAI,cAAc,IAAkB,IAAK,GAAG,GAAG,CAAC,CAAC,CAAC;SACnE;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KACzC;CACF;qIAAA;;YA7C6B,SAAS;;6LAKe,AAyCtD;AA/Ca;ACMb;UDN4B,oBAH3B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,OACnB;AAAC,IACW,eAAe,CA8C3B;;;;;;;;;;;;;ACpBD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IA6C5B,YAAsB,EAAc,EAAY,OAAwB;QAAlD,OAAE,GAAF,EAAE,CAAY;QAAY,YAAO,GAAP,OAAO,CAAiB;;;0CHtDpC,MACrC,CAAC,IACW,aAAa,CA2DzB;;;;;QGrBU,cAAS,GAAG,OAAO,CAAC;;;;QAKpB,mBAAc,GAAG,KAAK,CAAC;QAEvB,kBAAa,GAAG,SAAS,CAAC,MAAM,CAAC;QACjC,iBAAY,GAAG,SAAS,CAAC,UAAU,CAAC;QACpC,aAAQ,GAAG,SAAS,CAAC,WAAW,CAAC;KAKkC;IAjC5E,IAAI,QAAQ,CAAC,UAA6B;QACxC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;;QAExB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;KACtB;IA+BD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE,EAAE;YACjC,OAAO,CAAC,KAAK,CACX,mFAAmF,CACpF,CAAC;YACF,OAAO;SACR;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO;aACtB,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC;aACvD,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5C;CACF;;;;;;;iMAAA;;YAb2B,UAAU;YAAqB,eAAe;;AAzC/D;IAAR,KAAK,EAAE;gDAAe;AAQvB;IADC,KAAK,CAAC,OAAO,CAAC;iDAKd;AAMQ;IAAR,KAAK,EAAE;mDAA4B;AAS3B;IAAR,KAAK,EAAE;oDAAqB;AAKpB;IAAR,KAAK,EAAE;yDAAwB;AAEvB;IAAR,KAAK,EAAE;wDAAkC;AACjC;IAAR,KAAK,EAAE;uDAAqC;AACpC;IAAR,KAAK,EAAE;mDAAkC,CAC5C,AAkBA;AA3Da;gBAAiB,oBAL7B,SAAS,CAAC,UACT,QAAQ,EAAE,lECxBZ;UDwByB,UACvB,pBCxBF,MAAM,oBAAoB,GAAG,QAAQ,CAAC;AAKtC,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB,YACY,MAAiB,EACjB,iBAAoC;QADpC,WAAM,GAAN,MAAM,CAAW;QACjB,sBAAiB,GAAjB,iBAAiB,CAAmB;KAC5C;IAEJ,IAAY,YAAY;QACtB,OAAO;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;aACzD;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;aACzD;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;aACzD;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;aACzD;SACF,CAAC;KACH;IAED,QAAQ,CAAC,SAAS,EAAE,MAAe,EAAE,GAAY;QAC/C,OAAO;YACL,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;YACzC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YACjC,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;SAC3C,CAAC;KACH;IAEO,YAAY,CAAC,KAAK,EAAE,MAAe;QACzC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,oBAAoB,CAAC,EAAE;YAClD,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,IAAI,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC;SACpE;aAAM,IAAI,KAAK,IAAI,KAAK,CAAC,GAAG,EAAE;YAC7B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACpC;aAAM,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC,EAAE;YAChE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC3E;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;;IAKO,yBAAyB,CAAC,KAAK;QACrC,IAAI,KAAK,EAAE;YACT,IAAI,WAAyB,CAAC;YAE9B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM;gBAC9B,IACE,CAAC,WAAW;IDrCoB,UACxC,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,nDCmCF,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAChE;CDpCoB,CA0D7B,kBCrBS,WAAW,GAAG,MAAM,CAAC;iBACtB;aACF,CAAC,CAAC;YAEH,OAAO,WAAW,CAAC,IAAI,CAAC;SACzB;QAED,OAAO,IAAI,CAAC;KACb;IAEO,MAAM,CAAC,KAAK,EAAE,MAAe;QACnC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,SAAS,CAAC;SAClB;aAAM,IAAI,KAAK,CAAC,MAAM,IAAI,oBAAoB,CAAC,EAAE;YAChD,OAAO,KAAK,CAAC,MAAM,IAAI,oBAAoB,CAAC,CAAC,OAAO,CAAC;SACtD;aAAM,IAAI,KAAK,CAAC,OAAO,EAAE;YACxB,OAAO,KAAK,CAAC,OAAO,CAAC;SACtB;KACF;;;;IAKO,SAAS,CAAC,KAAK;QACrB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM;YAClD,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,GAAG,EAAE;oBACP,GAAG,IAAI,IAAI,CAAC;iBACb;gBACD,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAChD,MAAM,CAAC,SACT,GAAG,CAAC;aACL;YACD,OAAO,GAAG,CAAC;SACZ,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,MAAM,KAAK,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC;KAC3C;IAEO,WAAW,CAAC,GAAW;QAC7B,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,IAAI,CAAC;SACb;QACD,OAAO,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC;KAC/D;IAEO,UAAU;QAChB,QACE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,EAAE,EAC1E;KACH;CACF;gKAAA;;YA/GqB,SAAS;YACE,iBAAiB;;8MAW9C,AAoGJ;AAlHa;WAAY,oBAHxB,UAAU,CAAC,tCCQC,cAAc,GAA3B,MAAa,cAAc;QDPzB,UAAU,EAAE,MAAM,tBC0DlB,YAAsB,YAA0B;CDzDjD,CAAC,IACW,YAAY,CAiHxB,XCzDuB,iBAAY,GAAZ,YAAY,CAAc;;;;QA5BtC,WAAM,GAA0B,IAAI,YAAY,EAAW,CAAC;;;;;QAYjC,kBAAa,GAAG,KAAK,CAAC;;;;;;QAO1B,cAAS,GAAG,IAAI,CAAC;;;;;;QAOjB,cAAS,GAAG,KAAK,CAAC;KAEC;IAEpD,WAAW;QACT,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;;;;IAKO,MAAM;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CACrC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,GAAG,CACT,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;;;;IAKD,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;;;;;IAMD,YAAY;QACV,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEO,aAAa;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;CACF;;;;;;;;4EAAA;;YA5CqC,YAAY;;AA5CvC;IAAR,KAAK,EAAE;iDAAgB;AAKf;IAAR,KAAK,EAAE;8CAAgB;AAMf;IAAR,KAAK,EAAE;2CAAa;AAKX;IAAT,MAAM,EAAE;8CAA6D;AAYjC;IAApC,WAAW,CAAC,sBAAsB,CAAC;qDAAuB;AAO1B;IAAhC,WAAW,CAAC,kBAAkB,CAAC;iDAAkB;AAOjB;IAAhC,WAAW,CAAC,kBAAkB,CAAC;iDAAmB,CACrD,AA8CA;AAhGa;aAAc,oBAL1B,7BCHY,WAAW,GAAxB,MAAa,WAAW;CAAG;CDGjB,CAAC,UACT,QAAQ,EAAE,UAAU,UACpB;ECLyB,CAAd,WAAW,oBALvB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,YAAY,EAAE,CAAC,cAAc,CAAC,UAC9B,OAAO,EAAE,CAAC,cAAc,CAAC,EAG3B;;cDIuC,UACrC,eAAe,EAAE,tCCPlB,CAAC,IACW,WAAW,CAAG,hBCId,cAAc,GAA3B,MAAa,cAAc;CAAG;iBFEY,CAAC,MAAM,MAChD,CAAC,IACW,cAAc,CA+F1B;EEnG6B,CAAjB,cAAc,oBAL1B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,UACzE,YAAY,EAAE,CAAC,iBAAiB,CAAC,UACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC,EAG9B;;GAFC,HCAD;ADAE,IACW,cAAc,CAAG;;;;ACY9B,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAAjC;;;;;QAWW,QAAG,GAAG,CAAC,CAAC;;;;;;QAYR,SAAI,GAAG,CAAC,CAAC;;;;;;QAOT,cAAS,GAAG,KAAK,CAAC;;;;;;;QAUa,aAAQ,GAAG,KAAK,CAAC;KAqD1D;IAjDwB,WAAW;QAChC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KAClC;IAED,SAAS;;;QAGP,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAC5B;IAED,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAC5B;;;;;IAMD,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAC7C,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAC7B,GAAG,CAAC,KAAK,IACP,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CACvE,EACD,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CACxB,CAAC;SACH;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;IASO,aAAa,CAAC,KAAa;QACjC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;YACxD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;SAClB;QACD,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE;YAChC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;SAClB;QACD,OAAO,KAAK,CAAC;KACd;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oLAAA;AAxFU;IAAR,KAAK,EAAE;qDAAsB;AAMrB;IAAR,KAAK,EAAE;iDAAS;AAKR;IAAR,KAAK,EAAE;iDAAa;AAOZ;IAAR,KAAK,EAAE;kDAAU;AAOT;IAAR,KAAK,EAAE;uDAAmB;AAUa;IAAvC,WAAW,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE;sDAAkB;AAEvC;IAAjB,SAAS,CAAC,KAAK,CAAC;mDAA6C;AAEvC;IAAtB,YAAY,CAAC,OAAO,CAAC;uDAErB,CACH,AA+CA;AA9Fa;mBAAoB,oBARhC,SAAS,CAAC,7CCPE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDQ/B,QAAQ,EAAE,iBAAiB,UAC3B;ECT+B,CAApB,iBAAiB,oBAL7B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC,UAC5C,YAAY,EAAE,CAAC,oBAAoB,CAAC,UACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC,EAGjC;;GAFC,HCPD;ADOE,IACW,iBAAiB,CAAG;;ACDjC,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;KFUa,MAK7C,CAAC,IACW,ZEhBb;gBFgBiC,CA6FhC,TE5GkB,kBAAa,GAAW,eAAe,CAAC;KA2B1D;IAlBC,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC;KACrD;IAED,IAAI,SAAS;QACX,IAAI,OAAO,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACxC;QACD,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;IAED,aAAa;QACX,OAAO,OAAO,IAAI,CAAC,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1E;IAEO,cAAc,CAAC,GAAW;QAChC,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;KACxD;CACF;;;;;;;;;;4GAAA;AAzBU;IAAR,KAAK,EAAE;iDAAqB;AACpB;IAAR,KAAK,EAAE;oDAAgB;AACf;IAAR,KAAK,EAAE;mDAAe;AACd;IAAR,KAAK,EAAE;gDAAY;AACX;IAAR,KAAK,EAAE;mDAAe;AACd;IAAR,KAAK,EAAE;mDAAe,CACzB,AAoBA;AA7Ba;mBAAoB,oBAJhC,SAAS,CAAC,7CCKE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDJ/B,QAAQ,EAAE,iBAAiB,UAC3B;ECG+B,CAApB,iBAAiB,oBAL7B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,UACrC,YAAY,EAAE,CAAC,oBAAoB,CAAC,UACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC,EAGjC;;GAFC,CAAC,IACW,iBAAiB,CAAG,pBCRpB,uBAAuB,GAAqB;IACvD,UAAU,EAAE;QACV,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;CACF;;MCLqB,gBAAgB;CAErC;;ACOD;;;;AAIA,IAAY,kBASX;AATD,WAAY,kBAAkB;IAC5B,iCAAW,CAAA;IACX,qCAAe,CAAA;IACf,mCAAa,CAAA;IACb,2CAAqB,CAAA;IACrB,mCAAa,CAAA;IACb,qCAAe,CAAA;sBJd6B,MAC7C,CAAC,IACW,7BIaX,iCAAW,CAAA;cJboB,CA4BhC,XIdC,mCAAa,CAAA;AACf,CAAC,EATW,kBAAkB,KAAlB,kBAAkB,QAS7B;AAmED,IAAY,4BAIX;AAJD,WAAY,4BAA4B;IACtC,+CAAe,CAAA;IACf,iDAAiB,CAAA;IACjB,+CAAe,CAAA;AACjB,CAAC,EAJW,4BAA4B,KAA5B,4BAA4B,QAIvC;;ACtFD,MAAM,2BAA2B,GAAsB;IACrD,UAAU,EAAE,CAAC;IACb,SAAS,EAAE,KAAK;IAChB,UAAU,EAAE,GAAG;IACf,aAAa,EAAE,GAAG;IAClB,SAAS,EAAE,GAAG;IACd,QAAQ,EAAE,GAAG;CACd,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YAAsB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAI;;;;;;;;;;;IAY5D,QAAQ,CAAC,SAAiB,EAAE,OAAe;QACzC,MAAM,KAAK,GAAqB,EAAE,CAAC;QACnC,IAAI,SAAS,GAAG,CAAC,EAAE;YACjB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAE9C,OAAO,KAAK,CAAC;KACd;;;;;;;;;IAUS,QAAQ,CAChB,KAAuB,EACvB,SAAiB,EACjB,OAAe;QAEf,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAExD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;YAClC,KAAK,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,CAAC,GAAG,KAAK;gBACjB,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;gBAC5B,IAAI,EAAE,kBAAkB,CAAC,IAAI;aAC9B,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;;;;;;;;IAUS,OAAO,CAAC,KAAuB,EAAE,SAAiB;QAC1D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACxB,OAAO;SACR;QAED,MAAM,WAAW,GAAG;YAClB,MAAM,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACxC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YAC/C,IAAI,eAAe,GAAG,SAAS,EAAE;gBAC/B,MAAM,KAAK,GACT,CAAC,IAAI,CAAC,MAAM,CAAC,6BAA6B;oBAC1C,eAAe,KAAK,SAAS,GAAG,CAAC,CAAC;gBACpC,MAAM,YAAY,GAChB,IAAI,CAAC,MAAM,CAAC,QAAQ;oBACpB,IAAI,CAAC,MAAM,CAAC,6BAA6B;oBACzC,SAAS,KAAK,CAAC,CAAC;gBAClB,MAAM,IAAI,GAAG,KAAK;sBACd,kBAAkB,CAAC,GAAG;sBACtB,YAAY;0BACZ,kBAAkB,CAAC,KAAK;0BACxB,kBAAkB,CAAC,IAAI,CAAC;gBAC5B,OAAO;oBACL,MAAM,CAAC,MAAM,CACX;wBACE,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;wBAC5D,IAAI;qBACL,EACD,KAAK,GAAG,IAAI,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,CACrC;iBACF,CAAC;aACH;;gBAAM,OAAO,EAAE,CAAC;SAClB,CAAC;QAEF,MAAM,UAAU,GAAG;YACjB,MAAM,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YAC1D,MAAM,IAAI,GAAG,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACvD,IAAI,cAAc,IAAI,IAAI,EAAE;gBAC1B,MAAM,YAAY,GAChB,IAAI,CAAC,MAAM,CAAC,OAAO;oBACnB,IAAI,CAAC,MAAM,CAAC,6BAA6B;oBACzC,cAAc,KAAK,IAAI,CAAC;gBAC1B,MAAM,KAAK,GACT,cAAc;oBACd,SAAS;yBACN,IAAI,CAAC,MAAM,CAAC,6BAA6B,GAAG,CAAC,GAAG,CAAC,CAAC;yBAClD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAElC,MAAM,IAAI,GAAG,KAAK;sBACd,kBAAkB,CAAC,GAAG;sBACtB,YAAY;0BACZ,kBAAkB,CAAC,IAAI;0BACvB,kBAAkB,CAAC,IAAI,CAAC;gBAC5B,OAAO;oBACL,MAAM,CAAC,MAAM,CACX;wBACE,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;wBACjE,IAAI;qBACL,EACD,KAAK,GAAG,IAAI,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE,CAC1C;iBACF,CAAC;aACH;;gBAAM,OAAO,EAAE,CAAC;SAClB,CAAC;QAEF,KAAK,CAAC,OAAO,CAAC,GAAG,WAAW,EAAE,CAAC,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC;KAC7B;;;;;;;;IASS,YAAY,CAAC,KAAuB,EAAE,SAAiB;QAC/D,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACjD,KAAK,CAAC,OAAO,CAAC;gBACZ,MAAM,EAAE,CAAC;gBACT,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,kBAAkB,CAAC,KAAK;aAC/B,CAAC,CAAC;SACJ;QACD,IACE,IAAI,CAAC,MAAM,CAAC,OAAO;YACnB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,EAChD;YACA,KAAK,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,SAAS,GAAG,CAAC;gBACrB,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC;gBACxB,IAAI,EAAE,kBAAkB,CAAC,IAAI;aAC9B,CAAC,CAAC;SACJ;KACF;;;;;;;;;;;;;;;;IAiBS,aAAa,CACrB,KAAuB,EACvB,SAAiB,EACjB,OAAe;QAEf,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC3C,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,4BAA4B,CAAC,KAAK,EAAE;YACtD,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC;YACzB,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;SACtB;aAAM;YACL,IAAI,GAAG,KAAK,4BAA4B,CAAC,MAAM,EAAE;gBAC/C,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC;aACpC;YACD,IAAI,GAAG,KAAK,4BAA4B,CAAC,KAAK,EAAE;gBAC9C,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC;aACjC;SACF;KACF;;;;IAKO,cAAc,CAAC,OAAe;QACpC,MAAM,IAAI,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACxB,MAAM,KAAK,GAAG;gBACZ,OAAO,MAAM,CAAC,MAAM,CAClB;oBACE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBAC7B,IAAI,EAAE,kBAAkB,CAAC,KAAK;iBAC/B,EACD,OAAO,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CACnC,CAAC;aACH,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC3B,MAAM,QAAQ,GAAG;gBACf,OAAO,MAAM,CAAC,MAAM,CAClB;oBACE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;oBAChC,IAAI,EAAE,kBAAkB,CAAC,QAAQ;iBAClC,EACD,OAAO,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CAC7C,CAAC;aACH,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACvB;QACD,OAAO,IAAI,CAAC;KACb;;;;IAKO,QAAQ,CAAC,SAAiB,EAAE,OAAe;QACjD,MAAM,IAAI,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACvB,MAAM,IAAI,GAAG;gBACX,OAAO,MAAM,CAAC,MAAM,CAClB;oBACE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBAC5B,IAAI,EAAE,kBAAkB,CAAC,IAAI;iBAC9B,EACD,OAAO,GAAG,SAAS,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,IAAI,CACzD,CAAC;aACH,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;SACnB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACtB,MAAM,GAAG,GAAG;gBACV,OAAO,MAAM,CAAC,MAAM,CAClB;oBACE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;oBAC3B,IAAI,EAAE,kBAAkB,CAAC,GAAG;iBAC7B,EACD,OAAO,GAAG,SAAS,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS,GAAG,CAAC,EAAE,GAAG,IAAI,CAC3D,CAAC;aACH,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAClB;QAED,OAAO,IAAI,CAAC;KACb;;;;;;;;;IASO,eAAe,CAAC,SAAiB,EAAE,OAAe;QACxD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;;QAEzC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;QAGpC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,CAAC;;QAE9C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;;QAGpD,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;KACrC;IAED,IAAY,MAAM;QAChB,OAAO,MAAM,CAAC,MAAM,CAClB,2BAA2B,EAC3B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CACjC,CAAC;KACH;CACF;2IAAA;;YA3RyC,gBAAgB;;4MAK9B,AAuR5B;AA7Ra;ACjCb;YDiC8B,oBAH7B,UAAU,CAAC,UACV,UAAU,EAAE;EAAM,OACnB,CAAC,IACW,iBAAiB,CA4R7B;;;ACnTD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IA0B9B,YACU,iBAAoC,EACpC,cAA8B;QAD9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QAN9B,kBAAa,GAAyB,IAAI,YAAY,EAAU,CAAC;QAE3E,UAAK,GAAqB,EAAE,CAAC;KAKzB;IAfJ,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IACQ,IAAI,UAAU,CAAC,KAAsB;QAC5C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACpB;IAWO,MAAM,CAAC,UAA2B;QACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC1C,UAAU,CAAC,UAAU,EACrB,UAAU,CAAC,WAAW,CACvB,CAAC;KACH;;;;;;;IAQD,SAAS,CAAC,IAAoB;QAC5B,QACE,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,IAAI;YACrC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAC3C;KACH;;;;;;;;;;IAWD,UAAU,CAAC,IAAoB;QAC7B,QACE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,WAAW,EAC3C;KACH;IAED,cAAc,CAAC,IAAoB;QACjC,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAC/B,EAAE,EACF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CACzC,CAAC;QACF,IACE,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;YACxC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACrB;YACA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;SAC5C;;;QAGD,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;YACrD,OAAO,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACrC;QACD,OAAO,WAAW,CAAC;KACpB;IAED,UAAU,CAAC,IAAoB;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACtC;CACF;;;;;;0GAAA;;YA/D8B,iBAAiB;YACpB,cAAc;;AA1B/B;IAAR,KAAK,EAAE;sDAAmB;AAGlB;IAAR,KAAK,EAAE;uDAAoB;AAMnB;IAAR,KAAK,EAAE;wDAAa;AAMZ;IAAR,KAAK,EAAE;qDAGP;AAES;IAAT,MAAM,EAAE;0DAAkE,CAC7E,AAoEA;AA3Fa;kBAAmB,oBAL/B,SAAS,3CCDG,gBAAgB,GAA7B,MAAa,gBAAgB;ADClB,CCDqB;ODE9B,QAAQ,EAAE,eAAe,UACzB;;;;4BAA0C,UAC1C,pCCJ8B,CAAnB,gBAAgB,oBAT5B,QAAQ,CAAC,EAUV;;CDGiB,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,tCCdX,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,vCCM1B,gBAAgB,GAA7B,MAAa,gBAAgB;eFQG,CA0F/B,XCvGC,SAAS,EAAE,ZCkBX;UDjBE,oBAAoB,CAAC,vBCkBrB,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAU,CAAC;KDlBJ,ACmB7C;ADnB8C,cAC7C,EAAE,OAAO,nBCoBX,QAAQ,CAAC,QAAgB;ADpBZ,gBAAgB,EAAE,WAAW,EAAE,MAAM,EAAE,/BCqBlD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnC;CDrBA,ACsBF;QDrBC,YAAY,EAAE,CAAC,mBAAmB,CAAC,UACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC,OAC/B,CAAC,IACW;OAAgB,CAAG;;;;;;;;;;4JCkB/B;AAlBC;IADC,KAAK,EAAE;qDACiB;AAEzB;IADC,KAAK,EAAE;wDACe;AAEvB;IADC,KAAK,EAAE;qDACY;AAEpB;IADC,KAAK,EAAE;oDAC+B;AAGvC;IADC,MAAM,EAAE;uDAC2B,CACtC,AASA;AArBa;eAAgB,oBAL5B,SAAS,CAAC,UACT,nDCEW,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;IDF1B,EAAE,YAAY,UACtB;ECCkC,CAAvB,oBAAoB,oBALhC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,WAAW,EAAE,gBAAgB,CAAC,UACtE,YAAY,EAAE,CAAC,gBAAgB,CAAC,UAChC,OAAO,EAAE,CAAC,gBAAgB,EAAE,eAG9B;;qEDFyC,UACvC,7ECF+C,CAAC,OACjD,CAAC,IACW,oBAAoB,CAAG,pCCVpC;EFUiB,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,7CENb,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;aFMA,CAoB5B,VEzBC,iBAAgB;CACjB;;;;;;;;;;;;EAAA,CAFY,gBAAgB,oBAJ5B,SAAS,CAAC,UACT,CAMF;;KANU,EAAE,YAAY,UACtB,zBCKW,aAAa,GAA1B,MAAa,aAAa;CAAG;;oCDLY,MACxC,CAAC,IACW,gBAAgB,CAE5B,9DCC4B,CAAhB,aAAa,oBALzB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,UACnC,YAAY,EAAE,CAAC,gBAAgB,CAAC,UAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC,EAG7B;;GAFC,CAAC,IACW,aAAa,CAAG,lBCEhB,sBAAsB,GAAnC,MAAa,sBAAsB;IAMjC,YAAsB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QALhE,cAAS,GAAG,SAAS,CAAC;QAGtB,gBAAW,GAA6B,iBAAiB,CAAC;KAEU;IAEpE,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC;KAClD;IAED,KAAK,CAAC,IAAuB,EAAE,KAAa;QAC1C,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC/C;CACF;;;;;;;wIAAA;;YAT6C,oBAAoB;EAClE,AASA;AAhBa;qBAAsB,oBAJlC,SAAS,CAAC,UACT,QAAQ,EAAE,nECEC,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;eDFb,UAC7B;ECC0C,CAA/B,4BAA4B,oBALxC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,UAAU,EAAE,UAAU,CAAC,UACjE,YAAY,EAAE,CAAC,sBAAsB,CAAC,UACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC,OAClC,CAAC,IACW,QACb;;kBADyC,CAAG,bCZtB,eAAe;CAIpC;;ICKY,sBAAsB,GAAnC,MAAa,sBAAsB;IAGjC,YAAoB,MAAiB,EAAU,MAAuB;QAAlD,WAAM,GAAN,MAAM,CAAW;QAAU,WAAM,GAAN,MAAM,CAAiB;QAF9D,qBAAgB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAG7D,IACE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YACjC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,qBAAqB,EAAE,EAC5B;YACA,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAEO,UAAU;QAChB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,IAC9D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CACjC,CAAC;KACH;IAEO,KAAK;QACX,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACrE,eAAe,CAAC,IAAI,GAAG,iBAAiB,CAAC;QACzC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC;QAC7B,eAAe,CAAC,GAAG,GAAG,gCAAgC,CAAC;QAEvD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3D,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;QAE9C,IAAI,CAAC,MAAM,CAAC,QAAQ;aACjB,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC/B,WAAW,CAAC,eAAe,CAAC,CAAC;QAEhC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC5E;IAEO,qBAAqB;QAC3B,QACE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,EAC1E;KACH;IAED,IAAI;QACF,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAC/B,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,EACxB,SAAS,CAAC,CAAC;YACT,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAC7B,oBAAoB,EAAE,EACtB,GAAG,CAAC,UAAU;gBACZ,IAAI,UAAU,EAAE;oBACd,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;oBACjB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;iBACpC;aACF,CAAC,CACH,CAAC;SACH,CAAC,CACH,CAAC;CHvD0C,IGwD7C;CHvDF,CAAC,IACW;oBAAsB,CAelC;;;;IG8CW,YAAY;QACpB,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;CACF;4LAAA;;YAjE6B,SAAS;YAAkB,eAAe;;oPAY/C,AAsDzB;AArEa;qBAAsB,oBAHlC,UAAU,/CCGE,kBAAkB,GAA/B,MAAa,kBAAkB;ADHnB,UACV,UAAU,EAAE,MAAM,xBCKlB,YAAoB,eAAuC;ADJ5D,CAAC,IACW,sBAAsB,CAoElC,pBCjEqB,oBAAe,GAAf,eAAe,CAAwB;QAF3D,sBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;KAEe;CAChE;;;;;;;mFAAA;;YADsC,sBAAsB;EAC7D,AACA;AALa;iBAAkB,XCPlB,sBAAsB,GAAoB;IDCtD,SAAS,CAAC,VCAT,SAAS,EAAE,EAAE;CACd;;CDAC,QAAQ,EAAE,cAAc,UACxB,QAAQ,EAAE,zCEuBC,eAAe,GAA5B,MAAa,eAAe;CAAG;qEFrB5B;AACF,CAAC,IACW,kBAAkB,CAI9B;;;;;;;;;;;;;EEe8B,CAAlB,eAAe,oBApB3B,QAAQ,CAAC,OAqBV;;CApBE,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC,UACzC,YAAY,5DCAD,yBAAyB,GAAtC,MAAa,yBAAyB;ADAtB,CAAC,ACAwB;gBDAN,CAAC,UAClC,eAAe,EAAE,CAAC,kBAAkB,CAAC,UACrC,SAAS,EAAE,cACT,oBAAoB,CAAY;OAC9B,aAAa,EAAE,sBACb,kBAAkB,EAAE,0BAClB,SAAS,EAAE,kBAAkB,uBAC9B,mBACF,eACF,CAAC,cACF,oBAAoB,CAAC,sBAAsB,CAAC,cAE5C,kBACE,OAAO,EAAE,eAAe;UACxB,WAAW,EAAE,MAAM,eACpB,WACF;EACF,CAAC,IACW,eAAe,CAAG;EClBU,CAA5B,yBAAyB,oBARrC,SAAS,CAAC,UACT,QAAQ,EAAE,+BAA+B,QAQ3C;;AAPE,QAAQ,EAAE,VCSZ,MAAM,MAAM,GAAG;IACb,CAAC,mBAAmB,GAAG,UAAU;IACjC,CAAC,mBAAmB,GAAG,UAAU;CAClC,CAAC;AAGF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CDZrC,UACD,eAAe,EAAE,uBAAuB,CAAC,MAAM,tDCY/C,YAEY,aAAgE,EAClE,iBAAoC,EAClC,QAAkB;EDf/B,CAAC,IACW,yBAAyB,CAAG,zBCY3B,kBAAa,GAAb,aAAa,CAAmD;QAClE,sBAAiB,GAAjB,iBAAiB,CAAmB;QAClC,aAAQ,GAAR,QAAQ,CAAU;KAC1B;IAEJ,QAAQ,CAAC,OAAyB;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,SAAS,CAAC,CAAC,OAAyB,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAC1D,SAAS,CAAC,KAAK,IACb,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAC3B,SAAS,CAAC,GAAG;YACX,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACxB,SAAS,CAAC,IAAI,iCACT,IAAI,KACP,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,IACrC,CAAC;aACJ;YACD,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;SACtB,CAAC,CACH,CACF,CACF,CAAC;KACH;IAED,aAAa,CAAC,OAAyB;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,SAAS,CAAC,CAAC,OAAyB,KAAK,OAAO,CAAC,SAAS,EAAE,CAAC,CAC9D,CAAC;KACH;IAED,QAAQ,CAAC,OAAyB;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,GAAG,CAAC,GAAG;YACL,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;SACpB,CAAC,CACH,CAAC;KACH;IAED,SAAS,CAAC,KAAa,EAAE,OAAyB;QAChD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;aACrB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,OAAO;YAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC1B,CAAC,CAAC;KACN;IAES,UAAU,CAClB,OAAyB;QAEzB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,GAAG,CAAC,CAAC,GAAW,KAAK,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,EAClD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjB,CAAC;KACH;IAES,UAAU,CAAC,OAAyB;QAC5C,IAAI,OAAO,EAAE;YACX,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC7B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAClC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,EACzB,GAAG,CAAC,GAAG;gBACL,QAAQ,GAAG;oBACT,KAAK,UAAU;wBACb,OAAO,mBAAmB,CAAC;oBAC7B,KAAK,UAAU;wBACb,OAAO,mBAAmB,CAAC;oBAC7B;wBACE,OAAO,GAAG,CAAC;iBACd;aACF,CAAC,CACH,CAAC;SACH;KACF;IAES,kBAAkB,CAAC,OAAe;QAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CACtB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAC/B,IAAI,CACL,CAAC;KACH;IAES,cAAc,CAAC,IAAS,EAAE,OAAgB;QAClD,QAAQ,OAAO;YACb,KAAK,mBAAmB;gBACtB,OAAO,IAAI,CAAC,UAAU,CAAC;YACzB,KAAK,mBAAmB;gBACtB,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;YAC1C;gBACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;KACF;CACF;;iJAAA;;YA7F4B,gBAAgB,uBADxC,QAAQ;YAEkB,iBAAiB;YACxB,QAAQ;;AALnB,2BAA2B,eAC5B,KAFX,UAAU,EAAE,jBACT,CAEC,WAAA,QAAQ,EAAE,CAAA;GAFF,2BAA2B,CAgGvC;;ICvGY,4BAA4B,GAAzC,MAAa,4BAA4B;IASvC,YAAoB,gBAA6C;QAA7C,qBAAgB,GAAhB,gBAAgB,CAA6B;QAPjE,cAAS,GAAG,SAAS,CAAC;KAO+C;IAErE,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACrD;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC1D;IAED,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACtD;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACrD;CACF;;;;;;;;;;sIAAA;;YAjBuC,2BAA2B;;AAFxD;IAAR,KAAK,EAAE;6DAA0B,CACpC,AAmBA;AA3Ba;2BAA4B,oBALxC,SAAS,CAAC,rDCkCE,yBAAyB,GAAtC,MAAa,yBAAyB;CDjCpC,ACiCuC;MDjC/B,EAAE,0BAA0B,UACpC;;;;;;;;IAAqD,UACrD,eAAe,EAAE,uBAAuB,CAAC,MAAM;CAChD,CAAC,IACW,4BAA4B,CA0BxC;;;;;;;;;;;ECGwC,CAA5B,yBAAyB,oBA1BrC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,IA0BZ;;MA1BwB,EAAE,YAAY,hBChB1B,eAGX;CDauC,iBAAiB,EAAE,pBChB3D,WAAY,eAAe;ADgB0C,CAAC,UACpE,SAAS,EAAE,cACT,hCCjBF,wCAAqB,CAAA;UDiBC,CAAY,kBAC9B,aAAa,EAAE,xCCjBnB,wCAAqB,CAAA;oBDkBf,uBAAuB,EAAE,7CCjBjC,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;;uBDkBS,SAAS,EAAE,9BEHR,mBAAmB,GAAhC,MAAa,mBAAmB;QFGiB,JEkB/C,YAAsB,EAAc,EAAY,QAAmB;EFjB3D,SAAS,EAAE,LEiBG,OAAE,GAAF,EAAE,CAAY;qBFhB1B,bEgBsC,aAAQ,GAAR,QAAQ,CAAW;;SFfvD,OAAO,EAAE,2BAA2B;iBACpC,QAAQ,EAAE;GAA2B;yBACrC,IAAI,rBEHuB,aAAQ,GAAG,KAAK,CAAC;AFGtC,CAAC;KAAgB,EAAE,iBAAiB,EAAE,QAAQ,CAAC;AACtD;eACF,uBACF,9BEIG,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;kBFHxC,VEKE,gBAAW,GAAG,CAAC,CAAC;aFLO,EAAE,PEOjC,cAAS,GAAG,SAAS,CAAC;KFNd,AEQ+D;QFRtD,EAAE,NEUnB,QAAQ;kBFVoC,VEW1C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AFV3B,KEWN;aFVI,TEYL,OAAO,CAAC,KAAa,EAAE,KAAe;AFXnC,CAAC,cACF,PEWA,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;GFXF,WAC5B,UACD,YAAY,EAAE,CAAC,4BAA4B,EAAE,yBAAyB,CAAC,UACvE,7FESI,IAAI,CAAC,QAAQ,CAAC,YAAY,CACxB,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,OAAO,EACP,eAAe,KAAK,IAAI,IAAI,CAAC,WAAW,GAAG,CAC5C,CAAC;GFbS,EAAE,CAAC,GEcf;KACF;kBFf6C,EAAE,hBEiBhD,QAAQ,CAAC,MAAc;sBFjBkD,CAAC,fEkBxE,IAAI,IAAI,CAAC,QAAQ,EAAE;IFjBrB,OAAO,EAAE,CAAC,FEkBN,OAAO;SACR;YFnBmC,EAAE,NEoBtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;IFpBqC,CAAC,OACnE,CAAC,IACW,TEmBT,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YFnBa,CAAG,LEoBrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1B;IAED,cAAc,CAAC,KAAU,EAAE,MAAc;QACvC,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;YAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACtB;KACF;CACF;;;;;;;;8FAAA;;YA/B2B,UAAU;YAAsB,SAAS;;AAhB5B;IAAtC,KAAK,EAAE,EAAE,WAAW,CAAC,eAAe,CAAC;qDAAkB;AAK/C;IAAR,KAAK,EAAE;mDAAgB;AAKd;IAAT,MAAM,EAAE;mDAAqC,CAChD,AAqCA;AArDa;kBAAmB,oBAL/B,SAAS,3CCHG,gBAAgB,GAA7B,MAAa,gBAAgB;ADGlB,CCHqB;ODI9B,QAAQ,EAAE,gBAAgB,UAC1B;ECL8B,CAAnB,gBAAgB,oBAL5B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,UACnC,YAAY,EAAE,CAAC,mBAAmB,CAAC,UACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC,EAGhC;;GAFC,CAAC,IACW,FCVS,UAAU;CAW/B;;EDD4B,CAAG;+BDKa,UAC3C,eAAe,EAAE,tDGXN,gBAAgB,wBAA7B,MAAa,gBAAgB;YHWa,CAAC,MAAM,fGV/C,OAAO,OAAO;EHWf,CAAC,IACW,CGXT,OAAO;SHWqB,CAoD/B,EG9DK,QAAQ,EAAE,kBAAgB;YAC1B,SAAS,EAAE;gBACT,oBAAoB,CAAC;oBACnB,IAAI,EAAE,EAAE;iBACT,CAAC;gBACF;oBACE,OAAO,EAAE,UAAU;oBACnB,WAAW,EAAE,MAAM;iBACpB;aACF;SACF,CAAC;KACH;CACF;;EAAA,CAfY,gBAAgB,yCAD5B,QAAQ,CAAC,EAAE,CAAC,IACA,gBAAgB,CAe5B,gDACD;;MClBa,oBAAoB;IAC/B,OAAO,oBAAoB,CACzB,OAAwB;QAExB,MAAM,KAAK,GAAG,OAAO,CAAC,KAAe,CAAC;QAEtC,OAAO,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;KACrE;IAED,OAAO,cAAc,CAAC,OAAwB;QAC5C,MAAM,KAAK,GAAG,OAAO,CAAC,KAAe,CAAC;QAEtC,OAAO,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;KACnE;IAED,OAAO,iBAAiB,CAAC,OAAwB;QAC/C,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAe,CAAC;QACzC,OAAO,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,IAAI,GAAG,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;KAC5E;IAED,OAAO,aAAa,CAAC,OAAwB;QAC3C,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE;YACvE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC;KACb;CACF;;MC3BY,WAAW,GAAG;IACzB,EAAE,EAAE,CAAC;IACL,GAAG,EAAE,CAAC;IACN,IAAI,EAAE,CAAC;IACP,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,GAAG,EAAE,CAAC;CACP,CAAC;AAEF,SAAgB,UAAU,CAAC,MAAa,EAAE,MAAa;IACrD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC1D,OAAO,CAAC,CAAC;KACV;SAAM;QACL,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC5D;AACH,CAAC;;ICTY,mBAAmB,GAAhC,MAAa,mBAAmB;IAI9B,iBAAgB;CACjB;;;;;;0HAAA;AAHC;IADC,KAAK,EAAE;uDACgB,CAC1B,AAGA;AANa;kBAAmB,oBAL/B,SAAS,3CCOG,gBAAgB,GAA7B,MAAa,gBAAgB;ADPlB,CCOqB;ODN9B,QAAQ,EAAE,eAAe,UACzB;ECK8B,CAAnB,gBAAgB,oBAL5B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,oBAAoB,CAAC,UAC7C,YAAY,EAAE,CAAC,mBAAmB,CAAC,UACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC,EAGhC;;GAFC,CAAC,IACW,gBAAgB,CAAG,rBCDnB,uBAAuB,GAApC,MAAa,uBAAuB;IAUlC,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAN1D,kBAAa,GAAG,KAAK,CAAC;AFRoB,UAC1C,eAAe,EAAE,nBESjB,eAAU,GAAG,KAAK,CAAC;iBFTqB,CAAC,MAAM,MAChD,CAAC,IACW,3BESX,cAAS,GAAG,SAAS,CAAC;KAEwC;YFXhC,CAK/B,TEQC,IAAW,cAAc;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACrC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACrC,CAAC,CAAC;KACJ;IAED,aAAa,CAAC,SAAiB;QAC7B,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;KAClD;CACF;;;;;;;;0IAAA;;YAZyC,kBAAkB;;AAR1D;IADC,KAAK,EAAE;yDACY;AAEpB;IADC,KAAK,EAAE;8DACc;AAEtB;IADC,KAAK,EAAE;2DACW,CACrB,AAgBA;AAvBa;sBAAuB,oBALnC,SAAS,CAAC,hDCgBE,mBAAmB,GAAhC,MAAa,mBAAmB;QDf9B,QAAQ,EAAE,oBAAoB,UAC9B,5CC4BA,YACY,WAAwB,EACxB,kBAAsC,EACtC,WAAwB,EACxB,qBAA4C,EAC5C,aAAmC,EACnC,iBAAoC;QALpC,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QACxB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,kBAAa,GAAb,aAAa,CAAsB;QACnC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAnBhD,6BAAwB,GAAG,GAAG,CAAC;QAOvB,qBAAgB,GAAG,KAAK,CAAC;QAEzB,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAE1C,sBAAiB,GAAG,KAAK,CAAC;KAStB;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAC5C,IAAI,CAAC,wBAAwB,CAC9B,CAAC;SACH;QACD,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC3D,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;gBACzB,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;gBAClC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;gBAC/B,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAC3C,IAAI,CAAC,wBAAwB,CAC9B;aACF,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,CAI9B;gBACC,IAAI,CAAC,MAAM;oBACT,MAAM,KAAK,qBAAqB,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3D,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC;aAClE,CACF,EACD,GAAG,CAAC,CAAC,CAAC,IAAI,CAA6C,KAAK,IAAI,CAAC,CAClE,CAAC;SACH;mCDhE4C,UAC/C;WAAe,EAAE,ACiEV;qBDjEiC,CAAC,MAAM,MAChD,CAAC,IACW,3BCgEP,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;qBDhEG,CAsBnC,NC2CO,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;gBAClC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aAChC,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,IAAI,EAAE,MAAM,CAAiB,MAC5B,IAAI,CAAC,MAAM;gBACV,MAAM,KAAK,qBAAqB,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAC9D,EACD,GAAG,CAAC,CAAC,CAAC,IAAI,CAAiB,KAAK,IAAI,CAAC,CACtC,CAAC;SACH;;QAGD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB;aACzC,QAAQ,EAAE;aACV,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,EAAE,CAAC;QAEzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACxC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,kBAAkB;aACpB,0BAA0B,EAAE;aAC5B,SAAS,CAAC,OAAO;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB,CAAC,CACL,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,KAAK;YAChE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACrB,CAAC,CACH,CAAC;KACH;IAES,OAAO,CAAC,KAAc;QAC9B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAC5C,IAAI,CAAC,wBAAwB,CAC9B,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,EAAE,CAAC;SAC1D;KACF;IAED,SAAS,CAAC,OAAgB;QACxB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,EAAE,CAAC;SAC1D;KACF;IAES,4BAA4B,CACpC,IAAU,EACV,OAAyB;QAEzB,IAAI,CAAC,iBAAiB,GAAG,OAAO,IAAI,EAAE,CAAC;QACvC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc;gBACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CACpD,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,cAAc,CAAC,IAAI,CAClD,CAAC;aACH,CAAC,CAAC;SACJ;KACF;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7E;IACD,mBAAmB,CAAC,QAAgB;QAClC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;KAChC;IAED,KAAK,CAAC,KAAc;QAClB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;gBACX,KAAK,CAAC,MAAO,CAAC,IAAI,EAAE,CAAC;aACpC;SACF;QACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;KAC/B;IAED,YAAY;QACV,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;QACD,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,EAAE,CAAC;KAC1D;CACF;;;;;;;+TAAA;;YA3I0B,WAAW;YACJ,kBAAkB;YACzB,WAAW;YACD,qBAAqB;YAC7B,oBAAoB;YAChB,iBAAiB;EAC9C,AAsIJ;AA3Ja;kBAAmB,oBAJ/B,SAAS,3CCsBG,gBAAgB,GAA7B,MAAa,gBAAgB;ADtBlB,CCsBqB;ODrB9B,QAAQ,EAAE,gBAAgB,UAC1B;;;;;;;;;;;;;;;;;ECoB8B,CAAnB,WACb;;GAD6B,oBAxB5B,QAAQ,CAAC,UACR,YAAY,EAAE,CAAC,rDCMJ,qBAAqB,GAAlC,MAAa,qBAAqB;kBDNE,EAAE,uBAAuB,CAAC,UAC5D,OAAO,EAAE,CAAC,5DC0CV,YACY,iBAAoC,EACpC,oBAA0C,EAC1C,aAAmC;SD7ClB,EAAE,uBAAuB,CAAC,UACvD,rCC0CY,sBAAiB,GAAjB,iBAAiB,CAAmB;AD1CzC,EAAE,cACP,oBAAoB,cACpB,1CCyCU,yBAAoB,GAApB,oBAAoB,CAAsB;IDzCxC,cACZ,cAAc,xBCyCJ,kBAAa,GAAb,aAAa,CAAsB;EDxC7C,WAAW,cACX,nBCAO,aAAQ,GAAG,KAAK,CAAC;eDAL,cACnB,rBCCO,cAAS,GAAG,IAAI,CAAC;QDDd,cACV,dCEO,YAAO,GAA6B;ODFjC,WACX,UACD,hBCCE,cAAc,EAAE,KAAK;EDDd,EAAE,cACT,NCCA,WAAW,EAAE,IAAI;ODDG,CAAY,CCEjC,CAAC;eDDE,PCGI,WAAM,GAAW,EAAE,CAAC;EDHX,EAAE,sBACb,wBAAwB,EAAE,5CCiBvB,sBAAiB,GAAsB,iBAAiB,CAAC,UAAU,CAAC;KAgBzE;SDhCI,SAAS,EAAE,hBCQnB,IAAI,KAAK,CAAC,KAAa;gBDRe,RCSpC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KDRpB,mBACF,hBCQH,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;MDRE,CAAC,HCSJ,IAAI,KAAK;ADRR,UAED,eAAe,EAAE,nBCOf,OAAO,IAAI,CAAC,MAAM,CAAC;ADPH,KCQjB;aDRoC,CAAC,OACvC,CAAC,IACW,tBCUa,IAAI,UAAU,CAAC,KAAc;cDV1B,CAAG,PCW5B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;;;YAGlB,KAAK;kBACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;kBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;SAC5C;KACF;;IASD,qBAAqB;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;SACrD;QACD,OAAO,KAAK,CAAC;KACd;;;;IFpD0C,MAC5C,CAAC,IACW,mBAAmB,CA0J/B;;IEjGS,YAAY,CAAC,KAAa;QAChC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,EAAE;YAC1D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,gBAAgB;gBACtC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CACzB,EAAE,EACD,gBAAqC,CAAC,UAAU,CAClD,CAAC;gBACF,KAAK,CAAC,QAAQ,GAAG,gBAAgB,CAAC,QAAQ,CAAC;gBAC3C,OAAO,KAAK,CAAC;aACd,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;KACF;IAEO,UAAU;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;YACtB,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;YAC9B,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC;gBAC1B,WAAW,EAAE,IAAI,WAAW,CAAO,IAAK,CAAC,WAAW,CAAC;gBACrD,QAAQ,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;aAC/D,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACrC,KAAK,CAAC,OAAO,EAAE,CAAC;aACjB;YACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACnC,CAAC,CAAC;KACJ;IAED,WAAW,CAAC,IAAU;QACpB,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAC5D,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC9C;IAED,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI;;QAEvD,SAAS,CAAC,IAAI,CAAC,EACf,GAAG,CAAC,KAAK;YACP,IAAI,KAAK,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;gBACrE,IAAI,CAAC,oBAAoB,CAAC,WAAW,CACnC,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,QAAQ,CACf,CAAC;aACH;iBAAM,IAAI,KAAK,EAAE;gBAChB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;aACvE;SACF,CAAC,EACF,GAAG,CAAC,MAAiB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CACvD,CAAC;KACH;CACF;;;;;;;;;;gNAAA;;YA1EgC,iBAAiB;YACd,oBAAoB;YAC3B,oBAAoB;;AAvCtC;IAAR,KAAK,EAAE;uDAAkB;AAEjB;IAAR,KAAK,EAAE;wDAAkB;AAEjB;IAAR,KAAK,EAAE;sDAGN;AASF;IAJC,KAAK,CAAC,OAAO,CAAC;kDAOd;AAKQ;IAAR,KAAK,EAAE;gEAAqE;AAErD;IAAvB,KAAK,CAAC,eAAe,CAAC;uDAQtB,CACH,AA6EA;AAjHa;oBAAqB,oBALjC,SAAS,7CCWG,iBAAiB,GAA9B,MAAa,iBAAiB;ADXnB,UACT,QAAQ,EAAE,mBAAmB,UAC7B,7CCuCA,YACY,gBAAkC,EACpC,aAAoC;QADlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACpC,kBAAa,GAAb,aAAa,CAAuB;QA/BrC,YAAO,GAAG,KAAK,CAAC;QAEhB,aAAQ,GAAG,KAAK,CAAC;QAGhB,SAAI,GAAG,IAAI,YAAY,EAAO,CAAC;QAEhC,sBAAiB,GAAsB,iBAAiB,CAAC,UAAU,CAAC;;QAGpE,YAAO,GAA6B;YAC3C,cAAc,EAAE,KAAK;YACrB,WAAW,EAAE,IAAI;SAClB,CAAC;KAmBE;IAEJ,QAAQ;QACN,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,CAChF,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,iBAAiB,CACvB,CAAC;KACH;;IAGD,qBAAqB;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;SACrD;QACD,OAAO,KAAK,CAAC;KACd;;IAGD,mBAAmB,CAAC,OAAY;;QAE9B,QACE,OAAO;YACP,OAAO,CAAC,KAAK;YACb,OAAO,CAAC,KAAK,CAAC,gBAAgB,KAAK,YAAY,EAC/C;KACH;IAED,UAAU;QACR,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;KACpC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;CACF;;iED7E+C,UAC9C,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,qBAAqB,CAgHjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wQCtCA;;YArC+B,gBAAgB;YACpB,oBAAoB;;AA/BrC;IAAR,KAAK,EAAE;kDAAiB;AAChB;IAAR,KAAK,EAAE;+CAAY;AACX;IAAR,KAAK,EAAE;mDAAkB;AACjB;IAAR,KAAK,EAAE;0DAA8B;AAE5B;IAAT,MAAM,EAAE;+CAAgC;AAEhC;IAAR,KAAK,EAAE;4DAAqE;AAGpE;IAAR,KAAK,EAAE;kDAGN,CACJ,AAsDA;AArEa;gBAAiB,oBAJ7B,SAAS,CAAC,UACT,pDCjBW,qBAAqB,GAAlC,MAAa,qBAAqB;CAGjC;GDcS,EAAE,cAAc,UACxB;;;;;;;;;;;;;;;8ICfD;AADC;IADC,KAAK,EAAE;mDACG,CACb,AACA;AAJa;oBAAqB,oBAJjC,pCCgCY,gBAAgB,GAA7B,MAAa,gBAAgB;CDhCnB,CAAC,DCgCqB;SD/B9B,QAAQ,EAAE,kBAAkB,UAC5B;;;;;;;;;;;;;EC8B8B,CAAnB,WACb;;GAD6B,oBArB5B,QAAQ,CAAC,UACR,tCCgCW,eAAe,GAA5B,MAAa,eAAe;CAAG;ADhCtB,EAAE,cACP,YAAY,cACZ,YAAY,cACZ;SAAgB,cAChB,mBAAmB,cACnB,SAAS,cACT,SAAS,cACT,gBAAgB,cAChB,UAAU;OACV,WAAW;CACX,iBAAiB;GACjB,oBAAoB,WACrB,UACD;WAAY,EAAE,cACZ,iBAAiB;QACjB;WAAqB;WACrB;;CAAqB,WACtB,UACD;GAAO,EAAE,CAAC,iBAAiB,EAAE;aAAqB,EAAE;MAAqB,CAAC,OAC3E,CAAC,IACW;SAAgB,CAAG;;;;;;;;ECYD,CAAlB,WACb;;EAD4B,oBA5B3B,QAAQ,CAAC,UACR,OAAO,EAAE,9CCEE,oBAAoB,GAAjC,MAAa,oBAAoB;QDD7B,YAAY,cACZ,mBAAmB,cACnB,gBAAgB,cAChB,YAAY,zGCOd,YACY,iBAAoC,EACpC,gBAAkC,EAClC,oBAA0C,EAC5C,WAAwB,EACxB,cAA8B,EAC9B,aAAmC;EDZ3C,aAAa,cACb,gBAAgB,rCCMN,sBAAiB,GAAjB,iBAAiB,CAAmB;ODL9C,oBAAoB,cACpB,jCCKU,qBAAgB,GAAhB,gBAAgB,CAAkB;ADLnC,cACT,UAAU,cACV,UAAU,xCCIA,yBAAoB,GAApB,oBAAoB,CAAsB;IDHpD,iBAAiB,cACjB,3BCGQ,gBAAW,GAAX,WAAW,CAAa;cDHb,WACpB,UACD,SAAS,pCCEC,mBAAc,GAAd,cAAc,CAAgB;ADF7B,cACT,oBAAoB,CAAY,3BCExB,kBAAa,GAAb,aAAa,CAAsB;SDDzC,aAAa,EAAE,hBCVnB,aAAQ,GAAG,KAAK,CAAC;+BHrB4B,MAC9C,CAAC,IACW,3BE8BL,yBAAyB,EAAE,lCCTjC,sBAAiB,GAAsB,iBAAiB,CAAC,UAAU,CAAC;AHrBpC,CAGjC,IE4BS,ACAJ;QDAa,EAAE,NCEnB,QAAQ;WDF6B,uBAC9B,mBACF,7CCCH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;WDA/C,CAAC,WACH,UACD,YAAY,EAAE,CAAC,kBAAkB,EAAE,5DCDjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,EAAE,CAAC;eDCX,CAAC,UAC9D,eAAe,EAAE,CAAC,pCCAhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB;eDAJ,EAAE,JCCjC,UAAU,EAAE;iBDD+C,CAAC,UACjE,OAAO,EAAE,CAAC,kBAAkB,3CCCvB,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;ADDnB,0BAA0B,CAAC,OAC1D,CAAC,IACW,/BCCT,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;UDDV,CAAG,CCEzB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;gBAC/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;gBACjC,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;gBACrC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;aAClC,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,EACnD,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,KACpC,QAAQ,GAAG,UAAU,IAAI,SAAS,GAAG,UAAU,CAChD,CACF,CAAC;SACH;;aAEI;YACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;SACtD;;QAGD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC9D,IAAI,CAAC,iBAAiB,CACvB,CAAC;KACH;;IAGD,qBAAqB;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;SACrD;QACD,OAAO,KAAK,CAAC;KACd;;IAGD,YAAY,CAAC,IAAU;QACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtE;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;SAC9C;KACF;CACF;;uGJ/D0C,MAC1C,CAAC,IACW,iBAAiB,CAoE7B;;;;;;;uHIPA;;YAxDgC,iBAAiB;YAClB,gBAAgB;YACZ,oBAAoB;YAC/B,WAAW;YACR,cAAc;YACf,oBAAoB;EAC3C,AAmDJ;AAnEa;mBAAoB,oBALhC,SAAS,CAAC,7CCsBE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDrB/B,QAAQ,EAAE,iBAAiB,UAC3B;;;;;;;;;;;;;;;;;;ECoB+B,CAApB,WACb;;IAD8B,oBAxB7B,QAAQ,CAAC,UACR,vCCPW,iBAAiB,GAA9B,MAAa,iBAAiB;ADOrB,EAAE,cACP,gBAAgB,cAChB,1CCRF,YACY,cAA8B,EAC9B,iBAAoC;KDMlC,cACZ,gBAAgB,3BCRN,mBAAc,GAAd,cAAc,CAAgB;GDSxC,YAAY,cACZ,SAAS,9BCTC,sBAAiB,GAAjB,iBAAiB,CAAmB;ADU9C,KCTE;UDSc,NCPlB,WAAW;IDQT,oBAAoB,hBCPpB,OAAO,aAAa,CAAC;ODQrB,UAAU,WACX,UACD,SAAS,nCCTL,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;CDS3B,cACT,oBAAoB,CAAY,xBCT9B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;ODUjC,aAAa,EAAE,sBACb,aAAa,EAAE,lDCVlB,CAAC,CAAC,IAAI,CACL,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,MAAM,CAAC,EAC/B,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;kBDSP,SAAS,EAAE,jBCRb,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;WDQS,uBAChC,mBACF,rCCTG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;ODUjD,CAAC,WACH,UACD,bCXQ,OAAO,KAAK,CAAC;WDWT,EAAE,ACVP;EFNqC,UAC5C,ZCee,oBAAoB,CAAC,TCT9B,OAAO,IAAI,CAAC;EFNH,EAAE,ECgBjB,GCTK,CAAC,CACH,CAAC;ADQG,EAAE,CAAC,ECPT;QFTuC,CAAC,MAAM,ECgBjB,CAAC,dCLvB,OAAO,CAAC,IAAU;CFV3B,CAAC,IACW,oBAAoB,CAkEhC,nBCnDC,eAAe,EAAE,CAAC,lBCLhB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KDKI,ACJrC;ADIsC,CCHxC;IDIA,CAAC,IACW,iBAAiB,CAAG,gKCLhC;;YAvB6B,cAAc;YACX,iBAAiB;;uOAU/C,AAaH;AA1Ba;gBAAiB,oBAH7B,UAAU,CAAC,UACV,rDCEW,qBAAqB,GAAlC,MAAa,qBAAqB;SDFtB,EAAE,MAAM,OACnB,CAAC,IACW,iBAAiB,CAyB7B,3CCxBC,YACY,iBAAoC,EACpC,oBAA0C;QAD1C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,yBAAoB,GAApB,oBAAoB,CAAsB;KAClD;IAEJ,MAAM,CACJ,MAA4B,EAC5B,YAAqB,EACrB,OAAgB;QAEhB,IAAI,YAAY,KAAK,kBAAkB,IAAI,CAAC,OAAO,EAAE;YACnD,OAAO,aAAa,CAAC;gBACnB,MAAM;gBACN,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;gBAClC,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE;aACpC,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC;gBAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,KAAK,wBAAwB,CAAC,CAAC;iBAChE;qBAAM,IAAI,aAAa,CAAC,UAAU,EAAE;oBACnC,OAAO,KAAK,CAAC,MAAM,CACjB,IAAI,IACF,IAAI,KAAK,wBAAwB;wBACjC,IAAI,KAAK,wBAAwB,CACpC,CAAC;iBACH;qBAAM;oBACL,OAAO,KAAK,CAAC,MAAM,CACjB,IAAI,IAAI,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,wBAAwB,CACnE,CAAC;iBACH;aACF,CAAC,CACH,CAAC;SACH;QACD,OAAO,MAAM,CAAC;KACf;CACF;6MAAA;;YAlCgC,iBAAiB;YACd,oBAAoB;;6PAYpD,AAsBJ;AArCa;oBAAqB,oBAHjC,UAAU,CAAC,/CCIC,mBAAmB,GAAhC,MAAa,mBAAmB;ODH9B,UAAU,EAAE,MAAM,OACnB,CAAC,7BCMA,YAAsB,iBAAoC;ADL/C,qBAAqB,CAoCjC,dC/BuB,sBAAiB,GAAjB,iBAAiB,CAAmB;KAAI;IAE9D,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB;aACnC,UAAU,EAAE;aACZ,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;KAChD;CACF;;;;;;;uLAAA;;YAR0C,iBAAiB;EAC5D,AAQA;AAba;kBAAmB,oBAL/B,SAAS,3CC8BG,gBAAgB,GAA7B,MAAa,gBAAgB;AD9BlB,CC8BqB;OD7B9B,QAAQ,EAAE,gBAAgB,UAC1B;;;;;;;;;;;;QAA2C,UAC3C;UAAe,EAAE;KAAuB,CAAC,MAAM,MAChD,CAAC,IACW;kBAAmB,CAY/B;ECa+B,CAAnB,WACb;;GAD6B,oBAtB5B,QAAQ,CAAC,UACR,OAAO,7CCHI,iBAAiB,GAA9B,MAAa,iBAAiB;CDGnB,cACP,YAAY,vBCSd,YAAsB,iBAAoC;IDRxD,YAAY,cACZ,SAAS,/BCOW,sBAAiB,GAAjB,iBAAiB,CAAmB;CDNxD,gBAAgB,cAChB,vBCPF,cAAS,GAAG,SAAS,CAAC;KDOV,cACV,gBAAgB,WACjB,UACD,SAAS,EAAE,cACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,/HCVnB,cAAS,GAAuB,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC,IAAI,CACrE,SAAS,CAAC,EAAE,qBAAqB,EAAE,CAAC,EAAE,CAAC,EACvC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,qBAAqB,IAAI,CAAC,CAAC,CAC7C,CAAC;IDQI,mBAAmB,EAAE,0BACnB,SAAS,EAAE,mBAAmB,uBAC/B,mBACF,eACF,CAAC,nICVJ,WAAM,GAAuB,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC,IAAI,CAClE,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EACjC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAC5C,CAAC;KAE4D;CDM7D,ACLF;QDMC,YAAY,EAAE,CAAC,mBAAmB,CAAC,UACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC,UAC9B,eAAe,EAAE,CAAC,mBAAmB,CAAC,OACvC,CAAC,IACW;EAAgB,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;0KCV/B;;YAD0C,iBAAiB;EAC5D,AACA;AAfa;gBAAiB,oBAL7B,hCCqBY,cAAc,GAA3B,MAAa,cAAc;CDrBjB,CAAC,DCqBmB;SDpB5B,QAAQ,EAAE,cAAc,UACxB;;;;;;;;;sEAAyC,UACzC,9ECkB4B,CAAjB,cAAc,oBAf1B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,KAe1B;;QDnBiB,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,9CCEyB,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,UACxE,/CCGW,sBAAsB,GAAnC,MAAa,sBAAsB;QFNL,CAc7B,TCXU,EAAE,cACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,lECoBnB,YACY,eAAgC,EAChC,qBAA4C,EAC5C,WAAwB;qBDtB9B,iBAAiB,EAAE,hCCoBb,oBAAe,GAAf,eAAe,CAAiB;kBDnBpC,SAAS,EAAE,iBAAiB,tCCoBxB,0BAAqB,GAArB,qBAAqB,CAAuB;SDnBjD,mBACF,pBCmBO,gBAAW,GAAX,WAAW,CAAa;GDlBjC,CAAC,WACH,UACD,YAAY,EAAE,CAAC,iBAAiB,CAAC,UACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC,UAC5B,eAAe,EAAE,CAAC,iBAAiB,CAAC,OACrC,CAAC,9ICRA,aAAQ,GAAwB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,IAAI,CAC1E,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EACnC,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAC3C,CAAC;GDMS,cAAc,CAAG,VCJ5B,qBAAgB,GAEZ,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,IAAI,CACzC,MAAM,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,EACrC,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAClC,CAAC;QAEF,kBAAa,GAAwB,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACvE,aAAQ,GAAwB,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;QAE1E,aAAQ,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,SAAS,CAAC;KAMlB;IAEJ,GAAG,CAAC,OAAgB;QAClB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC7C;IAED,MAAM,CAAC,KAAiB;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzC;IAED,oBAAoB,CAAC,OAAgB,EAAE,OAAqB;QAC1D,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC;KACb;IAEO,YAAY,CAAC,OAAgB;QACnC,IAAI,CAAC,QAAQ;YACX,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,KAAK,YAAY,CAAC;KACpE;CACF;;;;;;;;uLAAA;;YAtB8B,eAAe;YACT,qBAAqB;YAC/B,WAAW;EAClC,AAoBJ;AA3Ca;qBAAsB,oBALlC,SAAS,CAAC,/CCeE,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;IDdjC,QAAQ,EAAE,oBAAoB,UAC9B;;;;;;;;;ECaiC,CAAtB,mBAAmB,oBAf/B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,AAe1B;;QAfoC,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,CAAC,UACxE,pDCGW,qBAAqB,GAAlC,MAAa,qBAAqB;ODHvB,EAAE,cACT,oBAAoB,CAAY,kBAC9B,1DCSJ,YACY,UAAsB,EACtB,WAA8B,EAC9B,oBAA0C;UDZrC,EAAE,sBACb,1BCSM,eAAU,GAAV,UAAU,CAAY;kBDTN,EAAE,ZCUlB,gBAAW,GAAX,WAAW,CAAmB;MDTlC,SAAS,EAAE,sBAAsB,/BCU7B,yBAAoB,GAApB,oBAAoB,CAAsB;IDT/C,CCUH;IAEJ,QAAQ;ADXH,eACF,CAAC,WACH,UACD,7BCSE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW;IDT1B,EAAE,CAAC,MCUV,SAAS,EAAE;IDVqB,CAAC,UACtC,eAAe,EAAE,CAAC,sBAAsB,CAAC,UACzC,OAAO,EAAE,CAAC,/DCSL,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eDT1C,CAAC,OAClC,CAAC,IACW,mBAAmB,CAAG,xCCQ/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB;aACtC,UAAU,EAAE;aACZ,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YAC3B,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;SACtC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,KAAK,UAAU,IAAI,SAAS,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAC3C,6BAA6B,CAC9B,CAAC;KACH;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7D;CACF;2CFtCiD,UAChD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,sBAAsB,CA0ClC;;;;;;;;;;;gIEPA;;YA1ByB,UAAU;YACT,iBAAiB;YACR,oBAAoB;EACpD,AAwBJ;AApCa;oBAAqB,oBAJjC,SAAS,CAAC,9CCgBE,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;KDfhC,QAAQ,EAAE,mBAAmB,UAC7B;;;;;;;;;;;;ECcgC,CAArB,kBAAkB,oBAlB9B,QAAQ,CAAC,UACR,MAkBF;AAlBS;CAAE,CAAC,YAAY,EAAE,UAAU,EAAE,gBAAgB,CAAC,zCC2B1C,mBAAmB,GAAhC,MAAa,mBAAmB;CD1B9B,AC0BiC;OD1BxB,EAAE,cACT,oBAAoB,CAA6B,kBAC/C,aAAa,EAAE;gBACb,qBAAqB,EAAE,0BACrB,SAAS,EAAE,qBAAqB,uBACjC,mBACF,kBACD;IAAQ,EAAE;kBACR,YAAY,EAAE,KAAK;cACpB,eACF,CAAC,WACH;GACD,YAAY,EAAE,CAAC;;IAAqB,CAAC,UACrC;GAAO,EAAE,CAAC;IAAqB,CAAC,UAChC,eAAe;CAAE,CAAC,qBAAqB,CAAC;CACzC,CAAC,IACW,kBAAkB,CAAG;;;;;wBDdc;IAC/C,CAAC,IACW;IAAqB,CAmCjC;;;EEbkC,CAAtB,mBAAmB,SAChC;;SA5BC,QAAQ,CAAC,UACR,xBCXU,uBAIX;MDOQ,EAAE,cACP,SAAS,/BCZb,WAAY,uBAAuB;ODa/B,iBAAiB,cACjB,lCCbF,wCAAa,CAAA;QDaK,cAChB,gBAAgB,cAChB,hDCdF,8DAAmC,CAAA;EDcf,WACnB,UACD,OAAO,EAAE,cACP,mBAAmB,7DChBrB,4DAAiC,CAAA;aDiB/B,iBAAiB,cACjB,gBAAgB,5DCjBpB,CAAC,EAJW,uBAAuB,KAAvB,uBAAuB,QAIlC;WDkBG,XChBJ,MAAsB,cAAc;CAmBnC;;CDHmB,cAChB,XEzBQ,gBAKX;QFoBkB,cACf,tBE1BJ,WAAY,gBAAgB;KF0BV,cACd,UAAU,cACV,kBAAkB,zDE3BpB,wDAAoC,CAAA;UF4BnC,UACD,YAAY,EAAE,EAAE,UAChB,SAAS,nDE7BT,kDAA8B,CAAA;CF6BnB,cACT,kBACE,OAAO,EAAE,tCE9Bb,sDAAkC,CAAA;CF8BF,kBAC5B,WAAW,EAAE,qBAAqB,jDE9BtC,gDAA4B,CAAA;iBF+BxB,KAAK,EAAE,IAAI,eACZ,3CE/BL,CAAC,EALW,gBAAgB,KAAhB,gBAAgB,QAK3B;;IFgCE,OACF,CAAC,IACW,VGpCA,qBAAqB,GAAmB;GHoCrB,CAAG,AGnCjC,QAAQ,EAAE;QACR,KAAK,EAAE;YACL;gBACE,EAAE,EAAE,iBAAiB;gBACrB,IAAI,EAAE,kCAAkC;gBACxC,SAAS,EAAE,yBAAyB;gBACpC,IAAI,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;aAC1C;YACD;gBACE,EAAE,EAAE,cAAc;gBAClB,IAAI,EAAE,+BAA+B;gBACrC,SAAS,EAAE,sBAAsB;gBACjC,IAAI,EAAE,CAAC,gBAAgB,CAAC,aAAa,CAAC;aACvC;YACD;gBACE,EAAE,EAAE,gBAAgB;gBACpB,IAAI,EAAE,iCAAiC;gBACvC,SAAS,EAAE,wBAAwB;gBACnC,IAAI,EAAE,CAAC,gBAAgB,CAAC,eAAe,CAAC;aACzC;YACD;gBACE,EAAE,EAAE,aAAa;gBACjB,IAAI,EAAE,8BAA8B;gBACpC,SAAS,EAAE,qBAAqB;gBAChC,IAAI,EAAE,CAAC,gBAAgB,CAAC,YAAY,CAAC;aACtC;SACF;QACD,OAAO,EAAE,KAAK;QACd,mBAAmB,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC;QACnD,KAAK,EAAE,KAAK;KACb;CACF;;ICvBY,qBAAqB,GAAlC,MAAa,qBAAqB;IAOhC,YACU,cAA8B,EAC9B,oBAA0C;QAD1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAsB;QARpD,UAAK,GAAmB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnD,YAAO,GAAY,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC;QACxD,UAAK,GAAY,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;QACpD,wBAAmB,GACzB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,mBAAmB,IAAI,EAAE,CAAC;KAKrD;IAEJ,eAAe,CAAC,eAAiC;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC;KACvE;IAED,oBAAoB,CAAC,eAAiC;QACpD,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;KACxD;IAED,yBAAyB;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;KAChC;IAED,sBAAsB,CAAC,cAA8B;QACnD,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;QAE3D,OAAO,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;cAC9C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;cACjE,IAAI,CAAC;KACV;IAED,0BAA0B,CAAC,cAA8B;QACvD,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;QAE3D,OAAO,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;cAC9C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;cACjE,IAAI,CAAC;KACV;IAED,mBAAmB,CAAC,cAA8B;QAChD,MAAM,cAAc,GAAW,IAAI,CAAC,4BAA4B,CAC9D,cAAc,CACf,CAAC;QAEF,IAAI,SAAiB,CAAC;QACtB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IACE,cAAc,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EACrE;gBACA,SAAS,GAAG,KAAK,CAAC;aACnB;iBAAM;gBACL,KAAK,EAAE,CAAC;aACT;SACF;QAED,OAAO,SAAS,IAAI,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC;KAC1C;IAES,mBAAmB,CAC3B,aAA2B,EAC3B,aAA2B;QAE3B,IAAI,aAAa,CAAC,YAAY,CAAC,KAAK,GAAG,aAAa,CAAC,YAAY,CAAC,KAAK,EAAE;YACvE,OAAO,CAAC,CAAC;SACV;aAAM,IACL,aAAa,CAAC,YAAY,CAAC,KAAK,GAAG,aAAa,CAAC,YAAY,CAAC,KAAK,EACnE;YACA,OAAO,CAAC,CAAC,CAAC;SACX;QACD,OAAO,CAAC,CAAC;KACV;IAES,wBAAwB,CAChC,aAA6B,EAC7B,KAAK,GAAG,CAAC;QAET,QAAQ,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;YACrC,KAAK,uBAAuB,CAAC,IAAI;gBAC/B,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,KAAK,CAAC,EAAE;oBAC7C,OAAO,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;iBAC9B;gBACD,MAAM;YACR,KAAK,uBAAuB,CAAC,eAAe;gBAC1C,MAAM,mBAAmB,GAAG,aAAa,CAAC,IAAI,CAC5C,YAAY,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,KAAK,CAAC,CACtD,CAAC;gBACF,IAAI,mBAAmB,EAAE;oBACvB,OAAO,mBAAmB,CAAC,IAAI,CAAC;iBACjC;gBACD,MAAM;YACR,KAAK,uBAAuB,CAAC,cAAc;gBACzC,OAAO,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;YACtD;gBACE,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAClC,YAAY,IAAI,YAAY,CAAC,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CACtE,CAAC;gBACF,IAAI,SAAS,EAAE;oBACb,OAAO,SAAS,CAAC,IAAI,CAAC;iBACvB;SACJ;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC;QAC9D,OAAO,QAAQ;cACX,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI;cACrB,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;KAC7D;IAED,wBAAwB,CAAC,aAA6B;QACpD,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;KACrD;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,eAAe;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEO,4BAA4B,CAClC,cAA8B;QAE9B,OAAO,cAAc;YACnB,cAAc,CAAC,QAAQ;YACvB,cAAc,CAAC,QAAQ,CAAC,GAAG;cACzB,IAAI,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;cAC3C,IAAI,CAAC;KACV;IAEO,uBAAuB,CAAC,SAAiB;QAC/C,OAAO,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACrE;IAEO,oBAAoB,CAAC,GAAW,EAAE,KAAU;QAClD,OAAO,GAAG,IAAI,KAAK;cACf,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAkB,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;cACvE,IAAI,CAAC;KACV;CACF;mMAAA;;YApI2B,cAAc;YACR,oBAAoB;;0PAQxB,AA4H9B;AA7Ia;oBAAqB,oBAHjC,pCCQY,iBAAiB,GAA9B,MAAa,iBAAiB;ADRnB,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,qBAAqB,CA4IjC,3DCtIC,YACY,cAA8B,EAC9B,WAAwB,EACxB,mBAAwC,EACxC,qBAA4C,EAC5C,iBAAoC;QAJpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;KAC5C;IAEJ,WAAW;QACT,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;YAC/B,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE;SACzC,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAoB;YACnC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;gBACvB,IAAI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE;oBACxC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;iBACtB;gBACD,IAAI,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,EAAE;oBAChD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;iBAChE;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;iBAC9C;gBACD,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;aAC5C;YACD,OAAO,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC;SAC7B,CAAC,CACH,CAAC;KACH;CACF;qTAAA;;YA5B6B,cAAc;YACjB,WAAW;YACH,mBAAmB;YACjB,qBAAqB;YACzB,iBAAiB;;8TAWxC,AAcV;AA/Ba;gBAAiB,oBAH7B,UAAU,CAAC,UACV,rDCQW,sBAAsB,GAAnC,MAAa,sBAAsB;ODRvB,EAAE,MAAM,OACnB,CAAC,IACW,iBAAiB,CA8B7B,zCCpBC,YACY,eAAgC,EAChC,uBAAgD,EAChD,sBAA8C,EAC9C,iBAAoC;QAHpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,sBAAiB,GAAjB,iBAAiB,CAAmB;QAE9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC,IAAI,CACpD,GAAG,CAAC,QAAQ;YACV,IACE,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,qBAAqB;gBAC7D,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EACpC;gBACA,OAAO,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,OAAO,QAAQ,CAAC,IAAI,CAAC;SACtB,CAAC,EACF,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,CAC3B,CAAC;QAEF,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAChD,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,EAC/D,WAAW,CAAC,CAAC,CAAC,EACd,SAAS,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,wBAAwB,EAAE,CAAC,EAChE,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAC7B,CAAC;KACH;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,yBAAyB,CAAC,IAAI,CACxC,SAAS,CAAC,MAAM,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,EAAE,CAAC,CACnE,CAAC;KACH;IAED,2BAA2B;QACzB,OAAO,IAAI,CAAC,yBAAyB,CAAC,IAAI,CACxC,SAAS,CAAC,MACR,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,EAAE,CAC3D,CACF,CAAC;KACH;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,yBAAyB,CAAC,IAAI,CACxC,SAAS,CAAC,MAAM,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,CAAC,CACjE,CAAC;KACH;CACF;4SAAA;;YA7C8B,eAAe;YACP,uBAAuB;YACxB,sBAAsB;YAC3B,iBAAiB;;iUAY5C,AA+BN;AAnDa;qBAAsB,oBAHlC,UAAU,CAAC,hDCAC,sBAAsB,GAAnC,MAAa,sBAAsB;EDCjC,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,sBAAsB,CAkDlC,nDChDC,YACY,kBAAsC,EACtC,kBAAsC,EACtC,uBAAgD,EAChD,sBAA8C,EAC9C,sBAA8C,EAC9C,qBAA4C;QAL5C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,0BAAqB,GAArB,qBAAqB,CAAuB;QAEtD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAES,kBAAkB;QAC1B,IAAI,CAAC,mBAAmB,GAAG,aAAa,CAAC;YACvC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE;YACtC,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;YACnD,IAAI,CAAC,uBAAuB,CAAC,4BAA4B,EAAE;SAC5D,CAAC,CAAC,IAAI,CACL,YAAY,CAAC,CAAC,CAAC,EACf,GAAG,CACD,CAAC,GAAG,sBAAsB,CAIzB;YACC,IAAI,CAAC,sBAAsB,EAAE;gBAC3B,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;aACzC;SACF,CACF,EACD,MAAM,CACJ,CAAC,GAAG,sBAAsB,CAA0C,KAClE,sBAAsB,CACzB,EACD,SAAS,CACP,CAAC,CAAC,SAAS,IAAI,yBAAyB,CAIvC;YACC,MAAM,cAAc,GAClB,SAAS,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YACpE,IAAI,cAAc,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE;gBACxD,IACE,EACE,yBAAyB,CAAC,OAAO;oBACjC,yBAAyB,CAAC,KAAK;oBAC/B,yBAAyB,CAAC,OAAO,CAClC,EACD;oBACA,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;iBACjE;gBACD,OAAO,EAAE,CAAC,yBAAyB,CAAC,CAAC,IAAI,CACvC,MAAM,CAAC,CAAC,8BAAiD;oBACvD,QACE,CAAC,8BAA8B,CAAC,OAAO;wBACrC,8BAA8B,CAAC,KAAK;wBACtC,CAAC,8BAA8B,CAAC,OAAO,EACvC;iBACH,CAAC,EACF,SAAS,CAAC,CAAC,8BAAiD;oBAC1D,IAAI,8BAA8B,CAAC,OAAO,EAAE;wBAC1C,OAAO,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,CAAC;qBACzD;oBACD,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;iBAClB,CAAC,EACF,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CACvD,CAAC;aACH;YACD,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;SAClB,CACF,CACF,CAAC;KACH;IAES,gBAAgB;QACxB,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;YACrC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE;YAC3C,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,EAAE;YACxD,IAAI,CAAC,sBAAsB,CAAC,iCAAiC,EAAE;SAChE,CAAC,CAAC,IAAI,CACL,YAAY,CAAC,CAAC,CAAC,EACf,GAAG,CACD,CAAC,GAAG,2BAA2B,CAI9B;YACC,IAAI,CAAC,2BAA2B,EAAE;gBAChC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;aAC9C;SACF,CACF,EACD,MAAM,CACJ,CAAC,GAAG,OAAO,CAAiD,KAAK,OAAO,CACzE,EACD,SAAS,CACP,CAAC,CAAC,QAAQ,IAAI,wBAAwB,CAIrC;YACC,MAAM,cAAc,GAClB,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClE,IAAI,cAAc,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE;gBACxD,IACE,EACE,wBAAwB,CAAC,OAAO;oBAChC,wBAAwB,CAAC,KAAK;oBAC9B,wBAAwB,CAAC,OAAO,CACjC,EACD;oBACA,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;iBAC/D;gBACD,OAAO,EAAE,CAAC,wBAAwB,CAAC,CAAC,IAAI,CACtC,MAAM,CAAC,CAAC,6BAAgD;oBACtD,QACE,CAAC,6BAA6B,CAAC,OAAO;wBACpC,6BAA6B,CAAC,KAAK;wBACrC,CAAC,6BAA6B,CAAC,OAAO,EACtC;iBACH,CAAC,EACF,SAAS,CAAC,CAAC,6BAAgD;oBACzD,IAAI,6BAA6B,CAAC,OAAO,EAAE;wBACzC,OAAO,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,CAAC;qBACxD;oBACD,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;iBAClB,CAAC,EACF,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CACvD,CAAC;aACH;YACD,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;SAClB,CACF,CACF,CAAC;KACH;IAES,eAAe;QACvB,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,mBAAmB;YACxB,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,EAAE;YACxD,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,EAAE;YACxD,IAAI,CAAC,uBAAuB,CAAC,mCAAmC,EAAE;SACnE,CAAC,CAAC,IAAI,CACL,YAAY,CAAC,CAAC,CAAC,EACf,SAAS,CACP,CAAC,CACC,UAAU,EACV,sBAAsB,EACtB,yBAAyB,EACzB,+BAA+B,EACiC;YAChE,IAAI,UAAU,EAAE;gBACd,OAAO,EAAE,CAAC;oBACR,sBAAsB;oBACtB,yBAAyB;oBACzB,+BAA+B;iBAChC,CAAC,CAAC,IAAI,CACL,MAAM,CACJ,CAAC,KAAK,2BAA2B,CAIhC,KAAK,2BAA2B,CAAC,OAAO,CAC1C,EACD,SAAS,CACP,CAAC,CAAC,aAAa,EAAE,qBAAqB,IAIrC;oBACC,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;wBACjC,MAAM,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAC/E,aAAa,CACd,CAAC;wBACF,OAAO,EAAE,CAAC;4BACR,qBAAqB;4BACrB,qBAAqB;yBACtB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CAAC,YAAY,EAAE,yBAAyB,CAGxC;4BACC,IACE,YAAY;gCACZ,EACE,yBAAyB,CAAC,OAAO;oCACjC,yBAAyB,CAAC,KAAK;oCAC/B,yBAAyB,CAAC,OAAO,CAClC,EACD;gCACA,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAC1C,YAAY,CACb,CAAC;6BACH;yBACF,CACF,EACD,MAAM,CACJ,CAAC,GAAG,yBAAyB,CAG5B;4BACC,QACE,CAAC,yBAAyB,CAAC,OAAO;gCAChC,yBAAyB,CAAC,KAAK;gCACjC,CAAC,yBAAyB,CAAC,OAAO,EAClC;yBACH,CACF,EACD,SAAS,CACP,CAAC,GAAG,yBAAyB,CAG5B;4BACC,IAAI,yBAAyB,CAAC,OAAO,EAAE;gCACrC,OAAO,IAAI,CAAC,sBAAsB,CAAC,2BAA2B,EAAE,CAAC;6BAClE;4BACD,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;yBAClB,CACF,EACD,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAC3B,CAAC;qBACH;oBACD,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;iBAClB,CACF,CACF,CAAC;aACH;iBAAM;gBACL,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;aAClB;SACF,CACF,CACF,CAAC;KACH;IAES,sBAAsB;QAC9B,IAAI,CAAC,uBAAuB,CAAC,8BAA8B,EAAE,CAAC;QAC9D,IAAI,CAAC,sBAAsB,CAAC,6BAA6B,EAAE,CAAC;QAC5D,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,EAAE,CAAC;KAC5D;IAEM,4BAA4B;QACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CACxE,GAAG,CAAC,CAAC,CAAC,eAAe,EAAE,gBAAgB,CAAC,KACtC,OAAO,CAAC,eAAe,IAAI,gBAAgB,CAAC,CAC7C,CACF,CAAC;KACH;CACF;iYAAA;;YA1PiC,kBAAkB;YAClB,kBAAkB;YACb,uBAAuB;YACxB,sBAAsB;YACtB,sBAAsB;YACvB,qBAAqB;;wYAclD,AAwOR;AAjQa;qBAAsB,oBAHlC,rCCLY,aAAa,GAA1B,MAAa,aAAa;SDKf,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,sBAAsB,CAgQlC,rECrQC,YACY,MAAc,EACd,oBAA0C,EAC1C,qBAA4C,EAC5C,sBAA8C,EAC9C,iBAAoC;QAJpC,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,sBAAiB,GAAjB,iBAAiB,CAAmB;QAE9C,IAAI,CAAC,UAAU,GAAG,EAAE,CAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CACtC,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,EAAE,CACvD,CAAC,KAAK,CAAC,CAAC,CAAC,CACX,CACF,CAAC;KACH;IAED,WAAW;QACT,IACE,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAAE;YAC9C,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EACrC;YACA,OAAO,IAAI,CAAC,sBAAsB,CAAC,4BAA4B,EAAE,CAAC,IAAI,CACpE,SAAS,CAAC,CAAC,uBAAgC;gBACzC,OAAO,uBAAuB;sBAC1B,EAAE,CACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CACtC,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAC7C,gBAAgB,CAAC,YAAY,CAC9B,CACF,CAAC,KAAK,CAAC,CAAC,CAAC,CACX,CACF;sBACD,IAAI,CAAC,UAAU,CAAC;aACrB,CAAC,CACH,CAAC;SACH;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;CACF;sSAAA;;YAtCqB,MAAM;YACQ,oBAAoB;YACnB,qBAAqB;YACpB,sBAAsB;YAC3B,iBAAiB;;kTAaX,AAsBvC;AA3Ca;YAAa,oBAHzB,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,nECHP,6BAA6B,GAA1C,MAAa,6BAA6B;IDIzC,CAAC,IACW,LCJX,iBAAgB;ADIQ,CA0CzB,AC7CA;;EAAA,CAFY,6BAA6B,oBALzC,SAAS,CAAC,UACT,QAAQ,EAAE,0BAA0B,UACpC,YAAqD,UACrD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,6BAA6B,CAEzC,+CACD;;ICkBa,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;;;;;;;;;;;;;EAAA,CAA7B,0BAA0B,OACvC;;WAnBC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,SAAS,pECJE,6BAA6B,GAA1C,MAAa,6BAA6B;ADI7B,cACT,oBAAoB,CAAC,/BCFvB,YAAsB,iBAAoC;mBDEd,CAAC,cAC3C,1BCHoB,sBAAiB,GAAjB,iBAAiB,CAAmB;EDGpC,CAAY,kBAC9B,aAAa,EAAE,5BCHjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;CDI5C,ICHL;CACF;YDE2B,EAAE,0BACpB,SAAS,EAAE,6BAA6B,0BACxC,MAAM,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,aAAa,CAAC,uBAC9D;gBACF,eACF,CAAC,cACF,EAAE,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,EAAE,WACjD,UACD,YAAY,EAAE,CAAC,6BAA6B,CAAC,UAC7C,eAAe,EAAE,CAAC,6BAA6B,CAAC,UAChD,OAAO,EAAE,CAAC,6BAA6B,CAAC;KACzC,CAAC,IACW,0BAA0B,CAAG;;;;iHCdzC;;YAH0C,iBAAiB;EAC3D,AAGD;AAPa;4BAA6B,oBALzC,SAAS,CAAC,tDCkBE,0BAA0B,GAAvC,MAAa,0BAA0B;ADjBrC,CCiBwC;KDjBhC,EAAE,2BAA2B,UACrC;uBAAsD,UACtD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,6BAA6B,CAMzC;;;;;;;;ECOyC,CAA7B,0BAA0B,oBAftC,KAgBD;;CAhBS,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC,UACzC,SAAS,EAAE,cACT,pFCES,qCAAqC,GAAlD,MAAa,qCAAqC;kBDF1B,CAAY,kBAC9B,aAAa,EAAE,hDCEnB,YACY,MAAsB,EACtB,cAA8B,EAC9B,oBAA0C;UDJhD,FCEM,WAAM,GAAN,MAAM,CAAgB;ADFR,EAAE,0BACpB,SAAS,EAAE,/BCEP,mBAAc,GAAd,cAAc,CAAgB;sBDFM,uBACzC,rCCEK,yBAAoB,GAApB,oBAAoB,CAAsB;KAClD;ADFC,eACF,CAAC,ZCQJ,QAAQ;UDPP,UACD,YAAY,EAAE,CAAC,3BCOb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;eDPE,CAAC,UAC7C,eAAe,EAAE,CAAC,6BAA6B,CAAC,UAChD,5ECME,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAC3D,GAAG,CAAC,MAAM;KDPP,EAAE,CAAC,6BAA6B,CAAC,OACzC,CAAC,IACW,tCCML,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;kBDNd,CAAG,PCQlC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK;gBAC7B,MAAM,QAAQ,GAAG,IACf,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAClE,EAAE,CAAC;gBACH,IAAI,QAAQ,KAAK,IAAI,CAAC,aAAa,EAAE;oBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ,CAAC,CACH,CAAC;KACH;CACF;;;;;;;yHAAA;;YA3BqB,cAAc;YACN,cAAc;YACR,oBAAoB;EACpD,AAyBJ;AA9Ba;oCAAqC,oBAJjD,SAAS,CAAC,UACT,xECuBW,kCAAkC,GAA/C,MAAa,kCAAkC;ADvBrC,EAAE,DCuBsC;mCDvBF,UAC9C;;gDAA+D;CAChE,CAAC,IACW;YAAqC,CA6BjD;;;;;;;ECTiD,CAArC,kCAAkC,oBAjB9C,QAAQ,CAAC,OAkBV;;CAjBE,OAAO,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,CAAC,UAC5D,SAAS,EAAE,9ECAA,kCAAkC,GAA/C,MAAa,kCAAkC;YDC3C,oBAAoB,CAAC,qBAAqB,CAAC,cAC3C,jECDF,YACY,MAAsB,EACtB,cAA8B,EAC9B,oBAA0C,EAC1C,iBAAoC;MDH1B,CAAY,kBAC9B,jBCDQ,WAAM,GAAN,MAAM,CAAgB;QDCjB,EAAE,sBACb,xBCDM,mBAAc,GAAd,cAAc,CAAgB;cDCR,EAAE,0BAC5B,SAAS,EAAE,7CCDP,yBAAoB,GAApB,oBAAoB,CAAsB;gCDCE,xBCA5C,sBAAiB,GAAjB,iBAAiB,CAAmB;KAC5C;ADAI,MAAM,EAAE,CAAC,LCQjB,QAAQ;SDR0B,EAAE,iBAAiB,CAAC,rBCSpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;GDRnC,mBACF,eACF,CAAC,WACH,zCCMC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;EDLlD,YAAY,EAAE,CAAC,qCAAqC,CAAC,UACrD,eAAe,EAAE,CAAC,3ECKhB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAC3D,GAAG,CAAC,MAAM;kCDNyC,CAAC,UACxD,OAAO,EAAE,CAAC,3CCMJ,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;kCDNJ,CAAC,OACjD,CAAC,IACW,nCCML,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK;+BDNQ,CAAG,hBCOxC,MAAM,QAAQ,GAAG,IACf,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAClE,EAAE,CAAC;gBACH,IAAI,QAAQ,KAAK,IAAI,CAAC,aAAa,EAAE;oBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ,CAAC,CACH,CAAC;KACH;CACF;;;;;;;4JAAA;;YA9BqB,cAAc;YACN,cAAc;YACR,oBAAoB;YACvB,iBAAiB;EAC9C,AA2BJ;AAjCa;iCAAkC,oBAJ9C,SAAS,CAAC,UACT,rECkBW,+BAA+B,GAA5C,MAAa,+BAA+B;CAAG;ADlBrC,EAAE,iCAAiC,UAC3C;;;;;;;;;;;ECiB6C,CAAlC,+BAA+B,oBAjB3C,QAAQ,CAAC,UACR,AAiBF;;KAjBS,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,CAAC,tDCHjD,yBAAyB,GAAtC,MAAa,yBAAyB;EDIpC,SAAS,EAAE,cACT,oBAAoB,CAAC,5CCJvB,YACY,MAAsB,EACtB,cAA8B,EAC9B,oBAA0C;KDCV,CAAC,cAC3C,ZCJU,WAAM,GAAN,MAAM,CAAgB;UDIZ,CAAY,kBAC9B,aAAa,EAAE,pCCJP,mBAAc,GAAd,cAAc,CAAgB;oBDKpC,yBAAyB,EAAE,vCCJrB,yBAAoB,GAApB,oBAAoB,CAAsB;KAClD;SDII,LCGR,QAAQ;cFVoD,MAC7D,CAAC,IACW,xBCKM,EAAE,kCAAkC,7BCInD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;UFTG,CAgC9C,GC1BS,MAAM,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,uBAC/C,3ECGL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAC3D,GAAG,CAAC,MAAM;gBDHT,eACF,CAAC,WACH,UACD,zCCCM,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;ODDvC,EAAE,CAAC,kCAAkC,CAAC,jCCG5C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK;KDFrC,eAAe,EAAE,CAAC,kCAAkC,CAAC,UACrD,OAAO,EAAE,CAAC,9DCEF,MAAM,QAAQ,GAAG,IACf,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAClE,EAAE,CAAC;MDJiC,CAAC,OAC9C,CAAC,IACW,+BAA+B,CAAG,nCCGrC,IAAI,QAAQ,KAAK,IAAI,CAAC,aAAa,EAAE;oBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ,CAAC,CACH,CAAC;KACH;IAED,WAAW,CAAC,SAAiB;QAC3B,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAC1E;IAED,QAAQ,CAAC,KAAa;QACpB,OAAO,KAAK,KAAK,IAAI,CAAC,eAAe,CAAC;KACvC;IAED,UAAU,CAAC,KAAa;QACtB,OAAO,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;KACrC;CACF;;;;;;;wLAAA;;YAvCqB,cAAc;YACN,cAAc;YACR,oBAAoB;EACpD,AAqCJ;AA1Ca;wBAAyB,oBALrC,SAAS,CAAC,lDC2BE,sBAAsB,GAAnC,MAAa,sBAAsB;CAAG;CD1BpC,QAAQ,EAAE,sBAAsB,UAChC;;;;;;;;;;;mDAAiD;GACjD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,3DCsByB,CAAzB,sBAAsB,oBAlBlC,QAAQ,CAAC,UACR,OAAO,EAAE,AAkBX;AAlBY;WDL0B,CAyCrC,DCpCuB,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,CAAC,UAC5D,vDCNW,uBAAuB,GAApC,MAAa,uBAAuB;SDMtB,EAAE,CAAC,yBAAyB,CAAC,UACzC,eAAe,EAAE,CAAC,yBAAyB,CAAC,xFCN5C,YACU,sBAA8C,EAC9C,qBAA4C,EAC5C,oBAA0C,EAC1C,MAAc;ODGxB,OAAO,EAAE,CAAC,yBAAyB,CAAC,UACpC,7CCPU,2BAAsB,GAAtB,sBAAsB,CAAwB;ADO/C,EAAE,cACT,oBAAoB,CAAC,qBAAqB,CAAC,nDCPnC,0BAAqB,GAArB,qBAAqB,CAAuB;aDQpD,oBAAoB,CAAY,kBAC9B,5CCRM,yBAAoB,GAApB,oBAAoB,CAAsB;ODQnC,EAAE,DCPT,WAAM,GAAN,MAAM,CAAQ;CDQlB,ICPF;WDOkB,EAAE,TCLxB,WAAW;mBDMH,SAAS,EAAE,yBAAyB,0BACpC,MAAM,EAAE,CAAC,iBAAiB,nGCNhC,MAAM,YAAY,GAAiB,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAC3E,gBAAgB,CAAC,gBAAgB,CAClC,CAAC;CDIgC,iBAAiB,CAAC,uBAC/C,lCCHL,IAAI,CAAC,YAAY,IAAI,SAAS,EAAE,EAAE;iBDI/B,eACF,CAAC,cACF,EAAE,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,EAAE,WACjD,OACF,CAAC,tGCPI,OAAO,CAAC,IAAI,CACV,0BAA0B,gBAAgB,CAAC,gBAAgB,6BAA6B,CACzF,CAAC;EDMK,OCLR;cDK8B,CAAG,PCHlC,OAAO,IAAI,CAAC,sBAAsB;aAC/B,kBAAkB,EAAE;aACpB,IAAI,CACH,GAAG,CAAC,CAAC,eAAwB,KAC3B,eAAe,IAAI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM;cAClD,IAAI;cACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,YAAY;gBACV,IAAI,CAAC,oBAAoB,CAAC,cAAc,CACtC,YAAY,CAAC,SAAS,CACvB,CAAC,KAAK,CAAC,CAAC,CAAC,CACb,CACN,CACF,CAAC;KACL;CACF;yRAAA;;YAhCmC,sBAAsB;YACvB,qBAAqB;YACtB,oBAAoB;YAClC,MAAM;;6TAUgD,AAoB1E;AAnCa;sBAAuB,oBAHnC,UAAU,CAAC,jDCaC,qBAAqB,GAAlC,MAAa,qBAAqB;KDZhC,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,uBAAuB,CAkCnC,vDCVC,YACU,EAAe,EACf,uBAAgD,EAChD,cAA8B,EAC9B,qBAA4C,EAC5C,cAA8B;QAJ9B,OAAE,GAAF,EAAE,CAAa;QACf,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,mBAAc,GAAd,cAAc,CAAgB;QAC9B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,mBAAc,GAAd,cAAc,CAAgB;QAbhC,kBAAa,GAAG,KAAK,CAAC;QAI9B,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,cAAc,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SAC1C,CAAC,CAAC;KAQC;IAEJ,QAAQ;QACN,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAC1E,IAAI,CAAC,cAAc,CACpB,CAAC;QACF,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAClF,IAAI,CAAC,cAAc,CACpB,CAAC;QAEF,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,EAAE,CAAC;QAExF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB;aAChD,IAAI,CACH,cAAc,CACZ,IAAI,CAAC,uBAAuB;aACzB,uBAAuB,EAAE;aACzB,IAAI,CACH,GAAG,CAAC,CAAC,YAA0B,KAC7B,YAAY,IAAI,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,GAAG,IAAI,CAC7D,CACF,CACJ,CACF;aACA,SAAS,CAAC,CAAC,CAAC,aAAa,EAAE,IAAI,CAA2B;YACzD,IAAI,CAAC,IAAI,IAAI,aAAa,IAAI,aAAa,CAAC,MAAM,EAAE;gBAClD,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CACxD,aAAa,CACd,CAAC;aACH;YACD,IACE,IAAI,CAAC,aAAa;gBAClB,CAAC,CAAC,IAAI;gBACN,IAAI,KAAK,IAAI,CAAC,qBAAqB,EACnC;gBACA,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACrD;SACF,CAAC,CAAC;KACN;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,IAAI,KAAK,IAAI,CAAC,qBAAqB,EAAE;YACvC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;SACnC;KACF;IAED,IAAI;QACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;gBAC/B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;aAC7D;YACD,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SAC1E;QACD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;KAClD;IAED,IAAI;QACF,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;KACtD;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC;KACrD;IAED,WAAW;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACpC;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sUAAA;;YA/Ee,WAAW;YACU,uBAAuB;YAChC,cAAc;YACP,qBAAqB;YAC5B,cAAc;EACtC,AA2EJ;AA/Fa;oBAAqB,oBALjC,SAAS,CAAC,9CCaE,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;KDZhC,QAAQ,EAAE,kBAAkB,UAC5B;;;;;;;;;;;;;;ECWgC,CAArB,kBAAkB,oBApB9B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,AAoB1B;;iBApB6C,EAAE,UAAU,EAAE,aAAa,CAAC,UACvE,nDCAW,oBAAoB,GAAjC,MAAa,oBAAoB;QDAtB,EAAE,cACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,1ECDnB,YACU,sBAA8C,EAC9C,qBAA4C,EAC5C,oBAA0C,EAC1C,MAAc;KDFlB,oBAAoB,EAAE,0BACpB,7CCFE,2BAAsB,GAAtB,sBAAsB,CAAwB;ADEvC,EAAE,qBAAqB,0BAChC,MAAM,EAAE,jDCFN,0BAAqB,GAArB,qBAAqB,CAAuB;2BDG5C,iBAAiB,pCCFjB,yBAAoB,GAApB,oBAAoB,CAAsB;gBDG1C,RCFA,WAAM,GAAN,MAAM,CAAQ;GDEG,ECDvB;IAEJ,WAAW;ODAD,uBAAuB,2BACxB,uBACF,mBACF,3FCFH,MAAM,YAAY,GAAiB,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAC3E,gBAAgB,CAAC,aAAa,CAC/B,CAAC;SDCD,CAAC,WACH,UACD,YAAY,nCCDV,IAAI,CAAC,YAAY,IAAI,SAAS,EAAE,EAAE;CDCtB,CAAC,qBAAqB,CAAC,UACrC,eAAe,EAAE,CAAC,qBAAqB,CAAC,UACxC,OAAO,EAAE,CAAC,lFCFN,OAAO,CAAC,IAAI,CACV,0BAA0B,gBAAgB,CAAC,aAAa,6BAA6B,CACtF,CAAC;EDAyB,CAAC,MCC7B;ADAJ,CAAC,IACW,kBAAkB,CAAG,hBCC9B,OAAO,IAAI,CAAC,sBAAsB;aAC/B,2BAA2B,EAAE;aAC7B,IAAI,CACH,GAAG,CAAC,CAAC,IAAY,KACf,IAAI,IAAI,IAAI,CAAC,MAAM;cACf,IAAI;cACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,YAAY;gBACV,IAAI,CAAC,oBAAoB,CAAC,cAAc,CACtC,YAAY,CAAC,SAAS,CACvB,CAAC,KAAK,CAAC,CAAC,CAAC,CACb,CACN,CACF,CAAC;KACL;CACF;gRAAA;0CF3B8C;MAC7C,eAAe,EAAE,XENiB,sBAAsB;QFMhB,CAAC,MAAM,MAChD,CAAC,IACW,dEPsB,qBAAqB;UFOtB,CA8FjC,CEpGiC,oBAAoB;YAClC,MAAM;;iTAUuC,AAoBjE;AAnCa;mBAAoB,oBAHhC,UAAU,CAAC,UACV,xDCMW,2BAA2B,GAAxC,MAAa,2BAA2B;ADN5B,EAAE,MAAM,OACnB,CAAC,IACW,hBCcX,YAAsB,kBAAsC;EDd7B,CAkChC,KCpBuB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAF5D,qBAAgB,GAA4B,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;KAEZ;IAEhE,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACxC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EACjE,GAAG,CAAC,OAAO;YACT,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACrE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,aAAa,CAAC,MAAM,EAAE,CAAC;aACxB;iBAAM;gBACL,aAAa,CAAC,OAAO,EAAE,CAAC;aACzB;SACF,CAAC,CACH,CAAC;KACH;IAED,eAAe,CAAC,OAAgB;QAC9B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,QAAQ,CAClE,OAAO,CAAC,OAAO,CAChB,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC7C;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,QAAQ,CACtE,MAAM,CAAC,YAAY,CACpB,CAAC;KACH;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4UAAA;;YA5B2C,kBAAkB;;AAN5D;IADC,KAAK,EAAE;mEACkB;AAG1B;IADC,KAAK,EAAE;+DAC0B,CACpC,AA+BA;AAvCa;0BAA2B,oBALvC,SAAS,CAAC,pDCUE,wBAAwB,GAArC,MAAa,wBAAwB;EDTnC,DCSsC;ODT9B,EAAE,yBAAyB,UACnC;;;;;;;;ECQsC,CAA3B,WACb;;WADqC,oBAZpC,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,rECIS,+BAA+B,GAA5C,MAAa,+BAA+B;ODJ5B,cACZ,jBCMF,YAAsB,YAA0B;QDN3B,cACnB,WAAW,zBCKS,iBAAY,GAAZ,YAAY,CAAc;KDJ9C,YAAY,cACZ,vBCCF,cAAS,GAAG,SAAS,CAAC;KAE8B;GDHpC,CCYhB,QAAQ;ADXN,UAAU,WACX,UACD,YAAY,EAAE,CAAC,tCCUb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM;WDVb,CAAC,UAC3C,OAAO,EAAE,CAAC,lBCUJ,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;kBDVK,CAAC,OACvC,CAAC,IACW,jBCSL,IAAI,CAAC,cAAc,CAAC;KACzB;cDVkC,CAAG,XCYtC,UAAU,CAAC,MAAY;QACrB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;KAC5C;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BFvBqD;GACpD,eAAe,EAAE;gBAAuB,CAAC,MAAM,MAChD,CAAC,IACW;yBAA2B,CAsCvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gRElBA;;YAlBqC,YAAY;;AAGhD;IADC,KAAK,EAAE;2EACsB;AAE9B;IADC,KAAK,EAAE;uEACgB,CAC1B,AAaA;AAtBa;8BAA+B,oBAL3C,9CC8BY,oBAAoB,GAAjC,MAAa,oBAAoB;GD9BvB,CAAC,UACT,QAAQ,EAAE,+BAA+B,UACzC,7DCqFA,YACY,sBAA8C,EAC9C,uBAAgD,EAChD,kBAAsC,EACtC,oBAA0C,EAC5C,EAAe,EACf,YAA0B;QALxB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC5C,OAAE,GAAF,EAAE,CAAa;QACf,iBAAY,GAAZ,YAAY,CAAc;QA9DpC,cAAS,GAAG,SAAS,CAAC;QAKtB,WAAM,GAAgB,EAAE,CAAC;QACzB,UAAK,GAAe,EAAE,CAAC;QAMvB,0BAAqB,GAAG,IAAI,CAAC;QAS7B,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QAGjC,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;QAGpC,sBAAiB,GAAG,IAAI,YAAY,EAAO,CAAC;QAE5C,YAAO,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,cAAc,EAAE,CAAC,KAAK,CAAC;YACvB,iBAAiB,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC5C,UAAU,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACtB,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;aAChC,CAAC;YACF,WAAW,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACtC,UAAU,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACrC,GAAG,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;QAEH,mBAAc,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxC,SAAS,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACpB,YAAY,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;aAC1C,CAAC;YACF,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACrB,OAAO,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;aACrC,CAAC;YACF,UAAU,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;KASC;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC,IAAI,CACrE,GAAG,CAAC,SAAS;;YAEX,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;aAChD;SACF,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC,IAAI,CAC/D,GAAG,CAAC,SAAS;YACX,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvC,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,EAAE,CAAC;aACtD;SACF,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,EAAE,CAAC;QAC1E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,iCAAiC,EAAE,CAAC;QAEhF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iCAAiC,EAAE,CAAC,SAAS,CACnE,CAAC,kBAA2B;;YAE1B,IAAI,CAAC,qBAAqB,GAAG,kBAAkB,CAAC;SACjD,CACF,CAAC;;QAGF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB;aACjD,6BAA6B,EAAE;aAC/B,SAAS,CAAC,CAAC,OAA0B;YACpC,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE;gBAC/B,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;aAChE;iBAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;iBAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,4BAA4B,EAAE,EACrC,iBAAiB,CAAC,cAAc,CACjC,CAAC;gBACF,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;aAChE;iBAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;aACpC;SACF,CAAC,CAAC;KACN;IAED,eAAe;YD/I2C,UAC1D,eAAe,EAAE,/BC+If,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;eD/IA,CAAC,MAAM,MAChD,CAAC,IACW,zBC8IT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;yBD9IW,CAqB3C,dC0HK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;SAChD;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,GAAG,EAAE,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aACvD;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aACjD;SACF;KACF;IAED,0BAA0B;QACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC;KACxE;IAED,eAAe,CAAC,IAAc;QAC5B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxE;IAED,aAAa,CAAC,KAAgB;QAC5B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAC3D;IAED,YAAY,CAAC,IAAc;QACzB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzD;IAED,2BAA2B;QACzB,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;KAC1D;;;;;;IAOD,iCAAiC;QAC/B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CACjE,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC;YACvB,QACE,OAAO,KAAK,SAAS;gBACrB,OAAO,CAAC,OAAO,KAAK,SAAS;gBAC7B,CAAC,CAAC,SAAS,CAAC,MAAM,CAChB,CAAC,OAAgB,KACf,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO,CAAC,OAAO,CAC9C,CAAC,MAAM,EACR;SACH,CAAC,CACH,CAAC;KACH;IAED,qBAAqB,CAAC,OAAgB;QACpC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;YAC5C,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;SACxC;QAED,OAAO;YACL,QAAQ,EAAE,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ;YACpD,IAAI,EAAE;gBACJ,OAAO,CAAC,KAAK;gBACb,OAAO,CAAC,KAAK;gBACb,OAAO,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO;gBACtD,OAAO,CAAC,UAAU;gBAClB,OAAO,CAAC,KAAK;aACd;SACF,CAAC;KACH;IAED,oBAAoB,CAAC,OAA0B;QAC7C,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAClC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CACpD,+BAA+B,EAC/B,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAC/B,CAAC;YACF,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YAC3F,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,kBAAkB;gBAChE,OAAO,CAAC,kBAAkB,CAAC;YAC7B,IAAI,CAAC,wBAAwB,CAAC,MAAM;iBACjC,IAAI,CAAC;gBACJ,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;gBAC/D,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACtC,CAAC;iBACD,KAAK,CAAC;;gBAEL,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;gBAC/D,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACtC,CAAC,CAAC;SACN;KACF;IAED,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACvB;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;IAED,aAAa;QACX,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SACvE;KACF;IAED,IAAI;QACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YAC1B,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;YAClC,cAAc,EAAE,IAAI,CAAC,qBAAqB;kBACtC,IAAI;kBACJ,IAAI,CAAC,cAAc,CAAC,KAAK;SAC9B,CAAC,CAAC;KACJ;IAED,WAAW;QACT,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;SAChC;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;SACrC;KACF;CACF;;;;;;;;;;;;oHAAA;;YAxLqC,sBAAsB;YACrB,uBAAuB;YAC5B,kBAAkB;YAChB,oBAAoB;YACxC,WAAW;YACD,YAAY;;AA/CpC;IADC,KAAK,EAAE;+DACmB;AAG3B;IADC,KAAK,EAAE;iEACoB;AAG5B;IADC,MAAM,EAAE;oDACwB;AAGjC;IADC,MAAM,EAAE;uDAC2B;AAGpC;IADC,MAAM,EAAE;+DACmC,CAC9C,AAsNA;AAnPa;mBAAoB,oBALhC,SAAS,CAAC,7CCTE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDU/B,QAAQ,EAAE,iBAAiB,UAC3B;;;;;;;;;;ECX+B,CAApB,WACb;;IAD8B,oBAf7B,QAAQ,CAAC,UACR,OAAO,EAAE,hDCmBE,sBAAsB,GAAnC,MAAa,sBAAsB;MDlB/B,YAAY,cACZ,mBAAmB,cACnB,cAAc,cACd,UAAU,cACV,wBAAwB,cACxB,UAAU,cACV,UAAU,cACV,vMC0BF,YACY,kBAAsC,EACtC,eAAgC,EAChC,uBAAgD,EAChD,sBAA8C,EAC9C,oBAA0C,EAC1C,cAA8B,EAC9B,qBAA4C,EAC5C,cAA8B,EAC9B,WAA+B,EAC/B,iBAAoC;GDpCjC,WACd,UACD,YAAY,EAAE,CAAC,/BCyBH,uBAAkB,GAAlB,kBAAkB,CAAoB;KDzBf,CAAC,UACpC,eAAe,EAAE,CAAC,1BCyBN,oBAAe,GAAf,eAAe,CAAiB;MDzBN,CAAC,UACvC,OAAO,EAAE,CAAC,oBAAoB,CAAC,OAChC,CAAC,IACW,pDCuBC,4BAAuB,GAAvB,uBAAuB,CAAyB;aDvBhC,CAAG,NCwBnB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAxBhD,cAAS,GAAG,SAAS,CAAC;QACtB,iCAA4B,GAAG,KAAK,CAAC;QAKrC,oBAAe,GAAG,KAAK,CAAC;KAmBpB;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;QAErE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE;YACzC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;SAC9C;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;QAED,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAC1E,IAAI,CAAC,cAAc,CACpB,CAAC;QAEF,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAClF,IAAI,CAAC,cAAc,CACpB,CAAC;QAEF,IAAI,CAAC,uBAAuB;aACzB,kBAAkB,EAAE;aACpB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,OAAgB;YAC1B,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;SAChC,CAAC,CAAC;QAEL,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QAC3E,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB;aACpD,iBAAiB,EAAE;aACnB,IAAI,CACH,MAAM,CAAC,WAAW,IAAI,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CACxE;aACA,SAAS,CAAC,WAAW;YACpB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;gBAC5B,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;aACpC;iBAAM;gBACL,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,GAAG;oBAClC,IAAI,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;wBAClC,IAAI,CAAC,kCAAkC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC3D;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aAC3C;SACF,CAAC,CAAC;KACN;IAED,cAAc,CAAC,OAAuB;QACpC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,OAAO,CAAC,cAAc,EAAE;YACnD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;SAChC;QAED,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBAChD,KAAK,EAAE,OAAO,CAAC,WAAW;gBAC1B,IAAI,EAAE,OAAO,CAAC,UAAU;aACzB,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4BAA4B,CAAC;YACxD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,kCAAkC,CAAC;YAC9D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC;SACnD,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,WAAW,EACX,kBAAkB,EAClB,wBAAwB,EACxB,YAAY,EACb;YACC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBAC9B,WAAW;gBACX,kBAAkB;gBAClB,wBAAwB;gBACxB,YAAY;aACb,CAAC,CAAC;SACJ,CACF,CACF,CAAC;KACH;IAED,mBAAmB,CAAC,cAA8B;QAChD,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;KACvC;IAED,kBAAkB;QAChB,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;KAC1C;IAED,kBAAkB;QAChB,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;KAC3C;IAED,iBAAiB,CAAC,EAChB,cAAc,EACd,cAAc,EACd,YAAY,GAAG,IAAI,GAKpB;QACC,MAAM,OAAO,qBAAwB,cAAc,CAAE,CAAC;QACtD,OAAO,CAAC,cAAc,GAAG,cAAc,IAAI,IAAI,CAAC,eAAe,CAAC;QAEhE,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;SAC3D;aAAM,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAE;YACzE,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;SACxD;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;IAED,WAAW;QACT,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACzC;QAED,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAC;KACrD;IAES,WAAW,CAAC,IAAY;QAChC,IAAI,MAAc,CAAC;QACnB,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC9B;aAAM,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,qBAAqB,EAAE;YAC9D,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SACrC;aAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC5B,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SACrC;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YAC1B,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC9B;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SACrC;QAED,OAAO,MAAM,CAAC;KACf;IAES,kCAAkC,CAAC,GAAW;QACtD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;YACE,GAAG,EAAE,6BAA6B;YAClC,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;SACvB,EACD,iBAAiB,CAAC,cAAc,CACjC,CAAC;KACH;IAES,UAAU,CAAC,cAAc,EAAE,UAAU;QAC7C,OAAO;YACL,KAAK,EAAE,cAAc,CAAC,cAAc;kBAChC,UAAU,CAAC,wBAAwB;kBACnC,EAAE;YACN,QAAQ,EAAE,cAAc,CAAC,iBAAiB;YAC1C,IAAI,EAAE,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,WAAW,CAAC;YACzD,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC;YACnD,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,kBAAkB,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YACjE,MAAM,EACJ,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,cAAc,CAAC,EAAE;kBACjE,UAAU,CAAC,YAAY;kBACvB,SAAS;SAChB,CAAC;KACH;IAED,MAAM;QACJ,IAAI,CAAC,iBAAiB,CAAC;YACrB,cAAc,EAAE,IAAI,CAAC,eAAe;YACpC,YAAY,EAAE,KAAK;SACpB,CAAC,CAAC;KACJ;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;KACtD;CACF;gKFpM6C,UAC5C,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,oBAAoB,CAkPhC;;;;;;;;oHEjDA;;YA1LiC,kBAAkB;YACrB,eAAe;YACP,uBAAuB;YACxB,sBAAsB;YACxB,oBAAoB;YAC1B,cAAc;YACP,qBAAqB;YAC5B,cAAc;YACjB,kBAAkB;YACZ,iBAAiB;EAC9C,AAiLJ;AA3Ma;qBAAsB,oBALlC,SAAS,CAAC,/CCeE,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;IDdjC,QAAQ,EAAE,mBAAmB,UAC7B;;;;;;;;;;;;;;;;;;;;;;ECaiC,CAAtB,WACb;;MADgC,oBA5B/B,QAAQ,CAAC,UACR,OAAO,hDCGI,mBAAmB,GAAhC,MAAa,mBAAmB;ADHrB,cACP,YAAY,cACZ,pCCKF,YACU,eAAgC,EAChC,cAA8B;CDP1B,cACZ,iBAAiB,cACjB,tCCIQ,oBAAe,GAAf,eAAe,CAAiB;QDJ9B,cACV,aAAa,3BCIL,mBAAc,GAAd,cAAc,CAAgB;GDHtC,UAAU,WACX,UACD,1BCJA,iBAAY,GAAG,KAAK,CAAC;KAMjB;EDFK,EAAE,cACT,dCGF,WAAW;kBDHW,CAAY,kBAC9B,7BCGF,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;EDHxB,EAAE,CCIlB;IAED,UAAU;CDLJ,sBAAsB,EAAE,jBCM5B,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;KACnC;EDNO,SAAS,EAAE,TCQnB,QAAQ;kBDRiC,0BACjC,MAAM,EAAE,5CCQd,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe;uBDP1C,VCQL,eAAe,EAAE;SDRK,8BACjB,iBAAiB,3CCQtB,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;kBDPjD,LCQL,SAAS,CAAC;UDRkB,8BACvB,oBAAoB,hDCQxB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC,CAAC;SAC1D,CAAC,CAAC;KDRE,ACSR;IAED,WAAW;EDVJ,mBACF,eACF,CAAC,7BCSF,IAAI,IAAI,CAAC,sBAAsB,EAAE;KDRlC,UACD,YAAY,EAAE,CAAC,sBAAsB,CAAC,zCCQlC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;QDP9C,CCQG;KACF;CACF;IDVgB,EAAE,CAAC,sBAAsB,CAAC,UACzC,OAAO,EAAE,CAAC,sBAAsB,CAAC,OAClC,CAAC,IACW,mBAAmB,CAAG;;;;;iFDba,UAC9C,eAAe,EAAE,uBAAuB;AAAC,MAAM,MAChD,CAAC,IACW;QAAsB,CA0MlC;;;;;;;;;;;;;;;;;;;;;;;;;;;yIEzLA;;YA1B4B,eAAe;YAChB,cAAc;EACtC,AAyBJ;AAhCa;kBAAmB,oBAL/B,SAAS,3CCiBG,gBAAgB,GAA7B,MAAa,gBAAgB;ADjBlB,CCiBqB;ODhB9B,QAAQ,EAAE,gBAAgB,UAC1B;;;;;;;;;;ECe8B,CAAnB,gBAAgB,oBAhB5B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,KAgBZ;;KAhBwB,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAC,UAC5D,jDCHW,sBAAsB,GAAnC,MAAa,sBAAsB;EDGxB,EAAE,cACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,sBACb,1FCLN,YACU,sBAA8C,EAC9C,qBAA4C,EAC5C,oBAA0C,EAC1C,MAAc;OFHmB,UAC3C,eAAe,EAAE,uBAAuB,CAAC,zCCGjB,EAAE,0BAClB,SAAS,EAAE,hDCLT,2BAAsB,GAAtB,sBAAsB,CAAwB;EFCT,MAChD,CAAC,IACW,mBAAmB,CA+B/B,pBC7BuC,0BAC9B,MAAM,EAAE,CAAC,xCCLP,0BAAqB,GAArB,qBAAqB,CAAuB;KDKpB,EAAE,iBAAiB,CAAC,uBAC/C,xCCLG,yBAAoB,GAApB,oBAAoB,CAAsB;SDM/C,eACF,CAAC,jBCNM,WAAM,GAAN,MAAM,CAAQ;KACpB;ADMH,UACD,NCLA,WAAW;EDKC,EAAE,CAAC,mBAAmB,CAAC,UACnC,eAAe,EAAE,CAAC,mBAAmB,CAAC,UACtC,OAAO,EAAE,CAAC,rFCNR,MAAM,YAAY,GAAiB,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAC3E,gBAAgB,CAAC,eAAe,CACjC,CAAC;KDIyB,CAAC,OAC/B,CAAC,IACW,gBAAgB,CAAG,3BCJ5B,IAAI,CAAC,YAAY,IAAI,SAAS,EAAE,EAAE;YAChC,OAAO,CAAC,IAAI,CACV,0BAA0B,gBAAgB,CAAC,eAAe,6BAA6B,CACxF,CAAC;SACH;QAED,OAAO,IAAI,CAAC,sBAAsB;aAC/B,iBAAiB,EAAE;aACnB,IAAI,CACH,GAAG,CAAC,cAAc,IAChB,cAAc,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,KAAK,CAAC;cACtD,IAAI;cACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,YAAY;gBACV,IAAI,CAAC,oBAAoB,CAAC,cAAc,CACtC,YAAY,CAAC,SAAS,CACvB,CAAC,KAAK,CAAC,CAAC,CAAC,CACb,CACN,CACF,CAAC;KACL;CACF;sRAAA;;YAhCmC,sBAAsB;YACvB,qBAAqB;YACtB,oBAAoB;YAClC,MAAM;;yTAU6C,AAoBvE;AAnCa;qBAAsB,oBAHlC,UAAU,CAAC,hDCmBC,qBAAqB,GAAlC,MAAa,qBAAqB;IDlBhC,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,sBAAsB,CAkClC,rDCPC,YACY,uBAAgD,EAChD,sBAA8C,EAC9C,kBAAsC,EACtC,iBAAoC,EACpC,WAA+B,EAC/B,qBAA4C,EAC5C,gBAAkC;QANlC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAoB;QAC/B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAjB9C,qBAAgB,GAAG,gBAAgB,CAAC;QAQpC,sBAAiB,GAAsB,iBAAiB,CAAC,UAAU,CAAC;KAUhE;IAEJ,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,EAAE,CAAC;QAC1E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,CAAC;QACvE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC9D,IAAI,CAAC,iBAAiB,CACvB,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB;aAC9C,uBAAuB,EAAE;aACzB,IAAI,CACH,GAAG,CAAC,CAAC,QAAsB;YACzB,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,uBAAuB,CAAC,0BAA0B,EAAE,CAAC;aAC3D;SACF,CAAC,CACH,CAAC;QAEJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAC5C,SAAS,CAAC,CAAC,OAAgB,KACzB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAC5D,EACD,GAAG,CAAC,CAAC,OAAgB;YACnB,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;aACjD;SACF,CAAC,EACF,GAAG,CAAC,CAAC,OAAgB,KAAK,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CACnD,CAAC;KACH;IAED,sBAAsB,CACpB,eAAwB,EACxB,WAAmB;QAEnB,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC;SACjD,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;YACd,IAAI,CAAC,WAAW,EAAE;gBAChB,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC;aAC/C;YAED,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,eAAe,CAAC,MAAM,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE;gBAC5D,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;aAChD;YAED,OAAO;gBACL,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,eAAe,CAAC,SAAS,GAAG,GAAG,GAAG,eAAe,CAAC,QAAQ;gBACpE,IAAI,EAAE;oBACJ,eAAe,CAAC,KAAK;oBACrB,eAAe,CAAC,KAAK;oBACrB,eAAe,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,WAAW;oBAClD,eAAe,CAAC,UAAU;oBAC1B,eAAe,CAAC,KAAK;iBACtB;aACF,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,mBAAmB,CAAC,YAA0B;QAC5C,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iCAAiC,CAAC;SAC9D,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;YACd,OAAO;gBACL,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,YAAY,CAAC,IAAI;gBAC3B,IAAI,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC;aACjC,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,oBAAoB,CAAC,cAA8B;QACjD,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBAChD,KAAK,EAAE,cAAc,CAAC,WAAW;gBACjC,IAAI,EAAE,cAAc,CAAC,UAAU;aAChC,CAAC;SACH,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC;YAC3B,OAAO;gBACL,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,cAAc,CAAC,iBAAiB;gBAC1C,IAAI,EAAE,CAAC,cAAc,CAAC,UAAU,EAAE,WAAW,CAAC;aAC/C,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,kBAAkB,CAAC,QAA0B;QAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAClE,OAAO,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;KAC/B;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uIAAA;;YA7GsC,uBAAuB;YACxB,sBAAsB;YAC1B,kBAAkB;YACnB,iBAAiB;YACvB,kBAAkB;YACR,qBAAqB;YAC1B,gBAAgB;EAC5C,AAuGJ;AA1Ha;oBAAqB,oBALjC,SAAS,CAAC,9CC4BE,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;KD3BhC,QAAQ,EAAE,kBAAkB,UAC5B;;;;;;;;;;;;;;;;;;;;;;;;;EC0BgC,CAArB,WACb;;KAD+B,oBA/B9B,QAAQ,CAAC,UACR,OAAO,EAAE,jDCeE,oBAAoB,GAAjC,MAAa,oBAAoB;WDd7B,YAAY,cACZ,UAAU,cACV,gBAAgB,cAChB,UAAU,cACV,/GC8DF,YACU,EAAe,EACb,uBAAgD,EAChD,WAAwB,EACxB,kBAAsC,EACtC,oBAA0C,EAC5C,YAA0B;QDpEzB,AC+DD,OAAE,GAAF,EAAE,CAAa;AD9DvB,YAAY,cACZ,gBAAgB,cAChB,hDC6DU,4BAAuB,GAAvB,uBAAuB,CAAyB;YD7DtC,WACrB,UACD,zBC4DY,gBAAW,GAAX,WAAW,CAAa;ED5D3B,EAAE,cACT,oBAAoB,CAAY,/BC4DtB,uBAAkB,GAAlB,kBAAkB,CAAoB;GD3D9C,aAAa,EAAE,sBACb,hCC2DM,yBAAoB,GAApB,oBAAoB,CAAsB;CD3D7B,EAAE,0BACnB,SAAS,EAAE,hCC2DT,iBAAY,GAAZ,YAAY,CAAc;mBD3DI,0BAChC,MAAM,EAAE,7CCIhB,qBAAgB,GAA4B,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;0BDHlE,lBCqBV,kBAAa,GAAG,IAAI,CAAC;QDrBM,8BACjB,9BCuBV,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;MDvBb,8BACjB,5BCyBV,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;UDzBP,FC+BjC,YAAO,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;CD9BzB,oBAAoB,TC+B5B,cAAc,EAAE,CAAC,KAAK,CAAC;cD9Bf,FC+BR,SAAS,EAAE,CAAC,EAAE,CAAC;OD/Be,2BACvB,tBC+BP,SAAS,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;OD9B/B,mBACF,eACF,CAAC,9BC6BF,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;ID5BpC,UACD,YAAY,EAAE,CAAC,jBC4Bb,KAAK,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;ID5BE,CAAC,UACrC,HC4BE,KAAK,EAAE,CAAC,EAAE,CAAC;KD5BE,EAAE,CAAC,qBAAqB,CAAC,UACxC,5BC4BE,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;ED5B1B,EAAE,CAAC,qBAAqB,CAAC,OACjC,CAAC,vBC4BE,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;GD3Bb,kBAAkB,CAAG,NC4B5B,OAAO,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;aACrC,CAAC;YACF,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACrB,OAAO,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC;aACrC,CAAC;YACF,UAAU,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACrC,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;KASC;IAEJ,QAAQ;;QAEN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC,IAAI,CACnE,GAAG,CAAC,SAAS;YACX,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;aACjD;SACF,CAAC,CACH,CAAC;;QAGF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,IAAI,CAC9C,GAAG,CAAC,MAAM;YACR,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;aAC/B;SACF,CAAC,EACF,GAAG,CAAC,MAAM;YACR,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxB,MAAM,SAAS,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;YAC9C,OAAO,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,CAAC;SAC/B,CAAC,CACH,CAAC;;QAGF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACxC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EACjE,GAAG,CAAC,OAAO;YACT,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACzD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,aAAa,CAAC,MAAM,EAAE,CAAC;aACxB;iBAAM;gBACL,aAAa,CAAC,OAAO,EAAE,CAAC;aACzB;SACF,CAAC,CACH,CAAC;;QAGF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB;aACjD,6BAA6B,EAAE;aAC/B,SAAS,CAAC,CAAC,OAA0B;wBFhHG,UAC7C,tBEgHM,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE;EFhHxB,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,qBAAqB,CAyHjC,nDEVS,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;aAChE;iBAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC7C;iBAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;;gBAExC,IACE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,WAAW,CAAC,EAClE;oBACA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,2BAA2B,EAAE,EACpC,iBAAiB,CAAC,cAAc,CACjC,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,4BAA4B,EAAE,EACrC,iBAAiB,CAAC,cAAc,CACjC,CAAC;iBACH;gBACD,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;aAChE;iBAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;aACpC;SACF,CAAC,CAAC;QAEL,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE1C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC9C;SACF;KACF;IAED,aAAa,CAAC,KAAY;QACxB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACzD;IAED,eAAe,CAAC,OAAgB;QAC9B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,QAAQ,CAC3D,OAAO,CAAC,OAAO,CAChB,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC7C;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,QAAQ,CAC1D,MAAM,CAAC,OAAO,CACf,CAAC;KACH;IAED,oBAAoB;QAClB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,QAAQ,CAC9C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAClC,CAAC;KACH;IAED,IAAI;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC3B;IAED,aAAa;QACX,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE;YACjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC7D,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CACtB,MAAM,IACJ,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,OAAO,CACnE,CAAC;gBACF,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE;oBACvC,YAAY,EAAE,GAAG,CAAC,YAAY;iBAC/B,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAChE;aAAM;;;YAGL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;KACF;IAED,oBAAoB,CAAC,OAA0B;QAC7C,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAClC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CACpD,+BAA+B,EAC/B,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAC/B,CAAC;YACF,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YACpF,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,kBAAkB;gBAChE,OAAO,CAAC,kBAAkB,CAAC;YAC7B,IAAI,CAAC,wBAAwB,CAAC,MAAM;iBACjC,IAAI,CAAC,OAAO;gBACX,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;gBAC/D,IAAI,OAAO,EAAE;oBACX,OAAO,GAAG,MAAM,CAAC,MAAM,CACrB;wBACE,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS;wBACvC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;wBAC/B,QAAQ,EAAE,IAAI;qBACf,EACD,OAAO,CACR,CAAC;oBACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAClC;gBACD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACtC,CAAC;iBACD,KAAK,CAAC;;gBAEL,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;gBAC/D,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAC3B;oBACE,QAAQ,EAAE,IAAI;iBACf,EACD,IAAI,CAAC,OAAO,CAAC,KAAK,CACnB,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACtC,CAAC,CAAC;SACN;KACF;IAED,WAAW;QACT,IAAI,CAAC,uBAAuB,CAAC,+BAA+B,EAAE,CAAC;QAE/D,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;SACrC;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;SAC/B;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iXAAA;;YAxLe,WAAW;YACY,uBAAuB;YACnC,WAAW;YACJ,kBAAkB;YAChB,oBAAoB;YAC9B,YAAY;;AAnDpC;IADC,KAAK,EAAE;yDACa;AAGrB;IADC,KAAK,EAAE;4DACe;AAGvB;IADC,KAAK,EAAE;4DACe;AAGvB;IADC,KAAK,EAAE;+DACmB;AAG3B;IADC,KAAK,EAAE;2DACe;AAGvB;IADC,KAAK,EAAE;2DACa;AAGrB;IADC,MAAM,EAAE;2DAC+B;AAGxC;IADC,MAAM,EAAE;2DAC+B,CAC1C,AAiNA;AA9Oa;mBAAoB,oBALhC,SAAS,CAAC,7CCPE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDQ/B,QAAQ,EAAE,iBAAiB,UAC3B;;;;;;;;;ECT+B,CAApB,WACb;;IAD8B,oBAd7B,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,9DCHS,0BAA0B,GAAvC,MAAa,0BAA0B;UDGvB,cACZ,pBCHF,YAAoB,sBAA8C;CDG7C,cACnB,WAAW,cACX,YAAY,5CCLM,2BAAsB,GAAtB,sBAAsB,CAAwB;IDMhE,CCNoE;YDMtD,RCJhB,WAAW;MDKT,UAAU,cACV,UAAU,WACX,UACD,rDCPE,OAAO,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,CAAC;GDOnD,EAAE,ACNb;ADMc,CCLhB;iBDKoC,EAAE,+BAA+B,CAAC,UACrE,eAAe,EAAE,CAAC,+BAA+B,CAAC,UAClD,OAAO,EAAE,CAAC,oBAAoB,EAAE,mBCPjC;WDOgE,CAAC,OACjE,CAAC,IACW,iBAAiB,CAAG;YCda,sBAAsB;;sPAMmE,AAAvI;AAPa;yBAA0B,oBAHtC,UAAU,CAAC,pDCmBC,wBAAwB,GAArC,MAAa,wBAAwB;EDlBnC,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,0BAA0B,CAMtC,vDCmBC,YACY,kBAAsC,EACtC,cAA8B,EAC9B,uBAAgD,EAChD,qBAA4C,EAC5C,cAA8B,EAC9B,WAA+B,EAC/B,iBAAoC;QANpC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAdhD,iCAA4B,GAAG,KAAK,CAAC;QAIrC,gBAAW,GAAG,KAAK,CAAC;QACpB,oBAAe,GAAG,KAAK,CAAC;KAUpB;IAEJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;QAChE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACjE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,EAAE,CAAC;QAE1E,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;YAC1B,IAAI,CAAC,kBAAkB;YACvB,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,wCAAwC,CAAC;YACpE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mCAAmC,CAAC;YAC/D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC;SACnD,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,SAAS,EACT,QAAQ,EACR,0BAA0B,EAC1B,qBAAqB,EACrB,YAAY,EACb;;YAEC,IACE,SAAS,CAAC,MAAM;iBACf,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,EACjD;gBACA,MAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CACnC,OAAO,IAAI,OAAO,CAAC,cAAc,CAClC,CAAC;gBACF,QAAQ,GAAG,cAAc,CAAC;gBAC1B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;aACpC;YACD,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO;gBAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAC9B,OAAO,EACP,QAAQ,EACR,0BAA0B,EAC1B,qBAAqB,EACrB,YAAY,CACb,CAAC;gBACF,OAAO;oBACL,OAAO;oBACP,IAAI;iBACL,CAAC;aACH,CAAC,CAAC;SACJ,CACF,CACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE;YACzC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;KACF;IAED,cAAc,CACZ,OAAgB,EAChB,QAAa,EACb,0BAAkC,EAClC,qBAA6B,EAC7B,YAAoB;QAEpB,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;YAC5C,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;SACxC;QAED,OAAO;YACL,KAAK,EAAE,OAAO,CAAC,cAAc,GAAG,0BAA0B,GAAG,EAAE;YAC/D,QAAQ,EAAE,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ;YACpD,IAAI,EAAE;gBACJ,OAAO,CAAC,KAAK;gBACb,OAAO,CAAC,KAAK;gBACb,OAAO,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO;gBACtD,OAAO,CAAC,UAAU;gBAClB,OAAO,CAAC,KAAK;aACd;YACD,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YACzD,MAAM,EAAE,QAAQ,IAAI,QAAQ,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,GAAG,YAAY,GAAG,EAAE;SACnE,CAAC;KACH;IAED,aAAa,CAAC,OAAgB;QAC5B,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;KAC1D;IAED,UAAU,CAAC,OAAgB;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ;YAC1D,IAAI,QAAQ,IAAI,QAAQ,CAAC,eAAe,EAAE;gBACxC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,WAAW,CAAC,WAAW,EAAE,CAAC;aAC3B;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS;YACvD,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC;kBACvB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;kBAC3B,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;SAC/D,CAAC,CAAC;KACJ;IAED,kBAAkB;QAChB,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;KAC1C;IAED,kBAAkB,CAAC,aAAsB,KAAK;QAC5C,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAC1C,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,EAAE,CACpB,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CACvE,CAAC;KACH;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,EAAE,CACpB,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CACnD,IAAI,CAAC,cAAc,CACpB,IAAI,MAAM,CACZ,CAAC;KACH;CACF;;;oEH3I6C,UAC5C,eAAe,EAAE;aAAuB,CAAC,MAAM,MAChD,CAAC,IACW;gBAAoB,CA6OhC;;;;oHGrGA;;YAzIiC,kBAAkB;YACtB,cAAc;YACL,uBAAuB;YACzB,qBAAqB;YAC5B,cAAc;YACjB,kBAAkB;YACZ,iBAAiB;EAC9C,AAmIJ;AApJa;uBAAwB,oBALpC,SAAS,CAAC,jDCwBE,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;EDvBnC,QAAQ,EAAE,qBAAqB,UAC/B;;;;;;;;;;;;;;;;;;;;;;;ECsBmC,CAAxB,WACb;;QADkC,oBA7BjC,QAAQ,CAAC,UACR,OAAO,EAAE,pDCgBE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;KDfnC,YAAY,cACZ,YAAY,cACZ,iBAAiB,cACjB;OAAU,cACV,aAAa,cACb,UAAU,cACV,+BAA+B,cAC/B,kCAAkC,WACnC;AACD,SAAS,EAAE,cACT;mBAAoB,CAAY,kBAC9B;WAAa,EAAE,sBACb;kBAAuB,EAAE;UACvB,SAAS,EAAE;AAAwB,0BACnC,MAAM,EAAE;gBACN;CAAiB,8BACjB;eAAiB;eACjB;WAA0B;MAC3B,uBACF;aACF,XCLgC,CAA1B,WACb;;YDKK,CAAC,WACH,UACD,YAAY,EAAE,CAAC,vCCRmB,oBAhBnC,QAAQ,CAAC,UACR,7CCJW,oBAAoB,GAAjC,MAAa,oBAAoB;iBF2BQ,CAAC,UACxC,eAAe,EAAE,CAAC,9CCxBX,EAAE,cACP,YAAY,cACZ,tCCLF,YACY,cAA8B,EAC9B,WAAwB,EACxB,iBAAoC;IFwBN,CAAC,UAC3C,OAAO,EAAE,CAAC,vBCvBkB,cAC1B,0BAA0B,lCCLhB,mBAAc,GAAd,cAAc,CAAgB;GF2BR,CAAC,OACpC,CAAC,IACW,qBAAqB,CAAG,5BCvBjC,sBAAsB,xBCLZ,gBAAW,GAAX,WAAW,CAAa;MDMlC,+BAA+B,cAC/B,3CCNU,sBAAiB,GAAjB,iBAAiB,CAAmB;KAC5C;IAEJ,WAAW;ODGyB,cAClC,kBAAkB,cAClB,7CCJA,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CACzC,GAAG,CAAC,KAAK;KDGQ,cACnB,gBAAgB,vBCHZ,IAAI,KAAK,CAAC,YAAY,EAAE;WDI5B,gBAAgB,cAChB,kBAAkB,3CCJZ,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;YDKlD,CCJK;mBDIgB,WACtB,OACF,CAAC,IACW,zBCPE,IAAI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE;IDOrB,CAAG,WCN7B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;gBAC5C,OAAO,KAAK,CAAC;aACd;YACD,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;SAC5B,CAAC,CACH,CAAC;KACH;CACF;yOAAA;;YAlB6B,cAAc;YACjB,WAAW;YACL,iBAAiB;;0QAS5C,AAQN;AArBa;mBAAoB,oBAHhC,UAAU,CAAC,UACV,5DCXF;OJsBkD,UAChD,eAAe,EAAE,/BGZP,EAAE,MAAM,OACnB,CAAC,IACW,vBCZb,AAMA;mBJgB0C,CAAC,MAAM,MAChD,3BGXgC,CAoBhC,NCzBD;AJgBE,IACW,wBAAwB,CAmJpC,7BInKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;;MChBpB,cAAc;CAEnC;AAED,MAAsB,QAAQ;CAK7B;AAED,IAAY,sBAGX;AAHD,WAAY,sBAAsB;IAChC,2CAAiB,CAAA;IACjB,yCAAe,CAAA;AACjB,CAAC,EAHW,sBAAsB,KAAtB,sBAAsB,QAGjC;;ICNY,eAAe,GAA5B,MAAa,eAAe;IAG1B,YACY,MAAsB,EACtB,oBAA0C;QAD1C,WAAM,GAAN,MAAM,CAAgB;QACtB,yBAAoB,GAApB,oBAAoB,CAAsB;QAJ9C,eAAU,GAAG,IAAI,eAAe,CAAa,EAAE,CAAC,CAAC;KAKrD;IAEJ,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,GAAG,CAAC,GAAW,EAAE,MAAmB;QAClC,MAAM,KAAK,GAAa,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAChD,QAAQ,IAAI,QAAQ,CAAC,GAAG,KAAK,GAAG,CACjC,CAAC;QAEF,IAAI,KAAK,EAAE;YACT,MAAM,QAAQ,GAAe,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACnD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACpD,MAAM;gBACN,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,GAAG;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC;KACF;IAED,MAAM,CAAC,GAAW;QAChB,MAAM,KAAK,GAAa,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAChD,QAAQ,IAAI,QAAQ,CAAC,GAAG,KAAK,GAAG,CACjC,CAAC;QAEF,IAAI,KAAK,EAAE;YACT,IAAI,QAAQ,GAAe,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACjD,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC;KACF;IAED,cAAc,CAAC,QAAkB;QAC/B,MAAM,MAAM,GACV,QAAQ,CAAC,MAAM,YAAY,WAAW;cAClC,QAAQ,CAAC,MAAM;cACd,QAAQ,CAAC,MAAkB,CAAC,aAAa,CAAC;;QAGjD,MAAM,cAAc,GAClB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;;QAGjE,MAAM,WAAW,GAAG,cAAc,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,EAAE;YAChB,cAAc,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SAC/C;QAED,cAAc,CAAC,KAAK,EAAE,CAAC;;QAGvB,IAAI,CAAC,WAAW,EAAE;YAChB,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SAC5C;KACF;IAES,uBAAuB,CAAC,GAAW;QAC3C,IAAI,KAAK,GAAW,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CACjD,QAAQ,IAAI,QAAQ,CAAC,GAAG,KAAK,GAAG,CACjC,CAAC;QAEF,OAAO,KAAK,GAAG,CAAC,EAAE;YAChB,KAAK,EAAE,CAAC;YACR,MAAM,QAAQ,GAAa,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxD,IAAI,QAAQ,EAAE;gBACZ,MAAM,QAAQ,GAAe,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBACnD,MAAM,KAAK,GAAW,QAAQ,CAAC,SAAS,CACtC,QAAQ,IAAI,QAAQ,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAC1C,CAAC;gBACF,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;oBACd,OAAO,KAAK,GAAG,CAAC,CAAC;iBAClB;aACF;SACF;QACD,OAAO,CAAC,CAAC;KACV;CACF;0KAAA;;YAjFqB,cAAc;YACA,oBAAoB;;kOAUpD,AAuEJ;AAtFa;cAAe,oBAH3B,UAAU,CAAC,zCCKC,iBAAiB,GAA9B,MAAa,iBAAiB;KDJ5B,UAAU,EAAE,MAAM,OACnB,CAAC,3BCMA,YAAoB,eAAgC;ADLzC,eAAe,CAqF3B,RChFqB,oBAAe,GAAf,eAAe,CAAiB;QAFpD,eAAU,GAA2B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;KAEjB;IAExD,cAAc,CAAC,QAAkB;QAC/B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KAC/C;CACF;;;;;;;6JAAA;;YALsC,eAAe;EACtD,AAKA;AATa;gBAAiB,VCRjB,qBAAqB,GAAmB;IDGpD,SAAS,CAAC,VCFT,SAAS,EAAE;ODGX,CCFE;KDEM,EAAE,cAAc,TCDpB,GAAG,EAAE,WAAW;CDEpB,WCDI,OAAO,EAAE,wBAAwB;SAClC;QACD;YACE,GAAG,EAAE,SAAS;YACd,OAAO,EAAE,sBAAsB;SAChC;QACD,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,wBAAwB,EAAE;KACxD;CACF;;kCDP0C,UACzC,xCEFW,iBAAiB,GAA9B,MAAa,iBAAiB;SFEb,EAAE,uBAAuB,CAAC,MAAM,rCEC/C,YACY,UAAmC,EACnC,eAAgC;AFF7C,CAAC,IACW,iBAAiB,CAQ7B,fERa,eAAU,GAAV,UAAU,CAAyB;QACnC,oBAAe,GAAf,eAAe,CAAiB;KACxC;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;KAC1E;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC9C;CACF;;0JAAA;;YAXyB,UAAU;YACL,eAAe;;AAJnC;IAAR,KAAK,EAAE;qDAAoB,CAC9B,AAcA;AAhBa;gBAAiB,oBAH7B,hCCuCY,cAAc,GAA3B,MAAa,cAAc;CDvCjB,CAAC,DCuCmB;SDtC5B,QAAQ,EAAE,cAAc,OACzB,CAAC,IACW,iBAAiB,CAe7B;;;;;;;;;;;;;;;ECqB6B,CAAjB,WACb;EAD2B,FAE3B;kBAxBC,QAAQ,CAAC,UACR,OAAO,EAAE;EACP;UAAY,cACZ,UAAU,cACV,YAAY,CAAC,7DAuBjB,SAAgB,eAAe,CAC7B,wBAAkD,EAClD,aAA4B;GAzBH,CAAC,qBAAqB,CAAC,tBA2BhD,MAAM,OAAO,GAAG;YA1Bd,mBAAmB,WACpB,UACD,YAAY,EAAE,CAAC,iBAAiB,EAAE,9EAyBhC,MAAM,OAAO,GAAG,wBAAwB,CAAC,uBAAuB,CAC9D,iBAAiB,CAClB,CAAC;UA3B+C,CAAC,UACpD,OAAO,EAAE,CAAC,iBAAiB,CAAC,UAC5B,eAAe,lEA0Bb,aAAa,CAAC,GAAG,CAAC,eAAe,EAAO,OAAO,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;AA1BzD,CAAC,IA2BjB,CAAC;WA3BiC,CAAC,RA4BpC,OAAO,OAAO,CAAC;AACjB,CAAC;AA3BC;QAAS,EAAE,cACT,oBAAoB,CAAC,zCCxBZ,oBAAoB,GAAjC,MAAa,oBAAoB;UDwBa,CAAC,cAC3C,rBCtBF,YAAY,MAAc;CDsBtB,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,EAAE,vCCxBlD,eAAU,GAA6B,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;ODyBhE,CCtBA,MAAM,CAAC,MAAM;GDuBX,OAAO,EAAE,eAAe,kBACxB,UAAU,EAAE,5CCvBX,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,YAAY,eAAe,CAAC,CAAC;GDuB7B,kBAC3B,IAAI,EAAE,CAAC,fCvBN,SAAS,CAAC;qBDuBoB,EAAE,XCtB/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KDsB0B,CAAC,GCrB9C,CAAC,CAAC;KACN;MDqBG;GAAK,EAAE,IAAI,eACZ,WACF,OACF,CAAC,IACW;OAAc;AAAG,ICpB5B,MAAM,CAAC,aAAuB;QAC5B,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC9C;KACF;CACF;iJAAA;;YAlBqB,MAAM;;8MAU1B,AASF;AAtBa;mBAAoB,oBAHhC,UAAU,CAAC,9CCIC,sBAAsB,GAAnC,MAAa,sBAAsB;ADHjC,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,1BCEX,YAAoB,oBAA0C;UDF/B,CAqBhC,HCnBqB,yBAAoB,GAApB,oBAAoB,CAAsB;KAAI;IAElE,MAAM;QACJ,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;KACpC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;KAC7C;CACF;;;;;;;;;;;;;;4EAAA;;YAT2C,oBAAoB;EAChE,AASA;AAXa;qBAAsB,oBALlC,SAAS,CAAC,/CCgBE,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;IDfjC,QAAQ,EAAE,mBAAmB,UAC7B;;;;;;;;;OAA8C,UAC9C,eAAe,EAAE,hCCagB,CAAtB,mBAAmB,cAChC;;mBDd0C,CAAC,MAAM,MAChD,CAAC,IACW,jCCJZ,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,7BCIC,YAAY,GAAzB,MAAa,YAAY;CAAG;gBFDO,CAUlC,fCbuB,CAAC,UACvB,SAAS,EAAE,cACT,oBAAoB,CAAY;QAC9B,aAAa,EAAE,sBACb,sBAAsB,EAAE,0BACtB,SAAS,EAAE,sBAAsB,uBAClC,mBACF,eACF,CAAC,WACH,UACD;EAAY,EAAE,CAAC,sBAAsB,CAAC,1BCNZ,CAAf,YAAY,aACzB;;QDME,OAAO,EAAE,CAAC,sBAAsB,CAAC,UACjC,eAAe,EAAE,CAAC,hECbnB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,eAAe,CAAC,UAC1B,SAAS,EAAE,CAAC,EAAE,tECIH,8BAA8B,GAA3C,MAAa,8BAA8B;eFOD,CAAC,XCXpB,EAAE,YAAY,fC6BnC;GFjBD,CAAC,IACW,mBAAmB,CAAG,3BCbI,WAAW,EAAE,MAAM,EAAE,CAAC,UAC3D,zBCIA,iBAAY,GAAG,KAAK,CAAC;KDJd,EAAE,CAAC,eAAe,CAAC,OAC3B,CAAC,xBCSA,qBAAgB,GAAa,EAAE,CAAC;ADRrB,YAAY,CAAG,LCW1B,+BAA0B,GAAG,KAAK,CAAC;;QAOnC,cAAS,GAAG,KAAK,CAAC;QAGlB,mBAAc,GAAG,IAAI,YAAY,EAG7B,CAAC;KAEW;IAEhB,QAAQ;QACN,IAAI,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,OAAO,EAAE;YACnD,IAAI,CAAC,YAAY,GAAG,OAAO,CACzB,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,wBAAwB,CAAC,KAAK,CAC7D,CAAC;SACH;aAAM;YACL,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;gBAC/D,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,oBAAoB,EAAE;oBAC5D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC3B;qBAAM,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,gBAAgB,EAAE;oBAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC1B;aACF;SACF;KACF;IAED,eAAe;QACb,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAEvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,KAAK,EAAE,IAAI,CAAC,YAAY;YACxB,QAAQ,EAAE,IAAI,CAAC,eAAe;SAC/B,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,UAAkB;QAC3B,OAAO,IAAI,CAAC,0BAA0B;cAClC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC;cAC1C,KAAK,CAAC;KACX;CACF;;;;;;;;;;;;;;;;;;;;;;;;wDAAA;AArDC;IADC,KAAK,EAAE;uEACyB;AAGjC;IADC,KAAK,EAAE;wEACwB;AAGhC;IADC,KAAK,EAAE;kFAC2B;AAGnC;IADC,KAAK,EAAE;+DACkB;AAI1B;IADC,KAAK,EAAE;iEACU;AAGlB;IADC,MAAM,EAAE;sEAIJ,CACP,AAkCA;AA1Da;6BAA8B,oBAJ1C,SAAS,CAAC,vDC2BE,0BAA0B,GAAvC,MAAa,0BAA0B;CD1BrC,QAAQ,EAAE,4BAA4B,UACtC,7CCmEA,YACU,kBAAsC,EACtC,oBAA0C,EAC1C,uBAAiD,EACjD,wBAAmD,EACnD,WAAyB;QAJzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,4BAAuB,GAAvB,uBAAuB,CAA0B;QACjD,6BAAwB,GAAxB,wBAAwB,CAA2B;QACnD,gBAAW,GAAX,WAAW,CAAc;QA9C3B,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QACnC,uBAAkB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAKjE,qBAAgB,GAAa,EAAE,CAAC;QAEhC,+BAA0B,GAAG,gBAAgB,CAC3C,IAAI,CAAC,uBAAuB,EAC5B,0BAA0B,CAC3B,CAAC;;QDrCqD,MACxD,CAAC,IACW,8BAA8B,CAyD1C,1CCnBC,cAAS,GAAG,cAAc,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;KAiC5D;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;YAC5B,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE;YAClD,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,EAAE;YACrD,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE;YACzD,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;YACjC,IAAI,CAAC,kBAAkB;SACxB,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,cAAc,EACd,kBAAkB,EAClB,sBAAsB,EACtB,cAAc,EACd,kBAAkB,EACnB,KACC,cAAc;YACd,kBAAkB;YAClB,sBAAsB;YACtB,CAAC,cAAc;YACf,kBAAkB,CACrB,CACF,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAEO,eAAe;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC,IAAI,CAC7D,cAAc,CACZ,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,EAC5C,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAClC,EACD,MAAM,CACJ,CAAC,CAAC,aAAa,EAAE,mBAAmB,EAAE,cAAc,CAAC,KAAK,cAAc,CACzE,EACD,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,mBAAmB,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;gBACtC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;SACF,CAAC,EACF,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,kBAAkB,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE;gBACpC,OAAO,YAAY,CAAC;aACrB;YAED,IAAI,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,EAAE;gBAC3D,IACE,OAAO,CACL,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,gBAAgB,CAChE,EACD;oBACA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;iBACzF;gBACD,IACE,OAAO,CACL,IAAI,CAAC,uBAAuB,CAAC,iBAAiB;qBAC3C,qBAAqB,CACzB,EACD;oBACA,OAAO,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;iBACrE;aACF;YAED,OAAO,YAAY,CAAC;SACrB,CAAC,CACH,CAAC;KACH;IAEO,qBAAqB,CAC3B,YAA+B,EAC/B,qBAAwC,EAAE;QAE1C,IAAI,eAAe,GAAa,EAAE,CAAC;QAEnC,IACE,CAAC,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,qBAAqB;aAClE,qBAAqB,EACxB;YACA,eAAe,GAAG,kBAAkB,CAAC,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClE,OAAO,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CACnD,YAAY,EACZ,eAAe,CAChB,CAAC;SACH;QAED,IACE,OAAO,CACL,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,qBAAqB;aACjE,YAAY,CAChB;YACD,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,qBAAqB;iBACjE,YAAY,CAAC,MAAM,GAAG,CAAC,EAC1B;YACA,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,iBAAiB;iBAC7D,qBAAqB,CAAC,YAAY,CAAC;SACvC;QAED,OAAO,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CACnD,YAAY,EACZ,eAAe,CAChB,CAAC;KACH;IAEO,eAAe;QACrB,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,CAAC;QACvD,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,kBAAkB;aACpB,2BAA2B,EAAE;aAC7B,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAC7D,CAAC;KACH;IAEO,mBAAmB;QACzB,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,kBAAkB;aACpB,+BAA+B,EAAE;aACjC,IAAI,CACH,SAAS,CAAC,OAAO,CAAC,EAClB,cAAc,CACZ,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE,CAC1D,EACD,GAAG,CAAC,CAAC,GAAG,iBAAiB,CAAC,KAAK,iBAAiB,CAAC,EACjD,GAAG,CAAC,iBAAiB;YACnB,IAAI,iBAAiB,EAAE;gBACrB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;SACF,CAAC,CACH;aACA,SAAS,CAAC,iBAAiB,IAC1B,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,CAClD,CACJ,CAAC;KACH;IAEO,cAAc,CAAC,YAA+B;QACpD,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;KACzD;IAED,eAAe,CAAC,EACd,KAAK,EACL,QAAQ,GAIT;QACC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;SACpE;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACvE;KACF;IAEO,qBAAqB,CAAC,OAAgB;QAC5C,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,CAAC;YACvD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,6CAA6C,EAAE,EACtD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;SACH;KACF;IAEO,yBAAyB,CAAC,OAAgB;QAChD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,CAAC;YAC3D,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,iDAAiD,EAAE,EAC1D,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;SACH;KACF;IAED,SAAS,CAAC,YAA+B,EAAE;QACzC,MAAM,kBAAkB,GAAsB,EAAE,CAAC;QACjD,SAAS,CAAC,OAAO,CAAC,QAAQ;YACxB,IAAI,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;gBACnE,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;iBACR;gBACD,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACnC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC;aAC3C,IAAI,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9D,SAAS,EAAE,CACf,CAAC;KACH;IAEO,qBAAqB,CAC3B,qBAAwC,EAAE;QAE1C,MAAM,QAAQ,GAAG,MAAM,CACrB,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,EAAE,CAC1D,CAAC,IAAI,CACJ,oBAAoB,EAAE,EACtB,MAAM,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAC5B,CAAC;QACF,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAC3B,GAAG,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CACrC,kBAAkB,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAC1C,CAAC;aACH;SACF,CAAC,CACH,CAAC;QACF,MAAM,iBAAiB,GAAG,SAAS,CAAC,IAAI,CACtC,MAAM,CAAC,WAAW,IAAI,WAAW,KAAK,kBAAkB,CAAC,MAAM,CAAC,CACjE,CAAC;QAEF,OAAO,iBAAiB,CAAC;KAC1B;IAED,QAAQ,CAAC,YAA+B,EAAE;QACxC,MAAM,cAAc,GAAsB,EAAE,CAAC;QAC7C,SAAS,CAAC,OAAO,CAAC,QAAQ;YACxB,IAAI,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;gBACvE,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;oBACpC,OAAO;iBACR;gBAED,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/B;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9D,SAAS,EAAE,CACf,CAAC;KACH;IAEO,eAAe,CACrB,iBAAoC,EAAE;QAEtC,MAAM,QAAQ,GAAG,MAAM,CACrB,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,EAAE,CACtD,CAAC,IAAI,CACJ,oBAAoB,EAAE,EACtB,MAAM,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAC5B,CAAC;QACF,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAC9B,GAAG,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE;gBAC7B,IAAI,CAAC,kBAAkB,CAAC,WAAW,CACjC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,EACpB,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAC1B,CAAC;aACH;SACF,CAAC,CACH,CAAC;QACF,MAAM,iBAAiB,GAAG,YAAY,CAAC,IAAI,CACzC,MAAM,CAAC,WAAW,IAAI,WAAW,KAAK,cAAc,CAAC,MAAM,CAAC,CAC7D,CAAC;QAEF,OAAO,iBAAiB,CAAC;KAC1B;IAEO,iBAAiB,CAAC,QAAyB;QACjD,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE;YACpC,OAAO,KAAK,CAAC;SACd;QAED,QACE,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;YACvD,OAAO,CACL,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,gBAAgB,CAChE;YACD,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CACtE,QAAQ,CAAC,EAAE,CACZ,EACD;KACH;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,EAAE,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,EAAE,CAAC;KAC5D;CACF;;;;;;;;2KAAA;;YA3S+B,kBAAkB;YAChB,oBAAoB;YAChB,uBAAuB;YACtB,wBAAwB;YACrC,WAAW;EACjC,AAuSJ;AAvVa;yBAA0B,oBAJtC,SAAS,CAAC,nDCOE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ADNrC,QAAQ,EAAE,uBAAuB,UACjC;;;;;;;;;;;;;;;;;ECKqC,CAA1B,WACb;;UADoC,oBAvBnC,QAAQ,CAAC,UACR,OAAO,EAAE,tDCKE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ODJnC,YAAY,cACZ,WAAW,cACX,mBAAmB;AACnB,aAAa,cACb,UAAU,cACV,UAAU,WACX,UACD,SAAS,EAAE,cACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE;WACb;WAA0B,EAAE;eAC1B;AAAS,EAAE;CAA0B,0BACrC,MAAM,EAAE,CAAC;QAAS,CAAC,PCRU,CAA1B,WACb;;gBDQS,mBACF,eACF,CAAC,zCCX8B,oBAZnC,QAAQ,CAAC,UACR,7CCaW,mBAAmB,GAAhC,MAAa,mBAAmB;QFU7B,UACD,YAAY,EAAE,CAAC,0BAA0B,EAAE,3DCxBpC,EAAE,cACP,YAAY,cACZ,UAAU,cACV,UAAU,1ECoCZ,YACU,oBAA0C,EAC1C,cAA8B,EAC5B,UAAmC,EACnC,oBAA0C;CFnBmB,CAAC,UAC1E,OAAO,EAAE,CAAC,0BAA0B,EAAE,hDCrBpC,aAAa,cACb,uBAAuB,5CCmCf,yBAAoB,GAApB,oBAAoB,CAAsB;sBFfgB,CAAC,UACrE,5BCpBC,UACD,YAAY,EAAE,CAAC,tBCkCL,mBAAc,GAAd,cAAc,CAAgB;EFfzB,EAAE,CAAC,0BAA0B,CAAC,jBCnBC,CAAC,UAC/C,lBCkCY,eAAU,GAAV,UAAU,CAAyB;CFfhD,CAAC,IACW,uBAAuB,CAAG,3BCpBtB,EAAE,CAAC,+BAA+B,CAAC,UAClD,OAAO,EAAE,jDCkCG,yBAAoB,GAApB,oBAAoB,CAAsB;ADlC5C,+BAA+B,CAAC,OAC3C,CAAC,IACW,pCCIX,gBAAW,GAAwB,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;EDJtC,CAAG;QCUZ,aAAQ,GAAG,GAAG,CAAC;QAIhC,wBAAmB,GAAgB;YACzC,aAAa,EAAE,IAAI;YACnB,mBAAmB,EAAE,IAAI;SAC1B,CAAC;KAgBE;IAbJ,YAAY,CAAC,KAAoB;QAC/B,IAAI,CAAC,oBAAoB,CAAC,YAAY,CACpC,IAAI,CAAC,UAAU,CAAC,aAAa,EAC7B,IAAI,CAAC,mBAAmB,EACxB,KAAK,CACN,CAAC;KACH;IASD,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc;aAC5C,YAAY,EAAE;aACd,SAAS,CAAC,GAAG;YACZ,IAAI,CAAC,eAAe,GAAG,GAAG,KAAK,IAAI,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,GAAG,KAAK,KAAK,CAAC;SACrC,CAAC,CAAC;KACN;IAED,0BAA0B,CAAC,KAAiB;QAC1C,IAAkB,KAAK,CAAC,MAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YACjE,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;IAED,YAAY;QACV,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACxC;IAED,WAAW;qBH1CuC,MACnD,CAAC,IACW,xBGyCT,IAAI,IAAI,CAAC,oBAAoB,EAAE;iBHzCI,CAsVtC,NG5SK,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACzC;KACF;CACF;;;;;;;;;;;;;;;;;;gFAAA;;YA9BiC,oBAAoB;YAC1B,cAAc;YAChB,UAAU;YACA,oBAAoB;;AA1Bf;IAAtC,WAAW,CAAC,wBAAwB,CAAC;4DAAiB;AACjB;IAArC,WAAW,CAAC,uBAAuB,CAAC;2DAAgB;AAG5B;IAAxB,WAAW,CAAC,UAAU,CAAC;qDAAgB;AAEV;IAA7B,SAAS,CAAC,iBAAiB,CAAC;kDAA0B;AAQvD;IADC,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC;uDAO1C,CACH,AAiCA;AA1Da;kBAAmB,dCcnB,UAAU,GAAvB,MAAa,UAAU;EDlBtB,DCkByB;QDlBhB,CAAC,UACT,QAAQ,EAAE,eAAe,UACzB;;;;;;;;;;;;;;;ECgBwB,CAAb,UAAU,CACvB;;AC3BA;aDMC,QAAQ,CAAC,UACR,OAAO,EAAE;;EACP,YAAY,cACZ,YAAY,cACZ,tDCFJ,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;oBDEJ,cAC5B,9BCgBF,YACU,aAAsC,EACtC,UAAsB;CDlBlB,cACZ,eAAe,tBCgBP,kBAAa,GAAb,aAAa,CAAyB;ADf9C,SAAS,cACT,fCeQ,eAAU,GAAV,UAAU,CAAY;CDfd,cAChB,SAAS,cACT,cAAc,cACd,uBAAuB,cACvB,oBAAoB,nHCTd,mBAAc,GAAsB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACvE,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,CAAQ,MAAM,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,MAAM,QAAQ,CAAC,CAAC,CACtD,CAAC;kDFFwC,MAC3C,CAAC,IACW,mBAAmB,CAyD/B,tECjDG,cAAc,cACd,mBAAmB,WACpB,UACD,YAAY,EAAE,CAAC,mBAAmB,CAAC,UACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC,OAC/B,CAAC,1JCXQ,WAAM,GAEV,IAAI,CAAC,cAAc,CAAC,IAAI,CAC1B,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAC3C,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CACxE,CAAC;ADOS,UAAU,CAAG;;;;QCDF,UAAK,GAAG,EAAE,CAAC;KAK7B;;;;;;IAOJ,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;CACF;;;;;;;;;;;;uGAAA;;YAZ0B,gBAAgB;YACnB,UAAU;;AAJV;IAArB,WAAW,CAAC,OAAO,CAAC;sDAAY,CACnC,AAeA;AAjCa;sBAAuB,oBALnC,SAAS,CAAC,hDCSE,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;GDRlC,QAAQ,EAAE,oBAAoB,UAC9B;;;;;;;EAA6C,UAC7C;;CAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,uBAAuB,CAgCnC,lEC5BmC,CAAvB,oBAAoB,oBAfhC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,AAe1B;;iBAf6C,EAAE,cAAc,EAAE,/BCClD,eAAe,GAA5B,MAAa,eAAe;ADD8C,CAAC,UACzE,SAAS,EAAE,lBCCX,YAAmB,SAA+C;ODAhE,oBAAoB,CAAC,pBCAJ,cAAS,GAAT,SAAS,CAAsC;KAAI;CACvE;CDAK,aAAa,EAAE,sBACb,uBAAuB,EAAE,0BACvB,SAAS,EAAE,uBAAuB;GACnC,mBACF,eACW,CAAC,WAChB,UACD,YAAY,EAAE,CAAC,uBAAuB,CAAC,UACvC,eAAe,EAAE,CAAC,uBAAuB,CAAC,UAC1C,OAAO,EAAE,CAAC,uBAAuB,CAAC,OACnC,CAAC,IACW,oBAAoB,CAAG;;;;;;4FCXnC;;YAD+B,gBAAgB;EAAK,AAErD;AAHa;cAAe,oBAL3B,9BCyBY,YAAY,GAAzB,MAAa,YAAY;CAAG;ADzBlB,CAAC,UACT,QAAQ,EAAE,WAAW,UACrB;;;;;;;;;SAAsC;AACtC,eAAe,EAAE,uBAAuB;AAAC,MAAM,MAChD,CAAC,IACW,eAAe,CAE3B;;;;ECkB2B,CAAf,YAAY,oBArBxB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,IAqB1B;;MArBsC,EAAE,iBAAiB,EAAE,WAAW,CAAC,nCCA1D,aAAa,GAA1B,MAAa,aAAa;ODCxB,SAAS,EAAE,dCAX,YAAmB,SAA6C;GDC9D,oBAAoB,CAAY,hBCDf,cAAS,GAAT,SAAS,CAAoC;KAAI;ADEhE,CCDL;UDCkB,EAAE,sBACb,+BAA+B,EAAE,0BAC/B,SAAS,EAAE,eAAe;KAC3B,sBACD,eAAe,EAAE,0BACf,SAAS,EAAE,eAAe,uBAC3B,sBACD,qBAAqB,EAAE,0BACrB,SAAS,EAAE,eAAe;IAC3B,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,eAAe,CAAC;CAC/B,eAAe,EAAE,CAAC,eAAe;AAAC,UAClC,OAAO,EAAE;AAAC,eAAe,CAAC,OAC3B,CAAC,IACW,YAAY,CAAG;6HClB3B;;YAD+B,gBAAgB;EAAK,AAErD;AAHa;YAAa,oBALzB,5BCgBY,UAAU,GAAvB,MAAa,UAAU;CAAG;EDhBhB,CAAC,UACT,QAAQ,EAAE,SAAS,UACnB;;oBAAoC,UACpC;cAAe,EAAE;UAAuB,CAAC,MAAM,MAChD,CAAC,IACW,aAAa,CAEzB;;;ECSyB,CAAb,UAAU,oBAbtB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,OAaZ;;GAbwB,EAAE,YAAY,EAAE,iBAAiB,CAAC,UACxD,3CCAW,kBAAkB,GAA/B,MAAa,kBAAkB;IDApB,EAAE,cACT,hBCAF,YAAmB,SAAkD;WDA/C,CAAY,kBAC9B,tBCDe,cAAS,GAAT,SAAS,CAAyC;KAAI;CDCxD,ACAlB;ADAoB,sBACb,gBAAgB,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,mBAC/C,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC;AAAa,CAAC,UAC7B,OAAO,EAAE,CAAC,aAAa,CAAC,UACxB,eAAe,EAAE,CAAC,aAAa,CAAC,OACjC,CAAC,IACW,UAAU,CAAG;;;;;uGCTzB;;YAD+B,gBAAgB;EAAK,AAErD;AAHa;iBAAkB,oBAL9B,SAAS,CAAC,3CCmBE,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;EDlBhC,QAAQ,EAAE,cAAc,UACxB;+CAAyC,UACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,kBAAkB,CAE9B;;;;;;;;;;;ECYiC,CAArB,kBAAkB,eAC/B;;GAnBC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,SAAS,EAAE,9DCsBA,8BAA8B,GAA3C,MAAa,8BAA8B;IDrBvC,oBAAoB,CAAY,kBAC9B,vCC+CJ,YACS,aAAyD,EACxD,UAAsB,EACtB,MAAkB;GDlDX,EAAE,sBACb,nBC+CG,kBAAa,GAAb,aAAa,CAA4C;ID/CvC,EAAE,0BACrB,xBC+CE,eAAU,GAAV,UAAU,CAAY;GD/Cf,EAAE,kBAAkB,fCgD3B,WAAM,GAAN,MAAM,CAAY;gBD/CrB,RCmBP,iBAAY,GAAG,CAAC,CAAC;ODlBX,wBAAwB,EAAE,zBCwBhC,mBAAc,GAAsB,EAAE,CAAC;yBDvB/B,SAAS,EAAE,kBAAkB,uBAC9B,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,kBAAkB,CAAC,UAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC,UAC7B,eAAe,EAAE,CAAC,kBAAkB,CAAC,rPCyCrC,gBAAW,GAAsB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAC5D,uBAAuB,CAAC,YAAY,CAAC,EACrC,SAAS,CAAC,IAAI,IACZ,aAAa,CACX,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,IACtC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAM,SAAS,CAAC,CAAC,IAAI,CACnD,oBAAoB,EAAE,EACtB,GAAG,CAAC,GAAG;ED/ClB,CAAC,IACW,kBAAkB,CAAG,dC+CpB,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACjB,GAAG,mCACE,GAAG,KACN,QAAQ,EAAE,GAAG,CAAC,QAAQ,GACvB,CAAC;aACH;YAED,uCACK,GAAG,KACN,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,EAAE,IACpC;SACH,CAAC,CACH,CACF,CACF,CACF,CACF,CAAC;KA1BE;IA4BJ,MAAM,CAAC,MAAc;QACnB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;KAC5B;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC3C,MAAM,UAAU,GACd,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO;gBAChC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC;YAEzC,IAAI,UAAU,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;gBACzC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;aAC7C;SACF;KACF;IAED,eAAe;;;;;QAKb,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CACjD,CAAC,QAA8C,KAC7C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAChC,CAAC;SACH;KACF;IAEO,cAAc,CAAC,QAA8C;QACnE,QAAQ,CAAC,OAAO,CAAC,IAAI;YACnB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE;gBACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;aAC/D;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC;SACF,CAAC,CAAC;KACJ;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;CACF;;;;;;;;;;;;;6HAAA;;YA7EyB,gBAAgB;YAClB,UAAU;YACb,SAAS;;AA1Ba;IAAxC,YAAY,CAAC,yBAAyB,CAAC;gEAEtC,CACJ,AAmGA;AA1Ga;6BAA8B,oBAL1C,SAAS,CAAC,UACT,jECHW,2BAA2B,GAAxC,MAAa,2BAA2B;CAAG;IDGjC,EAAE,4BAA4B,UACtC;;;;;;;;;iDAAuD,UACvD,eAAe,EAAE,1ECLwB,CAA9B,2BAA2B,oBAfvC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,IAeZ;;cDI0C,CAAC,MAAM,MAChD,CAAC,IACW,8BAA8B,CAyG1C,zDC9HuB,EAAE,mBAAmB,EAAE,YAAY,EAAE,UAAU,CAAC,UACtE,5DCAW,2BAA2B,GAAxC,MAAa,2BAA2B;GDA7B,EAAE,cACT,oBAAoB,CAAY,kBAC9B,tDCDJ,YACY,kBAAsC,EACtC,uBAAgD;QDD3C,EAAE,sBACb,xBCDM,uBAAkB,GAAlB,kBAAkB,CAAoB;EDCpB,EAAE,0BACxB,SAAS,EAAE,jCCDP,4BAAuB,GAAvB,uBAAuB,CAAyB;KACxD;CDA6C,GCEjD,YAAY;GDDL,mBACF,eACF,CAAC,WACH,zCCDC,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IDEhD,CCDC;UDCW,EAAE,CAAC,TCCf,wBAAwB;UDDqB,CAAC,UAC9C,eAAe,EAAE,CAAC,/BCChB,OAAO,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;KACtD;CDF+C,CAAC,UACjD,OAAO,EAAE,jBCGT,aAAa;ADHH,8BAA8B,CAAC,OAC1C,CAAC,IACW,nCCET,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;KACzC;eDHqC,CAAG,ZCKzC,cAAc,CAAC,OAAgB;QAC7B,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KACjD;IAED,iBAAiB,CAAC,SAAiB,EAAE,OAAgB;QACnD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC9D,IAAI,CAAC,uBAAuB,CAAC,4BAA4B,EAAE,CAAC;KAC7D;CACF;;iJAAA;;YAxBiC,kBAAkB;YACb,uBAAuB;EAC1D,AAuBJ;AA3Ba;0BAA2B,oBADvC,1CCQY,oBAAoB,GAAjC,MAAa,oBAAoB;ADRtB,EAAE,IACA,2BAA2B,CA0BvC,9BCTC,YACS,OAAoC,EACjC,WAA+B,EAC/B,kBAAsC,EACtC,uBAAgD;QAHnD,YAAO,GAAP,OAAO,CAA6B;QACjC,gBAAW,GAAX,WAAW,CAAoB;QAC/B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAR5D,uBAAkB,GAAG,KAAK,CAAC;QAC3B,wBAAmB,GAAG,KAAK,CAAC;KAQxB;IAEJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,EAAE,CAAC;QACtE,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;KAC9B;IAED,sBAAsB;QACpB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;KAChC;IAED,uBAAuB,CAAC,OAAgB;QACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;KAC/B;IAED,gBAAgB,CAAC,OAAgB;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KACtC;IAED,gBAAgB;QACd,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;KACjC;IAED,iBAAiB,CAAC,OAAgB;QAChC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;KACpE;IAED,iBAAiB;QACf,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;KAClC;IAED,cAAc,CAAC,OAAgB;QAC7B,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0BAA0B,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uCAAuC,CAAC;SACpE,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,WAAW,EACX,gBAAgB,EAChB,UAAU,EACV,QAAQ,EACR,mBAAmB,EACpB;YACC,IAAI,MAAM,GAAG,EAAE,CAAC;YAEhB,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;gBAC5C,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;aACxC;YAED,MAAM,OAAO,GAAsC,EAAE,CAAC;YACtD,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;gBAC3B,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;aAC5D;YACD,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;YAChD,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YAEpD,OAAO;gBACL,QAAQ,EAAE,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ;gBACpD,IAAI,EAAE;oBACJ,OAAO,CAAC,KAAK;oBACb,OAAO,CAAC,KAAK;oBACb,OAAO,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO;oBACtD,OAAO,CAAC,UAAU;oBAClB,OAAO,CAAC,KAAK;iBACd;gBACD,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,OAAO,CAAC,cAAc,GAAG,KAAK,WAAW,EAAE,GAAG,EAAE;gBACxD,SAAS,EAAE,mBAAmB;aAC/B,CAAC;SACH,CACF,CACF,CAAC;KACH;IAED,mBAAmB,CAAC,SAAiB;QACnC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,uBAAuB,CAAC,4BAA4B,EAAE,CAAC;KAC7D;IAED,aAAa,CAAC,SAAiB;QAC7B,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,uBAAuB,CAAC,4BAA4B,EAAE,CAAC;KAC7D;IAED,OAAO,CAAC,SAAiB;QACvB,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SAC/B;KACF;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;CACF;;;;;;;;;;;;;;;;;;;;gGAAA;;YA7GmB,2BAA2B;YACpB,kBAAkB;YACX,kBAAkB;YACb,uBAAuB;EAC1D,AA0GJ;AAzHa;mBAAoB,oBAJhC,SAAS,CAAC,7CCkCE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDjC/B,QAAQ,EAAE,iBAAiB,UAC3B;;;;;;;;;;;;;;;;;;;;;;;;;ECgC+B,CAApB,WACb;;IAD8B,oBA/B7B,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,9DCQS,0BAA0B,GAAvC,MAAa,0BAA0B;UDRvB,cACZ,UAAU,cACV,iBAAiB,cACjB,aAAa,cACb,tGCWF,YACY,YAA0B,EAC5B,WAAwB,EACxB,WAAwB,EACxB,oBAA0C,EAC1C,cAA8B,EAC9B,kBAAsC;ADjBpC,WACX,UACD,YAAY,EAAE,CAAC,5BCUH,iBAAY,GAAZ,YAAY,CAAc;cDVH,CAAC,UACpC,OAAO,EAAE,CAAC,3BCUA,gBAAW,GAAX,WAAW,CAAa;eDVJ,CAAC,UAC/B,SAAS,EAAE,7BCUD,gBAAW,GAAX,WAAW,CAAa;WDThC,oBAAoB,CAAY,kBAC9B,1CCSM,yBAAoB,GAApB,oBAAoB,CAAsB;KDTnC,EAAE,sBACb,rBCSI,mBAAc,GAAd,cAAc,CAAgB;UDTP,EAAE,0BAC3B,SAAS,EAAE,zCCST,uBAAkB,GAAlB,kBAAkB,CAAoB;eDTT,PCHvC,cAAS,GAAG,SAAS,CAAC;KDId,SAAS,EAAE,8BACT,tCCHF,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAWtC;IAEJ,QAAQ;SDTI,OAAO,EAAE,2BAA2B,rCCU9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;oBDTxC,QAAQ,EAAE,tBCUpB,IAAI,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAC;CDVA,kCACrC,IAAI,EAAE,CAAC,lCCUjB,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW;aDXiB,CAAC,DCY/B,0BAA0B,EAAE;GDXxB,2BACF,0BACD,3CCUD,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CACjD,CAAC;CDXU,EAAE,CAAC,SAAS,CAAC,uBACpB,7BCYL,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW;SDZf,eACF,CAAC,cACF,1BCWK,wBAAwB,EAAE;iBDXb,cAClB,lBCWK,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAC3C,CAAC;GDZyB,WAC5B,UACD,eAAe,EAAE,CAAC,oBAAoB,CAAC,OACxC,CAAC,/DCUE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE,CAAC;EDTvD,GCUV;aDV2B,CAAG,VCY/B,SAAS,CAAC,OAAgB;QACxB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB;iBACpB,SAAS,CAAC,wCAAwC,CAAC;iBACnD,IAAI,CAAC,KAAK,EAAE,CAAC;iBACb,SAAS,CAAC,IAAI;gBACb,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,IAAI,EACJ,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;aACH,CAAC,CAAC;YACL,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;SAC7C;KACF;IAED,OAAO,CAAC,KAAc;QACpB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB;iBACpB,SAAS,CAAC,mCAAmC,CAAC;iBAC9C,IAAI,CAAC,KAAK,EAAE,CAAC;qBFjEwB,MAC7C,CAAC,IACW,fEgEJ,SAAS,CAAC,IAAI;eFhEU,CAwHhC,AEvDS,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;aACvE,CAAC,CAAC;SACN;KACF;IAED,YAAY,CAAC,MAAY;QACvB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;KAC9C;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;KAC3B;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;CACF;;;;;;;;oHAAA;;YAlE2B,YAAY;YACf,WAAW;YACX,WAAW;YACF,oBAAoB;YAC1B,cAAc;YACV,kBAAkB;EAC9C,AA6DJ;AA3Ea;yBAA0B,oBALtC,SAAS,CAAC,nDCVE,qBAAqB,GAAlC,MAAa,qBAAqB;ODWhC,QAAQ,EAAE,bCTV,YAAoB,YAA0B;SDSZ,UAClC,XCVoB,iBAAY,GAAZ,YAAY,CAAc;KAAI;IAElD,SAAS;QACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAE;YAC9D,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC,iBAAiB,CAAC;KACtB;CACF;;;;;;;;;;;;;;6HDGoD;IACnD,eAAe,EAAE;kBAAuB,CAAC,MAAM,MAChD,CAAC,IACW;oBAA0B,CA0EtC;;;;;;;;;;;yIChFA;;YAPmC,YAAY;EAChD,AAOA;AAVa;oBAAqB,oBALjC,SAAS,CAAC,9CCiCE,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;KDhChC,QAAQ,EAAE,kBAAkB,UAC5B;;;;;;;;;;;;gBAA6C;AAC7C,eAAe,EAAE;iBAAuB,CAAC;AAAM,MAChD,CAAC,IACW;QAAqB,CASjC;ECmBiC,CAArB,WACb;;KAD+B,oBAvB9B,QAAQ,CAAC,UACR,OAAO,EAAE,jDCRE,uBAAuB,GAApC,MAAa,uBAAuB;KDShC,YAAY,cACZ,YAAY,vCCPd,YACU,EAAe,EACf,WAAwB,EACxB,cAA8B;MDKtC,SAAS,PCPD,OAAE,GAAF,EAAE,CAAa;ODQvB,UAAU,cACV,vBCRQ,gBAAW,GAAX,WAAW,CAAa;CDQtB,cACV,aAAa,WACd,/BCTS,mBAAc,GAAd,cAAc,CAAgB;GDUxC,SAAS,EAAE,cACT,pBCfF,aAAQ,GAAG,KAAK,CAAC;KAKb;WDUkB,CAAY,RCRlC,QAAQ;aDSJ,aAAa,EAAE,pBCRjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;cDStB,FCRF,SAAS,EAAE;UDQY,EAAE,ICPvB,EAAE;kBDQA,SAAS,EAAE,qBAAqB,lCCPlC,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,cAAc,CAAC;ADQxD,MAAM,EAAE,CAAC,ICPZ;GDOqB,CAAC,KCNxB,CAAC,CAAC;KACJ;SDMM,mBACF,xBCLL,0BAA0B;QDMvB,CAAC,WACH,ZCNC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;ADOvB,YAAY,EAAE,CAAC,PCLb,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;GDKW,EAAE,OCJlC,OAAO;SACR;CDG6D,CAAC,UACjE,OAAO,EAAE,CAAC,qBAAqB,EAAE,0BAA0B,CAAC,hECH1D,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;EDIzE,eAAe,EAAE,CAAC,qBAAqB,EAAE,nCCHvC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAC9C;CACF;MDCoE,CAAC,OACrE,CAAC,IACW,kBAAkB,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+TCHjC;;YAvBe,WAAW;YACF,WAAW;YACR,cAAc;EACtC,AAqBJ;AA5Ba;sBAAuB,oBAJnC,SAAS,CAAC,hDC+BE,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;GD9BlC,QAAQ,EAAE,oBAAoB,UAC9B;;;;;;;;;;;;;;;;EC6BkC,CAAvB,WACb;;OADiC,oBAtBhC,QAAQ,CAAC,UACR,OAAO,EAAE,nDCFE,0BAA0B,GAAvC,MAAa,0BAA0B;CDGnC,YAAY,TCHhB;ODII,mBAAmB,lBCEC,WAAM,GAAG,KAAK,CAAC;KACtC;CAAA;EDFG,YAAY,cACZ,SAAS,cACT,UAAU,WACX,UACD,SAAS,EAAE,cACT,oBAAoB,CAAY;YAC9B,aAAa,EAAE,sBACb,uBAAuB,EAAE,0BACvB,SAAS,EAAE,uBAAuB,0BAClC,MAAM,EAAE,CAAC,YAAY,CAAC,uBACvB,mBACF;EACF,CAAC,WACH,UACD,YAAY,EAAE;4NDzBiC,MAChD,CAAC,IACW,uBAAuB,CA2BnC,/PCJgB,uBAAuB,CAAC,UACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC,UAClC,eAAe,EAAE,CAAC,uBAAuB,CAAC,OAC3C,CAAC,IACW,oBAAoB,CAAG;;;;;;;;;;;;;;;;;;;;;sJChBnC;AANU;IAAR,KAAK,EAAE;6DAAmB;AAClB;IAAR,KAAK,EAAE;2DAAiB;AAChB;IAAR,KAAK,EAAE;6DAAmB;AAClB;IAAR,KAAK,EAAE;gEAAsB;AAER;IAArB,WAAW,CAAC,OAAO,CAAC;0DAAgB,CACvC,AACA;AARa;yBAA0B,oBALtC,SAAS,CAAC,nDCIE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ADHrC,QAAQ,EAAE,wBAAwB,UAClC;ECEqC,CAA1B,uBAAuB,oBALnC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAC,UAC5D,YAAY,EAAE,CAAC,0BAA0B,CAAC,UAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC,EAGvC;;GAFC,CAAC,IACW,JCXD,cAGX;WDQmC,CAAG,ZCXvC,WAAY,cAAc;IACxB,uDAAM,CAAA;IACN,uDAAM,CAAA;AACR,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;;ACMD,SAAS,gBAAgB,CAAC,OAAoB;IAC5C,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAErE,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC3C,CAAC;AAGD,IAAsB,iBAAiB,GAAvC,MAAsB,iBAAiB;IAIrC,YAAsB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;KAAI;;sBHZf,UACnD,eAAe;AAAE;eAAuB,CAAC,MAAM,lBGqB/C,iBAAiB;EHpBlB,CAAC,IACW,0BAA0B,CAOtC,1BGaG,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CACxB,SAAS,CAAC,IAAI;YACZ,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAC3B,GAAG,CAAC,OAAO,IACT,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CACpE,CACF,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAOD,QAAQ;QACN,OAAO,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;KACnD;;;;IAKD,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CACzB,GAAG,CAAC,KAAK;YACP,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE;gBACjE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACvB;SACF,CAAC,EACF,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CACrB,CAAC;KACH;IAEO,SAAS,CAAC,KAAY;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAE/D,MAAM,UAAU,GAAG,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAE5C,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,KAAK;YACjC,MAAM,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YACzC,UAAU,CAAC,UAAU,CACnB,GAAG,EACH,IAAI,WAAW,CAAC,CAAC,EAAE;gBACjB,UAAU,EAAE;oBACV,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjB,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;iBAChD;aACF,CAAC,CACH,CAAC;SACH,CAAC,CAAC;KACJ;IAES,cAAc,CAAC,IAAe,EAAE,KAAiB;QACzD,OAAoB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC3E;;;;;IAMD,eAAe,CAAC,KAAiB;QAC/B,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;QACpE,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACxD,YAAY,CAAC,KAAK;YAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,eAAe,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAElE,YAAY,CAAC,cAAc,GAAG,cAAc,CAC1C,YAAY,CAAC,KAAK;;QAElB,IAAI,EACJ,iBAAiB,CAAC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,EACrD,YAAY,CAAC,WAAW,CACzB,CAAC;QAEF,OAAO,YAAY,CAAC;KACrB;IAED,mBAAmB,CAAC,KAAiB;QACnC,QACE,CAAC,IAAI,CAAC,cAAc,EAAE;cAClB,KAAK,CAAC,mBAAmB;cACzB,KAAK,CAAC,kBAAkB,KAAK,KAAK,CAAC,QAAQ,EAC/C;KACH;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,SAAS,KAAK,cAAc,CAAC,MAAM,CAAC;KACjD;CACF;;mHAAA;;YAtG4C,mBAAmB;EAChE,AAsGA;AA3GsB;gBAAiB,oBADtC,UAAU,EAAE,IACS,iBAAiB,CA0GtC,lEChHY,4BAA4B,GAAzC,MAAa,4BAA4B;IAMvC,YAAsB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAJjD,mBAAc,GAAG,KAAK,CAAC;QAEhC,UAAK,GAA0B,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;KAEF;IAE9D,UAAU,CAAC,IAAe,EAAE,KAAiB;QAC3C,MAAM,OAAO,IACX,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CACtD,CAAC;QACF,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,OAAO,CAAC,OAAO,EAAE,CAAC;SACnB;QACD,OAAO,OAAO,CAAC;KAChB;IAED,MAAM,CAAC,IAAe;QACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CACvE,CAAC;KACH;IAED,YAAY,CAAC,KAAiB;QAC5B,OAAO,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KACtD;IAED,mBAAmB,CAAC,KAAiB;QACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;KAC1D;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;KAChD;CACF;;;;;;;;wHAAA;;YA7B0C,iBAAiB;;AALjD;IAAR,KAAK,EAAE;6DAAuB;AACtB;IAAR,KAAK,EAAE;oEAAwB,CAClC,AAiCA;AApCa;2BAA4B,oBALxC,SAAS,CAAC,rDCcE,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;MDbnC,QAAQ,EAAE,sBAAsB,UAChC;;;;;;;;ECYmC,CAAxB,WACb;;QADkC,oBAbjC,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,lECGS,gCAAgC,GAA7C,MAAa,gCAAgC;EDH7B,cACZ,mBAAmB,/BCarB,YAAsB,iBAAoC;YDZxD,UAAU,cACV,WAAW,vCCWS,sBAAiB,GAAjB,iBAAiB,CAAmB;SDVxD,iBAAiB,cACjB,hCCCF,UAAK,GAAG,IAAI,CAAC,iBAAiB;gBDDR,HCEnB,OAAO,EAAE;IDDX,UACD,YAAY,EAAE,CAAC,4BAA4B,CAAC,UAC5C,vDCAG,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EDAvD,EAAE,CAAC,4BAA4B,CAAC,UACvC,eAAe,EAAE,CAAC,tDCClB,aAAQ,GAEJ,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;KAEe;gBDLhB,CAAC,bCO/C,MAAM,CAAC,IAAe;KDNvB,CAAC,IACW,FCMT,IAAI,CAAC,OAAO,EAAE,CAAC;ODNe,CAAG,ACOjC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;CACF;;;;;;;;wGAAA;;YAN0C,iBAAiB;EAC5D,AAMA;AAlBa;+BAAgC,oBAL5C,SAAS,CAAC,UACT,QAAQ,EAAE,7ECUC,wBAAwB,GAArC,MAAa,wBAAyB,SAAQ,iBAAiB;qBDVrB,UACxC,3BCYA,YACY,mBAAwC,EACxC,gBAAkC,EAClC,OAAuB,EACvB,oBAA0C;QAEpD,KAAK,CAAC,mBAAmB,CAAC,CAAC;QALjB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,YAAO,GAAP,OAAO,CAAgB;QACvB,yBAAoB,GAApB,oBAAoB,CAAsB;QANtD,cAAS,GAAG,cAAc,CAAC,MAAM,CAAC;KASjC;;;;IAID,UAAU;QACR,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CACzB,MAAM,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAC/B,GAAG,CAAC,KAAK,IACP,KAAK,CAAC,OAAO,CAAC,MAAM,CAClB,KAAK,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,mBAAmB,GAAG,CAAC,CACnE,CACF,CACF,CAAC;KACH;IAED,IAAI;6BDlCqD,UACzD,/BCkCE,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;CDlC/B,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,pCCiCT,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;2BDjCC,CAiB5C,pBCiBG,MAAM,MAAM,GAAsC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aACnE,MAAM,CAAC,WAAW,IAAY,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aACvD,GAAG,CACF,WAAW,KACR;YACC,gBAAgB,EAAE,MAAM,CAAC,WAAW,CAAC;YACrC,QAAQ,EAAU,OAAO,CAAC,WAAW,CAAC;SACH,CAAA,CACxC,CAAC;QAEJ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAElB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE;YAC3C,8BAA8B,EAAE,MAAM;SACvC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB;aAClB,qBAAqB,EAAE;aACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpB,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;KAC/C;IAEO,SAAS,CAAC,SAAiB;QACjC,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;YACE,GAAG,EAAE,kDAAkD;YACvD,MAAM,EAAE,EAAE,SAAS,EAAE;SACtB,EACD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YACd,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;KACJ;CACF;mSAAA;;YA3DkC,mBAAmB;YACtB,gBAAgB;YACzB,cAAc;YACD,oBAAoB;;iUAYa,AA6CrE;AAhEa;uBAAwB,oBAHpC,UAAU,CAAC,lDCLC,sBAAsB,GAAnC,MAAa,sBAAsB;IDMjC,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,9BCPX,YACY,OAAuB,EACvB,iBAA2C;qBJLN,UACjD,nBGSmC,CA+DpC,LCrEa,YAAO,GAAP,OAAO,CAAgB;cJHpB,EAAE,uBAAuB,CAAC,MAAM,tCIInC,sBAAiB,GAAjB,iBAAiB,CAA0B;AJHxD,CAAC,IACW,AIGP;IAEJ,WAAW;OJL4B,CAmCxC,AI7BG,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,IAAI,CAC1C,GAAG,CAAC,IAAI;YACN,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;;;;gBAIf,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACvC,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF,CAAC,CACH,CAAC;KACH;CACF;0MAAA;;YAnBsB,cAAc;YACJ,wBAAwB;;kQAQN,AAWnD;AAtBa;aCYC;MDZqB,oBAHlC,UAAU,CAAC,jCCgBF,OAAO,EAAE,yBAAyB;CACnC;IDhBP,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,sBAAsB,CAqBlC,zDCoBD,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,CAAhC,WACb;;gBAD0C,oBArCzC,QAAQ,CAAC,UACR,nDCJW,oBAAoB,GAAjC,MAAa,oBAAoB;MDIxB,EAAE,cACP,YAAY,9BCId,YAAsB,iBAAoC;WDHxD,YAAY,CAAC,QAAQ,CAAC,kBACpB,3CCEkB,sBAAiB,GAAjB,iBAAiB,CAAmB;qBDDpD,IAAI,EAAE,IAAI,vBCLhB,UAAK,GAAG,IAAI,CAAC,iBAAiB;SDMxB,WAAW,EAAE,TCLhB,OAAO,EAAE;ADKQ,YAAY,CAAC,sBAC3B,SAAS,EAAE,mBAAmB,pDCLjC,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cDMxD,IAAI,MAEH,mBACF,eACF,CAAC,nDCRJ,aAAQ,GAA6B,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;KAEX;CAC/D;GDMG,mBAAmB,cACnB,qBAAqB,cACrB,uBAAuB,WACxB,UACD,SAAS,EAAE,cACT;CAAoB,CAAY,kBAC9B,aAAa,EAAE,sBACb,gCAAgC,EAAE,0BAChC,SAAS,EAAE,gCAAgC,0BAC3C,MAAM,EAAE,CAAC,SAAS,EAAE,sBAAsB,CAAC,0BAC3C,SAAS,EAAE,8BACT,kCACE,OAAO,EAAE,iBAAiB,kCAC1B,WAAW,EAAE,wBAAwB,+BACtC,2BACF,uBACF,mBACF;WACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,gCAAgC,CAAC,UAChD,OAAO,EAAE;AAAC,gCAAgC,CAAC;QAC3C;GAAe,EAAE,CAAC,gCAAgC,CAAC,OACpD,CAAC,IACW;QAA6B,CAAG;wGC9B5C;;YAD0C,iBAAiB;EAC5D,AACA;AAXa;aCWC;IDXmB,oBALhC,pBCiBS,OAAO,EAAE,aAAa;CACvB;EDlBC,CAAC,UACT,QAAQ,EAAE,iBAAiB,xCC2C7B,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;AD1C5B,CC0C+B;;;;;;;;;;;uDD1Ca,UAC5C;cAAe,EAAE;YAAuB,CAAC,MAAM;GAChD,CAAC,IACW;UAAoB,CAUhC;;;;;;;;;;;;;;EC6BgC,CAApB,WACb;;IAD8B,oBApC7B,QAAQ,CAAC,UACR,OAAO,EAAE,hDCRE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;CDSnC,YAAY,cACZ,YAAY,CAAC,QAAQ,CAAC,kBACpB,sBACE;EAAI,EAAE,IAAI,sBACV,WAAW,EAAE,CAAC,YAAY,CAAC,sBAC3B,SAAS,EAAE,mBAAmB,sBAC9B,IAAI,MAEH,mBACF,eACF,CAAC,cACF,qBAAqB,cACrB,/NCrBmC,CAA1B,uBAAuB,oBAHnC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,iBAAiB,EAAE,6BAA6B,CAAC,OAC5D,CAAC,IACW,uBAAuB,CAAG,iEACvC;;qBDoB2B,WACxB,UACD,SAAS,EAAE,cACT,/DEbS,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,iBAAiB;SFajC,CAAY,kBAC9B,aAAa,EAAE,sBACb,oBAAoB,EAAE,nFEZ5B,YACY,mBAAwC,EACxC,oBAA+C,EAC/C,OAAuB,EACvB,oBAA0C;qBFS9C,SAAS,EAAE,xBEPjB,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBFOU,0BAC/B,MAAM,EAAE,CAAC,3CEbL,wBAAmB,GAAnB,mBAAmB,CAAqB;IFa1B,CAAC,0BACnB,SAAS,EAAE,lCEbP,yBAAoB,GAApB,oBAAoB,CAA2B;cFcjD,NEbE,YAAO,GAAP,OAAO,CAAgB;gBFcvB,OAAO,EAAE,iBAAiB,lCEb1B,yBAAoB,GAApB,oBAAoB,CAAsB;kBFc1C,WAAW,EAAE,vBEpBzB,cAAS,GAAG,cAAc,CAAC,MAAM,CAAC;KASjC;CFWgD,GETjD,UAAU;aFUC,2BACF,uBACF,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,oBAAoB,CAAC,UACpC,OAAO,pKEhBL,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CACzB,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAChC,GAAG,CAAC,KAAK,IACP,KAAK,CAAC,OAAO,CAAC,MAAM,CAClB,KAAK,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,kBAAkB,GAAG,CAAC,CAClE,CACF,CACF,CAAC;AFSK,CAAC,IERT;IAED,IAAI;EFM0B,CAAC,UAC/B,eAAe,EAAE,CAAC,oBAAoB,CAAC,5CENrC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;MFO/C,CAAC,IACW,iBAAiB,CAAG,rBEP7B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QACxC,MAAM,MAAM,GAAsC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aACnE,MAAM,CAAC,WAAW,IAAY,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aACvD,GAAG,CACF,WAAW,KACR;YACC,gBAAgB,EAAE,MAAM,CAAC,WAAW,CAAC;YACrC,QAAQ,EAAU,OAAO,CAAC,WAAW,CAAC;SACH,CAAA,CACxC,CAAC;QAEJ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAElB,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,CAAC;YACjD,SAAS;YACT,wBAAwB,EAAE,MAAM;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB;aACtB,uBAAuB,EAAE;aACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpB,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KACtC;IAEO,SAAS;QACf,IAAI,CAAC,oBAAoB;aACtB,qBAAqB,EAAE;aACvB,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACrB,SAAS,CAAC,aAAa;YACtB,MAAM,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;YAC9B,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;gBACE,GAAG,EAAE,kDAAkD;gBACvD,MAAM,EAAE,EAAE,GAAG,EAAE;aAChB,EACD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACd,OAAO,EAAE,sBAAsB;gBAC/B,MAAM,EAAE,EAAE,GAAG,EAAE;aAChB,CAAC,CAAC;SACJ,CAAC,CAAC;KACN;CACF;0RAAA;;YAhEkC,mBAAmB;YAClB,yBAAyB;YACtC,cAAc;YACD,oBAAoB;;kTActD,AAgDF;AArEa;iBAAkB,oBAH9B,UAAU,3CCLE,gBAAgB,GAA7B,MAAa,gBAAgB;ADKjB,UACV,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,pCCPX,YACY,OAAuB,EACvB,iBAAqC;YDKpB,CAoE9B,LC1Ea,YAAO,GAAP,OAAO,CAAgB;QACvB,sBAAiB,GAAjB,iBAAiB,CAAoB;KAC7C;IAEJ,WAAW;QACT,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,IAAI,CAC1C,GAAG,CAAC,IAAI;YACN,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;;;;gBAIf,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACvC,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF,CAAC,CACH,CAAC;KACH;CACF;kLAAA;;YAnBsB,cAAc;YACJ,kBAAkB;;oOAQ9B,AAWrB;AAtBa;eAAgB,oBAH5B,UAAU,CAAC,UACV,UAAU,EAAE,MAAM,tECIP,gCAAgC,GAA7C,MAAa,gCAAgC;CDH5C,CAAC,IACW,gBAAgB,CAqB5B,nBCRC,YAAsB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAR1D,UAAK,GAAG,IAAI,CAAC,iBAAiB;aAC3B,OAAO,EAAE;aACT,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAE9D,aAAQ,GAEJ,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;KAEe;IAE9D,MAAM,CAAC,IAAe;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;CACF;;;;;;;;wGAAA;;YAN0C,iBAAiB;EAC5D,AAMA;AAlBa;aCeC;gBDf+B,oBAL5C,hCCqBS,OAAO,EAAE,yBAAyB;CACnC;EDtBC,CAAC,UACT,QAAQ,EAAE,8BAA8B,UACxC,/DCgDF,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;CAAG;;;;;;;;;;sCDhDc,UACzD;OAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW;sBAAgC,CAiB5C;;;;;;;;;;;;;;;;;;;EC4B4C,CAAhC,WACb;;gBAD0C,oBAtCzC,QAAQ,CAAC,UACR,nDCTW,oBAAoB,GAAjC,MAAa,oBAAoB;MDSxB,EAAE,cACP,YAAY,9BCDd,YAAsB,iBAAoC;WDExD,YAAY,CAAC,QAAQ,CAAC,kBACpB,3CCHkB,sBAAiB,GAAjB,iBAAiB,CAAmB;qBDIpD,IAAI,EAAE,IAAI,vBCVhB,UAAK,GAAG,IAAI,CAAC,iBAAiB;SDWxB,WAAW,EAAE,TCVhB,OAAO,EAAE;ADUQ,YAAY,CAAC,sBAC3B,SAAS,EAAE,mBAAmB,pDCVjC,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cDWxD,IAAI,MAEH,mBACF,eACF,CAAC,nDCbJ,aAAQ,GAA6B,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;KAEX;CAC/D;GDWG,qBAAqB,cACrB,UAAU,cACV,mBAAmB,cACnB,uBAAuB,WACxB,UACD,SAAS,EAAE;KACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,sBACb,gCAAgC,EAAE,0BAChC,SAAS,EAAE,gCAAgC,0BAC3C,MAAM,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC,0BACrC,SAAS,EAAE,8BACT,kCACE,OAAO,EAAE,iBAAiB,kCAC1B,WAAW,EAAE,kBAAkB,+BAChC,2BACF,uBACF;QACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,gCAAgC,CAAC;EAChD,OAAO,EAAE,CAAC;SAAgC,CAAC;AAC3C,eAAe,EAAE,CAAC,gCAAgC,CAAC,OACpD,CAAC,IACW;oBAA6B,CAAG;wGCpC5C;;YAD0C,iBAAiB;EAC5D,AACA;AAXa;aCSC;IDTmB,oBALhC,pBCeS,OAAO,EAAE,aAAa;CACvB;EDhBC,CAAC,UACT,QAAQ,EAAE,iBAAiB,xCCyC7B,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;ADxC5B,CCwC+B;;;;;;;;;;;uDDxCa;KAC5C,eAAe,EAAE;kBAAuB,CAAC;GAAM,MAChD,CAAC,IACW;;EAAoB,CAUhC;;;;;;;;;;;;;EC2BgC,CAApB,WACb;;IAD8B,oBApC7B,QAAQ,CAAC,UACR,vCCNW,iBAAiB,GAA9B,MAAa,iBAAiB;ADMrB,EAAE,DCNsB;aDO7B,YAAY,cACZ,YAAY,CAAC,QAAQ,CAAC;AACpB,sBACE,IAAI,EAAE,IAAI,sBACV,WAAW,EAAE,CAAC,YAAY,CAAC,sBAC3B,SAAS,EAAE,mBAAmB,sBAC9B,IAAI,MAEH,mBACF,eACF,CAAC,tMCjB2B,CAApB,iBAAiB,oBAH7B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,iBAAiB,EAAE,6BAA6B,CAAC,OAC5D,CAAC,IACW,iBAAiB,CAAG,2DACjC;;KDiBI,qBAAqB,cACrB,uBAAuB,3DEfd,4BAA4B,GAAzC,MAAa,4BAA4B;EFgBtC,UACD,SAAS,EAAE,cACT,jCEjBF,YAAoB,mBAAwC;kBFiBtC,CAAY,kBAC9B,aAAa,EAAE,5CElBC,wBAAmB,GAAnB,mBAAmB,CAAqB;KAAI;YFmB1D,REfN,QAAQ;eFekB,EAAE,0BACpB,SAAS,EAAE,9CEfjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;KAC1D;EFcsC,DEbxC;yBFcS,MAAM,EAAE,CAAC,SAAS,CAAC,0BACnB,SAAS,EAAE,8BACT,kCACE,OAAO,EAAE,iBAAiB;oBAC1B,WAAW,EAAE,kBAAkB,+BAChC,2BACF,uBACF,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,oBAAoB,CAAC,UACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC,UAC/B,eAAe,EAAE,CAAC,oBAAoB,CAAC,OACxC,CAAC,IACW,iBAAiB,CAAG;;;;;4HE7BhC;;YAP0C,mBAAmB;EAC9D,AAOA;AATa;2BAA4B,oBAJxC,SAAS,CAAC,zDCPJ,MAAM,eAAe,GAAG,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;ADQvE,QAAQ,EAAE,2BAA2B,rCCPvC,AAAO,MAAM,eAAe,GAAG,CAAC,WAAW,CAAC,CAAC;;ODQ3C,HEWW,yBAAyB,GAAtC,MAAa,yBAAyB;IACpC,YACY,mBAAwC,EACxC,gBAAkC;QADlC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAG9C,sBAAiB,GAAsB,iBAAiB,CAAC,KAAK,CAAC;QAC/D,WAAM,GAAsB,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;KAHnE;IASJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC9D,IAAI,CAAC,iBAAiB,CACvB,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,eAAe,EAAE,GAAG,eAAe,CAAC,CAAC;QAC3E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;KACrD;IAEO,cAAc,CACpB,iBAA2B;QAE3B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,GAAG,CAAC,KAAK;YACP,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;gBAC/B,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,IAC1C,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAC/C,CAAC;aACH;SACF,CAAC,CACH,CAAC;KACH;KF7CoD,MACtD,CAAC,IACW,ZE6CH,cAAc,CACpB,GAAG,iBAA2B;CF9CO,CAQxC,MEwCG,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,GAAG,CAAC,KAAK;YACP,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;gBAC/B,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAC9B,WAAW,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAC/D,CAAC;aACH;SACF,CAAC,CACH,CAAC;KACH;CACF;;;;;;;;mHAAA;;YA/CkC,mBAAmB;YACtB,gBAAgB;EAC5C,AA8CJ;AAlDa;wBAAyB,oBAJrC,SAAS,CAAC,lDCPE,uBAAuB,GAApC,MAAa,uBAAuB;EDQlC,QAAQ,EAAE,wBAAwB,UAClC,1CCJA,YACS,WAA2B,EAC1B,gBAAkC;QADnC,gBAAW,GAAX,WAAW,CAAgB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;KACxC;IAEJ,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC;KAClD;CACF;;oWDJmD,MACnD,CAAC,IACW,yBAAyB,CAiDrC;;;;;;;;;;;8JC/CA;;YAPuB,cAAc;YACR,gBAAgB;EAC1C,AAMJ;AAda;sBAAuB,oBAJnC,SAAS,CAAC,UACT,QAAQ,lECWG,4BAA4B,GAAzC,MAAa,4BAA4B;ADX7B,oBAAoB,UAC9B,1BC0BA,YACU,gBAAkC,EAClC,YAA0B;QAD1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAjBpC,sBAAiB,GAAa;YAC5B,SAAS;YACT,YAAY;YACZ,oBAAoB;YACpB,mBAAmB;YACnB,YAAY;SACb,CAAC;KAYE;IAEJ,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,CAAC;KAC5E;IAED,kBAAkB,CAAC,WAAwB;QACzC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAC3C,IAAI,CAAC,SAAS,EACd,WAAW,CAAC,IAAI,CACjB,CAAC;QACF,IAAI,aAAkB,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,EAAE;YAC9D,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAChD,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACpD,aAAa,CAAC,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC;QAChD,aAAa,CAAC,eAAe,GAAG,WAAW,CAAC,IAAI,CAAC;KAClD;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC;KAClD;CACF;;;;;;uFAAA;;YA5B6B,gBAAgB;YACpB,YAAY;;AAPpC;IADC,KAAK,EAAE;iEACiB;AAEzB;IADC,KAAK,EAAE;+DACU,CACpB,AAgCA;AA9Ca;2BAA4B,oBAJxC,SAAS,CAAC,UACT,QAAQ,vECFG,8BAA8B,GAA3C,MAAa,8BAA8B;CDE/B,GCFZ;MDEqC,UACnC,RCAA,sBAAiB,GAAsB,iBAAiB,CAAC,KAAK,CAAC;KAUhE;IARC,sBAAsB,CAAC,WAAwB;QAC7C,MAAM,QAAQ,GAAiB,EAAE,CAAC;QAClC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO;YACjC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACnC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;KACjB;CACF;4HDVqD,MACrD,CAAC,IACW;iBAA4B,CA6CxC;;;;;6GCrCA;AAZU;IAAR,KAAK,EAAE;oEAA6B;AAC5B;IAAR,KAAK,EAAE;6DAAc,CACxB,AAWA;AAda;6BAA8B,oBAJ1C,SAAS,CAAC,UACT,jECQW,4BAA4B,GAAzC,MAAa,4BAA4B;KDR/B,EAAE,4BAA4B,UACtC,zCCQA,YACU,mBAAwC,EACxC,WAA+B;QAD/B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAoB;KACrC;IAIJ,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;KAC1D;IAED,qBAAqB,CAAC,OAAgB;QACpC,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC;SACjD,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;YACd,OAAO;gBACL,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACpD,IAAI,EAAE;eH9BiC,MAChD,CAAC,IACW,NG6BD,OAAO,CAAC,KAAK;cH7BW,CAanC,KGiBW,OAAO,CAAC,KAAK;oBACb,GAAG,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,UAAU,EAAE;oBACpE,OAAO,CAAC,KAAK;iBACd;aACF,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,4BAA4B,CAAC,cAAuB;QAClD,OAAO,aAAa,CAAC;2DDvCgC,/CCwCnD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC;GDvCrD,CAAC,IACW,8BAA8B,7BCuCtC,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;AD3BrB,YC4BO,OAAO;gBACL,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,GAAG,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,QAAQ,EAAE;gBAClE,IAAI,EAAE;oBACJ,cAAc,CAAC,KAAK;oBACpB,cAAc,CAAC,KAAK;oBACpB,GAAG,cAAc,CAAC,IAAI,KAAK,cAAc,CAAC,OAAO,CAAC,OAAO,KAAK,cAAc,CAAC,UAAU,EAAE;oBACzF,cAAc,CAAC,KAAK;iBACrB;aACF,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,qBAAqB,CAAC,OAAuB;QAC3C,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBAChD,KAAK,EAAE,OAAO,CAAC,WAAW;gBAC1B,IAAI,EAAE,OAAO,CAAC,UAAU;aACzB,CAAC;SACH,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC;YAC3B,OAAO;gBACL,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,OAAO,CAAC,iBAAiB;gBACnC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC;aAC/D,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,4BAA4B,CAAC,QAAsB;QACjD,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iCAAiC,CAAC;SAC9D,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;YACd,OAAO;gBACL,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,QAAQ,CAAC,IAAI;gBACvB,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC;aAC7B,CAAC;SACH,CAAC,CACH,CAAC;KACH;CACF;;;;;;;kGAAA;;YA/EgC,mBAAmB;YAC3B,kBAAkB;EACvC,AA8EJ;AAlFa;2BAA4B,oBAJxC,SAAS,CAAC,UACT,/DCJW,0BAA0B,GAAvC,MAAa,0BAA0B;ODI7B,EAAE,2BAA2B,hCCHrC,YAAsB,mBAAwC;ODI9D,CCJsB,wBAAmB,GAAnB,mBAAmB,CAAqB;KAAI;IAIlE,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;KAC1D;CACF;;;;;;;0GAAA;iBDHsD,MACtD,CAAC,IACW;IAA4B,CAiFxC,OCvF4C,mBAAmB;EAChE,AAOA;AATa;yBAA0B,oBAJtC,SAAS,CAAC,UACT,7DCIW,2BAA2B,GAAxC,MAAa,2BAA2B;GDJ9B,EAAE,yBAAyB,1BCKnC,YAAsB,mBAAwC;CDJ9D,OCIsB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAE9D,WAAM,GAAsB,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;KAFL;CAGnE;iJDPoD,MACpD,CAAC,IACW;AAA0B,CAQtC;;;;;uKCHA;;YAH4C,mBAAmB;EAChE,AAGA;AALa;0BAA2B,1BCiBxC,MAAM,gBAAgB,GAAG;mBDrBxB,SAAS,CAAC,zBCsBT,2BAA2B;MDrB3B,QAAQ,EAAE,ZCsBV,4BAA4B;QDtBQ,UACpC,dCsBA,yBAAyB;IACzB,0BAA0B;IAC1B,4BAA4B;IAC5B,uBAAuB;IACvB,4BAA4B;IAC5B,8BAA8B;CAC/B,CAAC;aAgBY,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,OAM7C,EAAE,OAAO,EAAE,cAAc,EAAE;AAkCzC,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;;;;;;;;;;;;;;;ADpFoB,MACrD,CAAC,IACW,2BAA2B,CAIvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EC8EiC,CAArB,WACb;;KAD+B,oBAtD9B,QAAQ,CAAC,UACR,OAAO,EAAE,jDCxBE,qBAAqB,GAAlC,MAAa,qBAAqB;SDyB9B,gBAAgB,cAChB,UAAU,7CCzBZ,YACU,OAAuB,EACvB,gBAAkC,EAClC,WAA+B;KDuBvC,YAAY,cACZ,vBC1BQ,YAAO,GAAP,OAAO,CAAgB;SD0BrB,cACV,oBAAoB,nCC1BZ,qBAAgB,GAAhB,gBAAgB,CAAkB;OD2B1C,gBAAgB,cAChB,7BC3BQ,gBAAW,GAAX,WAAW,CAAoB;MD2B9B,cACT,ZCzBM,cAAS,GAAG,CAAC,CAAC;IDyBR,CAAC,QAAQ,CAAC,kBACpB,sBACE,IAAI,EAAE,IAAI,sBACV,WAAW,EAAE,CAAC,5FCzBpB,YAAO,GAEH,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAChE,GAAG,CAAC,CAAC,MAAwB;QDsBC,CAAC,sBAC3B,nBCtBF,IAAI,MAAM,CAAC,UAAU,EAAE;GDsBZ,EAAE,mBAAmB,sBAC9B,IAAI,lCCtBJ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;ADsBY,aCrBpD;KDsBA,ICrBF,CAAC,CACH,CAAC;UDqBE,sBACE,IAAI,EAAE,IAAI,sBACV,WAAW,nECrBjB,cAAS,GAEL,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,CAAC;CDmBnC,CAAC,SAAS;CAAE,YAAY,CAAC,sBACtC,SAAS,EAAE,mBAAmB;GAC9B,IAAI,IAA6B,mBAClC,eACF,CAAC,cACF,aAAa,WACd;MACD;GAAS,EAAE,cACT,oBAAoB,CAA6B,kBAC/C,aAAa,EAAE,sBACb,mCAAmC,EAAE,5HCvB3C,mBAAc,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CACpD,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAC3C,MAAM,CAAC,YAAY,IAAI,YAAY,KAAK,SAAS,CAAC,EAClD,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;GDoBM,EC/CJ;MD+Ca,EAAE,JClBnB,WAAW;eDkBmC,uBACvC,9BClBL,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;KACxC;MDkBK,FChBN,cAAc,CAAC,QAAgB;WDgBW,EAAE,LCf1C,MAAM,KAAK,GAA8C;eDgBnD,HCfJ,QAAQ;EDeK,EAAE,QCdf,WAAW,EAAE,CAAC;IDc6B,KCb5C,CAAC;gBDcG,RCbL,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IDcrB,ICbJ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IDaa,CCZtC;ADYwC,ICVzC,UAAU,CAAC,IAAY;GDWf,SAAS,EAAE,NCVjB,MAAM,KAAK,GAA8C;eDUf,HCTxC,QAAQ,EAAE,IAAI,CAAC,QAAQ;CDUpB,sBACD,XCVF,WAAW,EAAE,IAAI;SAClB,CAAC;eDSoC,EAAE,TCRxC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;IDQO,SAAS,EAAE,XCNnB,eAAe,CAAC,KAAY;YDMiB,JCL3C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;SDMX,sBACD,nBCNF,OAAO,EAAE,cAAc;YACvB,MAAM,EAAE,KAAK;GDKyB,EAAE,ICJzC,CAAC,CAAC;KACJ;aDIO,TCFR,aAAa;ADEI,EAAE,4BAA4B,tBCD7C,OAAO,aAAa,CAAC;sBDEhB,mBACF,7BCFD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,CAAC;GDG1C,QAAQ,EAAE,sBACR,mBAAmB,EAAE,KAAK,jDCH5B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,CAAC;iBDIhD,eACF,CAAC,cACF,tCCLC,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,iBAAiB,CAAC;ODInB,WACpB,NCJK,OAAO;ODKb,YAAY,EAAE,CAAC,GAAG,TCJV,MAAM,EAAE,UAAU;KDIQ,CAAC,UACnC,OAAO,EAAE,CAAC,GAAG,gBAAgB,CAAC,9BCJtB,aAAa,EAAE,iBAAiB;MDKxC,OCJO,CAAC;MDIO,EAAE,CAAC,GAAG,HCHhB,CAAC,CACH,CAAC;KACH;SDCoC,CAAC,OACvC,CAAC,IACW,lBCDH,WAAW,CAAC,KAAgD;eDCvC,CAAG,RCA9B,IAAI,CAAC,gBAAgB,CAAC,aAAa,CACjC,IAAI,CAAC,SAAS,EACd,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,QAAQ,CACf,CAAC;KACH;CACF;;;;;;;;8NAAA;;YAjFoB,cAAc;YACL,gBAAgB;YACrB,kBAAkB;EACvC,AA+EJ;AApFa;oBAAqB,PCSpB,EAAE,OAAO,EAAE,QAAQ,EAAE;IDdlC,SAAS,CAAC,UACT,QAAQ,EAAE,lCCqCZ,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;ADrCD,CCqCI;ODpChC;;;;;;;;;;;;;;;;;;;;;;;;;;ECoCgC,CAArB,WACb;;KAD+B,oBAhC9B,QAAQ,CAAC,UACR,OAAO,EAAE,jDCJE,oBAAoB,GAAjC,MAAa,oBAAoB;WDK7B,YAAY,cACZ,YAAY,CAAC,QAAQ,CAAC,kBACpB,zECNJ,YACY,cAA8B,EAC9B,oBAA+C,EAC/C,oBAA0C;qBDIhD,IAAI,EAAE,IAAI,vBCNJ,mBAAc,GAAd,cAAc,CAAgB;ODOpC,WAAW,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC,rCCNhC,yBAAoB,GAApB,oBAAoB,CAA2B;SDOrD,SAAS,EAAE,mBAAmB,/BCNxB,yBAAoB,GAApB,oBAAoB,CAAsB;GDOhD,ECNF;CDMM,MAAuB,HCJjC,IAAI,aAAa;ADKZ,eACF,CAAC,cACF,YAAY,cACZ,WAAW,3DCPX,OAAO,IAAI,CAAC,oBAAoB,CAAC,6BAA6B,EAAE,CAAC;KAClE;CDOC,cAAc,XCLhB,IAAI,gBAAgB;ADMlB,oBAAoB,cACpB,SAAS,cACT,UAAU,3DCPV,OAAO,IAAI,CAAC,oBAAoB,CAAC,6BAA6B,EAAE,CAAC;IDQlE,CCPA;QDQD,YAAY,EAAE,CAAC,nBCNf,gBAAgB;mBDMoB,CAAC,UACrC,tBCNE,OAAO,aAAa,CAAC;MDMhB,EAAE,CAAC,qBAAqB,CAAC,UAChC,7BCNI,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;ADM/B,EAAE,cACT,oBAAoB,CAAY,kBAC9B,3CCPA,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE;KDOpC,EAAE,sBACb,4BAA4B,EAAE,/CCPhC,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,EAAE;oBDQ/C,SAAS,EAAE,qBAAqB,3CCPrC,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,aAAa,EAAE,SAAS,CAAC,KAAK;UDO9C,MAAM,EAAE,CAAC,SAAS,CAAC,uBACpB,xCCPD,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC;kBDQxC,NCPC,aAAa;MDQhB,CAAC,WACH,NCRK,SAAS;KDSf,eAAe,EAAE,CAAC,qBAAqB,CAAC,OACzC,CAAC,IACW,kBAAkB,CAAG,nECV3B,CAAC,EACF,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,OAAO,CAAC,UAAU,CAAC,CAAC,EAC7C,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC;YACzC,IACE,CAAC,aAAa,KAAK,SAAS,IAAI,aAAa,CAAC,GAAG,KAAK,UAAU;gBAChE,CAAC,SAAS,EACV;gBACA,IAAI,CAAC,oBAAoB,CAAC,4BAA4B,CAAC,UAAU,CAAC,CAAC;aACpE;SACF,CAAC,EACF,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,KAAK,aAAa,CAAC,EAC1C,MAAM,CAAC,OAAO,CAAC,EACf,oBAAoB,EAAE,CACvB,CAAC;KACH;IAED,kBAAkB;QAChB,IAAI,CAAC,oBAAoB,CAAC,6BAA6B,EAAE,CAAC;KAC3D;IAED,mBAAmB,CAAC,iBAAyB;QAC3C,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,CAAC,iBAAiB,EAAE;YACpE,MAAM,EAAE,YAAY;SACrB,CAAC,CAAC;KACJ;IAED,aAAa,CAAC,GAAW;QACvB,IAAI,CAAC,oBAAoB,CAAC,oCAAoC,EAAE,CAAC;QACjE,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;YACE,GAAG,EAAE,6BAA6B;YAClC,MAAM,EAAE,EAAE,GAAG,EAAE;SAChB,EACD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;YACrB,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;KACJ;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE;YAClD,KAAK,EAAE;gBACL,SAAS,EAAE,CAAC;aACb;SACF,CAAC,CAAC;KACJ;CACF;0PAAA;;YAtE6B,cAAc;YACR,yBAAyB;YACzB,oBAAoB;;2RAWnB,AA0DrC;AAzEa;mBAAoB,oBAHhC,UAAU,CAAC,UACV,UAAU,EAAE,pECID,8BAA8B,GAA3C,MAAa,8BAA8B;EDJvB,OACnB,CAAC,IACW,oBAAoB,CAwEhC,/BCrEC,YAAsB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAKhE,mBAAc,GAEV,IAAI,CAAC,oBAAoB;aAC1B,gBAAgB,EAAE;aAClB,IAAI,CAAC,GAAG,CAAC,aAAa,KAAK,IAAI,CAAC,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE9D,kBAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC;KAXY;IAapE,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,SAAS,CACtE,OAAO;YACL,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnD;SACF,CACF,CAAC;KACH;IAED,YAAY,CAAC,iBAAyB;QACpC,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;KAClE;IAED,IAAI;QACF,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;KACxC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;CACF;;;;;;;kEHxC8C,UAC7C,eAAe,EAAE,uBAAuB,CAAC,MAAM,EGuChD;GHtCA,CAAC,IACW,qBAAqB,CAmFjC;YGlF6C,oBAAoB;EAClE,AAoCA;AAtCa;6BAA8B,oBAL1C,SAAS,CAAC,UACT,jECFW,2BAA2B,GAAxC,MAAa,2BAA2B;ODE9B,EAAE,4BAA4B,jCCDtC,YAAsB,oBAA0C;ODEhE,CCFsB,yBAAoB,GAApB,oBAAoB,CAAsB;QAEhE,mBAAc,GAEV,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;KAJmB;CAKrE;;otCDHwD,UACvD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,8BAA8B,CAqC1C;;;;;6JCrCA;;YAL6C,oBAAoB;EAClE,AAKA;AAPa;0BAA2B,oBALvC,SAAS,CAAC,UACT,9DCIW,4BAA4B,GAAzC,MAAa,4BAA4B;EDJ/B,EAAE,yBAAyB,UACnC,nCCIA,YAAsB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAEhE,mBAAc,GAEV,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;KAJmB;IAMpE,WAAW;QACT,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;KAChD;CACF;;;;;;;6HAAA;;YAT6C,oBAAoB;EAClE,AASA;AAXa;ACQb,MAAM,UAAU,GAAG;MDRsB,oBALxC,SAAS,/BCcR,8BAA8B;ADdrB,UACT,QAAQ,EAAE,hBCcV,2BAA2B;aDdS,UACpC,nBCcA,4BAA4B;CAC7B,CAAC;aAUY,EAAE,OAAO,EAAE,sBAAsB,EAAE;AA4BjD,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADrDc,UACrD,RCoDuC,CAA5B,WACb;;SDrDiB,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,xCCkDyB,oBApCrC,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,tECZS,+BAA+B,GAA5C,MAAa,+BAA+B;EFJH,CAUxC,KCMe,cACZ,YAAY,CAAC,QAAQ,CAAC,xCCZxB,YACU,oBAA+C,EAC/C,WAA+B;SDWrC,sBACE,IAAI,EAAE,IAAI,jCCbN,yBAAoB,GAApB,oBAAoB,CAA2B;KDcnD,WAAW,EAAE,CAAC,SAAS,EAAE,tBCbrB,gBAAW,GAAX,WAAW,CAAoB;EDaE,CAAC,sBACtC,jBCXE,cAAS,GAAG,CAAC,CAAC;MDWP,EAAE,mBAAmB,sBAC9B,IAAI,MAAqC,mBAC1C,eACF,CAAC,cACF,YAAY,hHCZd,oBAAe,GAEX,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAC1E,GAAG,CAAC,CAAC,WAA8B;ODUnC,SAAS,cACT,UAAU,5BCVR,IAAI,WAAW,CAAC,UAAU,EAAE;YDW9B,WAAW,cACX,oBAAoB,zCCXhB,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;ODYjD,MCXI;GDYL,SAAS,HCXN,CAAC,CACH,CAAC;CDUS;GACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,sBACb;wBAA8B,EAAE,0BAC9B,SAAS,EAAE;KAA8B;gBAC1C,sBACD,2BAA2B,EAAE,0BAC3B,SAAS,EAAE,2BAA2B,uBACvC,sBACD,xKCbN,mBAAc,GAAuB,IAAI,CAAC,eAAe,CAAC,IAAI,CAC5D,GAAG,CAAC,cAAc,IAAI,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,EAC7D,MAAM,CAAC,YAAY,IAAI,YAAY,KAAK,SAAS,CAAC,EAClD,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;KAvBE;iBDgC8B,EAAE,fCPpC,WAAW;KHpCyC,UACpD,eAAe,EAAE,uBAAuB,CAAC,MAAM,rCE2CvC,SAAS,EAAE,4BAA4B,xDCP7C,IAAI,CAAC,oBAAoB,CAAC,2BAA2B,EAAE,CAAC;GHnC3D,CAAC,CGoCC;EHnCU,2BAA2B,CAMvC,dEoCQ,ZCLP,cAAc,CAAC,QAAgB;IDM1B,eACF,CAAC,ZCNF,MAAM,KAAK,GAA8C;ODO1D,UACD,LCPI,QAAQ;ODOA,EAAE,CAAC,GAAG,UAAU,CAAC,ZCNzB,WAAW,EAAE,CAAC;MDOlB,GCNG,CAAC;EDMG,EAAE,CAAC,GAAG,UAAU,CAAC,UACxB,rBCNE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;UDMZ,EAAE,CAAC,GAAG,UAAU,CAAC,OACjC,CAAC,IACW,/BCPT,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;KACjC;iBDMmC,CAAG,dCJvC,UAAU,CAAC,IAAY;QACrB,MAAM,KAAK,GAA8C;YACvD,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI;SAClB,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,aAAa;QACX,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC;SAC1C,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC;YAC1B,OAAO;gBACL,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,SAAS;aACjB,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAEO,mBAAmB,CAAC,KAG3B;QACC,IAAI,CAAC,oBAAoB,CAAC,0BAA0B,CAClD,IAAI,CAAC,SAAS,EACd,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,QAAQ,CACf,CAAC;KACH;CACF;;;;;;;;qMAAA;;YAxEiC,yBAAyB;YAClC,kBAAkB;EACvC,AAuEJ;AA3Ea;8BAA+B,oBAL3C,SAAS,CAAC,xDC0BE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;KDzBrC,QAAQ,EAAE,8BAA8B,UACxC;;;;;;;;;;;;;;;;ECwBqC,CAA1B,WACb;;UADoC,oBAtBnC,1BCOY,WAAW,GAAxB,MAAa,WAAW;ADPf,CAAC,ACOiB;QDNzB,OAAO,EAAE,cACP,YAAY,cACZ;EAAY,cACZ,oBAAoB,cACpB,SAAS,cACT,UAAU,WACX,UACD,SAAS,EAAE,cACT;aAAoB,CAAY;AAC9B,aAAa,EAAE;KACb,+BAA+B;CAAE,0BAC/B;KAAS,EAAE;CAA+B,0BAC1C,MAAM,EAAE,CAAC;MAAS,CAAC,LCNF,CAAd,WAAW,AACxB;;cDMS,mBACF,eACF,CAAC,WACH,1CCpBF,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,xDCGS,uBAAuB,GAApC,MAAa,uBAAuB;QFgBlC,YAAY,EAAE,CAAC,PCnBK,cAClB,kBAAkB,5CCQpB,YACU,kBAAsC,EACtC,WAA+B;GFQK,CAAC,UAC/C,OAAO,EAAE,CAAC,bClBR,uBAAuB,cACvB,xCCOQ,uBAAkB,GAAlB,kBAAkB,CAAoB;CFUP,CAAC,UAC1C,eAAe,EAAE,CAAC,nBClBC,cACjB,jBCOQ,gBAAW,GAAX,WAAW,CAAoB;qBFUQ,CAAC,OACnD,CAAC,IACW,1BCnBc,cACvB,dCCF,cAAS,GAAG,SAAS,CAAC;KAMlB;eFW8B,CAAG,XClBV,WAC1B,ZCQD,QAAQ;MDPT,CAAC,IACW,WAAW,CAAG,fCOvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,IAAI,CACrE,GAAG,CAAC,cAAc;;YAEhB,IACE,cAAc,CAAC,MAAM,GAAG,CAAC;gBACzB,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,cAAc,CAAC,EACnE;gBACA,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;SACF,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;QACnE,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;KAC9C;IAED,cAAc,CAAC,EACb,cAAc,EACd,iBAAiB,EACjB,WAAW,EACX,UAAU,EACV,UAAU,EACV,QAAQ,GACO;QACf,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,0BAA0B,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,gCAAgC,CAAC;YAC5D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBAChD,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,UAAU;aACjB,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,kCAAkC,CAAC;SAC/D,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,gBAAgB,EAChB,UAAU,EACV,sBAAsB,EACtB,WAAW,EACX,wBAAwB,EACzB;YACC,MAAM,OAAO,GAAsC,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,EAAE;gBACnB,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;aAC5D;YACD,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;YAClD,MAAM,IAAI,GAAS;gBACjB,MAAM,EAAE,cAAc,GAAG,wBAAwB,GAAG,IAAI;gBACxD,QAAQ,EAAE,iBAAiB;gBAC3B,IAAI,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;gBAC/B,OAAO;gBACP,SAAS,EAAE,sBAAsB;gBACjC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;aACrC,CAAC;YAEF,OAAO,IAAI,CAAC;SACb,CACF,CACF,CAAC;KACH;IAED,mBAAmB,CAAC,aAA6B;QAC/C,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;IAED,OAAO,CAAC,aAA6B;QACnC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,EAAE,CAAC;KAClC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;IAED,uBAAuB,CAAC,aAA6B;QACnD,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;KACrE;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,MAAc,CAAC;QACnB,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC9B;aAAM,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,qBAAqB,EAAE;YAC9D,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SACrC;aAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC5B,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SACrC;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YAC1B,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC9B;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;SACrC;QAED,OAAO,MAAM,CAAC;KACf;CACF;;+SHhH0D,UACzD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,+BAA+B,CA0E3C;;;;;0JGmCA;;YArG+B,kBAAkB;YACzB,kBAAkB;EACvC,AAoGJ;AA7Ga;sBAAuB,oBAJnC,SAAS,CAAC,hDCiBE,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;GDhBlC,QAAQ,EAAE,oBAAoB,UAC9B;;;;;;;;;;ECekC,CAAvB,oBAAoB,oBAhBhC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,GAgBZ;;OAhBwB,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,UAC9D,SAAS,9DCCE,0BAA0B,GAAvC,MAAa,0BAA0B;ADD1B,cACT,oBAAoB,CAAY,/BCgBlC,YACU,EAAe,EACf,cAA8B,EAC9B,WAAwB;EDlB9B,aAAa,EAAE,TCgBT,OAAE,GAAF,EAAE,CAAa;iBDfnB,TCgBI,mBAAc,GAAd,cAAc,CAAgB;CDhBJ,EAAE,0BAC9B,SAAS,9BCgBP,gBAAW,GAAX,WAAW,CAAa;ADhBf,uBAAuB,fCD1C,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;CDE1B,MAAM,EAAE,CAAC,SAAS,CAAC,ZCD3B,aAAQ,GAAG,KAAK,CAAC;YDEV,mBACF,vBCDL,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAC7B;UDCC,CAAC,WACH,VCDG,QAAQ,EAAE;QDEd,QCDM,EAAE;ADCI,EAAE,CAAC,uBAAuB,CAAC,UACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC,vDCD5B,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,iBAAiB,CAAC;EDEnE,WCDK;EDCU,EAAE,CAAC,uBAAuB,CAAC,OAC3C,CAAC,IACW,7BCFP,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QDEZ,CAAG,ACD/B,EACD,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,CAClC,CAAC;KAME;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,cAAc;aAChB,cAAc,EAAE;aAChB,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CACvE,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,KAAK;KFhCP,MAChD,CAAC,IACW,JE+BL,IAAI,KAAK,EAAE;cF/BiB,CA4GnC,CE5ES,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;aAC9C;SACF,CAAC,CACH,CAAC;KACH;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;IAED,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KACtD;IAEO,aAAa,CAAC,EAAmB;QACvC,IAAI,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE;YAC3D,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SAC3B;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oQAAA;;YA1Ce,WAAW;YACC,cAAc;YACjB,WAAW;EAChC,AAwCJ;AA5Da;yBAA0B,oBAJtC,zCCuBY,mBAAmB,GAAhC,MAAa,mBAAmB;ADvBtB,CAAC,ACuBwB;QDtBjC,QAAQ,EAAE,wBAAwB,UAClC;;;;;;;;;;;;;;;;ECqBiC,CAAtB,WACb;;MADgC,oBAtB/B,QAAQ,CAAC,UACR,OAAO,EAAE,lDCEE,wBAAwB,GAArC,MAAa,wBAAwB;IDDjC,YAAY,ZCsBd,YAAoB,EAAe;QDrBjC,WAAW,XCqBO,OAAE,GAAF,EAAE,CAAa;WDpBjC,mBAAmB,tBCArB,aAAQ,GAAG,KAAK,CAAC;aDCf,YAAY,cACZ,/BCCF,cAAS,GAAG,IAAI,YAAY,EAGxB,CAAC;IDJO,WACX,UACD,SAAS,EAAE,5BCKX,gBAAW,GAAG,IAAI,YAAY,EAAQ,CAAC;GDJrC,oBAAoB,CAAY,hBCMlC,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAC7B;MDNE,aAAa,EAAE,sBACb,sBAAsB,EAAE,vDCM1B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,cAAc,CAAC,CAAC;QDLnE,SAAS,EAAE,0BAA0B,jCCMzC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBDLrC,MAAM,EAAE,CAAC,YAAY,CAAC,1BCM1B,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;UDLlC,mBACF,pBCKF,EACD,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,CAC/B,CAAC;ADNC,CAAC,ICQmC;MDPtC,UACD,YAAY,EAAE,CAAC,3BCQf,sBAAsB,CAAC,eAAuB;WDRL,CAAC,UAC1C,OAAO,EAAE,CAAC,xBCQR,QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QDTE,CAAC,UACrC,NCSK,IAAI,CAAC,QAAQ;IDTH,EAAE,CAAC,0BAA0B,CAAC,OAC9C,CAAC,IACW,7BCQJ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO;MDRf,CAAG,aCSzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC,EAC1C;KACH;IAED,UAAU,CAAC,eAAuB;QAChC,OAAO,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7E;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAE1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;KAC3C;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;KACzB;IAEO,UAAU,CAAC,EAAmB;QACpC,IAAI,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE;YAC1D,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SAC3B;KACF;CACF;wKF5DoD;EACpD,CAAC,IACW,0BAA0B,CA2DtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oQEDA;;YArCyB,WAAW;;AAjBnC;IADC,MAAM,EAAE;2DAIJ;AAGL;IADC,MAAM,EAAE;6DAC8B,CACzC,AAgDA;AA3Da;uBAAwB,oBAJpC,SAAS,CAAC,jDCGE,oBAAoB,GAAjC,MAAa,oBAAoB;ODF/B,QAAQ,EAAE,sBAAsB,UAChC,7CCEA,YACU,cAA8B,EAC9B,oBAA0C,EAC1C,WAAwB,EACxB,WAAwB;QAHxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAG1B,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAFtC;IAMJ,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW;aACb,2BAA2B,EAAE;aAC7B,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CACjD,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAC;KAClE;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7C;IAED,QAAQ,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAwC;QACjE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;KAChD;IAED,SAAS,CAAC,OAAgB;QACxB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;gBACE,GAAG,EAAE,oCAAoC;gBACzC,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;aAChC,EACD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE;gBACjD,KAAK,EAAE;oBACL,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB;aACF,CAAC,CAAC;SACJ;KACF;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAC;KAChD;CACF;;;;;;;;;;;;;kFAAA;;YAnD2B,cAAc;YACR,oBAAoB;QDJH,MAClD,CAAC,IACW,PCGY,WAAW;gBDHC,CA0DpC,LCtDwB,WAAW;EAChC,AAgDJ;AAtDa;mBAAoB,oBAJhC,SAAS,CAAC,7CCyBE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDxB/B,QAAQ,EAAE,iBAAiB,UAC3B;;;;;;;;;;;;;;CAA4C,MAC7C,CAAC,IACW;KAAoB,CAqDhC;EChCgC,CAApB,WACb;;IAD8B,oBAtB7B,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,9DCDS,2BAA2B,GAAxC,MAAa,2BAA2B;QDCxB,JCSd,YAAoB,EAAe;ADRjC,WAAW,HCQO,OAAE,GAAF,EAAE,CAAa;GDPjC,mBAAmB,dCFb,kBAAa,GAAG,KAAK,CAAC;ADG5B,aAAa,cACb,UAAU,7BCAZ,aAAQ,GAAG,IAAI,YAAY,EAAgD,CAAC;IDC3E,UACD,SAAS,EAAE,cACT,/BCAF,cAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;KAEE;QDFjB,CAAY,LCIlC,QAAQ;UDHJ,aAAa,EAAE,jBCIjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CACvB;WDJE,oBAAoB,EAAE,rBCKtB,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KDJtC,SAAS,EAAE,JCKb,WAAW,EAAE;SDLoB,OCM/B,EAAE;eDLF,MAAM,EAAE,CAAC,SAAS,CAAC,uBACpB,mBACF,5DCIG,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,iBAAiB,CAAC;YDHlE,CAAC,ACIG;SDHN,UACD,YAAY,EAAE,CAAC,wBAAwB,EAAE,hDCGnC,kBAAkB,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;mBDHQ,CAAC,UAC9D,OAAO,EAAE,CAAC,/BCGL,EACD,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,CAClC,CAAC;KACH;ODN6B,EAAE,wBAAwB,7BCQxD,UAAU,CAAC,eAAuB;ADRuB,UACzD,eAAe,EAAE,CAAC,oBAAoB,CAAC,OACxC,CAAC,IACW,iBAAiB,CAAG,vECM7B,OAAO,SAAS,CAAC,eAAe,CAC9B,IAAI,CAAC,IAAI,EACT,eAAe,EACf,IAAI,CAAC,aAAa,CACnB,CAAC;KACH;IAED,yBAAyB;QACvB,QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;aAC7B,IAAI,CAAC,aAAa;iBAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,OAAO;oBAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,CAAC,EAC/C;KACH;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;YACxC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;SACzC,CAAC,CAAC;KACJ;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACvB;IAEO,aAAa,CAAC,eAAgC;QACpD,IACE,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;YACxC,eAAe,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAC/C;YACA,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC;KACb;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oQAAA;;YA1DyB,WAAW;;AALnC;IADC,MAAM,EAAE;6DACmE;AAG5E;IADC,MAAM,EAAE;8DAC4B,CACvC,AA4DA;AArEa;0BAA2B,oBAJvC,SAAS,CAAC,pDCGE,uBAAuB,GAApC,MAAa,uBAAuB;IDFlC,QAAQ,EAAE,yBAAyB,UACnC,7CCKA,YACU,cAA8B,EAC9B,WAAwB,EACxB,oBAA0C;QAF1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QAN5C,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAOtC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,+BAA+B,EAAE,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,8BAA8B,EAAE,CAAC;QAClE,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW;aACb,8BAA8B,EAAE;aAChC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CACjD,CAAC;KACH;IAED,SAAS,CAAC,OAAgB;QACxB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,0CAA0C,EAAE,EACnD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;SAC7C;KACF;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7C;IAED,QAAQ,CAAC,EACP,WAAW,EACX,WAAW,GAIZ;QACC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;KAC3D;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAEhC,IAAI,CAAC,WAAW,CAAC,+BAA+B,EAAE,CAAC;KACpD;CACF;;;;;;;;;;;;;qFAAA;;YA5C2B,cAAc;YACjB,WAAW;YACF,oBAAoB;EAClD,AA0CJ;AAlDa;sBAAuB,oBAJnC,SAAS,CAAC,hDC0BE,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;GDzBlC,QAAQ,EAAE,oBAAoB,UAC9B;;;;eDCoD,MACrD,CAAC,IACW;UAA2B,CAoEvC;;;;;;;;WCvEgD,MAChD,CAAC,IACW;YAAuB,CAiDnC;;EC3BmC,CAAvB,WACb;;OADiC,oBAtBhC,QAAQ,CAAC,UACR,OAAO,EAAE,nDCLE,0BAA0B,GAAvC,MAAa,0BAA0B;CDMnC,YAAY,TCed,YAAoB,EAAe;KDdjC,WAAW,RCcO,OAAE,GAAF,EAAE,CAAa;QDbjC,mBAAmB,cACnB,jCCDF,aAAQ,GAAG,IAAI,YAAY,EAAyB,CAAC;UDCtC,cACb,UAAU,1BCCZ,cAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;ADApC,UACD,SAAS,EAAE,cACT,3BCAF,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;mBDAC,CAAY,RCChC,SAAS,EAAE,CAAC,EAAE,CAAC;SDAb,aAAa,EAAE,sBACb,lCCAJ,SAAS,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;mBDAT,EAAE,0BACvB,nCCAN,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;ODApB,EAAE,ACClB,CAAC,CAAC;oBDDuC,ZCGlC,kBAAa,GAAG,KAAK,CAAC;KAES;IDJ/B,MAAM,EAAE,CAAC,TCMjB,QAAQ;KDNkB,CAAC,ECOzB,IAAI,IAAI,CAAC,IAAI,EAAE;IDNV,mBACF,eACF,CAAC,3BCKA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KDJnC,ICKE;KDJH,ACKC;WDLW,EAAE,CAAC,VCOf,UAAU,CAAC,eAAuB;GDPI,EAAE,2BAA2B,CAAC,UACpE,OAAO,EAAE,CAAC,uBAAuB,EAAE,tECOjC,OAAO,SAAS,CAAC,eAAe,CAC9B,IAAI,CAAC,IAAI,EACT,eAAe,EACf,IAAI,CAAC,aAAa,CACnB,CAAC;KACH;SDZ6D,CAAC,NCc/D,QAAQ;GDbR,eAAe,EAAE,CAAC,bCchB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SDda,CAAC,OAC3C,CAAC,IACW,dCaT,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;SDbM,CAAG,ECc9B,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,WAAW,oBAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE;SACpC,CAAC,CAAC;KACJ;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACvB;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sXAAA;;YA9ByB,WAAW;;AAnBnC;IADC,KAAK,EAAE;wDACG;AAGX;IADC,KAAK,EAAE;0DACQ;AAGhB;IADC,MAAM,EAAE;4DAC4C;AAGrD;IADC,MAAM,EAAE;6DAC4B,CACvC,AAwCA;AApDa;yBAA0B,oBAJtC,SAAS,CAAC,nDCWE,sBAAsB,GAAnC,MAAa,sBAAsB;KDVjC,QAAQ,EAAE,wBAAwB,UAClC,7CCgBA,YACU,cAA8B,EAC9B,WAAwB,EACxB,oBAA0C;QAF1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QAT5C,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAUtC;IAEJ,QAAQ;;QAEN,IAAI,CAAC,WAAW,CAAC,yCAAyC,EAAE,CAAC;QAE7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,IAAI,CAC9C,GAAG,CAAC,MAAM;YACR,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;aAC/B;SACF,CAAC,CACH,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,qCAAqC,EAAE,CAAC;QAEzE,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW;aACb,qCAAqC,EAAE;aACvC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CACjD,CAAC;KACH;IAED,SAAS,CAAC,OAAgB;QACxB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,wCAAwC,EAAE,EACjD,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;SAC7C;KACF;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7C;IAED,QAAQ,CAAC,EAAE,WAAW,EAAyB;QAC7C,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;KACrD;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;;QAGhC,IAAI,CAAC,WAAW,CAAC,yCAAyC,EAAE,CAAC;KAC9D;CACF;;;;;;;;;mBDnEoD,MACpD,CAAC,IACW;WAA0B,CAmDtC;;;oFCcA;;YAlD2B,cAAc;YACjB,WAAW;YACF,oBAAoB;EAClD,AAgDJ;AA3Da;qBAAsB,oBAJlC,SAAS,CAAC,/CCuBE,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;IDtBjC,QAAQ,EAAE,mBAAmB,UAC7B;;;;;;;;;;;;;;;;ECqBiC,CAAtB,WACb;;kCDtBgD,MAC/C,CAAC,IACW,vCCmBmB,oBAtB/B,QAAQ,CAAC,UACR,OAAO,EAAE,lDCFE,yBAAyB,GAAtC,MAAa,yBAAyB;CFIH,CA0DlC,AC3DG,YAAY,cACZ,WAAW,nCCOb,YACY,cAA8B,EAC9B,WAA+B;MDRzC,mBAAmB,cACnB,/BCMU,mBAAc,GAAd,cAAc,CAAgB;MDN3B,cACb,UAAU,tBCMA,gBAAW,GAAX,WAAW,CAAoB;CDL1C,UACD,SAAS,EAAE,cACT,5BCFiB,cAAS,GAAG,YAAY,CAAC;iBDEtB,CAAY,kBAC9B,aAAa,EAAE,3CCFA,yBAAoB,GAAG,sBAAsB,CAAC;KAK7D;ODFE,sBAAsB,zBCI5B,gBAAgB,CAAC,MAAsB;ADJT,0BACtB,lBCIN,IAAI,CAAC,cAAc,CAAC,EAAE,CACpB;EDLa,EAAE,sBAAsB,dCMnC,OAAO,EAAE,QAAQ;qBDLf,MAAM,EAAE,CAAC,SAAS,CAAC,5BCMrB,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;CDL/C,mBACF,eACF,CAAC,3BCIC,EACD,EAAE,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,CAChC,CAAC;EDLH,GCMA;MDLD,YAAY,EAAE,CAAC,jBCOP,gBAAgB,CAAC,MAAsB;YDPV,EAAE,0BAA0B,CAAC,jCCQhE,OAAO,MAAM,CAAC,qBAAqB;ODPrC,OAAO,EAAE,CAAC,HCQJ,IAAI,CAAC,SAAS;UDRY,EAAE,0BAA0B,CAAC,UAC7D,eAAe,EAAE,CAAC,rDCQZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC;KAClE;ODTuC,CAAC,OAC1C,CAAC,IACW,hBCSX,aAAa;iBDTiB,CAAG,VCe/B,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,wBAAwB,CAAC;YACpD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,yBAAyB,CAAC;YACrD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uBAAuB,CAAC;SACpD,CAAC,CAAC,IAAI,CACL,GAAG,CACD,CAAC,CACC,kBAAkB,EAClB,mBAAmB,EACnB,gBAAgB,EAChB,iBAAiB,EAClB;YACC,OAAO;gBACL,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,mBAAmB;gBACpC,YAAY,EAAE,gBAAgB;gBAC9B,aAAa,EAAE,iBAAiB;aACjC,CAAC;SACH,CACF,CACF,CAAC;KACH;CACF;oNAAA;;YAjD6B,cAAc;YACjB,kBAAkB;;wQAaf,AAoC9B;AA9Da;wBAAyB,oBAHrC,xCCMY,kBAAkB,GAA/B,MAAa,kBAAkB;EDNpB,CAAC,UACV,UAAU,EAAE,MAAM,OACnB,CAAC,IACW,vCCgDX,YACY,aAAoC,EACpC,yBAAoD;QDlD5B,CA6DrC,DCZa,kBAAa,GAAb,aAAa,CAAuB;QACpC,8BAAyB,GAAzB,yBAAyB,CAA2B;QA1ChE,cAAS,GAAG,SAAS,CAAC;QAEd,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAEnC,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG;YACpB,cAAc,EAAE,eAAe;YAC/B,eAAe,EAAE,gBAAgB;YACjC,YAAY,EAAE,aAAa;YAC3B,aAAa,EAAE,cAAc;SAC9B,CAAC;QACF,SAAI,GAAG,gBAAgB,CAAC;QAExB,gBAAW,GAAG;YACZ;gBACE,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,KAAK;aAChB;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,QAAQ,EAAE,KAAK;aAChB;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,KAAK;aAChB;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC;KAaE;IAEJ,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa;aACpC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;aAClC,IAAI,CACH,GAAG,CACD,OAAO,KACJ,IAAI,CAAC,UAAU,GAAG;YACjB,WAAW,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI;YACpC,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,KAAK;YAClC,UAAU,EAAE,OAAO,CAAC,UAAU,CAAC,UAAU;YACzC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,UAAU;YAC3C,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC,CACL,CACF,CAAC;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,EAAE,CAAC;QACtE,IAAI,CAAC,0BAA0B,GAAG,aAAa,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,uCAAuC,EAAE;YAC5D,IAAI,CAAC,aAAa,CAAC,yCAAyC,EAAE;SAC/D,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,aAAa,CAAC,KAAK,WAAW,IAAI,aAAa,CAAC,CACpE,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,CAAC;QAEjE,IAAI,CAAC,aAAa;aACf,GAAG,CACF,IAAI,CAAC,aAAa;aACf,qCAAqC,EAAE;aACvC,SAAS,CAAC,KAAK;YACd,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B,CAAC,CACL;aACA,GAAG,CACF,IAAI,CAAC,aAAa;aACf,uCAAuC,EAAE;aACzC,SAAS,CAAC,KAAK;YACd,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B,CAAC,CACL,CAAC;KACL;IAEO,gBAAgB,CAAC,KAAc;QACrC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACxD;KACF;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CACpC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,CAAC,WAAW,EAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CACvB,CAAC;KACH;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CACpC,IAAI,CAAC,SAAS,EACd,IAAI,EACJ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAC5B,CAAC;KACH;IAED,kBAAkB,CAAC,EACjB,QAAQ,EACR,YAAY,GAIb;QACC,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;SACxD;KACF;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;CACF;;;;;;;;;;;;;;2HAAA;;YAvF4B,qBAAqB;YACT,yBAAyB;EAC9D,AAsFJ;AAtIa;iBAAkB,oBAJ9B,SAAS,CAAC,UACT,rDCHW,qBAAqB,GAAlC,MAAa,qBAAqB;ODGxB,EAAE,eAAe,pBCIzB,YAAsB,YAA0B;EDHhD,MCGsB,iBAAY,GAAZ,YAAY,CAAc;QANhD,cAAS,GAAG,SAAS,CAAC;KAM8B;IAEpD,YAAY,CAAC,MAAY;QACvB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;KAC9C;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBDR2C,MAC3C,CAAC;CACW,kBAAkB,CAqI9B;;;;;;;;;;;;;;;;;;;;;;;;;;kIC/HA;;YALqC,YAAY;;AAFhD;IADC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;qDACvB,CACrB,AAOA;AAba;oBAAqB,oBAJjC,SAAS,CAAC,9CCUE,mBAAmB,GAAhC,MAAa,mBAAmB;MDT9B,QAAQ,EAAE,kBAAkB,UAC5B,xCCmBA,YACY,YAA0B,EAC1B,yBAAoD;QADpD,iBAAY,GAAZ,YAAY,CAAc;QAC1B,8BAAyB,GAAzB,yBAAyB,CAA2B;QAPhE,wBAAmB,GAAG,IAAI,YAAY,EAGlC,CAAC;KAKD;IAEJ,oBAAoB;QAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;YAC5B,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;YAC9B,YAAY,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc;SAC1C,CAAC,CAAC;KACJ;IAED,QAAQ;QACN,IAAI,aAAkB,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC5D,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAChD,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;KACpC;IAED,YAAY;QACV,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9D;CACF;;omBD7C8C,MAC9C,CAAC,IACW,qBAAqB,CAYjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uHC+BA;;YAzB2B,YAAY;YACC,yBAAyB;;AAZvD;IAAR,KAAK,EAAE;mDAAwB;AACvB;IAAR,KAAK,EAAE;uEAAiD;AAIzD;IADC,MAAM,EAAE;gEAIJ,CACP,AA4BA;AAtCa;kBAAmB,oBAJ/B,SAAS,CAAC,5CCEE,oBAAoB,GAAjC,MAAa,oBAAoB;EDD/B,QAAQ,EAAE,gBAAgB,UAC1B,lCCGA,YACY,aAAoC,EACpC,cAA8B,EAC9B,cAAoC;QAFpC,kBAAa,GAAb,aAAa,CAAuB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAsB;KAC5C;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc;aAChB,cAAc,EAAE;aAChB,SAAS,CAAC,CAAC;YACV,MAAM,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;YAC7C,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;gBACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa;qBACnC,mCAAmC,EAAE;qBACrC,SAAS,CAAC,OAAO;oBAChB,IAAI,OAAO,EAAE;wBACX,IAAI,CAAC,cAAc,CAAC,GAAG,CACrB,EAAE,GAAG,EAAE,+BAA+B,EAAE,EACxC,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;qBACH;oBACD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;iBAChD,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;aACjD;SACF,CAAC;aACD,WAAW,EAAE,CAAC;KAClB;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;CACF;;2NAAA;;YAnC4B,qBAAqB;YACpB,cAAc;YACd,oBAAoB;EAC9C,AAiCJ;AAxCa;mBAAoB,oBAJhC,1BC4Ba,EAAE,OAAO,EAAE,aAAa,EAAE;OD5B9B,CAAC,UACT,YAA4C,UAC5C,xCCyDF,IAAa,eAAe,GAA5B,MAAa,eAAe;EDzDlB,DCyDqB;CDzDnB,iBAAiB,MAC5B,CAAC,IACW,oBAAoB,CAuChC;yFDvC4C,MAC5C,CAAC,IACW,mBAAmB,CAqC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EEgB8B,CAAlB,WACb;;EAD4B,oBA9C3B,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,YAAY,xECXH,+BAA+B,GAA5C,MAAa,+BAA+B;YDYxC,UAAU,cACV,hCCPF,YACU,6BAAgE;ADM3D,cACb,UAAU,cACV,YAAY,cACZ,SAAS,jECTD,kCAA6B,GAA7B,6BAA6B,CAAmC;WDUxE,UAAU,bCbF,gBAAW,GAA6B,EAAE,CAAC;IDcnD,CCVE;IAEJ,QAAQ;CDQc,cACpB,YAAY,CAAC,QAAQ,CAAC,kBACpB,/CCTF,IAAI,CAAC,6BAA6B,CAAC,4BAA4B,EAAE,CAAC;EDU9D,IAAI,EAAE,IAAI,sBACV,WAAW,EAAE,CAAC,SAAS,EAAE,nDCV7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,6BAA6B;QDUb,CAAC,ICTvC,cAAc,EAAE;CDUf,SAAS,EAAE,mBAAmB,sBAC9B,IAAI,MAA4B,lDCVjC,IAAI,CAAC,GAAG,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;SDW3D,eACF,CAAC,WACH,UACD,YAAY,EAAE,pDCbZ,IAAI,CAAC,6BAA6B,CAAC,eAAe,EAAE,CAAC;YDcrD,kBAAkB,tBCZlB,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;EDahC,mBAAmB,cACnB,qBAAqB,cACrB,1DCdE,IAAI,CAAC,6BAA6B,CAAC,qBAAqB,EAAE;kBDcxC,WACrB,UACD,SAAS,EAAE,cACT,pDChBE,IAAI,CAAC,6BAA6B,CAAC,iCAAiC,EAAE;ADgBpD,CAAY,kBAC9B,aAAa,EAAE,sBACb,kBAAkB,EAAE,nECjBvB,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,aAAa,CAAC,KAAK,YAAY,IAAI,aAAa,CAAC,CACtE,CAAC;KACH;QDeO,SAAS,EAAE,fCbnB,gBAAgB,CAAC,UAAkC;EDad,0BAC7B,MAAM,EAAE,CAAC,7BCbf,MAAM,kBAAkB,GAAG,EAAE,CAAC;ODaN,CAAC,uBACpB,vBCbL,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aDctB,oBAAoB,EAAE,vBCbxB,IAAI,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE;SDclC,SAAS,EAAE,oBAAoB,0BAC/B,MAAM,EAAE,CAAC,SAAS,CAAC,rECdrB,kBAAkB,CAAC,IAAI,iCAClB,CAAC,KACJ,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,IACnB,CAAC;KDYF,QCXF;UDYA,OCZM;MDaR,CAAC,WACH,UACD,OAAO,EAAE,CAAC,tBCdJ,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YDcL,CCbvB;ADayB,SCZ3B,CAAC,CAAC;QDY6C,CAAC,UACnD,eAAe,EAAE,cACf,kBAAkB,5DCblB,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;ADczE,KCbD;CACF;YDYwB,cACrB,oBAAoB,WACrB,OACF,CAAC,IACW,eAAe,CAAG;;;;;;+JChB9B;;YAhC0C,iCAAiC;EACxE,AAgCJ;AAxCa;8BAA+B,oBAL3C,SAAS,CAAC,UACT,lECkBW,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;GDlBlC,EAAE,4BAA4B,UACtC;;;;;;;;;;ECiB0C,CAA/B,4BAA4B,oBAhBxC,QAAQ,CAAC,GAiBV;;KAhBE,YAAY,EAAE,CAAC,+BAA+B,CAAC,hDCkBpC,oBAAoB,GAAjC,MAAa,oBAAoB;MDjB/B,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,UAAU,CAAC,UAClD,SAAS,EAAE,zECyCX,YACU,sBAA4C,EAC5C,kBAAsC,EACtC,cAA8B;aD3CtC,oBAAoB,CAAY,kBAC9B,5CCwCM,2BAAsB,GAAtB,sBAAsB,CAAsB;GDxCrC,EAAE,sBACb,nBCwCI,uBAAkB,GAAlB,kBAAkB,CAAoB;IDxCX,EAAE,0BAC/B,SAAS,EAAE,nCCwCT,mBAAc,GAAd,cAAc,CAAgB;4BDxCU,pBCa1C,sBAAiB,GAAG,EAAE,CAAC;iBDZvB,MAAM,EAAE,CAAC,lBCaT,gBAAW,GAAG;MDbI,CAAC,uBACpB,lBCaL,SAAS,EAAE,UAAU;cDZlB,eACF,CAAC,lBCYF,UAAU,EAAE,WAAW;IDXxB,KCYA,CAAC;GDXF,OAAO,EAAE,CAAC,LCaV,SAAI,GAAG,WAAW,CAAC;WDbsB,CAAC,UAC1C,dCaA,gBAAW,GAAG;QDbC,EAAE,CAAC,CCchB;4BDd+C,CAAC,bCe9C,IAAI,EAAE,WAAW;CDdtB,CAAC,IACW,UCcP,QAAQ,EAAE,KAAK;CDdoB,CAAG,WCevC;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC;KAYE;IAEJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB;aAC1C,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,CAAC;aAClD,IAAI,CACH,GAAG,CACD,SAAS,KACN,IAAI,CAAC,UAAU,GAAG;YACjB,WAAW,EAAE,SAAS,CAAC,UAAU,CAAC,IAAI;MF1DK,UACvD,eAAe,EAAE,rBE0DL,QAAQ,EAAE,SAAS,CAAC,UAAU,CAAC,KAAK;MF1DR,CAAC,MAAM,MAChD,CAAC,IACW,+BAA+B,CAuC3C,5CEkBa,UAAU,EAAE,SAAS,CAAC,UAAU,CAAC,UAAU;YAC3C,YAAY,EAAE,SAAS,CAAC,UAAU,CAAC,UAAU;YAC7C,IAAI,EAAE,WAAW;SAClB,CAAC,CACL,EACD,GAAG,CAAC,QAAQ,qCACP,QAAQ,KACX,OAAO,EAAE,QAAQ,CAAC,OAAO;kBACrB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,qCACtB,MAAM,KACT,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACjC,CAAC;kBACH,QAAQ,CAAC,OAAO,IACpB,CAAC,CACJ,CAAC;QAEJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,EAAE,CAAC;QACpF,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;YACrC,IAAI,CAAC,oBAAoB;YACzB,IAAI,CAAC,sBAAsB,CAAC,8BAA8B,EAAE;SAC7D,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,KAAK,UAAU,IAAI,aAAa,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;KACxC;IAEO,aAAa;QAInB,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,+BAA+B,CAAC;YAClE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,gCAAgC,CAAC;SACpE,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;YACd,OAAO;gBACL,SAAS,EAAE,GAAG;gBACd,UAAU,EAAE,IAAI;aACjB,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAEO,UAAU,CAChB,QAAsC;QAEtC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC;KAC7E;IAED,cAAc,CACZ,QAEC;QAED,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC;YAC/C,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,oBAAoB,EAAE,QAAQ,CAAC,oBAAoB;SACpD,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAC9C,IAAI,CAAC,iBAAiB,EACtB,CAAC,EACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CACvB,CAAC;KACH;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAC9C,IAAI,CAAC,iBAAiB,EACtB,IAAI,EACJ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAC5B,CAAC;KACH;IAED,WAAW;QACT,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAC;QACpD,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,EAAE,CAAC;KACxD;CACF;;;;;;;;;;;qJAAA;;YA9FmC,oBAAoB;YACxB,kBAAkB;YACtB,cAAc;EACtC,AA4FJ;AAzHa;mBAAoB,oBALhC,SAAS,CAAC,7CCeE,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;MDd/B,QAAQ,EAAE,iBAAiB,UAC3B;;;;;;;;;;;;;;;;;;;ECa+B,CAApB,WACb;;IAD8B,oBAzB7B,QAAQ,CAAC,UACR,vCCAW,mBAAmB,GAAhC,MAAa,mBAAmB;CDAlB,EAAE,CAAC,oBAAoB,CAAC,UACpC,OAAO,EAAE,cACP,tDCEF,YACS,SAAoD,EACjD,eAAgC,EAClC,WAA+B;WDL3B,cACZ,UAAU,3BCEH,cAAS,GAAT,SAAS,CAA2C;aDD3D,YAAY,cACZ,/BCCU,oBAAe,GAAf,eAAe,CAAiB;WDDtB,cACpB,UAAU,3BCCF,gBAAW,GAAX,WAAW,CAAoB;KACrC;GDDF,SAAS,RCGX,QAAQ;SDFN,WAAW,ZCGX,IAAI,CAAC,QAAQ,EAAE,CAAC;SDFhB,aAAa,dCGb,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;CDHA,UACD,PCIQ,QAAQ;GDJP,EAAE,cACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,sBACb,oBAAoB,EAAE,7GCE1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAC/C,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,IAAc,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CACpD,CAAC;KACH;IAEO,SAAS;ADPT,SAAS,EAAE,oBAAoB,vBCQrC,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;kBDPvB,MAAM,EAAE,CAAC,SAAS,CAAC,zBCQvB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;gBDP3B,mBACF,eACF,CAAC,WACH,UACD,OAAO,EAAE,CAAC,tECIN,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;eDJ/C,CAAC,UAC/B,eAAe,EAAE,CAAC,oBAAoB,CAAC,OACxC,CAAC,IACW,iBAAiB,CAAG,tFCE5B,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,eACnB,OAAA,OAAA,IAAI,0CAAE,WAAW,IAAG,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA,EAAA,CACxE,CACF,CAAC;KACH;CACF;;;;;;;;;;;;;;;;qIAAA;;YA3BqB,gBAAgB;YACP,eAAe;YACrB,kBAAkB;EACvC,AAyBJ;AAjCa;kBAAmB,oBAL/B,SAAS,3CCcG,gBAAgB,GAA7B,MAAa,gBAAgB;ADdlB,CCcqB;ODb9B,QAAQ,EAAE,eAAe,UACzB;;CAA0C,UAC1C,eAAe,EAAE;oBAAuB,CAAC,MAAM;IAChD,CAAC,IACW,mBAAmB,CAgC/B;;;;;ECvB+B,CAAnB,gBAAgB,oBAf5B,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,EAeZ;;QAfwB,EAAE,YAAY,EAAE,kBAAkB,CAAC,vCCE9C,iBAAiB,GAA9B,MAAa,iBAAiB;GDD5B,SAAS,EAAE,cACT,oBAAoB,CAAY,7CCClC,YACY,UAAsB,EACtB,mBAAwC;gBDFhD,aAAa,EAAE,vBCCP,eAAU,GAAV,UAAU,CAAY;eDA5B,mBAAmB,EAAE,5BCCf,wBAAmB,GAAnB,mBAAmB,CAAqB;KAChD;ADDI,SAAS,EAAE,PCGZ,gBAAgB,CACrB,KAAyC;ADJL,uBAC/B,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,tFCCb,OAAO,aAAa,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;gBDFc,CAAC,LCG7B,OAAO;MDFb,OAAO,EAAE,CAAC,ACGF,KAAK,EAAE,IAAI,CAAC,IAAI;CDHK,CAAC,UAC9B,eAAe,EAAE,CAAC,dCGV,QAAQ,EAAE,CAAC,GAAG,CAAC;aAChB,CAAC;CDJ6B,CAAC,OACvC,CAAC,DCIK,CAAC,CACH,CAAC;CDJO,ICKV;;GDL0B,CAAG;;;;ICYvB,iBAAiB,CACtB,KAAyC;QAEzC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,EAAE,EAAE,CAAC;SACb;QACD,OAAO,KAAK,CAAC,IAAI,CACf,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EACtB,SAAS,CAAC,IAAI;YACZ,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YACpE,OAAO,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CACjE,GAAG,CAAC,KAAK;gBACP,IAAI,KAAK,KAAK,SAAS,EAAE;oBACvB,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;iBACjD;qBAAM;;oBAEL,MAAM,aAAa,GAAG,EAAE,CAAC;oBACzB,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;oBAChE,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAC1C,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CACtB,CAAC;oBACF,MAAM,YAAY,GAAG,aAAa,CAAC,MAAM,CACvC,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CACrC,CAAC;oBACF,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3B,IAAI,CAAC,UAAU,CAAC,mBAAmB,CACjC,UAAU,CAAC,GAAG,EACd,YAAY,CACb,CAAC;qBACH;iBACF;aACF,CAAC,EACF,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAC7D,CAAC;SACH,CAAC,CACH,CAAC;KACH;;;;;;;IAQO,wBAAwB,CAC9B,QAAa,EACb,IAAa,EACb,SAAS,GAAG,EAAE;QAEd,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK;gBAC5B,SAAS,CAAC,IAAI,CAAC;oBACb,SAAS,EAAE,KAAK,CAAC,aAAa;oBAC9B,EAAE,EAAE,KAAK,CAAC,MAAM;iBACjB,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;QAED,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAC7B,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CACvD,CAAC;SACH;QAED,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;SAC9D;KACF;;;;;;IAOO,sBAAsB,CAAC,QAAa,EAAE,KAAU;QACtD,MAAM,IAAI,GAAmB,EAAE,CAAC;QAEhC,IAAI,QAAQ,CAAC,KAAK,EAAE;;;YAGlB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC7B;QAED,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SACrD;QAED,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ;iBAC/B,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBACvD,MAAM,CAAC,OAAO,CAAC,CAAC;YACnB,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1B;SACF;;QAGD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;KACrD;;;;IAKO,YAAY,CAAC,IAAoB,EAAE,KAAK,EAAE,KAAK;QACrD,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;;QAG7D,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,kBAAkB,EAAE;YACjD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;YAE/B,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE;gBACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;;gBAGf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,GAAG,EAAE,CAAC;aAC7C;SACF;KACF;;;;;IAMO,OAAO,CAAC,IAAI;QAClB,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,OAAO,IAAI,CAAC,GAAG,CAAC;SACjB;aAAM,IAAI,IAAI,CAAC,YAAY,EAAE;YAC5B,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;gBACxC,OAAO,EAAE,UAAU;gBACnB,MAAM,EAAE;yCJ/I8B,rBIgJpC,IAAI,EAAE,IAAI,CAAC,YAAY;MJ/I/B,eAAe,EAAE,HIgJT,IAAI,EAAE,IAAI,CAAC,IAAI;SJhJiB,CAAC,MAAM,CIiJxC;GJhJR,CAAC,IACW,KIgJN,CAAC,CAAC;SACJ;EJjJ4B,CAwHhC,EI0BE;CACF;yLAAA;;YAlKyB,UAAU;YACD,mBAAmB;;qOASpD,AAyJF;AArKa;gBAAiB,oBAH7B,UAAU,CAAC,UACV,UAAU,EAAE,jECCD,2BAA2B,GAAxC,MAAa,2BAA2B;KDDpB,OACnB,CAAC,IACW,iBAAiB,CAoK7B,/BC9JC,YACY,aAAuD,EACvD,OAA0B;QAD1B,kBAAa,GAAb,aAAa,CAA0C;QACvD,YAAO,GAAP,OAAO,CAAmB;QARtC,UAAK,GAA+B,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAChE,IAAI,CAAC,aAAa,CAAC,KAAK,CACzB,CAAC;QAEF,UAAK,GAAuC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;KAKjE;CACL;;;;;;;8LAAA;;YAH4B,gBAAgB;YACtB,iBAAiB;EACpC,AAEJ;AAZa;0BAA2B,oBALvC,SAAS,CAAC,pDCeE,qBAAqB,GAAlC,MAAa,qBAAqB;QDdhC,QAAQ,EAAE,wBAAwB,tCCkDlC,YACU,MAAc,EACd,QAAmB,EACnB,OAAmB;ODpD7B,CCkDU,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAW;QACnB,YAAO,GAAP,OAAO,CAAY;QA7BpB,sBAAiB,GAAG,KAAK,CAAC;;;UDvBgB,UACnD;SAAe,EAAE;sBAAuB,CAAC,MAAM,rBC4B/C,aAAQ,GAAG,SAAS,CAAC;AD3BtB,CAAC,IACW;oBAA2B,CAWvC;;;;QCsBuC,WAAM,GAAG,IAAI,CAAC;QAEb,WAAM,GAAG,KAAK,CAAC;QAE9C,cAAS,GAAkB,EAAE,CAAC;QAC9B,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QACnC,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAYlC,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,MAAM,CAAC,MAAM;aACf,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,YAAY,aAAa,CAAC,CAAC;aACrD,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,CACjC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,8BAA8B,EAAE,CAAC;SACvC,CAAC,CACH,CAAC;KACH;IAnBD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;IAmBD,UAAU,CAAC,KAAc;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,MAAM,IAAI,GAAgB,KAAK,CAAC,aAAa,CAAC;QAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACjC,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;gBACxD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAC5C;SACF;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjC,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;IAED,IAAI;QACF,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EACzC,SAAS,CACV,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,KAAK;QACH,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,YAAY,CAAC,KAAiB;QAC5B,IAAI,CAAC,6BAA6B,CAAc,KAAK,CAAC,aAAa,CAAC,CAAC;QACrE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;KACvC;IAED,QAAQ,CAAC,IAAoB,EAAE,KAAK,GAAG,CAAC;QACtC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACzE;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;IAED,cAAc,CAAC,MAAc;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC;KACxD;IAED,yBAAyB,CAAC,KAAiB;QACzC,MAAM,MAAM,KACT,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,EACrC,CAAC;QACF,IACE,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,eAAe,CAAC;YAC3D,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,EACvC;YACA,MAAM,CAAC,KAAK,EAAE,CAAC;SAChB;QACD,OAAO,MAAM,CAAC,aAAa,CAAC;KAC7B;IAED,WAAW;QACT,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;KACF;IAEO,6BAA6B,CAAC,IAAiB;QACrD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,MAAM,OAAO,GAAgB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC5D,MAAM,MAAM,GAAgB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YACvD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;gBAClD,IACE,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW;oBACxC,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,EACtC;oBACA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,OAAO,EACP,aAAa,EACb,GAAG,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,CAC9C,CAAC;iBACH;aACF;SACF;KACF;IAEO,8BAA8B;QACpC,MAAM,IAAI,GAAmB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC;QACnE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aACb,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC;aACtC,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,6BAA6B,CAAc,GAAG,CAAC,CAAC,CAAC;KACzE;IAEO,aAAa;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAC5C;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBAC7C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aACzC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KACzC;IAED,UAAU,CAAC,IAAS;QAClB,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;KAC7D;CACF;;;;;;;;;;;;;;yLAAA;;YApImB,MAAM;YACJ,SAAS;YACV,UAAU;;AAnCpB;IAAR,KAAK,EAAE;mDAAsB;AAKrB;IAAR,KAAK,EAAE;wDAAmB;AAClB;IAAR,KAAK,EAAE;gEAA2B;AAaG;IAArC,KAAK,EAAE,EAAE,WAAW,CAAC,cAAc,CAAC;qDAAe;AAEb;IAAtC,KAAK,EAAE,EAAE,WAAW,CAAC,eAAe,CAAC;qDAAgB;AAOtD;IADC,YAAY,CAAC,eAAe,CAAC;qDAG7B,CACH,AAuIA;AA1Ka;oBAAqB,oBALjC,SAAS,CAAC,9CCJE,mBAAmB,GAAhC,MAAa,mBAAmB;MDK9B,QAAQ,EAAE,kBAAkB,9BCI5B,YACY,aAAuD,EACvD,OAA0B;EDLtC,MCIY,kBAAa,GAAb,aAAa,CAA0C;QACvD,YAAO,GAAP,OAAO,CAAmB;QAVtC,UAAK,GAA+B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC/D,IAAI,CAAC,aAAa,CAAC,KAAK,CACzB,CAAC;QAEF,gBAAW,GAAuB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAC7D,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CACvB,CAAC;KAKE;CACL;;;;;;;;iIAAA;;YAH4B,gBAAgB;YACtB,iBAAiB;EACpC,AAEJ;AAda;kBAAmB,oBAL/B,SAAS,3CCsBG,gBAAgB,GAA7B,MAAa,gBAAgB;ADtBlB,CCsBqB;ODrB9B,QAAQ,EAAE,eAAe,UACzB;6EAA0C,UAC1C,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW;YAAmB,CAa/B;;;;;;;;;;;;;ECI+B,CAAnB,WACb;;GAD6B,oBArB5B,QAAQ,CAAC,UACR,OAAO,EAAE,/CCWE,wBAAwB,GAArC,MAAa,wBAAwB;CDVjC,ACUoC;UDVxB,cACZ,YAAY,cACZ,UAAU,cACV,iBAAiB;YACjB,UAAU,WACX,UACD,SAAS,EAAE,cACT,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,sBACb,mBAAmB,EAAE;eACnB,SAAS,EAAE;kBFF0B,UAC7C,dECsC;cFDvB,EAAE,uBAAuB,CAAC,MAAM,tCEExC,mBACF,eACF,CAAC;KFHL,CAAC,IACW,qBAAqB,CAyKjC,zBEtKE,UACD,YAAY,EAAE,CAAC,mBAAmB,EAAE;eAAqB,CAAC;QAC1D;SAAe,EAAE;AAAC,mBAAmB,CAAC,UACtC,OAAO,EAAE,CAAC,tCCP4B,CAA3B,wBAAwB,oBAfpC,OAgBD;AAhBS;GDsBsB,EAAE,qBAAqB,CAAC,OACtD,CAAC,IACW,gBAAgB,CAAG,xDCxBtB,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC,UACzC,zDCUW,yBAAyB,GAAtC,MAAa,yBAAyB;IDV3B,EAAE,cACT,oBAAoB,CAAY,kBAC9B,vDCkDJ,YACY,aAAuD,EACvD,OAA0B,EAC1B,uBAAiD;KDrD5C,EAAE,sBACb,rBCkDM,kBAAa,GAAb,aAAa,CAA0C;YDlDlC,EAAE,NCmDvB,YAAO,GAAP,OAAO,CAAmB;QDlD9B,SAAS,EAAE,2BAA2B,tCCmDlC,4BAAuB,GAAvB,uBAAuB,CAA0B;KDlDtD,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,pECEf,UAAK,GAA+B,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAChE,IAAI,CAAC,aAAa,CAAC,KAAK,CACzB,CAAC;wBDJwC,CAAC,UAC3C,eAAe,EAAE,CAAC,2BAA2B,CAAC,zECK9C,gBAAW,GAAuB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAC7D,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CACvB,CAAC;SDNF,OAAO,EAAE,CAAC,2BAA2B,CAAC,OACvC,CAAC,IACW,wBAAwB,CAAG;QCOtC,UAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACnC,MAAM,CACJ,CAAC,IACC,CAAC,gBAAgB,CACf,IAAI,CAAC,uBAAuB,EAC5B,0BAA0B,CAC3B,CACJ,CACF,CAAC;KA4BE;CACL;;;;;;;;;;;;8IAAA;;YAJ4B,gBAAgB;YACtB,iBAAiB;YACA,uBAAuB;EAC3D,AAEJ;AAhDa;wBAAyB,oBALrC,SAAS,CAAC,lDCgBE,sBAAsB,GAAnC,MAAa,sBAAsB;CAAG;CDfpC,QAAQ,EAAE,sBAAsB,UAChC;;WAAiD,UACjD;KAAe,EAAE;CAAuB,CAAC,MAAM,MAChD,CAAC,IACW,yBAAyB;AA+CrC;;;;;;;;;;ECpCqC,CAAzB,WACb;;SADmC,oBArBlC,QAAQ,CAAC,UACR,OAAO,vDCGT,MAAM,uBAAuB,GAAG,uBAAuB,CAAC;ADH7C,cACP,YAAY,cACZ,YAAY,pDCMhB,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;ADLlC,gBAAgB,cAChB,iBAAiB,cACjB,UAAU,nECIZ,YACS,aAA+B,EAC5B,cAA8B,EAC9B,kBAAsC,EACtC,MAAiB;KDP5B,UACD,SAAS,EAAE,cACT,hCCEO,kBAAa,GAAb,aAAa,CAAkB;gBDFlB,CAAY,kBAC9B,3BCEQ,mBAAc,GAAd,cAAc,CAAgB;EDFzB,EAAE,sBACb,yBAAyB,EAAE,7CCErB,uBAAkB,GAAlB,kBAAkB,CAAoB;yBDD1C,jBCEI,WAAM,GAAN,MAAM,CAAW;IDFZ,CCGb;ADHe;iBAAyB,uBACrC;EACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC;oBAAyB,CAAC,UACzC;;MAAe,EAAE,CAAC,LCIlB,MAAM,CAAC,KAAa,EAAE,MAAuB;MDJF,CAAC,UAC5C,OAAO,EAAE,CAAC,nBCIR,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;cDJK,CAAC,OACrC,CAAC,IACW,fCGP,IAAI,CAAC,YAAY,EAAE,CAAC;gBDHS,CAAG,LCIhC,OAAO;SACR;QAED,IACE,MAAM,CAAC,0BAA0B;YACjC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,0BAA0B,EAChD;YACA,OAAO;SACR;QAED,IAAI,MAAM,CAAC,eAAe,EAAE;YAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE;gBAC/B,QAAQ,EAAE,MAAM,CAAC,WAAW;aAC7B,CAAC,CAAC;SACJ;QAED,IAAI,MAAM,CAAC,kBAAkB,EAAE;YAC7B,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAK,EAAE;gBAC1C,QAAQ,EAAE,MAAM,CAAC,cAAc;aAChC,CAAC,CAAC;SACJ;KACF;;;;;;IAOD,UAAU,CAAC,MAAuB;QAChC,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAC9B,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;SAC9B,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,CAAC;YACzC,OAAO;gBACL,QAAQ,EAAE,cAAc,GAAG,cAAc,CAAC,QAAQ,GAAG,IAAI;gBACzD,WAAW;gBACX,OAAO;aACR,CAAC;SACH,CAAC,EACF,GAAG,CAAC,OAAO,IACT,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CACxE,CACF,CAAC;KACH;;;;;IAMD,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;KACtD;IAED,YAAY,CAAC,SAAiB;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAChE;IAED,eAAe,CAAC,SAAiB,EAAE,GAAa;QAC9C,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACvD;aAAM;YACL,GAAG;kBACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;kBAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC3D;KACF;IAEO,UAAU,CAAC,OAAsB;QACvC,QACE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;aACjD,CAAC,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;YACzD,CAAC,CAAC,OAAO,CAAC,OAAO,EACjB;KACH;IAEO,iBAAiB,CACvB,MAAuB;QAEvB,IAAI,MAAM,CAAC,eAAe,EAAE;YAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;SACxC;aAAM;YACL,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf;KACF;;;;;IAMO,qBAAqB,CAAC,MAAuB;QACnD,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;YAC9B,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf;aAAM;YACL,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC,IAAI,CACnD,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,EACnD,SAAS,CAAC,WAAW;gBACnB,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,IAAI,CACzC,GAAG,CAAC,KAAK,KAAK,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CACrC,CAAC;iBACH;qBAAM;oBACL,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;iBACxB;aACF,CAAC,CACH,CAAC;SACH;KACF;;;;;IAMO,kBAAkB,CAAC,MAAuB;QAChD,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CACxC,SAAS,CAAC,aAAa;YACrB,OAAO,aAAa,CAAC,QAAQ,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;kBAC9D,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,EAAE;oBACjD,IAAI,EAAE,aAAa,CAAC,cAAc;iBACnC,CAAC;kBACF,EAAE,CAAC,IAAI,CAAC,CAAC;SACd,CAAC,CACH,CAAC;KACH;IAEO,gBAAgB,CAAC,MAAuB;QAC9C,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAC9B,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;SACnC,CAAC,CAAC,IAAI,CACL,SAAS,CAAC,CAAC,CAAC,aAAa,EAAE,WAAW,CAAC;YACrC,IACE,aAAa;gBACb,aAAa,CAAC,QAAQ;gBACtB,aAAa,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;gBACnC,WAAW;gBACX,WAAW,CAAC,MAAM,KAAK,CAAC,EACxB;gBACA,OAAO,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;aACxD;iBAAM;gBACL,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;aACjB;SACF,CAAC,CACH,CAAC;KACH;;;;IAKM,gBAAgB,CAAC,KAAa;QACnC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;YACrB,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,EAAE,KAAK,EAAE;SAClB,CAAC,CAAC;KACJ;IAEO,gBAAgB,CACtB,cAAsB,EACtB,OAAa;QAEb,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;KACnE;CACF;iSAAA;;YAlLyB,gBAAgB;YACZ,cAAc;YACV,kBAAkB;YAC9B,SAAS;;yTAevB,AAiKR;AArLa;wBAAyB,xBCHtC,MAAM,wBAAwB,GAAoB;SDAjD,UAAU,CAAC,UACV,1BCAA,0BAA0B,EAAE,CAAC;KDAnB,EAAE,MAAM,OACnB,CAAC,IACW,rBCDX,eAAe,EAAE,IAAI;uBDCe,CAoLrC,pBCpLC,kBAAkB,EAAE,IAAI;IACxB,WAAW,EAAE,CAAC;IACd,cAAc,EAAE,CAAC;IACjB,oBAAoB,EAAE,IAAI;CAC3B,CAAC;AAOF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;;;;;IAyB7B,YACY,yBAAoD,EAEpD,aAAsD,EACtD,MAAiB;QAHjB,8BAAyB,GAAzB,yBAAyB,CAA2B;QAEpD,kBAAa,GAAb,aAAa,CAAyC;QACtD,WAAM,GAAN,MAAM,CAAW;QAjB7B,cAAS,GAAG,SAAS,CAAC;;;;;QAMd,qBAAgB,GAAG,KAAK,CAAC;QAcjC,aAAQ,GAA8B,IAAI,CAAC,OAAO,CAAC,IAAI,CACrD,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAC3B,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CACvE,CAAC;KALE;;;;IAxBJ,IAAI,SAAS,CAAC,KAAa;QACzB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACpB;KACF;;;;IA8BD,IAAY,OAAO;QACjB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAoC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI;;;YAG/D,GAAG,CAAC,CAAC;gBACH,uCACK,CAAC,KACJ,eAAe,EACR,CAAC,CAAC,eAAe,KAAK,MAAM,IAAI,CAAC,CAAC,eAAe,KAAK,IAAI,EACjE,oBAAoB,EACb,CAAC,CAAC,oBAAoB,KAAK,MAAM;wBACtC,CAAC,CAAC,oBAAoB,KAAK,IAAI,EACjC,kBAAkB,EACX,CAAC,CAAC,kBAAkB,KAAK,MAAM;wBACpC,CAAC,CAAC,kBAAkB,KAAK,IAAI,IAC/B;aACH,CAAC,CACH,CAAC;SACH;aAAM;YACL,OAAO,EAAE,CAAC,wBAAwB,CAAC,CAAC;SACrC;KACF;;;;IAKD,MAAM,CAAC,KAAa;QAClB,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;QAE1D,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;;;;IAKD,IAAI;QACF,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;KAC7E;;;;IAKD,KAAK,CAAC,KAAc,EAAE,KAAe;;QAEnC,UAAU,CAAC;YACT,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,KAAK,EAAE;gBACnE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAC3B;SACF,CAAC,CAAC;KACJ;IAES,aAAa,CAAC,KAAc;QACpC,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAC5C,qBAAqB,EACrB,KAAK,CACN,CAAC;QACF,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACX,KAAK,CAAC,MAAO,CAAC,IAAI,EAAE,CAAC;SACpC;KACF;;IAGO,kBAAkB;QACxB,QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,4BAA4B,CAAC;gBAC9D,IAAI,CAAC,iBAAiB,EAAE,EAC1B;KACH;;;;;IAMD,WAAW,CAAC,KAAc;QACxB,IAAI,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,qBAAqB,CAAC,EAAE;YACtE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;;IAGO,iBAAiB;QACvB,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,CACzE,CAAC;KACH;;IAGO,iBAAiB;QACvB,OAAoB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;KACxD;IAEO,eAAe;QACrB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACnE;;IAGD,kBAAkB,CAAC,KAAK;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;;QAEF,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,YAAY,GAAG,CAAC,EAAE;gBACpB,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACrC;iBAAM;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACnC;SACF;KACF;;IAGD,cAAc,CAAC,KAAK;QAClB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;SACvB,CAAC;;QAEF,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACpB;iBAAM;gBACL,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACnC;SACF;KACF;;;;;;IAOD,kBAAkB,CAAC,KAAc,EAAE,KAAa;QAC9C,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,OAAO;SACR;QACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClB,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACxD;;;;IAKD,YAAY;QACV,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;;;;IAKM,KAAK,CAAC,EAAoB;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;KAC/C;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sRAAA;;YA9KwC,yBAAyB;YAErC,gBAAgB,uBADxC,QAAQ;YAES,SAAS;;AAvB7B;IADC,KAAK,CAAC,WAAW,CAAC;mDAKlB;AAVU,kBAAkB,eACnB,KANX,SAAS,CAAC,fAKP,CA2BC,WAAA,QAAQ,EAAE,CAAA;CA/Bb,QAAQ,EAAE,RAIC,kBAAkB,CAwM9B;;AA5MyB,UACxB,NCtBW,aAAa,GAA1B,MAAa,aAAa;IACxB,SAAS,CAAC,IAAY,EAAE,KAAc;QACpC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,OAAO,CACjB,KAAK,CAAC,IAAI,EAAE,EACZ,2BAA2B,KAAK,CAAC,IAAI,EAAE,SAAS,CACjD,CAAC;KACH;CACF;;EAAA,CAVY,aAAa,oBADzB,IAAI,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,IACjB,aAAa,CAUzB,iBACD;;ICsBa,eAAe,GAA5B,MAAa,eAAe;CAAG;;;;;;;;;;;;;;;;;EAAA,CAAlB,WACb;;EAD4B,oBAtB3B,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,YAAY,xECIH,+BAA+B,GAA5C,MAAa,+BAA+B;YDHxC,YAAY,cACZ,WAAW,7CCOb,YACY,eAAgC,EAChC,gBAAkC;UDR5C,UAAU,cACV,SAAS,nCCMC,oBAAe,GAAf,eAAe,CAAiB;SDL1C,UAAU,WACX,UACD,SAAS,zCCIG,qBAAgB,GAAhB,gBAAgB,CAAkB;CDJnC,cACT,oBAAoB,CAAY,kBAC9B,9CCJJ,sBAAiB,GAAsB,iBAAiB,CAAC,QAAQ,CAAC;KAO9D;ADHa,EAAE,ECKnB,QAAQ;ODJF,kBAAkB,EAAE,0BAClB,7CCIN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;ADJtC,EAAE,kBAAkB,uBAC9B,mBACF,eACF,CAAC,WACH,jFCCC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC9D,IAAI,CAAC,iBAAiB,CACvB,CAAC;CDFJ,ICGC;ODHW,EAAE,CAAC,NCKf,WAAW;QDLsB,EAAE,aAAa,CAAC,UACjD,eAAe,zCCKb,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;CDL1B,CAAC,GCMjB;CACF;WDPqC,CAAC,UACrC,OAAO,EAAE,CAAC,kBAAkB,CAAC,OAC9B,CAAC,IACW,eAAe,CAAG;;;;;;;2DFXa,UAC1C,eAAe,EAAE,uBAAuB,CAAC,MAAM,GGchD;EHbA,CAAC;YGD6B,eAAe;YACd,gBAAgB;EAC5C,AAaJ;AArBa;8BAA+B,oBAL3C,SAAS,CAAC,UACT,QAAQ,EAAE,5ECOC,kCAAkC,GAA/C,MAAa,kCAAkC;yBDPN,UACvC,/BCSA,YACY,eAAgC,EAClC,WAA+B;QAD7B,oBAAe,GAAf,eAAe,CAAiB;QAClC,gBAAW,GAAX,WAAW,CAAoB;KACrC;IAEJ,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;KACtD;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;KAC1C;IAED,qBAAqB,CAAC,eAAwB;QAC5C,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAC1D,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,eAAe,CAAC,CAAC,EACrC,GAAG,CAAC,SAAS,KAAK;YAChB,KAAK,EAAE,SAAS;qDD1BkC,UACxD,eAAe,EAAE,pEC0BX,QAAQ,EAAE,GAAG,eAAe,CAAC,SAAS,IAAI,eAAe,CAAC,QAAQ,EAAE;YACpE,IAAI,EAAE;CD3B4B,CAAC,MAAM,MAChD,CAAC,IACW,HC0BH,eAAe,CAAC,KAAK;WD1Ba,CAoB3C,ICOS,eAAe,CAAC,KAAK;gBACrB,GAAG,eAAe,CAAC,IAAI,KAAK,eAAe,CAAC,OAAO,CAAC,OAAO,KAAK,eAAe,CAAC,UAAU,EAAE;gBAC5F,eAAe,CAAC,KAAK;aACtB;SACF,CAAC,CAAC,CACJ,CAAC;KACH;IAED,0BAA0B,CAAC,YAA0B;QACnD,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAC,IAAI,CACvE,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,EAClC,GAAG,CAAC,SAAS,KAAK;YAChB,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,YAAY,CAAC,IAAI;YAC3B,IAAI,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC;SACjC,CAAC,CAAC,CACJ,CAAC;KACH;IAED,4BAA4B,CAAC,cAAuB;QAClD,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAC1D,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,CAAC,EACpC,GAAG,CAAC,SAAS,KAAK;YAChB,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,GAAG,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,QAAQ,EAAE;YAClE,IAAI,EAAE;gBACJ,cAAc,CAAC,KAAK;gBACpB,cAAc,CAAC,KAAK;gBACpB,GAAG,cAAc,CAAC,IAAI,KAAK,cAAc,CAAC,OAAO,CAAC,OAAO,KAAK,cAAc,CAAC,UAAU,EAAE;gBACzF,cAAc,CAAC,KAAK;aACrB;SACF,CAAC,CAAC,CACJ,CAAC;KACH;IAED,yBAAyB,CAAC,OAAuB;QAC/C,OAAO,aAAa,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBAChD,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,EAAE;gBAClD,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,UAAU,GAAG,EAAE;aACjD,CAAC;SACH,CAAC,CAAC,IAAI,CACL,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAC7B,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,MAAM;YACjC,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,OAAO,CAAC,iBAAiB;YACnC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC;SACxC,CAAC,CAAC,CACJ,CAAC;KACH;CACF;;;;;;;sHAAA;;YAvE8B,eAAe;YACrB,kBAAkB;EACvC,AAsEJ;AA5Ea;iCAAkC,oBAL9C,SAAS,CAAC,UACT,QAAQ,EAAE,/ECJC,yCAAyC,GAAtD,MAAa,yCAAyC;iBDIV,UAC1C,vBCCA,YAAsB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAHtD,oBAAe,GAAG,KAAK,CAAC;KAGkC;IAE1D,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CACvD,GAAG,CAAC,KAAK;YACP,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,aAAa,CAAC;YAC3C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;SAC7B,CAAC,CACH,CAAC;KACH;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;KAC1C;CACF;;;;;aDf4D;GAC3D,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW;sBAAkC,CA2E9C;yJC/DA;;YAdwC,eAAe;EACxD,AAcA;AArBa;wCAAyC,oBALrD,SAAS,CAAC,lECIE,gCAAgC,GAA7C,MAAa,gCAAgC;ADH3C,QAAQ,EAAE,NCMV,YAAsB,eAAgC;gBDNH,UACnD,lBCKsB,oBAAe,GAAf,eAAe,CAAiB;KAAI;IAE1D,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;KACtD;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;KAC1C;CACF;;8aDdqE,UACpE,eAAe,EAAE;mBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,yCAAyC,CAoBrD;;;;8HCTA;;YATwC,eAAe;EACxD,AASA;AAba;+BAAgC,oBAL5C,SAAS,CAAC,zDCCE,0BAA0B,GAAvC,MAAa,0BAA0B;GDArC,QAAQ,EAAE,8BAA8B,UACxC,jDCgBA,YACY,WAAwB,EACxB,cAA8B,EAC9B,WAAwB,EACxB,EAAe;QAHf,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QAf3B,sBAAiB,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAC1C;YACE,QAAQ,EAAE;gBACR,EAAE;+BDRiD,UACzD,eAAe,EAAE,1CCQX,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,iBAAiB,CAAC;EDR3B,CAAC,MAAM,ICS1C;ADRN,CAAC,IACW,gCAAgC,CAY5C,1BCJK,YAAY,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACxC,EACD,EAAE,SAAS,EAAE,oBAAoB,CAAC,aAAa,EAAE,CAClD,CAAC;KAOE;IAEJ,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,aAAa,CAC5B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CACtC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,KAAK;gBACjE,IAAI,KAAK,CAAC,YAAY,EAAE;oBACtB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;iBAC7C;aACF,CAAC,CAAC;SACJ;KACF;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oQAAA;;YAzB0B,WAAW;YACR,cAAc;YACjB,WAAW;YACpB,WAAW;;AApBlB;IAAR,KAAK,EAAE;wDAAc;AACb;IAAR,KAAK,EAAE;yDAAe,CACzB,AAyCA;AA5Ca;yBAA0B,oBAJtC,SAAS,CAAC,nDCKE,sBAAsB,GAAnC,MAAa,sBAAsB;KDJjC,QAAQ,EAAE,wBAAwB,UAClC,7CCIA,YACU,eAAgC,EAChC,MAAc,EACd,mBAAwC;QAFxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;KAC9C;IAEJ,WAAW;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CAChD,GAAG,CAAC,YAAY;YACd,IAAI,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1D,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;aACrE;SACF,CAAC,CACH,CAAC;KACH;CACF;6OAAA;;YAhB4B,eAAe;YACxB,MAAM;YACO,mBAAmB;;gRAS1B,AAM1B;AAnBa;qBAAsB,rBCUnC,MAAM,2BAA2B,GAAG;GDbnC,UAAU,CAAC,UACV,UAAU,EAAE,hCCaZ,+BAA+B;KDbb,OACnB,CAAC,IACW,sBAAsB,nCCYjC,kCAAkC;ADMnC,ICLC,yCAAyC;IACzC,gCAAgC;IAChC,0BAA0B;CAC3B,CAAC;AAuCF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;eF1Dc,MACpD,CAAC;AACW,0BAA0B,CA2CtC;;;;;;;EEasC,CAA1B,WACb;;UADoC,oBArCnC,QAAQ,CAAC,UACR,OAAO,EAAE,tDCfE,sBAAsB,GAAnC,MAAa,sBAAsB;YDgB/B,YAAY,cACZ,gBAAgB,cAChB,hECjBF,YACY,cAA8B,EAC9B,gBAAyC,EACzC,mBAAwC;KDcxC,cACV,SAAS,cACT,lCClBU,mBAAc,GAAd,cAAc,CAAgB;YDkBxB,cAChB,UAAU,5BClBA,qBAAgB,GAAhB,gBAAgB,CAAyB;ADmBnD,mBAAmB,cACnB,oBAAoB,7CCnBV,wBAAmB,GAAnB,mBAAmB,CAAqB;KAChD;EDmBH;IACD,SAAS,EAAE,cACT,oBAAoB,CAAY;MAC9B;WAAa,EAAE,TCjBnB,WAAW,CAAC,IAAY;WDkBlB,sCAAsC,EAAE,0BACtC,SAAS,EAAE,hFClBjB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CACvC,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAC7C,CAAC;KACH;SDc2D,0BACpD,MAAM,EAAE,CAAC,sBAAsB,CAAC,/DCbxC,oBAAoB,CAClB,IAAY,EACZ,aAAqB,EACrB,YAAqB,EACrB,oBAA6B;MDUxB,sBACD,+BAA+B,EAAE,0BAC/B,SAAS,EAAE,+BAA+B,0BAC1C,MAAM,EAAE,CAAC,5JCXf,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,IAAI,CACxD,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,IAAwB,KAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,IACV,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,EAAE,oBAAoB,CAAC,CACpE,CACF,CACF,CAAC;ADImC,CAAC,ICHvC;;UDIM,sBACD;;EAAgC,EAAE,0BAChC,SAAS,EAAE,gCAAgC,rECD3C,cAAc,CACpB,MAAe,EACf,YAAY,GAAG,IAAI,EACnB,oBAAoB,GAAG,IAAI;oBDDrB,ZCGN,MAAM,IAAI,GAAwB,EAAE,CAAC;CDHzB,EAAE,CAAC,sBAAsB,CAAC,nBCItC,IAAI,YAAY,EAAE;sBDHb,VCIH,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;MDHvB,GCIH;8BDJqC,EAAE,0BAClC,SAAS,EAAE,7DCIjB,IAAI,oBAAoB,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE;oBDJtB,0BAC7C,MAAM,xCCIV,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC;ADJ7B,CAAC,QCKd;aDLoC,CAAC,uBACjC,7BCKL,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;EDJzC,eACF,CAAC,NCIA,IAAI,CAAC,KAAK,GAAG;EDHhB,UACD,YAAY,EAAE,CAAC,GAAG,dCGZ,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO;ODHO,CAAC,UAC9C,OAAO,EAAE,CAAC,GAAG,fCGP,MAAM,EAAE,SAAS;aAClB,CAAC;QDJkC,CAAC,ACKtC;SDJH,eAAe,EAAE,CAAC,GAAG,2BAA2B,jDCK9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;ADLD,OAClD,CAAC,IACW,ACIP,OAAO,EAAE,SAAS;GDJY,CAAG,QCKjC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;CACF;6PAAA;;YA1D6B,cAAc;YACZ,uBAAuB;YACpB,mBAAmB;;gSAarC,AA4CjB;AA7Da;qBAAsB,oBAHlC,UAAU,CAAC,UACV,1DCGW,wBAAwB,GAArC,MAAa,wBAAwB;QDHzB,EAAE,MAAM,OACnB,CAAC,IACW,xBC2BX,YACY,aAAsC,EACtC,cAA8B;CD7BT,CA4DlC,MChCa,kBAAa,GAAb,aAAa,CAAyB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QA3BvB,kBAAa,GAAG,YAAY,CAAC,IAAI,CAAC;QAE7C,mBAAc,GAAsB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CACvE,MAAM,CAAC,OAAO,CAAC,CAChB,CAAC;;;;QAKF,WAAM,GAAuB,IAAI,CAAC,cAAc,CAAC,IAAI,CACnD,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CACxB,CAAC;;;;;;QAOF,WAAM,GAAsC,IAAI,CAAC,cAAc,CAAC,IAAI,CAClE,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAChD,GAAG,CAAC,KAAK,IACP,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CACrE,CACF,CAAC;KAKE;CACL;;;;;;;;;;qLAAA;;YAH4B,gBAAgB;YACf,cAAc;EACxC,AAEJ;AA/Ba;uBAAwB,oBALpC,SAAS,CAAC,jDCcE,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;EDbnC,QAAQ,EAAE,qBAAqB,UAC/B;;;;;;;;;ECYmC,CAAxB,qBAAqB,oBAfjC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,GAe1B;;kDDbkD,UAChD,nDCHsC,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,UAC7E,SAAS,/DCWE,0BAA0B,GAAvC,MAAa,0BAA0B;OFTtB,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,jDCJA,cACT,oBAAoB,CAAY,kBAC9B,lDCsCJ,YACY,SAA0D,EAC1D,OAA8B,EAC9B,gBAAyC;kBFvClB,CA8BpC,RChCkB,EAAE,sBACb,3BCsCM,cAAS,GAAT,SAAS,CAAiD;uBDtCxC,EAAE,jBCuCpB,YAAO,GAAP,OAAO,CAAuB;mBDtClC,SAAS,EAAE,tBCuCP,qBAAgB,GAAhB,gBAAgB,CAAyB;IDvCV;eACpC,mBACF,eACF,CAAC;QACH;MACD,YAAY,EAAE,CAAC,wBAAwB,CAAC,UACxC,hDCKA,WAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;GDLvC,EAAE,CAAC,wBAAwB,CAAC,UAC3C,OAAO,EAAE,CAAC,wBAAwB,CAAC,OACpC,CAAC,IACW,qBAAqB,CAAG,tGCI3B,wBAAmB,GAEvB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,CAChC,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,CAAU,KAAK,CAAC,CAAC,IAAI,CAAC,EAC3B,oBAAoB,EAAE,EACtB,GAAG,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,CACnD,CAAC;;;;;;QAOF,WAAM,GAAsC,aAAa,CAAC;YACxD,IAAI,CAAC,mBAAmB;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK;SACrB,CAAC,CAAC,IAAI,CACL,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,KACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAC5D,CACF,CAAC;KAME;IAEI,oBAAoB,CAC1B,IAAY,EACZ,aAAqB;QAErB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,IAAI,CACxD,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,IAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CACnE,CAAC;KACH;CACF;;;;;;;;;;qLAAA;;YAdwB,gBAAgB;YAClB,qBAAqB;YACZ,uBAAuB;EACnD,AAYJ;AA7Ca;yBAA0B,oBALtC,SAAS,CAAC,nDCKE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ADJrC,QAAQ,EAAE,uBAAuB,UACjC;;;;;;;;;ECGqC,CAA1B,uBAAuB,oBAfnC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,CAe1B;;aDJoD,UAClD,ZCZsC,EAAE,WAAW,EAAE,pBCP1C,mBAAmB,GAAe;QFmB9B,EAAE,FCZgD,EAAE,NCNnE,IAAI,EAAE;qBFkBkC,CAAC,fCZmC,CAAC,UAC7E,VCNE,cAAc,EAAE;EFiB6B,MAChD,CAAC,IACW,ZCbF,EAAE,cACT,LCNE,MAAM,EAAE,KAAK;YFkBoB,CA4CtC,HCxDuB,CAAY,CCL9B,YAAY,EAAE,CAAC;ADMf,aAAa,EAAE,HCLf,cAAc,EAAE,KAAK;EDMnB,OCLH;KACF;CACF;;MDGiC,EAAE,0BAC1B,SAAS,EAAE,zCEHR,sBAAsB,GAAnC,MAAa,sBAAsB;WFGY,uBACtC,9BEiBP,YAAoB,qBAA4C;YFhB3D,eACF,CAAC,WACH,UACD,zCEaoB,0BAAqB,GAArB,qBAAqB,CAAuB;CFbpD,EAAE,CAAC,0BAA0B,CAAC,UAC1C,eAAe,EAAE,CAAC,nDERV,uBAAkB,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;wBFQX,CAAC,UAC7C,OAAO,EAAE,CAAC,0BAA0B,CAAC,OACtC,CAAC,IACW,uBAAuB,CAAG,pGET7B,aAAQ,GAEZ,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,IAAI,CAC9C,MAAM,CAAC,OAAO,CAAC,EACf,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,CAAU,KACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,CAC/D,CACF,CAAC;QAEF,YAAO,GAAsB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC7C,GAAG,CAAC,CAAC,CAAU,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAC1C,CAAC;QAEF,eAAU,GAAG,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CACvE,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,SAAS,CAAC,CAClC,CAAC;KAEkE;IAEpE,SAAS,CAAC,IAAS;QACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACpC;IAED,QAAQ,CAAC,SAAS;QAChB,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACjC,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,SAAc;YACjB,QACE,SAAS,CAAC,IAAI;gBACd,SAAS,CAAC,IAAI,CAAC,GAAG;gBAClB,SAAS,CAAC,IAAI;gBACd,SAAS,CAAC,IAAI,CAAC,GAAG;gBAClB,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,GAAG,EACzC;SACH,CAAC,CACH,CAAC;KACH;;IAGD,SAAS,CAAC,MAAa;QACrB,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACjC,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,SAAc;YACjB,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CACzB,CAAC,IACC,CAAC,CAAC,KAAK;gBACP,SAAS,CAAC,IAAI;gBACd,CAAC,CAAC,KAAK,CAAC,SAAS;gBACjB,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI;gBACtB,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,GAAG,CACpD,CAAC;YACF,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAChC,CAAC,CACH,CAAC;KACH;;;;;IAMO,YAAY,CAAC,OAAgB;QACnC,IACE,CAAC,OAAO,CAAC,MAAM;YACf,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO;YACvB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EACjC;YACA,OAAO,EAAE,CAAC;SACX;QAED,OAAe,OAAO,CAAC,MAAM,CAAC,OAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACvE;CACF;;;;;;;;;;;;;+FAAA;;YAtD4C,qBAAqB;EAClE,AAsDA;AA5Ea;qBAAsB,oBALlC,SAAS,CAAC,/CCwBE,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;IDvBjC,QAAQ,EAAE,mBAAmB,UAC7B;;;;;;;;;;;;;;;ECsBiC,CAAtB,WACb;;MADgC,oBArB/B,QAAQ,CAAC,UACR,OAAO,EAAE,lDCIE,qBAAqB,GAAlC,MAAa,qBAAqB;4DFNc,lDCG5C,YAAY,cACZ,YAAY,cACZ,1DCMF,YACY,qBAA4C,EAC9C,kBAAsC,EACpC,MAAiB;CFb7B,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,vDCEE,cACX,YAAY,cACZ,cAAc,lDCKJ,0BAAqB,GAArB,qBAAqB,CAAuB;qBFTvB,CA2ElC,bCtEE,UACD,SAAS,EAAE,cACT,pCCGQ,uBAAkB,GAAlB,kBAAkB,CAAoB;UDH1B,CAAY,kBAC9B,rBCGQ,WAAM,GAAN,MAAM,CAAW;YDHZ,EAAE,sBACb,sBAAsB,EAAE,pDCL9B,wBAAmB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;uBDMlD,SAAS,EAAE,sBAAsB,hDCJzC,aAAQ,GAAwB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;KAMpE;QDDG,mBACF,vBCEL,qBAAqB;YDDlB,CAAC,WACH,UACD,YAAY,EAAE,CAAC,zCCAb,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;EDAzB,CAAC,ECCrC;ODAD,eAAe,EAAE,CAAC,sBAAsB,CAAC,UACzC;AAAO,EAAE,CAAC,CCEV,WAAW;KDFqB,CAAC,OAClC,CAAC,IACW,mBAAmB,CAAG;QCE/B,IAAI,CAAC,kBAAkB;aACpB,SAAS,CAAC,mDAAmD,CAAC;aAC9D,SAAS,CAAC,eAAe;YACxB,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;YACtE,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YACpD,IAAI,UAAU,IAAI,gBAAgB,EAAE;gBAClC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;gBACpC,UAAU,CACR,MAAM,gBAAgB,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAC7D,CAAC,CACF,CAAC;aACH;SACF,CAAC;aACD,WAAW,EAAE,CAAC;KAClB;;;IAIO,mBAAmB;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;KACjE;;IAGO,gBAAgB;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC;KACzE;;IAGO,kBAAkB,CAAC,GAAgB;QACzC,IACE,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EACjC;YACA,GAAG,CAAC,KAAK,EAAE,CAAC;SACb;KACF;;IAGO,aAAa,CAAC,KAAa,EAAE,aAAsB;QACzD,IAAI,aAAa,EAAE;;;YAGjB,MAAM,WAAW,GAAkC,aAAa,CAAC,oBAAoB,CACnF,QAAQ,CACT,CAAC;;YAGF,KAAK,MAAM,aAAa,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBACnD,IAAI,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC3C,OAAO,aAAa,CAAC;iBACtB;aACF;SACF;KACF;CACF;;;;;;;kJAAA;;YAnEoC,qBAAqB;YAC1B,kBAAkB;YAC5B,SAAS;EAC3B,AAiEJ;AA1Ea;oBAAqB,oBALjC,SAAS,CAAC,9CCYE,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;KDXhC,QAAQ,EAAE,kBAAkB,UAC5B;;;;;;;;;ECUgC,CAArB,kBAAkB,oBAf9B,QAAQ,CAAC,UACR,MAeF;AAfS;CAAE,CAAC,YAAY,EAAE,UAAU,EAAE,gBAAgB,CAAC,UACrD,SAAS,EAAE,9DC0BA,2BAA2B,GAAxC,MAAa,2BAA2B;UDzBpC,oBAAoB,CAAY,kBAC9B,aAAa,EAAE,sBACb,lFC+BN,YACY,oBAA0C,EAC1C,OAAuB,EACvB,cAA8B,EAC9B,eAAgC,EAChC,eAAgC,EAChC,MAAc;ADrCC,EAAE,0BACrB,SAAS,EAAE,/BC+BP,yBAAoB,GAApB,oBAAoB,CAAsB;ED/Bd,uBACjC,jBC+BK,YAAO,GAAP,OAAO,CAAgB;yBFjCU,UAC7C,vBCEK,eACF,CAAC,WACH,/BC6BW,mBAAc,GAAd,cAAc,CAAgB;IFjC3B,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,5CCGX,YAAY,EAAE,CAAC,qBAAqB,CAAC,hCC6BzB,oBAAe,GAAf,eAAe,CAAiB;oBFhCZ,CAyEjC,nBCrEC,OAAO,EAAE,CAAC,qBAAqB,CAAC,UAChC,pCC4BY,oBAAe,GAAf,eAAe,CAAiB;WD5B7B,EAAE,CAAC,NC6BN,WAAM,GAAN,MAAM,CAAQ;KD7Ba,CAAC,OACzC,CAAC,IACW,kBAAkB,CAAG;QCetB,oBAAe,GAAG,EAAE,CAAC;QAIZ,4BAAuB,GAAG,2BAA2B,CAAC;QAWjE,mBAAc,GAElB,IAAI,CAAC,oBAAoB;aAC1B,UAAU,EAAE;aACZ,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAE9D,qBAAgB,GAEpB,aAAa,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,IAAI,CAChC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC;;;gBAGxB,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;aACpC,CAAC,CACH;;YAED,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE;SACjC,CAAC,CAAC,IAAI,CACL,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,EACjB,GAAG,CAAC,CAAC,KAAmC;YACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CACxC,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,WAAW,CAClB,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACvB,CAAC,CACH,CAAC;;;;;;;;;;QAWO,WAAM,GAAkC,aAAa,CAAC;YAC7D,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,gBAAgB;SACtB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;KA5C9D;IA8CJ,kBAAkB;QAChB,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;KAC1C;IAEO,oBAAoB,CAC1B,WAAmC,EACnC,WAA2B;QAE3B,OAAO;YACL,KAAK,EAAE,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC;YACrE,QAAQ,EAAE,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe;YACtD,WAAW,EAAE,WAAW,CAAC,WAAW;YACpC,QAAQ,EAAE,WAAW,CAAC,QAAQ;SAC/B,CAAC;KACH;IAEO,uBAAuB,CAAC,EAC9B,SAAS,EACT,YAAY,EACZ,KAAK,GACkB;QACvB,IAAI,KAAK,EAAE;YACT,OAAO,KAAK,CAAC;SACd;QACD,IAAI,YAAY,EAAE;YAChB,OAAO,IAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC;SACpD;QACD,IAAI,SAAS,EAAE;YACb,OAAO,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;SACjD;KACF;IAEO,MAAM,CAAC,QAAwB;QACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAEpD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;KACvD;IAEO,eAAe,CAAC,QAAwB;QAC9C,MAAM,MAAM,GAAiB;YAC3B,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC5B,CAAC;;QAGF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QAEvE,OAAO,MAAM,CAAC;KACf;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC;KACxD;IAED,QAAQ,CAAC,UAAkB;QACzB,IAAI,CAAC,cAAc,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC;KAClD;;;;IAKD,YAAY,CAAC,UAAkB;QAC7B,IAAI,CAAC,OAAO;aACT,cAAc,EAAE;aAChB,SAAS,CAAC,KAAK;YACd,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAC7C,KAAK,CAAC,KAAK,CAAC,MAAM,EAClB,KAAK,CAAC,KAAK,CAAC,WAAW,CACxB,CAAC;YACF,MAAM,QAAQ,mCACT,aAAa,KAChB,WAAW,EAAE,UAAU,GACxB,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACvB,CAAC;aACD,WAAW,EAAE,CAAC;KAClB;IAED,IAAI,CAAC,QAAgB;QACnB,IAAI,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;KACnC;IAEO,cAAc,CAAC,WAA2B;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,WAAW;YACX,mBAAmB,EAAE,OAAO;YAC5B,UAAU,EAAE,IAAI,CAAC,cAAc;SAChC,CAAC,CAAC;KACJ;CACF;sXAAA;;YA/ImC,oBAAoB;YACjC,cAAc;YACP,cAAc;YACb,eAAe;YACf,eAAe;YACxB,MAAM;;oXAcjB,AA6HX;AAzJa;ICzBD,SAGX;WDsBuC,XCzBxC,WAAY,SAAS;ODwBpB,UAAU,CAAC,EAAE,UAAU,1BCvBtB,0BAAa,CAAA;ADuBW,MAAM,EAAE,CAAC,IACtB,TCvBX,0BAAa,CAAA;QDuByB,CAwJvC,TC9KD,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAOD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAAjC;QACE,cAAS,GAAG,SAAS,CAAC;QAItB,eAAU,GAAG,IAAI,YAAY,EAAU,CAAC;KAwBzC;IAtBC,IAAI,WAAW;QACb,MAAM,QAAQ,GAAW,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QACrD,OAAO,cAAc,QAAQ,EAAE,CAAC;KACjC;;;;;IAMD,IAAI,QAAQ;QACV,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;YACxB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC5B;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;YAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC5B;KACF;IAED,UAAU;QACR,MAAM,OAAO,GACX,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACjE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC/B;CACF;;;;;;;;;;;;;;2GAAA;AA1BC;IADC,KAAK,EAAE;kDACQ;AAEhB;IADC,MAAM,EAAE;wDAC+B,CAC1C,AAwBA;AA9Ba;mBAAoB,oBALhC,SAAS,CAAC,7CCDE,oBAAoB,GAAjC,MAAa,oBAAoB;GDE/B,QAAQ,EAAE,iBAAiB,UAC3B,pCC0BA,YACU,iBAAoC,EACpC,2BAAwD,EACzD,YAAyB;QAFxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gCAA2B,GAA3B,2BAA2B,CAA6B;QACzD,iBAAY,GAAZ,YAAY,CAAa;QA/B1B,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAI1C,WAAM,GAAkC,IAAI,CAAC,2BAA2B;oBDF5B,PCGzC,MAAM,CAAC;SDFV,eAAe,EAAE,uBAAuB,CAAC,MAAM,hDCI/C,cAAS,GAAG,IAAI,eAAe,CAAY,SAAS,CAAC,IAAI,CAAC,CAAC;ADH5D,CAAC,IACW,oBAAoB,CA6BhC,lBC1BC,cAAS,GAAG,SAAS,CAAC;KAwBlB;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QAErE,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,EAAE,CAAC;QAEtD,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ;YACnE,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,QAAQ,KAAK,yBAAyB;kBAClC,SAAS,CAAC,IAAI;kBACd,SAAS,CAAC,IAAI,CACnB,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,QAAQ,CAAC,QAAgB;QACvB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;IAED,WAAW,CAAC,IAAe;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;CACF;;;;;;;;;;;iIAAA;;YAhC8B,iBAAiB;YACP,2BAA2B;YAC1C,UAAU;EAChC,AA8BJ;AA/Da;mBAAoB,oBAJhC,SAAS,CAAC,UACT,vDCCW,sBAAsB,GAAnC,MAAa,sBAAsB;ODDzB,EAAE,iBAAiB,UAC3B,hCCwCA,YACU,2BAAwD,EACxD,GAAsB;QADtB,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,QAAG,GAAH,GAAG,CAAmB;QAzCxB,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAgC1C,cAAS,GAAG,SAAS,CAAC;QACtB,mBAAc,GAAG,KAAK,CAAC;QACvB,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QACnB,YAAO,GAAG,KAAK,CAAC;KAKZ;IAvCJ,IAAI,SAAS,CAAC,WAAuB;QACnC,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC;KAC9C;IAID,IAAI,QAAQ,CAAC,UAA6B;QACxC,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;KAC3C;IAID,IAAI,WAAW,CAAC,aAAwB;QACtC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;;;QAGnC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;aAAM;;;YAGL,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;SAC/B;KACF;IAkBD,UAAU,CAAC,UAAkB;QAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QACxB,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KAC3D;IAED,YAAY,CAAC,UAAkB;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC7B;IAED,WAAW;QACT,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACrB;IAEO,0BAA0B,CAAC,YAAwB;QACzD,MAAM,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;QACjE,MAAM,kBAAkB,GAAG,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC;;;QAIzE,IAAI,CAAC,YAAY,GAAG,QAAQ,GAAG,CAAC,GAAG,kBAAkB,CAAC;KACvD;IAEO,wBAAwB,CAAC,UAA6B;QAC5D,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAC/B,OAAO;SACR;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,KAAK,mCACL,UAAU,KACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,GAC1D,CAAC;SACH;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;SACtC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KACzB;IAEO,yBAAyB;QAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;KAClD;;IAGO,aAAa;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;QAExE,IAAI,CAAC,UAAU;YACb,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW;gBACjC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;QAEvC,IAAI,CAAC,aAAa;YAChB,IAAI,CAAC,YAAY;gBACjB,IAAI,CAAC,YAAY,KAAK,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC;;QAGjD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SACnE;;;QAID,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,aAAa,EAAE;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;SACpC;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;;;;;;IAOO,UAAU,CAAC,UAA6B;QAC9C,IACE,CAAC,IAAI,CAAC,SAAS;YACf,IAAI,CAAC,KAAK;YACV,IAAI,CAAC,KAAK,CAAC,WAAW;YACtB,UAAU,CAAC,WAAW;YACtB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;YACjC,UAAU,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EACjC;YACA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,KAAK,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE;gBACnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtD,IACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;wBACjC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;wBACrC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc;4BACtC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc;wBAC1C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK;uCD9If,MAC7C,CAAC,IACW,oBAAoB,CA8DhC,3CC+Ea,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK;wBACnD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW;4BAC/B,UAAU,CAAC,UAAU,CAAC,WAAW,EACnC;wBACA,OAAO,IAAI,CAAC;qBACb;iBACF;aACF;SACF;QACD,OAAO,KAAK,CAAC;KACd;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;CACF;;;;;;;;;;;iHAAA;;YArHwC,2BAA2B;YACnD,iBAAiB;;AAtChC;IADC,KAAK,CAAC,cAAc,CAAC;uDAGrB;AAID;IADC,KAAK,CAAC,OAAO,CAAC;sDAGd;AAID;IADC,KAAK,CAAC,eAAe,CAAC;yDAYtB,CACH,AAmIA;AA/Ja;qBAAsB,oBAJlC,SAAS,CAAC,UACT,QAAQ,EAAE,nECYC,+BAA+B,GAA5C,MAAa,+BAA+B;YDZb,UAC7B,lBCwBA,YACU,YAA0B,EAC1B,cAA8B,EAC9B,2BAAwD;QAFxD,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gCAA2B,GAA3B,2BAA2B,CAA6B;QAblE,cAAS,GAAG,SAAS,CAAC;QAMd,oBAAe,GAAG,IAAI,GAAG,EAAU,CAAC;QAS1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAmB,CAAC;QACrD,IAAI,CAAC,UAAU,GAAG,IAAI,oBAAoB,EAAE,CAAC;KAC9C;IAED,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM;YACpD,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC;SACrE,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,IAAI,CAC/D,GAAG,CAAC,YAAY;YACd,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;oBAC5B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBAC7C,CAAC,CAAC;aACJ;SACF,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAC3C,GAAG,CAAC,YAAY;YACd,OAAO,YAAY,CAAC,MAAM;kBACtB,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;kBAClD,EAAE,CAAC;SACR,CAAC,CACH,CAAC;KACH;IAED,eAAe,CAAC,OAAO;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,CAAC,CAAC;KAC1E;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CACvC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CACnC,CAAC;KACH;IAED,QAAQ,CAAC,SAAiB;QACxB,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KACjD;IAED,QAAQ,CAAC,SAAiB;QACxB,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KAChD;IAEO,wBAAwB,CAAC,SAAiB,EAAE,OAAgB;QAClE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACjD;IAED,gBAAgB,CAAC,SAAiB;QAChC,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAC5C;IAED,WAAW,CAAC,SAAiB;QAC3B,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YACvC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACrC;KACF;IAED,qBAAqB,CAAC,KAAY;QAChC,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CACvB,CAAC,EACD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;cACnC,KAAK,CAAC,MAAM,CAAC,MAAM;cACnB,KAAK,CAAC,aAAa,CACxB,CAAC;KACH;IAED,WAAW;QACT,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SACxB;KACF;CACF;;uQDzG+C,MAC/C,CAAC,IACW,sBAAsB,CA8JlC;;;;;4JCvDA;;YAhFyB,YAAY;YACV,cAAc;YACD,2BAA2B;EAChE,AA8EJ;AA/Fa;8BAA+B,oBAL3C,SAAS,CAAC,xDCRE,wBAAwB,GAArC,MAAa,wBAAwB;CAEpC;GDOC,QAAQ,EAAE,6BAA6B,UACvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+ICRD;AADU;IAAR,KAAK,EAAE;yDAAc,CACxB,AACA;AAHa;uBAAwB,oBALpC,SAAS,CAAC,UACT,3DCIW,wBAAwB,GAArC,MAAa,wBAAwB;CAEpC;IDNS,EAAE,sBAAsB,UAChC;;;;;;;;;KAAiD,UACjD,eAAe,EAAE;WAAuB,CAAC,MAAM,MAChD,CAAC,IACW;gBAAwB,CAEpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCDQyD,UACxD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW;UAA+B,CA8F3C;;+IEzGA;AADU;IAAR,KAAK,EAAE;yDAAc,CACxB,AACA;AAHa;uBAAwB,oBALpC,SAAS,CAAC,UACT,3DCQW,wBAAwB,GAArC,MAAa,wBAAwB;ODR3B,EAAE,sBAAsB,3BCShC,YAAoB,qBAA4C;ADRhE,QCQoB,0BAAqB,GAArB,qBAAqB,CAAuB;QAEhE,aAAQ,GAAiB,EAAE,CAAC;QAC5B,gBAAW,GAAG,WAAW,CAAC;KAH0C;IAMpE,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,IAAI,CAC1D,MAAM,CAAC,OAAO,IAAI,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,EACrD,oBAAoB,EAAE,EACtB,GAAG,CAAC,OAAO;YACT,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM;gBAChC,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;oBAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;iBAC5C;aACF,CAAC,CAAC;SACJ,CAAC,CACH,CAAC;KACH;CACF;;;;;;;;;sIAAA;+BD3BkD,UACjD;MAAe,EAAE,uBAAuB,CAAC,pBCOE,qBAAqB;EDPjB,ACQjD,AAmBA;AArBa;IDLZ,CAAC,IACW,wBAAwB,CAEpC,XCEoC,oBALpC,SAAS,CAAC,UACT,QAAQ,EAAE,rECWC,6BAA6B,GAA1C,MAAa,6BAA6B;oBDXT,UAC/B,1BCWA,YACU,MAAiB,EACjB,cAA8B,EAC9B,cAA8B;QAF9B,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAGxC,qBAAgB,GAAG,gBAAgB,CAAC;KAFhC;IAOJ,qBAAqB,CAAC,UAAoC;QACxD,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACzE,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;KAC7B;IAED,sBAAsB,CACpB,uBAAiD;QAEjD,MAAM,SAAS,GAAG,uBAAuB,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QACnE,OAAO,SAAS;cACZ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE;cAC1D,EAAE,CAAC;KACR;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc;ODtCyB,UAChD,eAAe,EAAE,jBCsCV,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC;WDtCK,CAAC,MAAM,DCuCxC,IAAI;CDtCZ,CAAC,IACW,wBAAwB,CAoBpC;;YCoBS,MAAM,CAAC,OAAO,CAAC,EACf,IAAI,CAAC,CAAC,CAAC,CACR;iBACA,SAAS,CAAC,CAAC,OAAgB;gBAC1B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;oBACrB,OAAO,EAAE,SAAS;oBAClB,MAAM,EAAE,OAAO;iBAChB,CAAC,CAAC;aACJ,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC;KACb;CACF;;;;;;;;;;;;;;;;2IAAA;;YA3CmB,SAAS;YACD,cAAc;YACd,cAAc;;AAMxC;IADC,KAAK,EAAE;+DACa,CACvB,AAmCA;AA9Ca;4BAA6B,oBALzC,SAAS,CAAC,tDCDE,0BAA0B,GAAvC,MAAa,0BAA0B;ADErC,CCFwC;KDEhC,EAAE,2BAA2B,UACrC;ECHwC,CAA7B,0BAA0B,oBANtC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAC,UAC5D,YAAY,EAAE,CAAC,6BAA6B,CAAC,UAC7C,eAAe,EAAE,CAAC,wBAIpB;;GAJiD,CAAC,UAChD,OAAO,EAAE,CAAC,6BAA6B,CAAC,OACzC,CAAC,IACW,9DCKA,4BAA4B,GAAzC,MAAa,4BAA4B;oBDLF,CAAG,jBCMxC,YACU,cAA8B,EAC9B,cAA8B;QAD9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;KACpC;IAQJ,UAAU,CAAC,IAAY;QACrB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc;iBAChB,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC;iBAC5B,IAAI;;;YAGH,MAAM,CAAC,OAAO,CAAC,EACf,IAAI,CAAC,CAAC,CAAC,CACR;SFvB+C,UACtD,eAAe,EAAE,nBEuBV,SAAS,CAAC,CAAC,OAAgB;iBFvBM,CAAC,MAAM,MAChD,CAAC,IACW,nBEsBH,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;uBFtBS,CA6CzC,JEtBW,OAAO,EAAE,SAAS;oBAClB,MAAM,EAAE,OAAO;iBAChB,CAAC,CAAC;aACJ,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC;KACb;IACD,qBAAqB,CAAC,UAAoC;QACxD,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACxE,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;KAC7B;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8GAAA;;YAjC2B,cAAc;YACd,cAAc;;AAIxC;IADC,KAAK,EAAE;6DACS;AAGjB;IADC,KAAK,EAAE;8DACa,CACvB,AAyBA;AApCa;2BAA4B,oBALxC,SAAS,CAAC,rDCAE,yBAAyB,GAAtC,MAAa,yBAAyB;CDCpC,ACDuC;MDC/B,EAAE,0BAA0B,UACpC;ECFuC,CAA5B,yBAAyB,oBANrC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAC,UAC5D,YAAY,EAAE,CAAC,4BAA4B,CAAC,UAC5C,eAAe,EAAE,CAAC,uBAIpB;;GAJgD,CAAC,UAC/C,OAAO,EAAE,CAAC,4BAA4B,CAAC,OACxC,CAAC,IACW,7DCEA,6BAA6B,GAA1C,MAAa,6BAA6B;gBDFJ,CAAG,bCGvC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;KAAI;IAQtD,WAAW,CAAC,IAAY,EAAE,IAAY;QACpC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;gBACrB,OAAO,EAAE,SAAS;gBAClB,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;aACvB,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC;KACb;IACD,qBAAqB,CAAC,UAAoC;OFlBL,UACrD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,nEEgBT,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,gBAAgB,CAAC,KAAK,CAAC,CAAC;qBFhBpC,CAmCxC,dElBG,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;KAC7B;CACF;;;;;;;;;;;;;;;;;;;;8GAAA;;YArBqC,cAAc;;AAGlD;IADC,KAAK,EAAE;8DACS;AAGjB;IADC,KAAK,EAAE;+DACa,CACvB,AAeA;AAvBa;4BAA6B,oBALzC,SAAS,CAAC,tDCGE,0BAA0B,GAAvC,MAAa,0BAA0B;ADFrC,CCEwC;KDFhC,EAAE,2BAA2B,UACrC;ECCwC,CAA7B,0BAA0B,oBANtC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAC,UAC5D,YAAY,EAAE,CAAC,6BAA6B,CAAC,UAC7C,eAAe,EAAE,CAAC,wBAIpB;;GAJiD,CAAC,UAChD,OAAO,EAAE,CAAC,6BAA6B,CAAC,OACzC,CAAC,IACW,9DCQA,0BAA0B,GAAvC,MAAa,0BAA0B;wBDRA,CAAG,rBCSxC,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAKrC,iBAAY,GAA8B,EAAE,CAAC;KALJ;IAOzC,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO;8BFlBuB,UACtD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,tFEgBP,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CACnD,OAAO,CAAC,uBAAuB,CAChC,CAAC;SACH,CAAC,CAAC;KACJ;SFpBuC,CAsBzC,NEAC,sBAAsB,CACpB,uBAAiD;QAEjD,MAAM,SAAS,GAAG,uBAAuB,CAAC,IAAI,CAC5C,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAgB,CAAC,SAAS,CACtD,CAAC;QACF,OAAO,SAAS;cACZ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE;cAC1D,EAAE,CAAC;KACR;IAEO,cAAc,CACpB,uBAAiD;QAEjD,MAAM,cAAc,GAAG,uBAAuB,CAAC,IAAI,CACjD,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAgB,CAAC,eAAe,CAC5D,CAAC;QACF,MAAM,QAAQ,GAAG,cAAc;cAC3B,uBAAuB,CAAC,IAAI,CAC1B,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,cAAc,CAAC,KAAK,CAChD;cACD,IAAI,CAAC;QACT,OAAO,QAAQ,GAAG,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;KACvC;CACF;;;;;;;;;6RAAA;;YAvC6B,SAAS;;AAGrC;IADC,KAAK,EAAE;4DACkB,CAC5B,AAoCA;AAzCa;yBAA0B,oBANtC,SAAS,CAAC,nDCFE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ADGrC,QAAQ,EAAE,wBAAwB,UAClC;iOAAmD,/NCJd,CAA1B,uBAAuB,oBANnC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAC,UAC5D,YAAY,EAAE,CAAC,0BAA0B,CAAC,UAC1C,eAAe,EAAE,CAAC,qBAIpB;;ODKE,eAAe,EAAE,uBAAuB,CAAC,7CCTG,CAAC,UAC7C,OAAO,EAAE,CAAC,0BAA0B,CAAC,/CCK1B,mBAAmB,GAAhC,MAAa,mBAAmB;AFGiB,ICPhD,CAAC,IACW,uBAAuB,CAAG,7BCIrC,YACU,cAA8B,EAC9B,cAA8B;QAD9B,mBAAc,GAAd,cAAc,CAAgB;sBFEzC,CAAC,IACW,nBEFD,mBAAc,GAAd,cAAc,CAAgB;KACpC;CFCiC,CAwCtC,EEvCC,WAAW;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAC9C,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,EAChD,SAAS,CAAC,CAAC,WAAmB;;YAE5B,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;aACjB;YAED,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CACrE,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,CAAC,OAAgB;gBACnB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;oBACxB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;;;oBAGzD,IAAI,CAAC,cAAc;yBAChB,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC;yBACpC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;yBAC9B,SAAS,CAAC,CAAC,QAAiB;wBAC3B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;4BACrB,OAAO,EAAE,SAAS;4BAClB,MAAM,EAAE,QAAQ;yBACjB,CAAC,CAAC;qBACJ,CAAC,CAAC;oBACL,OAAO,KAAK,CAAC;iBACd;qBAAM;oBACL,OAAO,IAAI,CAAC;iBACb;aACF,CAAC,CACH,CAAC;SACH,CAAC,CACH,CAAC;KACH;IAED,WAAW,CAAC,QAAyB;QACnC,MAAM,OAAO,GAAoB,QAAQ,CAAC,MAAM,CAAC,OAAO;YACtD,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,GAAG,KAAK,CAAC;SACpE,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;KACtE;CACF;8LAAA;;YA7C2B,cAAc;YACd,cAAc;;4OAOX,AAsC/B;AAhDa;kBAAmB,oBAH/B,UAAU,CAAC,7CC8BC,qBAAqB,GAAlC,MAAa,qBAAqB;CD7BhC,AC6BmC;QD7BzB,EAAE,MAAM,OACnB,CAAC,IACW,mBAAmB,CA+C/B;;;;;;;;;;;;;;;;;;;ECpBoC,CAAxB,WACb;;QADkC,oBAzBjC,QAAQ,CAAC,UACR,3CCoEW,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;CDpExB,EAAE,cACP,YAAY,cACZ,YAAY,cACZ,SAAS;aACT,UAAU,cACV,0BAA0B,cAC1B,yBAAyB,cACzB,0BAA0B;CAC1B,uBAAuB,WACxB,UACD;GAAS,EAAE,cACT;QAAoB,CAAY,kBAC9B;WAAa,EAAE,sBACb;uBAA+B,EAAE,0BAC/B;QAAS,EAAE;eAAwB;CACnC,MAAM,EAAE,CAAC,mBAAmB,CAAC;CAC9B;CACF,eACF,CAAC,WACH,UACD;IAAY,EAAE,CAAC,wBAAwB,CAAC,UACxC;KAAe,EAAE,CAAC;aAAwB,CAAC,UAC3C,OAAO,EAAE,CAAC;cAA0B,CAAC,OACtC,CAAC,IACW,qBAAqB,CAAG;;;;;;;;;;;;;;;;;;;;EC4CJ,CAApB,WACb;;IAD8B,oBAvD7B,pBC/BW,oBAKX;MD0BQ,CAAC,UACR,OAAO,EAAE,1BChCX,WAAY,oBAAoB;KDiC5B,YAAY,cACZ,YAAY,vCCjCd,2CAAmB,CAAA;QDkCjB,WAAW,cACX,eAAe,5CClCjB,2CAAmB,CAAA;aDmCjB,iBAAiB,cACjB,xCCnCF,2CAAmB,CAAA;eDmCG,cACpB,SAAS,cACT,hDCpCF,+CAAuB,CAAA;SDoCX,cACV,gBAAgB,cAChB,rDCrCJ,CAAC,EALW,oBAAoB,KAApB,oBAAoB,QAK/B;;KDqCa,cACV,aAAa,cACb,1CEjCS,uBAAuB,GAApC,MAAa,uBAAuB;IFiCZ,cACpB,gBAAgB,9BE7BlB,YAAsB,qBAA4C;OF8BhE,qBAAqB,cACrB,lCE/BoB,0BAAqB,GAArB,qBAAqB,CAAuB;EF+B5C,WACrB,UACD,SAAS,EAAE,1BErCX,YAAO,GAAG,oBAAoB,CAAC;GFsC7B,oBAAoB,CAAa,mBAAmB,CAAC,cACrD,lDErCF,aAAQ,GAAwB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;KAEF;CACvE;IFkCuB,CAAY,kBAC9B,aAAa,EAAE,sBACb,uBAAuB,EAAE,0BACvB,SAAS,EAAE,oBAAoB,uBAChC;eACD,oBAAoB,EAAE,0BACpB,SAAS,EAAE,oBAAoB,uBAChC,sBACD,0BAA0B,EAAE,0BAC1B,SAAS,EAAE,oBAAoB,uBAChC,sBACD,0BAA0B,EAAE,0BAC1B,SAAS,EAAE;MAA+B,uBAC3C,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE;SACZ,oBAAoB;QACpB;mBAA+B,cAC/B,wBAAwB,cACxB;oBAAwB,cACxB,oBAAoB,cACpB,sBAAsB,WACvB,UACD,OAAO,EAAE,AE3DV;aF4DG,oBAAoB,cACpB;6BAA+B,jBE9DY,qBAAqB;EACpE,AACA;AAPa;GFoET,wBAAwB,cACxB,nBErEgC,oBALnC,SAAS,CAAC,hDCeE,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;MH2DR,cACxB,oBAAoB,cACpB,sBAAsB,zEE3ExB,QAAQ,EAAE,oBAAoB,UAC9B;EF2EC,UACD,eAAe,EAAE,CAAC,oBAAoB,EAAE,+BAA+B,CAAC,OACzE,CAAC,IACW,iBAAiB,CAAG;;;;;;;;EGjEG,CAAvB,oBAAoB,oBAfhC,QAAQ,CAAC,UACR,AAeF;;KAfS,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,CAAC,UACjD,SAAS,9DCEE,0BAA0B,GAAvC,MAAa,0BAA0B;ADF1B,cACT,oBAAoB,CAAY,/BCMlC,YAAsB,qBAA4C;YDL9D,aAAa,EAAE,sBACb,zCCIgB,0BAAqB,GAArB,qBAAqB,CAAuB;YDJrC,EAAE,0BACvB,SAAS,EAAE,uBAAuB,lECD1C,aAAQ,GAAwB,IAAI,CAAC,qBAAqB,CAAC,UAAU,CACnE,YAAY,CAAC,UAAU,CACxB,CAAC;KAEoE;CACvE;0EFRgD,UAC/C,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,uBAAuB,CAMnC,tKCJQ,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,uBAAuB,CAAC,UACvC,eAAe,EAAE,CAAC,uBAAuB,CAAC,UAC1C,OAAO,EAAE,CAAC;SAAuB,CAAC,OACnC,CAAC,IACW,oBAAoB,CAAG;;;;;6ICLnC;;YAD8C,qBAAqB;EACpE,AACA;AAPa;yBAA0B,oBALtC,SAAS,CAAC,nDCgBE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ADfrC,QAAQ,EAAE,uBAAuB,UACjC;;;;;;;;;ECcqC,CAA1B,uBAAuB,oBAfnC,EAgBD;;IAhBS,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,UACnC,xDCEW,0BAA0B,GAAvC,MAAa,0BAA0B;CDF5B,EAAE,cACT,oBAAoB,CAAY,lCCIlC,YAAsB,qBAA4C;kCFNhB,UAClD,eAAe,5CCEX,aAAa,EAAE,sBACb,5CCEgB,0BAAqB,GAArB,qBAAqB,CAAuB;CFLjD,IEKqD;UDFxC,EAAE,RCIhC,QAAQ;CFPgC,CAAC,MAAM,MAChD,CAAC,IACW,0BAA0B,CAMtC,zBCJS,SAAS,EAAE,0BAA0B,lDCI3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;KACzD;CACF;ODLQ,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,0BAA0B,CAAC,UAC1C,eAAe,EAAE,CAAC,0BAA0B,CAAC,UAC7C,OAAO,EAAE,CAAC;yBAA0B,CAAC,OACtC,CAAC,IACW,uBAAuB,CAAG;;;;;uGCHtC;;YAL8C,qBAAqB;EACpE,AAKA;AATa;yBAA0B,oBALtC,SAAS,CAAC,nDCgBE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ADfrC,QAAQ,EAAE,wBAAwB,UAClC;4GAAmD,UACnD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC;GACW,0BAA0B,CAQtC;;;;;;;ECGsC,CAA1B,uBAAuB,UACpC;;QAhBC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,xDCgBW,uBAAuB,GAApC,MAAa,uBAAuB;ODhBzB,EAAE,cACT,oBAAoB,CAAY,kBAC9B,1DCuCJ,YACY,aAAmC,EACnC,qBAA4C,EAC9C,EAAe,EACb,EAAqB;WD3ChB,EAAE,sBACb,3BCuCM,kBAAa,GAAb,aAAa,CAAsB;iBDvCf,EAAE,0BAC1B,SAAS,EAAE,hDCuCP,0BAAqB,GAArB,qBAAqB,CAAuB;QAC9C,OAAE,GAAF,EAAE,CAAa;ADxCoB,QCyCjC,OAAE,GAAF,EAAE,CAAmB;CDxC1B,mBACF,eACF,CAAC,5BCcJ,oBAAe,GAAG,KAAK,CAAC;SDbvB,UACD;CAAY,EAAE,CAAC,0BAA0B,CAAC,vBCe1C,wBAAmB,GAAG,CAAC,CAAC;GDdxB,eAAe,EAAE,CAAC,0BAA0B,CAAC,UAC7C,lDCiBA,aAAQ,GAAwB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;ADjBjE,EAAE,CAAC,0BAA0B,CAAC,OACtC,CAAC,IACW,uBAAuB,CAAG,1DCiBrC,aAAQ,GAAyB,IAAI,CAAC,QAAQ,CAAC,IAAI,CACjD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAChB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAChB,oBAAoB,EAAE,EACtB,SAAS,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,EAC1E,GAAG,CAAC;YACF,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC;SAC9C,CAAC,CACH,CAAC;KAOE;IAEJ,mBAAmB;QACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;YACpD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACvC;KACF;IAED,iBAAiB;QACf,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE;YAClE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC9C;KACF;IAED,SAAS,CAAC,MAAM;QACd,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAClD;IAEO,iBAAiB;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG;YAC/C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;SAC/C,CAAC,CAAC;KACJ;IAED,YAAY,CAAC,OAAgB;QAC3B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;KACF;IAED,SAAS,CAAC,OAAgB;QACxB,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QACpD,MAAM,MAAM,GAAW;YACrB,QAAQ,EAAE,kBAAkB,CAAC,KAAK,CAAC,KAAK;YACxC,OAAO,EAAE,kBAAkB,CAAC,OAAO,CAAC,KAAK;YACzC,MAAM,EAAE,kBAAkB,CAAC,MAAM,CAAC,KAAK;YACvC,KAAK,EAAE,kBAAkB,CAAC,YAAY,CAAC,KAAK;SAC7C,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAE7C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE;YAClE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC9C;KACF;IAEO,eAAe;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,YAAY,EAAE,EAAE;SACjB,CAAC,CAAC;KACJ;CACF;;;;;;;;;;;;;;oYAAA;;YA1E4B,oBAAoB;YACZ,qBAAqB;YAC1C,WAAW;YACT,iBAAiB;;AA5BW;IAA3C,SAAS,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;2DAAwB;AAEnE;IADC,SAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;kEACpB,CAChC,AAiGA;AArGa;sBAAuB,oBALnC,SAAS,CAAC,hDCUE,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;GDTlC,QAAQ,EAAE,oBAAoB,UAC9B;;;;;;;;;;;;;;;ECQkC,CAAvB,WACb;;OADiC,oBArBhC,QAAQ,CAAC,UACR,1CCGW,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;ADHxB,EAAE,cACP,YAAY,cACZ,mBAAmB,cACnB;OAAW,cACX,UAAU,cACV,gBAAgB,WACjB,UACD,SAAS,EAAE,cACT,oBAAoB,CAAY,kBAC9B;KAAa,EAAE,sBACb;kBAA0B,EAAE;SAC1B,SAAS,EAAE;SAAuB,PCRX,CAApB,WACb;;gBDQS,mBACF,eACF,CAAC,WACH,UACD,pECb4B,oBAP7B,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,9DCES,gCAAgC,GAA7C,MAAa,gCAAgC;IFgB/B,EAAE,CAAC,uBAAuB,CAAC,UACvC,hCCnByB,cACvB,uBAAuB,1CCKzB,YACU,YAA0B,EAC1B,gBAAsC;MFWjC,EAAE,CAAC,uBAAuB,CAAC,vBCjBxC,oBAAoB,WACrB,jCCIS,iBAAY,GAAZ,YAAY,CAAc;CFapC,OAAO,EAAE,CAAC,uBAAuB,CAAC,OACnC,CAAC,IACW,zCClBZ,CAAC,IACW,iBAAiB,CAAG,rBCGrB,qBAAgB,GAAhB,gBAAgB,CAAsB;iBFcjB,CAAG,VElBlC,iBAAY,GAA6B,EAAE,CAAC;KAKxC;IAEJ,KAAK;QACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;KACxC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB;iBACnB,SAAS,CAAC,OAAO;gBAChB,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;iBAC/C;aACF,CAAC;iBACD,WAAW,EAAE,CAAC;SAClB;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;sKAAA;;YAnByB,YAAY;YACR,oBAAoB;EAC9C,AAkBJ;AAzBa;+BAAgC,oBAJ5C,SAAS,CAAC,zDCwBE,0BAA0B,GAAvC,MAAa,0BAA0B;GDvBrC,QAAQ,EAAE,8BAA8B,UACxC,jDCkCA,YACU,WAAwB,EACxB,qBAA4C,EAC5C,oBAA0C,EAC1C,kBAAsC,EACtC,gBAAsC,EACtC,YAA0B,EAC1B,uBAA0D;QAN1D,gBAAW,GAAX,WAAW,CAAa;QACxB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,qBAAgB,GAAhB,gBAAgB,CAAsB;QACtC,iBAAY,GAAZ,YAAY,CAAc;GJ1BW,UAC/C,eAAe,EAAE,uBAAuB,CAAC,MAAM,pDI0BrC,4BAAuB,GAAvB,uBAAuB,CAAmC;EJzBrE,CAAC,IACW,uBAAuB,tBIUlC,cAAS,GAAG,IAAI,CAAC;AJ0FlB,QIxFS,iBAAY,GAA6B,EAAE,CAAC;QAG5C,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;KAUvC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;SAChC,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAoB;YACvC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;YAChC,IAAI,MAAM,KAAK,qBAAqB,EAAE;gBACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CACxC,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,OAAO,CAAC,IAAI,EACZ,gBAAgB,CAAC,aAAa,CAC/B,CAAC;aACH;SACF,CAAC,EACF,GAAG,CACD,CAAC,CAAC,OAAO,CAAoB,KAC3B,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,KAAK,YAAY,CACrE,CACF,CAAC;QAEF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB;aAC9C,mBAAmB,EAAE;aACrB,IAAI,CACH,GAAG,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CACxE,CAAC;QACJ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC;QAC9E,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,CAAC;QACvF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB;aAC9C,qBAAqB,EAAE;aACvB,IAAI,CACH,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,EACzC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAC/B,CAAC;QAEJ,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,EAAE,CAAC,SAAS,CAAC,KAAK;YAChE,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;SACF,CAAC,CACH,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,gBAAgB;aAClB,8BAA8B,EAAE;aAChC,SAAS,CAAC,OAAO;YAChB,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,yBAAyB,EAAE,CAAC;aAClC;SACF,CAAC,CACL,CAAC;KACH;IAED,SAAS;QACP,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CACtC,IAAI,CAAC,WAAW,EAChB,gBAAgB,CAAC,aAAa,CAC/B,CAAC;KACH;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CACxC;YACE,OAAO,EAAE;gBACP,IAAI,EAAE,IAAI,CAAC,WAAW;aACvB;YACD,oBAAoB,EAAE;gBACpB;oBACE,YAAY,EAAE,gBAAgB,CAAC,aAAa;iBAC7C;aACF;SACF,EACD,IAAI,CACL,CAAC;KACH;IAEO,yBAAyB;QAC/B,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,kBAAkB;8CD/H8B,MAC1D,CAAC,IACW,5CC8HJ,SAAS,CAAC,sCAAsC,CAAC;0BD9Hb,bC+HpC,IAAI,CAAC,KAAK,EAAE,CAAC;ADvGrB,aCwGQ,SAAS,CAAC,IAAI,IACb,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,iBAAiB,CAAC,aAAa,CAAC,CACrE,CACJ,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC;KAClD;IAEO,qBAAqB;QAC3B,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;KAC/C;IAEO,UAAU;QAChB,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAC1C,gCAAgC,EAChC;YACE,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX,CACF,CAAC,iBAAiB,CAAC;QACpB,aAAa,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACzD,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;KAChD;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;QAC9C,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,CAAC;KACjD;CACF;;;;;;;;;;0LAAA;;YA5HwB,WAAW;YACD,qBAAqB;YACtB,oBAAoB;YACtB,kBAAkB;YACpB,oBAAoB;YACxB,YAAY;YACD,iCAAiC;EAClE,AAsHJ;AA1Ia;yBAA0B,oBALtC,SAAS,CAAC,nDCOE,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;ADNrC,QAAQ,EAAE,uBAAuB,UACjC;;;;;;;;;ECKqC,CAA1B,uBAAuB,oBAlBnC,QAAQ,CAAC,UACR,YAAY,EAAE,CAAC,QAkBjB;;gBAlB2C,EAAE,lBCX7C,MAAM,gBAAgB,GAAG,CAAC,CAAC;sBDWkD,CAAC,UAC5E,OAAO,EAAE,CAAC,3CCNZ,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;KDMN,EAAE,YAAY,EAAE,UAAU,EAAE,7BCDlD,YAAoB,gBAAkC;UDCS,EAAE,SAAS,CAAC,UAC3E,SAAS,EAAE,nCCFS,qBAAgB,GAAhB,gBAAgB,CAAkB;ODGpD,oBAAoB,CAAY,pBCLlC,gBAAW,GAAW,IAAI,CAAC;KAE+B;ODItD,aAAa,EAAE,lBCFnB,WAAW,CAAC,OAAsB;iBDG5B,0BAA0B,EAAE,rCCFhC,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;sBDGjC,SAAS,EAAE,rBCFf,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IDED,uBACtC,fCFH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;WDGrB,eACF,CAAC,WACH,UACD,pCCJI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;MDIhC,EAAE,cACf,0BAA0B,hCCJtB,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;ADKjD,gCAAgC,WACjC,3BCLK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;GDMvC,OAAO,EAAE,CAAC,0BAA0B,EAAE,zBCLhC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7B;SACF;IDGmE,CAAC,ACFtE;MDGF,CAAC;GACW,uBAAuB,CAAG;;;ICErC,mBAAmB,CAAC,IAAU;QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACvE;;;;;IAMD,mBAAmB,CAAC,IAAU;QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACvE;;;;IAKO,cAAc;QACpB,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;QAElE,OAAO,WAAW,CAAC;KACpB;CACF;;mVF5BmD,UAClD,eAAe,EAAE,uBAAuB,CAAC,MAAM,MAChD,CAAC,IACW,0BAA0B,CAyItC;;;;;;;0HEhHA;;YAxCuC,gBAAgB;;AAHtD;IADC,KAAK,EAAE;mDACM,CAChB,AA2CA;AA9Ca;gBAAiB,oBAJ7B,SAAS,CAAC,UACT,pDCGW,wBAAwB,GAArC,MAAa,wBAAwB;ADH3B,EAAE,aAAa,UACvB,rBCSA,YACU,kBAAsC,EACtC,KAAqB;QADrB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;KAC3B;IAEJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE,CAAC;QACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;QACrE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE;YACtC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CACtC,EAAE,EACF;gBACE,QAAQ,EAAE,CAAC,CAAC;aACb,EACD,SAAS,EACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CACnC,CAAC;SACH;KACF;IAED,WAAW,MAAK;CACjB;yCDhCyC,MACzC,CAAC,IACW,iBAAiB,CA6C7B;;;;;;;;;;qGCfA;;YAtB+B,kBAAkB;YAC/B,cAAc;EAC7B,AAqBJ;AA/Ba;uBAAwB,oBAJpC,SAAS,CAAC,UACT,3DCAW,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;ADAhC,EAAE,sBAAsB,UAChC;;;;;ECDwC,CAA7B,0BAA0B,oBAJtC,SAAS,CAAC,UACT,QAAQ,EAAE,gBAIZ;;ODAmD,MAClD,CAAC,IACW,ZCNuB,UAClC,hBCDF;CFMqC,CA8BpC,FElCD,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;KDDc,MACpD,CAAC,IACW,ZCGX,YAAsB,gBAAkC;MDHnB,CAAG,CCGlB,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAI;IAE5D,aAAa,CAAC,QAAa;QACzB,MAAM,cAAc,GAAG,mDAAmD,CAAC;QAC3E,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAClE,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACpE,OAAO,cAAc,GAAG,QAAQ,GAAG,GAAG,GAAG,SAAS,CAAC;KACpD;IAED,wBAAwB,CAAC,YAAsB;QAC7C,OAAO,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChD;CACF;;mIAAA;;YAZyC,gBAAgB;;AAFxD;IADC,KAAK,EAAE;4DACC,CACX,AAcA;AAjBa;yBAA0B,oBADtC,SAAS,EAAE,IACC,0BAA0B,CAgBtC,nFCZY,4BAA4B,GAAzC,MAAa,4BAA6B,SAAQ,0BAA0B;IAY1E,YACY,gBAAkC,EAClC,KAAqB,EACrB,cAA8B;QAExC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAJd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAb1C,kBAAa,GAAW,IAAI,CAAC;QAQ7B,mBAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;KAQzD;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC9C;KACF;IAED,SAAS,CAAC,QAAa;QACrB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC1D;IAED,eAAe,CAAC,QAAa;QAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO;cACnD,WAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,GAAG;cAChD,EAAE,CAAC;QACP,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM;cACjD,UAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG;cAC9C,EAAE,CAAC;QACP,OAAO,gBAAgB,YAAY,GAAG,WAAW,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;KACrE;IAED,KAAK,CAAC,KAAoB;QACxB,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uFAAA;;YAhC+B,gBAAgB;YAC3B,cAAc;YACL,cAAc;;AAb1C;IADC,KAAK,EAAE;mEACqB;AAE7B;IADC,KAAK,EAAE;oEACY;AAEpB;IADC,KAAK,EAAE;qEACiB;AAEzB;IADC,KAAK,EAAE;mEACe;AAEvB;IADC,MAAM,EAAE;oEACiD,CAC5D,AAmCA;AA9Ca;2BAA4B,oBAJxC,SAAS,CAAC,rDCWE,uBAAuB,GAApC,MAAa,uBAAuB;KDVlC,QAAQ,EAAE,2BAA2B,tCCkBrC,YAAoB,wBAAkD;QDjBtE,ACiBoB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAFtE,sBAAiB,GAAyB,IAAI,YAAY,EAAE,CAAC;KAEa;IAE1E,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;YACvC,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;KACF;;;;;;IAOD,SAAS,CAAC,QAAgB,EAAE,SAAiB;QAC3C,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;KAC9D;IAED,SAAS;QACP,IAAI,CAAC,wBAAwB,CAAC,SAAS,CACrC,IAAI,CAAC,UAAU,CAAC,aAAa,EAC7B,IAAI,CAAC,SAAS,EACd,WAAW;YACT,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC;SAC9C,CACF,CAAC;KACH;IAEO,0BAA0B,CAAC,WAAmB;QACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1C;CACF;;;;;;+CD/CuD,MACvD,CAAC,IACW,4BAA4B,CA6CxC;;;6BCAA;;YA9B+C,wBAAwB;;AANtE;IADC,SAAS,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;2DACnB;AAEvB;IADC,KAAK,EAAE;0DACS;AAEjB;IADC,MAAM,EAAE;kEACoD,CAC/D,AAgCA;AAvCa;sBAAuB,oBAJnC,SAAS,CAAC,UACT,QAAQ,EAAE,pECNC,qCAAqC,GAAlD,MAAa,qCAAqC;GDMjB,UAC/B,TCHA,iBAAgB;IAEhB,iBAAiB;yBDC+B,MACjD,CAAC,IACW,uBAAuB,CAsCnC,pDCxCG,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YAC3D,MAAM,SAAS,GACb,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC;YAE7D,IAAI,cAAc,GAChB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAE/D,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;gBACjD,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;aAC/C;YAED,OAAO,GAAG,SAAS,MAAM,cAAc,EAAE,CAAC;SAC3C;aAAM;YACL,OAAO,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;SAC9C;KACF;CACF;;;;;;;;;;4DAAA;AArBC;IADC,KAAK,EAAE;yEACoB,CAC9B,AAqBA;AAxBa;oCAAqC,oBAJjD,pDCOY,wBAAwB,GAArC,MAAa,wBAAwB;CDP3B,CAAC,UACT,QAAQ,EAAE,lBCoBV,YACU,gBAAkC,EAChB,QAAa;YDtBK,UAC9C,dCoBU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAChB,aAAQ,GAAR,QAAQ,CAAK;QAJzC,cAAS,GAAG,SAAS,CAAC;QAMpB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;KACnC;IAED,uBAAuB,CAAC,KAAa,EAAE,QAAwB;AD1BA,MAChE,CAAC,IACW,HCyBT,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;ODzBc,CAuBjD,ACGG,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACpE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CACtE,CAAC;KACH;IAED,mBAAmB,CAAC,KAAa;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QACpE,aAAa,CAAC,cAAc,CAAC;YAC3B,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,QAAQ;SAChB,CAAC,CAAC;KACJ;IAED,gBAAgB,CAAC,QAAwB;QACvC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;KAC9B;IAED,gBAAgB;QACd,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;KAC3B;CACF;;;;;;;;;;;;;;sQAAA;;YApC6B,gBAAgB;4CACzC,MAAM,SAAC,QAAQ;;AAdlB;IADC,KAAK,EAAE;2DACO;AAEf;IADC,KAAK,EAAE;+DACe;AAEvB;IADC,SAAS,CAAC,UAAU,CAAC;0DACY;AANvB,wBAAwB,eAEpC,KANA,SAAS,CAAC,UACT,zBAGE,CAgBC,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;GAnBX,EAAE,sBAAsB,xBAGrB,wBAAwB,CAmDpC;;MArDC,FCMW,gCAAgC,GAA7C,MAAa,gCAAgC;IAa3C,YACU,kBAAsC,EACtC,KAAqB;QADrB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QAP/B,gBAAW,GAAW,IAAI,CAAC;QAC3B,iBAAY,GAAiB;YAC3B,WAAW,EAAE,CAAC;SACf,CAAC;KAKE;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,IACzD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CACxB,CAAC;KACH;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;IAED,QAAQ,CAAC,UAAkB;QACzB,IAAI,CAAC,YAAY,mCAAQ,IAAI,CAAC,YAAY,KAAE,WAAW,EAAE,UAAU,GAAE,CAAC;QACtE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CACtC,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB,CAAC;KACH;IAEO,UAAU,CAAC,MAAc;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,MAAM,CAAC,aAAa,GAAG,IAAI,GAAG,KAAK,CAAC;QACnE,IAAI,CAAC,YAAY,mCAAQ,IAAI,CAAC,YAAY,KAAE,WAAW,EAAE,CAAC,GAAE,CAAC;QAC7D,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CACtC,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;KACnE;IAEO,eAAe,CAAC,WAEvB;QACC,IAAI,WAAmC,CAAC;QAExC,IAAI,WAAW,CAAC,KAAK,EAAE;YACrB,WAAW,GAAG,EAAE,SAAS,EAAE,WAAW,CAAC,KAAK,EAAE,CAAC;SAChD;aAAM;YACL,WAAW,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;SACjC;QAED,WAAW,CAAC,aAAa;YACvB,WAAW,CAAC,aAAa,IAAI,IAAI;gBACjC,WAAW,CAAC,aAAa,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;QAErD,OAAO,WAAW,CAAC;KACpB;CACF;;;;;;;;;;;;gGAAA;;YA5D+B,kBAAkB;YAC/B,cAAc;EAC7B,AA2DJ;AA3Ea;+BAAgC,oBAJ5C,SAAS,CAAC,zDCDE,0BAA0B,GAAvC,MAAa,0BAA0B;GDErC,QAAQ,EAAE,TCEV,YAAoB,cAA8B;UDFT,UACzC,ZCCoB,mBAAc,GAAd,cAAc,CAAgB;QAHlD,cAAS,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC3C,cAAS,GAAG,SAAS,CAAC;KAEgC;IAEtD,UAAU,CAAC,OAAe;QACxB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,mBAAmB,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;KACnE;IAED,mBAAmB;QACjB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,mBAAmB,CAAC,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;KACxE;IAED,KAAK,CAAC,KAAU;QACd,IACE,IAAI,CAAC,SAAS,CAAC,KAAK;YACpB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM;YAC3B,KAAK,CAAC,GAAG,KAAK,OAAO,EACrB;YACA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;CACF;;ihBFxBkD,MAClD,CAAC,rYCG0D,MAC3D,CAAC,IACW,gCAAgC,CA0E5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wOCxDA;;YAnBqC,cAAc;EACpD,AAmBA;AAxBa;yBAA0B,oBAJtC,SAAS,CAAC,UACT,QAAQ,EAAE,wBAAwB,UAClC,zGCCW,oCAAoC,GAAjD,MAAa,oCAAqC,SAAQ,0BAA0B;IAIlF,YAAsB,gBAAkC;QACtD,KAAK,CAAC,gBAAgB,CAAC,CAAC;QADJ,qBAAgB,GAAhB,gBAAgB,CAAkB;KAEvD;CACF;;;0EDRoD,MACpD,CAAC,IACW,0BAA0B,CAuBtC;;;oKCjBA;;YAHyC,gBAAgB;;AAH/C;IAAR,KAAK,EAAE;sEAA0B;AACzB;IAAR,KAAK,EAAE;wEAAqB,CAC/B,AAKA;AARa;mCAAoC,oBAJhD,SAAS,CAAC,UACT,vECGW,+BAA+B,GAA5C,MAAa,+BAA+B;KDHlC,EAAE,HCOV,YAAoB,kBAAsC;IDPb,UAC7C,NCMoB,uBAAkB,GAAlB,kBAAkB,CAAoB;KAAI;IAE9D,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE,CAAC;KACrE;CACF;;;;;;;;;;sLAAA;;YAPyC,kBAAkB;EAC5D,AAOA;AAZa;8BAA+B,oBAJ3C,9CCEY,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;ADF1B,CAAC,UACT,QAAQ,EAAE,8BAA8B,UACxC;gEDA8D,MAC/D,CAAC,IACW,oCAAoC,CAOhD;;;;;;;EETmC,CAAvB,oBAAoB,oBAJhC,SAAS,CAAC,UACT,QAAQ,EAAE,iBAAiB,EAI7B;;MAHE,FCUW,yBAAyB,GAAtC,MAAa,yBAAyB;IAQpC,YACU,kBAAsC,EACtC,KAAqB,EACrB,cAA8B;QAF9B,uBAAkB,GAAlB,kBAAkB,CAAoB;eDnBJ,MAC7C,CAAC,IACW,lBCkBD,UAAK,GAAL,KAAK,CAAgB;kBDlBA,CAAG,XCmBxB,mBAAc,GAAd,cAAc,CAAgB;QARxC,cAAS,GAAG,SAAS,CAAC;KASlB;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;YACjE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC;SAC9D;KACF;IAED,iBAAiB;QACf,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACzE;IAED,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;YACrB,wBAAwB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE;SAC7D,CAAC,CAAC;GFrCoD,EEsCxD;CACF;AFtCA,CAAC,IACW,+BAA+B,CAW3C;;;;;;;;;;;gGE0BA;;YAtB+B,kBAAkB;YAC/B,cAAc;YACL,cAAc;;AAN/B;IAAR,KAAK,EAAE;2DAA0B;AACzB;IAAR,KAAK,EAAE;6DAAqB,CAC/B,AAyBA;AAhCa;wBAAyB,oBAJrC,xCC+GY,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AD/GvB,CAAC,UACT,QAAQ,EAAE,uBAAuB,UACjC;;;;;;;;;;;;;;;;;6BAAkD,MACnD,CAAC,IACW;CAAyB,CA+BrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EC4EgC,CAApB,WACb;;IAD8B,oBA3F7B,QAAQ,CAAC,UACR,OAAO,EAAE,hDCfE,sBAAsB,GAAnC,MAAa,sBAAsB;MDgB/B,YAAY,cACZ,mBAAmB,cACnB,7DCLF,YACY,WAAwB,EACxB,mBAAwC,EACxC,iBAAoC;MDElC,cACZ,ZCLU,gBAAW,GAAX,WAAW,CAAa;ADKd,cACpB,eAAe,cACf,nCCNU,wBAAmB,GAAnB,mBAAmB,CAAqB;ADMrC,cACb,SAAS,cACT,7BCPU,sBAAiB,GAAjB,iBAAiB,CAAmB;MDOzB,cACrB,UAAU,cACV,pCCxBF,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CACtC;SDuBU,WACX,UACD,SAAS,EAAE,cACT,oBAAoB,CAA2B,hECzB7C,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,cAAc,CAAC,CAAC;SD0BvE,aAAa,EAAE,sBACb,lCC1BF,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;MD0BxB,EAAE,0BACpB,SAAS,lCC1Bd,EACD,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,CAChC,CAAC;ADwBiB,oBAAoB,ZCpB/B,kBAAa,GAAG,KAAK,CAAC;KAM1B;IDeI,WAAW,EAAE,bCbrB,UAAU,CAAC,eAAuB;aDcxB,kCACE,IAAI,EAAE,MAAM,nDCdtB,OAAO,SAAS,CAAC,eAAe,CAC9B,IAAI,CAAC,IAAI,EACT,eAAe,EACf,IAAI,CAAC,aAAa,CACnB,CAAC;GDWQ,ECVX;MDUoB,EAAE,JCRvB,qBAAqB;UDQkC,+BAC5C,jCCRT,QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;qBDQxB,RCPL,IAAI,CAAC,aAAa;oBDQX,IAAI,EAAE,UAAU,nBCPrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,OAAO;ODQrC,SAAS,EAAE,+BAA+B,7BCP9C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC,EAC9C;KACH;SDMU,LCJX,QAAQ;sBDKE,dCJR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;qBDKhB,IAAI,EAAE,nBCHhB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YDGW,ACFhC,OAAO;SACR;gBDES,SAAS,EAAE,nBCArB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;MDAS,+BACpC,7BCAT,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;mBDC/B,XCCR,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;4BDAL,IAAI,EAAE,iCAAiC,vDCC/C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC;oBDAvD,SAAS,EAAE,wBAAwB,vCCCzC,IAAI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE;0BDArC,8BACD,pCCAF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;iBACrC;eDAK,FCCP,CAAC,CAAC;GDDS,EAAE,ICEf;KACF;IAED,WAAW;SDL+C,DCMxD,IAAI,IAAI,CAAC,GAAG,EAAE;mBDLJ,SAAS,EAAE,lBCMnB,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SACxB;KACF;GDR+C,+BACrC,9BCSH,WAAW,CAAC,eAAgC;6BDR1C,rBCSR,OAAO,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;SDR/B,IAAI,EAAE,yBAAyB,5BCSvC,eAAe,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK;eDRtC,SAAS,EAAE,ZCSjB,EAAE,QAAQ,EAAE,IAAI,EAAE;kBDTwB,JCU1C,IAAI,CAAC;KACV;CACF;oBDXY,2BACF,uBACF,mBACF,kBACD,WAAW,EAAE,sBACX,uBAAuB,EAAE,0BACvB,KAAK,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,uBACxC;EACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,cACZ,0BAA0B,cAC1B,wBAAwB,cACxB,uBAAuB,cACvB,4BAA4B,cAC5B,+BAA+B,cAC/B,wBAAwB,cACxB,oCAAoC,cACpC,iBAAiB,cACjB,0BAA0B,cAC1B,gCAAgC,cAChC,oBAAoB,cACpB,qCAAqC,cACrC,yBAAyB,WAC1B,UACD,OAAO,EAAE,cACP,iBAAiB;OACjB,oBAAoB,cACpB;oBAAwB,cACxB,0BAA0B,cAC1B,4BAA4B,cAC5B;IAAuB,cACvB;WAAqC,cACrC;QAA0B,cAC1B;SAAgC,cAChC;qBAAwB,cACxB;8BAAoC;aACpC;GAA+B,cAC/B;CAAyB,WAC1B,UACD,eAAe,EAAE,cACf,oBAAoB;EACpB;GAAgC,cAChC;iBAA+B,cAC/B;WAAwB,cACxB;MAAyB,WAC1B,OACF,CAAC,IACW;AAAiB,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oQCtChC;;YArD0B,WAAW;YACH,mBAAmB;YACrB,iBAAiB;EAC9C,AAmDJ;AApEa;qBAAsB,oBAJlC,SAAS,CAAC,/CCkBE,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;IDjBjC,QAAQ,EAAE,mBAAmB,UAC7B;;;;;;;;;;;;;;;;;ECgBiC,CAAtB,WACb;;MADgC,oBAvB/B,QAAQ,CAAC,UACR,zCCUW,kBAAkB,GAA/B,MAAa,kBAAkB;ADVtB,EAAE,cACP,YAAY,cACZ,UAAU,cACV,WAAW,cACX,mBAAmB,1GCWrB,YACY,IAAiB,EACjB,oBAA0C,EAC1C,EAAe,EACf,mBAAwC,EACxC,MAAiB,EACjB,cAA8B,EAC9B,qBAA4C;MDjBtD,WAAW,TCWD,SAAI,GAAJ,IAAI,CAAa;KDV3B,mBAAmB,WACpB,UACD,SAAS,EAAE,hDCSC,yBAAoB,GAApB,oBAAoB,CAAsB;YDRpD,JCSU,OAAE,GAAF,EAAE,CAAa;UDTL,CAAY,kBAC9B,aAAa,EAAE,pCCSP,wBAAmB,GAAnB,mBAAmB,CAAqB;UDR9C,FCSM,WAAM,GAAN,MAAM,CAAW;ODTI,EAAE,0BAC3B,SAAS,pCCSL,mBAAc,GAAd,cAAc,CAAgB;ADTvB,sBAAsB,0BACjC,MAAM,EAAE,CAAC,jDCSL,0BAAqB,GAArB,qBAAqB,CAAuB;iBDTnB,CAAC,VCAtC,iBAAY,GAAG,KAAK,CAAC;KAUjB;ADTG,ICWP,QAAQ;EDVH,eACF,CAAC,WACH,UACD;OAAY,EAAE,CAAC,sBAAsB,CAAC,zBCQpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;ODP5B,OAAO,EAAE,CAAC,sBAAsB,CAAC,UACjC,eAAe,EAAE,CAAC,xDCOd,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,cAAc,CAAC,CAAC;IDPpC,CAAC,OAC1C,CAAC,IACW,mBAAmB,CAAG,zBCM7B,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,EAAE;yCFzBN,MAC/C,CAAC,IACW,sBAAsB,CAmElC,/DE3CK,IAAI,CAAC,YAAY,qBAAG,IAAI,CAAC,cAAc,0CAAE,QAAQ,0CAAE,WAAW,0CAC5D,QAAQ,CACT,CAAC;SACH;QAED,MAAM,cAAc,2BAAG,IAAI,CAAC,MAAM,0CAAE,YAAY,0CAAE,OAAO,0CAAE,KAAK,0CAC9D,QAAQ,CACT,CAAC;QAEF,UAAI,cAAc,0CAAE,MAAM,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;SAC5C;KACF;IAED,KAAK;QACH,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;KACF;IAEO,WAAW;QACjB,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,SAAS,CACjB,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE;QAC1B,QAAQ,CAAC,KAAK,CACf,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI;gBAChD,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC7B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;oBACnE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;iBACrC;aACF,CAAC,CAAC;SACJ;KACF;IAEO,iBAAiB;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG;YACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;SACzC,CAAC,CAAC;KACJ;IAED,WAAW;QACT,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SACxB;KACF;IAEO,WAAW,CAAC,KAAa,EAAE,KAAa;QAC9C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,CAAC,KAAK,GAAG,KAAK;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC;KACtC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+SAAA;;YA1EmB,WAAW;YACK,oBAAoB;YACtC,WAAW;YACM,mBAAmB;YAChC,SAAS;YACD,cAAc;YACP,qBAAqB;EACtD,AAoEJ;AAjFa;iBAAkB,oBAJ9B,jCCsBY,eAAe,GAA5B,MAAa,eAAe;ADtBlB,CAAC,ACsBoB;QDrB7B,QAAQ,EAAE,eAAe,UACzB;;;;;;;;;;;;;;;;;ECoB6B,CAAlB,WACb;;EAD4B,oBAvB3B,QAAQ,CAAC,UACR,rCCLW,cAAc,GAA3B,MAAa,cAAc;IDKlB,EAAE,cACP,YAAY,5BCHd,YAAoB,IAAiB,EAAU,WAAwB;SDIrE,WAAW,ZCJO,SAAI,GAAJ,IAAI,CAAa;QDKnC,mBAAmB,nBCL0B,gBAAW,GAAX,WAAW,CAAa;CDMrE,ICNyE;ODM7D,HCJd,QAAQ;IDKN,SAAS,cACT,UAAU,WACX,UACD,SAAS,EAAE,7DCPT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAC1C,SAAS,CAAC,cAAc;ADO1B,oBAAoB,CAAY,TCN5B,IAAI,cAAc,EAAE;KDOtB,aAAa,EAAE,sBACb,1BCPE,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aAC/B;YDM8B,EAAE,GCN1B;qBDOL,SAAS,EAAE,hBCNX,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;YDMQ,CCL9B;SACF,CAAC,CACH,CAAC;KACH;CACF;EDES,MAAM,EAAE,CAAC,YAAY,CAAC,uBACvB,mBACF,eACF,CAAC,WACH,UACD,YAAY,EAAE,CAAC,kBAAkB,CAAC,UAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC,UAC7B;aAAe,EAAE,CAAC,kBAAkB,CAAC,OACtC,CAAC,IACW,eAAe,CAAG;;;;;;;uKCX9B;;YAb2B,WAAW;YAAuB,WAAW;AFI7B,EEH5C,AAaA;AAjBa;EFQZ,CAAC,IACW,kBAAkB,CAgF9B,bEzF0B,oBAJ1B,7BCsBY,WAAW,GAAxB,MAAa,WAAW;CAAG;CDtBjB,CAAC,UACT,QAAQ,EAAE,UAAU,UACpB;;;;;;;;;iFAAqC,MACtC,CAAC,tFCmByB,CAAd,WAAW,oBAfvB,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,AAetC;;CDnBa,cAAc,CAgB1B,hBCZuC,SAAS,EAAE,cAAc,EAAE,UAAU,jCCIhE,WAAW,GAAxB,MAAa,WAAW;ADJsD;EAC5E,SAAS,EAAE,cACT;kBAAoB,CAAY;IAC9B;UAAa,EAAE,sBACb;GAAc,EAAE;uBACd,SAAS,EAAE,cAAc,uBAC1B,mBACF,tFCIL,YACY,IAAiB,EACjB,GAAe,EACf,OAAuB,EACvB,mBAAwC,EACxC,eAAwC,EACxC,aAAoC;cDT7C,CAAC,PCIQ,SAAI,GAAJ,IAAI,CAAa;ADH5B,UACD,YAAY,dCGA,QAAG,GAAH,GAAG,CAAY;ADHb,CAAC,cAAc,CAAC,UAC9B,lBCGY,YAAO,GAAP,OAAO,CAAgB;SDHpB,EAAE,CAAC,cAAc,CAAC,UACjC,OAAO,EAAE,CAAC,vCCGE,wBAAmB,GAAnB,mBAAmB,CAAqB;KDH5B,CAAC,OAC1B,CAAC,IACW,WAAW,CAAG,tBCEb,oBAAe,GAAf,eAAe,CAAyB;QACxC,kBAAa,GAAb,aAAa,CAAuB;KAC5C;IAEJ,WAAW;QACT,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,OAAO,IAAI,CAAC,GAAG;aACZ,OAAO,CAAC;YACP,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC1C,IAAI,EAAE,QAAQ,CAAC,YAAY;SAC5B,CAAC;aACD,IAAI,CACH,GAAG,CAAC,OAAO;YACT,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;SACF,CAAC,CACH,CAAC;KACL;IAES,QAAQ;;QAEhB,MAAM,OAAO,GACX,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,eAAe,CAAC,aAAa;cAC9B,OAAO;cACP,MAAM,CAAC;QAEb,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;KAC9B;IAES,MAAM;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;KACpB;CACF;kVAAA;;YAxCmB,WAAW;YACZ,UAAU;YACN,cAAc;YACF,mBAAmB;YACtB,sBAAsB;YACxB,oBAAoB;;gUAkBhD,AAkBF;AAjDa;UAAW,oBAHvB,jBCEa,EAAE,OAAO,EAAE,QAAQ,EAAE;IDFxB,CAAC,UACV,UAAU,EAAE,MAAM,jCCMpB,IAAa,YAAY,GAAzB,MAAa,YAAY;ADLxB,CAAC,ACK0B;EDJf,WAAW,CAgDvB;;;;;;;;;;;EC5C2B,CAAf,WACb;AADyB;mBAbxB,QAAQ,CAAC,UACR,OAAO,EAAE,3CCoBE,iBAAiB,GAA9B,MAAa,iBAAiB;WDnB1B,gBAAgB,cAChB,YAAY,CAAC,QAAQ,CAAC,kBACpB,sBACE,IAAI,EAAE,IAAI,7GC8ChB,YACY,WAAwB,EACxB,oBAA0C,EAC1C,EAAe,EACf,MAAsB,EACtB,wBAAkD,EAClD,uBAAgD;mBDnDtD,WAAW,EAAE,CAAC,zBC8CR,gBAAW,GAAX,WAAW,CAAa;ID9CL,CAAC,sBAC1B,SAAS,EAAE,mBAAmB,jDC8CxB,yBAAoB,GAApB,oBAAoB,CAAsB;qBD7ChD,bC8CM,OAAE,GAAF,EAAE,CAAa;GD9CjB,MAAuB,mBAC5B,pBC8CO,WAAM,GAAN,MAAM,CAAgB;aD7C/B,CAAC,WACH,OACF,CAAC,IACW,YAAY,CAAG,1CC2Cd,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAjCpD,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAO1C,yBAAoB,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAC7C;YACE,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,SAAS,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,cAAc,CAAC,CAAC;YACvE,QAAQ,EAAE;gBACR,EAAE;gBACF,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,iBAAiB,CAAC;aAC9D;YACD,YAAY,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACvC,UAAU,EAAE,IAAI,WAAW,CAAC;gBAC1B,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE;aACnC,CAAC;YACF,kBAAkB,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,YAAY,CAAC;SACrD,EACD,EAAE,SAAS,EAAE,oBAAoB,CAAC,aAAa,EAAE,CAClD,CAAC;KASE;IAEJ,QAAQ;;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,IAAI,CAC9C,GAAG,CAAC,MAAM;YACR,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;aAC/B;SACF,CAAC,EACF,GAAG,CAAC,MAAM;YACR,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAChC,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,4BAA4B,EAAE,CAAC;QAChE,IAAI,CAAC,uBAAuB,EAAE,CAAC;;QAG/B,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,oBAAoB;aACtB,GAAG,EAAE;aACL,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;aACxD,SAAS,CAAC,CAAC,qBAA4C;YACtD,MAAM,QAAQ,GACZ,qBAAqB;gBACrB,qBAAqB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;YAE1D,IACE,QAAQ;gBACR,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,KAAK,yBAAyB,CAAC,EAC/D;gBACA,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;gBACnE,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,wBAAwB,EAAE,EACjC,iBAAiB,CAAC,cAAc,CACjC,CAAC;aACH;SACF,CAAC,CACL,CAAC;QAEF,MAAM,EAAE,eAAe,EAAE,SAAG,IAAI,CAAC,uBAAuB,0CAAE,iBAAiB,CAAC;QAE5E,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;YACrC,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,eAAe,CAAC;YACzD,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,eAAe,CAAC;SAC3D,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAsC;YAC3D,OAAO;gBACL,OAAO;gBACP,QAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAC,WAAW,GAAG,EAAE;aAC/C,CAAC;SACH,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YACjE,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B,CAAC,CACH,CAAC;KACH;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,CACvB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAClE,CAAC;KACH;IAED,aAAa,CAAC,KAAY;QACxB,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACtE;IAED,2BAA2B,CAAC,QAAa;QACvC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,QAAQ,CAAC;QAErE,OAAO;YACL,SAAS;YACT,QAAQ;YACR,GAAG,EAAE,KAAK,CAAC,WAAW,EAAE;YACxB,QAAQ;YACR,SAAS;SACV,CAAC;KACH;IAED,cAAc,CAAC,OAAyB;QACtC,OAAO,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KAC9D;IAEO,iBAAiB;;QACvB,MAAM,EACJ,gBAAgB,EAChB,eAAe,GAChB,SAAG,IAAI,CAAC,uBAAuB,0CAAE,iBAAiB,CAAC;QAEpD,IAAI,gBAAgB,IAAI,eAAe,EAAE;YACvC,OAAO,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;SACnD;QAED,OAAO,KAAK,CAAC;KACd;IAEO,qBAAqB,CAAC,OAAgB;QAC5C,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YACxB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B,EAAE,GAAG,EAAE,8BAA8B,EAAE,EACvC,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;SACH;KACF;IAED,sBAAsB;QACpB,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;QAE3E,IAAI,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,EAAE;YAC9D,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;SAChE;KACF;IAEO,uBAAuB;QAC7B,IAAI,CAAC,WAAW,CAAC,6BAA6B,EAAE,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,OAAO;YAC/D,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;SACrC,CAAC,CACH,CAAC;KACH;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,6BAA6B,EAAE,CAAC;KAClD;CACF;;;;;;;;;0eAAA;;YA3I0B,WAAW;YACF,oBAAoB;YACtC,WAAW;YACP,cAAc;YACI,wBAAwB;YACzB,uBAAuB;EAC1D,AAsIJ;AA3Ka;gBAAiB,oBAJ7B,SAAS,CAAC,UACT,pDCaW,uBAAuB,GAApC,MAAa,uBAAuB;EDb1B,DCa6B;CDb3B,aAAa,UACvB;;;;;;;;;;;;;;;;;;ECYqC,CAA1B,WACb;;UADoC,oBAxBnC,QAAQ,CAAC,UACR,7CCQW,mBAAmB,GAAhC,MAAa,mBAAmB;EDRvB,DCQ0B;CDRxB,cACP,YAAY,cACZ,WAAW,cACX;EAAmB,cACnB,YAAY,cACZ,SAAS,cACT,UAAU,cACV,aAAa,WACd,UACD,SAAS,EAAE,cACT;QAAoB,CAAY;CAC9B,aAAa,EAAE;aACb;SAAyB,EAAE;WACzB,SAAS,EAAE;MAAiB,0BAC5B;KAAM,EAAE,CAAC,YAAY,CAAC;kBACvB;cACF,eACF,CAAC;IACH,UACD,ZCXiC,CAAtB,WACb;;UDUc,EAAE,CAAC,iBAAiB,CAAC,UACjC,OAAO,EAAE,CAAC,7CCZoB,oBAb/B,QAAQ,CAAC,UACR,OAAO,EAAE,lDCEE,qBAAqB,GAAlC,MAAa,qBAAqB;UFsBL,CAAC,DCvB1B,NCCJ;CFuBE,eAAe,EAAE,CAAC,jBCxBJ,cACZ,WAAW,nBCEb,cAAS,GAAG,KAAK,CAAC;IFqBiB,CAAC,OACrC,CAAC,IACW,uBAAuB,CAAG,hCCxBnC,eAAe,cACf,9BCIF,WAAM,GAAG,IAAI,YAAY,EAAc,CAAC;KAKzC;EDTe,cACZ,ZCKF,WAAW,CAAC,IAAgB;WDLP,cACnB,jBCKA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;CACF;GDPsB,cACnB,YAAY,cACZ,SAAS,cACT,uBAAuB,WACxB,OACF,CAAC,IACW;YAAmB,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0MCClC;AATC;IADC,KAAK,EAAE;wDACU;AACT;IAAR,KAAK,EAAE;wDAAuB;AAG/B;IADC,MAAM,EAAE;qDAC+B,CAC1C,AAKA;AAZa;oBAAqB,oBALjC,SAAS,7CCDG,iBAAiB,GAA9B,MAAa,iBAAiB;ADCnB,UACT,QAAQ,EAAE,hBCEV,YAAsB,eAAgC;IDFzB,UAC7B,NCCsB,oBAAe,GAAf,eAAe,CAAiB;QAHtD,cAAS,GAAqB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACjE,aAAQ,GAAwB,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;KAEhB;IAE1D,WAAW,CAAC,IAAgB;QAC1B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACxC;CACF;;wlBJUyC,MACzC,CAAC,IACW,iBAAiB,CA0K7B;;;;;;gJItLA;;YALwC,eAAe;EACxD,AAKA;AAVa;gBAAiB,oBAJ7B,hCCwCY,cAAc,GAA3B,MAAa,cAAc;CDxCjB,CAAC,DCwCmB;SDvC5B,QAAQ,EAAE,cAAc,UACxB;;;;;;;;;;;;;;;;;;;ECsC4B,CAAjB,WACb;;CAD2B,oBAzB1B,QAAQ,CAAC,1BC0FG,YAAY,GAAzB,MAAa,YAAY;ADzFvB,CCyF0B;IDzFnB,EAAE,cACP,eAAe,cACf,YAAY;MACZ,UAAU,cACV,WAAW,cACX,YAAY,cACZ,gBAAgB,cAChB,SAAS,cACT;YAAiB,WAClB,UACD,SAAS,EAAE;MACT;GAAoB,CAAY,kBAC9B;0BFrB0C,xBEqB7B,EAAE,sBACb;IFrBN,eAAe,EAAE,VEqBM,EAAE;oBFrBe,CAAC,NEsBjC,SAAS;CFtB8B,MAChD,CAAC,IACW,qBAAqB,CAWjC,CCnB0C,nCC4BtB,iBAAiB;GD3BrC,CAAC,IACW,iBAAiB,CAS7B,rBCkBS,MAAM,EAAE,CAAC,SAAS,CAAC;iBACpB;AACF,eACF,CAAC,WACH;OACD,YAAY,EAAE,CAAC;UAAiB,EAAE,qBAAqB,CAAC;KACxD,eAAe,EAAE,CAAC;WAAiB,CAAC,UACpC,OAAO;AAAE,CAAC,iBAAiB,EAAE;SAAqB,CAAC,OACpD,CAAC,IACW,cAAc;AAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECiEF,CAAf,WACb;AADyB;mBApDxB,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,pDClDY,kCAAkC,CAChD,OAA0B,EAC1B,qBAAwC;qBDgDA,jBC9CxC,MAAM,OAAO,GAAG,CAAC,KAAY;ED+C3B,SAAS,cACT,mBAAmB,cACnB,lDChDA,MAAM,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;eDgDlC,cAClB,UAAU,cACV,7CCjDA,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;UDiDjC,cACZ,ZCjDE,MAAM,EAAE,GAAG;uBDiDW,cACxB,zBCjDE,SAAS,EAAE,aAAa;SACzB,CAAC,CAAC;GDgDa,cAChB,sBAAsB,cACtB,gBAAgB,7DCjDhB,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,CAAC;KAChE,CAAC;IDiDA,eAAe,fChDjB,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;OD8CI,yBAAyB,cACzB;QAAe,cACf,iBAAiB;WACjB,kBAAkB,cAClB;cAAuB,cACvB;AAAiB;WACjB,uBAAuB,cACvB,yBAAyB,cACzB;GAAiB,cACjB,iBAAiB,cACjB;;KAAqB,cACrB,uBAAuB,cACvB,kBAAkB,cAClB,oBAAoB;;AACpB,iBAAiB,cACjB,oBAAoB,cACpB,mBAAmB,pFCnDvB,MAAa,2BAA2B,GAAG,IAAI,cAAc,CAE3D,6BAA6B,EAAE;UDkD7B,NCjDF,UAAU,EAAE,MAAM;SDiDO,cACvB,kBAAkB,cAClB,mBAAmB,cACnB,pFCnDF,OAAO,EAAE,MACP,kCAAkC,CAChC,MAAM,CAAC,iBAAiB,CAAC,EACzB,MAAM,CAAC,mBAAmB,CAAC,CAC5B;CACJ,CAAC;AD8C6B;aAC3B,uBAAuB,vBE7Eb,EAAE,OAAO,EAAE,SAAS,EAAE;aF8EhC,iBAAiB,cACjB,mBAAmB,/DE/DvB,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;CAAG;UFgEpC,oBAAoB,cACpB,qBAAqB,cACrB;IAAkB,cAClB,uBAAuB,cACvB,oBAAoB,cACpB,mBAAmB,cACnB,oBAAoB,cACpB,mBAAmB;aACnB,eAAe;WACf;EAAc,cACd;kBAA4B;CAC5B,iBAAiB,cACjB,uBAAuB;EACxB,OACF,CAAC,IACW;IAAY,CAAG;;;;;;;;;;;;EE/EY,CAA3B,WACb;;WADqC,oBAvBpC,QAAQ,CAAC,UACR,OAAO,EAAE,cACP,hECAY,kCAAkC,CAChD,OAA0B,EAC1B,qBAAwC;ODF1B,CAAC,QAAQ,CAAC,bCIxB,MAAM,OAAO,GAAG,CAAC,KAAY;EDHzB,sBACE,IAAI,EAAE,IAAI,sBACV,hDCEJ,MAAM,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;MDFrC,EAAE,CAAC,YAAY,CAAC,sBAC3B,SAAS,7CCEb,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;ADF9B,mBAAmB,PCGhC,MAAM,EAAE,GAAG;gBDFT,IAAI,MAAwB,dCG9B,SAAS,EAAE,cAAc;MDFxB,GCGF,CAAC,CAAC;SDFF,CAAC,WACH,UACD,SAAS,EAAE,cACT,hDCAA,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,CAAC;IDA3C,CAAgB,ACCrC,CAAC;gBDAE,ZCCJ,OAAO,OAAO,CAAC;AACjB,CAAC;CDFY,EAAE,HCIf;qBDHQ,MAAM,EAAE;EACN,OAAO,EAAE,8BACP;OAAQ,EAAE,CAAC,2BAA2B,CAAC;aACxC,uBACF;;MACF,eACF,CAAC,WACH,OACF,CAAC,IACW,wBAAwB,CAAG;;;;;ACKxC,MAAa,2BAA2B,GAAG,IAAI,cAAc,CAE3D,6BAA6B,EAAE;IAC/B,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,MACP,kCAAkC,CAChC,MAAM,CAAC,iBAAiB,CAAC,EACzB,MAAM,CAAC,mBAAmB,CAAC,CAC5B;CACJ,CAAC;;aC/BY,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAM1C,EAAE,OAAO,EAAE,OAAO,EAAE,OAQpB,EAAE,OAAO,EAAE,UAAU,EAAE;AAgBrC,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,CAA3B,WACb;;WADqC,LCzCxB,eAAe,GAAiB;KDI5C,QAAQ,CAAC,UACR;KAAO,EAAE,cACP,YAAY,CAAC,QAAQ,CAAC;cACpB,sBACE;GAAI,EAAE,IAAI;ICHhB,WAAW,EAAE;EDIP,WAAW,EAAE,CAAC,RCHlB,MAAM,EAAE;UDGsB,CAAC,CCF7B,EAAE,EAAE;eDGF,SAAS,RCFT,KAAK,EAAE;CDEI,mBAAmB,ACD5B,aAAa;ODEf,IAAI,MAA4C,GCD9C,WAAW;GDEd,kBACD,DCFI,UAAU;WDGZ,IAAI,EAAE,IAAI,DCFR,WAAW;UDGb,WAAW,EAAE,CAAC,JCFZ,WAAW;GDEa,CAAC,sBAC3B,NCFE,UAAU;GDEH,EAAE,mBAAmB,JCD5B,eAAe;SDEjB,IAAI,ICDH;ADCyB,aCA3B;IDCA,kBACD,VCDA,KAAK,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC;SAC1D;QACD,UAAU,EAAE;YACV,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACjB,KAAK,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE,aAAa,EAAE,WAAW,CAAC;SAClE;QACD,MAAM,EAAE;yBDFJ,IAAI,jBCGN,KAAK,EAAE,CAAC,QAAQ,CAAC;ADHT,IAAI,KCIb;eDHG,WAAW,EAAE,CAAC,rBCIlB,oBAAoB,EAAE;SDJQ,CAAC,sBAC3B,pBCIF,QAAQ,EAAE,WAAW;MDJV,EAAE,ICKb,KAAK,EAAE;MDLyB,UCM9B,UAAU;ADLV,IAAI,IAAyB,mBAC9B,XCKC,WAAW;aDJd,CAAC,WACH,TCIK,WAAW;MDHjB,SAAS,EAAE,DCIL,WAAW;EDHf,oBAAoB,CAAgB,PCIhC,UAAU;aDHZ,OAAO,EAAE,NCIP,UAAU;gBDHV,MAAM,EAAE,RCIR,UAAU;aACX;ODJG,ECKL;IDLa,EAAE,ECOhB,oBAAoB,EAAE;IDNd,QAAQ,EAAE,CAAC,2BAA2B,CAAC,/BCO7C,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;SAClC;YDPM,JCQP,oBAAoB,EAAE;GDPjB,mBACF,VCOD,QAAQ,EAAE,UAAU;GDNrB,CAAC,WACH,OACF,CAAC,IACW,wBAAwB,CAAG,xCCIlC,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;SAC5C;QACD,uBAAuB,EAAE;YACvB,KAAK,EAAE,CAAC,wBAAwB,EAAE,iBAAiB,CAAC;SACrD;QACD,uBAAuB,EAAE;YACvB,KAAK,EAAE,CAAC,wBAAwB,EAAE,iBAAiB,CAAC;SACrD;QACD,6BAA6B,EAAE;YAC7B,KAAK,EAAE;gBACL,UAAU;gBACV,wBAAwB;gBACxB,uBAAuB;gBACvB,UAAU;aACX;SACF;QACD,6BAA6B,EAAE;YAC7B,KAAK,EAAE;gBACL,UAAU;gBACV,wBAAwB;gBACxB,uBAAuB;gBACvB,UAAU;aACX;SACF;QACD,0BAA0B,EAAE;YAC1B,EAAE,EAAE;gBACF,QAAQ,EAAE,WAAW;aACtB;YAED,QAAQ,EAAE,SAAS;YAEnB,KAAK,EAAE;gBACL,SAAS;gBACT,WAAW;gBACX,cAAc;gBACd,MAAM;gBACN,wBAAwB;aACzB;SACF;QACD,gBAAgB,EAAE;YAChB,KAAK,EAAE,CAAC,YAAY,EAAE,wBAAwB,EAAE,wBAAwB,CAAC;SAC1E;QACD,mBAAmB,EAAE;YACnB,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;SACtC;QACD,iBAAiB,EAAE;YACjB,KAAK,EAAE,CAAC,iBAAiB,EAAE,kBAAkB,CAAC;SAC/C;QACD,iBAAiB,EAAE;YACjB,KAAK,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,CAAC;SACxD;QACD,6BAA6B,EAAE;YAC7B,KAAK,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;SACtC;QACD,oCAAoC,EAAE;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,CAAC;SACrE;QACD,yBAAyB,EAAE;YACzB,KAAK,EAAE,CAAC,kBAAkB,CAAC;SAC5B;KACF;CACF;;MC1GY,gBAAgB,GAEzB;IACF,sBAAsB,EAAE;QACtB,QAAQ,EAAE,wBAAwB;QAClC,QAAQ,EAAE,wBAAwB;KACnC;IACD,cAAc,EAAE;QACd,QAAQ,EAAE,gBAAgB;QAC1B,QAAQ,EAAE,gBAAgB;QAC1B,GAAG,EAAE,gBAAgB;KACtB;CACF,CAAC;AAEF,MAAa,uBAAuB,GAAuB;IACzD,SAAS,EAAE;QACT,YAAY,EAAE,CAAC,wBAAwB,CAAC;KACzC;IACD,SAAS,EAAE;QACT,YAAY,EAAE,CAAC,gBAAgB,CAAC;KACjC;CACF;;SCjBe,uBAAuB;IACrC,OAAO;QACL,YAAY,EAAE;YACZ,UAAU,oBACL,gBAAgB,CACpB;YACD,KAAK,oBACA,uBAAuB,CAC3B;YACD,KAAK,EAAE,EAAE;SACV;KACF,CAAC;AACJ,CAAC;;IC6BY,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;;;;;;;;;;;;;;;;;;;;;;EAAA,CAA7B,sBACb;;EADuC,oBAxBtC;MAAQ,CAAC,UACR,OAAO,EAAE,cACP,WAAW,CAAC,OAAO,EAAE,zDCuBZ,gBAAgB,wBAA7B,MAAa,gBAAgB;MDtBzB,UAAU,CAAC,OAAO,EAAE,tBCuBtB,OAAO,UAAU,CACf,MAAyB;QDvBzBC,ACyBA,OAAO;gBDzBgB,CAAC,OAAO,EAAE,cACjC,5BCyBE,QAAQ,EAAE,kBAAgB;UDzBhB,CAAC,OAAO,EAAE,cACtB,tBCyBE,SAAS,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SDzBb,CAAC,DC0BvB,CAAC;KACH;AD3BgC,EAAE,DC4BpC;aD3BG,qBAAqB,CAAC,OAAO,EAAE,cAC/B,aAAa,CAAC;EAAO,EAAE,cACvB,UAAU,CAAC,OAAO,EAAE,cACpB,SAAS,CAAC,OAAO,EAAE,cACnB,mBAAmB,CAAC,OAAO,EAAE,cAC7B,aAAa,CAAC,OAAO;AAAE,cACvB,UAAU,CAAC,OAAO,EAAE;SACpB,cAAc,CAAC,OAAO,EAAE,cACxB;GAAU,CAAC,OAAO,EAAE,cACpB,aAAa,CAAC;KAAO,EAAE;KACvB,gBAAgB,CAAC,OAAO,EAAE;QAC1B,oBAAoB,CAAC,OAAO,CAAC;GAAK,CAAC,cACnC,YAAY,WACb,UACD,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,SAAS,EAAE,CAAC,GAAG;MAAyB,EAAE,CAAC,OAC5C,CAAC,IACW,0BAA0B,CAAG;;;;;;;;;;;;;;ECUzC,CATY,gBAAgB,oBAU7B;;mBAvCC;AAAQ,CAAC,UACR,OAAO,EAAE,cACP,YAAY,CAAC,OAAO,CAAC,EAAE,EAAE,kBACvB,zECSO,mBAAmB,2BAAhC,MAAa,mBAAmB;wBDTD,EAAE,tBCU/B,OAAO,UAAU,CACf,MAAyB;GDXa,KCatC,OAAO;IDZL,eAAe,EAAE,SAAS,lBCa1B,QAAQ,EAAE,qBAAmB;ADZ9B,CAAC,cAEF,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,1BCWrB,SAAS,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IDVpC,KCWC,CAAC;KACH;ADZc,CAAC,ACajB;KDbwB,CAAC,EAAE,CAAC;uIAIzB,SAAS,cAET;uBAA0B;MAC1B,UAAU;WACV,iBAAiB,CAAC;KAAO,EAAE,cAE3B,eAAe,CAAC;MAAO,EAAE;QACzB;iBAAqB,CAAC,OAAO,EAAE;2BAG/B,SAAS,CAAC,OAAO,EAAE,cACnB;;GAAwB,cACxB;WAAwB,cACxB,oBAAoB,CAAC,OAAO,EAAE,WAC/B,UACD;AAAO,EAAE,CAAC,UAAU,EAAE;;IAA0B,CAAC,OAClD,CAAC,IACW,fCRZ,CATY,mBAAmB;GDiBH,CAS5B,gCC7CA,QAAQ,CAAC,UACR,OAAO,EAAE;EACP,gBAAgB;;;;sBAGhB,YAAY,WACb,UACD,SAAS,EAAE,cACT,oBAAoB,CAAC,kBACnB,GAAG,EAAE;kBACH,OAAO,EAAE,IAAI,sBACb,eAAe,EAAE;EAAI,mBACtB;WACF,CAAC;SACF,oBAAoB,CAAC,eAAe;AAAC,cACrC,2BAA2B,CAAC,uBAAuB,CAAC,WACrD;GACD,OAAO,EAAE,CAAC;cAAgB,CAAC,OAC5B,CAAC,IACW,mBAAmzCA;;;;AAOA,MAAa,4BAA4B,GAAiB;IACxD,WAAW,EAAE;QACX,uBAAuB,EAAE;YACvB,KAAK,EAAE,CAAC,wBAAwB,EAAE,iBAAiB,CAAC;SACrD;KACF;CACF;;ACbD;;GAEG;;ACFH;;GAEG","sourcesContent":["export enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n  HEART = 'HEART',\n  EMPTY_HEART = 'EMPTY_HEART',\n}\n\nexport abstract class IconConfig {\n  icon?: IconOptions;\n}\n\nexport interface IconOptions {\n  /**\n   * Each icon type can be configured with a so-called symbol. The symbol will\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n   * a font based icon. The following configuration would map to a fontawesome\n   * icon:\n   *\n   * icon: {\n   *   symbols: {\n   *     CART: 'fas fa-shopping-cart'\n   *   }\n   * }\n   */\n  symbols?: {\n    [ICON_TYPE: string]: string;\n  };\n\n  /**\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n   * is used for the SVG xlink reference.\n   */\n  resources?: IconConfigResource[];\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: (ICON_TYPE | string)[];\n}\n\n/**\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\n * The resources will be automitacally loaded in case they're required for the `ICON_TYPE`.\n */\nexport enum IconResourceType {\n  /**\n   * An svg based icon requires an SVG resource that must be loaded,\n   * this is typically a sprite svg file.\n   */\n  SVG = 'svg',\n\n  /**\n   * A font based ICON might require an additional CSS file to be loaded.\n   */\n  LINK = 'link',\n  /**\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\n   */\n  TEXT = 'text',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n      HEART: 'fas fa-heart',\n      EMPTY_HEART: 'far fa-heart',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconOptions,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(\n    protected winRef: WindowRef,\n    protected iconConfig: IconConfig,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  /**\n   * Returns an html fragment which can be added to the DOM in a safe way.\n   */\n  getHtml(type: ICON_TYPE | string): SafeHtml {\n    if (this.isResourceType(type, IconResourceType.SVG)) {\n      return this.sanitizer.bypassSecurityTrustHtml(\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\n      );\n    }\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\n    }\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Indicates whether the given `ICON_TYPE` is configured for\n   * the given `IconResourceType`.\n   */\n  private isResourceType(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): boolean {\n    return (\n      this.config.resources &&\n      !!this.config.resources.find(\n        res =>\n          res.types && res.type === resourceType && res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config a[[s been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  private getSvgPath(iconType: ICON_TYPE | string): string {\n    const svgResource = this.config.resources.find(\n      res =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE | string): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (\n      resource &&\n      resource.url &&\n      !this.loadedResources.includes(resource.url)\n    ) {\n      this.loadedResources.push(resource.url);\n      const head = this.winRef.document.getElementsByTagName('head')[0];\n      const link = this.winRef.document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = 'text/css';\n      link.href = resource.url;\n      head.appendChild(link);\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.resources) {\n      return;\n    }\n\n    let resource = this.config.resources.find(\n      res =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.resources.find(\n        res => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  getSymbol(iconType: ICON_TYPE | string) {\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\n      return this.config.symbols[iconType];\n    }\n  }\n\n  private get config(): IconOptions {\n    return this.iconConfig.icon;\n  }\n}\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE } from './icon.model';\n\n/**\n *\n * The icon component can be added in different ways:\n *\n * With the component selector:\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\n *\n * With the attribute selector:\n * `<span cxIcon=\"STAR\"></span>`\n *\n * Additionally, content can be projected to the icon:\n *\n * `<button cxIcon=\"HAPPY\">happy label</button>`\n *\n * The above button would become (based on a TEXT resource type):\n * `<button>😊happy label</button>`\n *\n * While the content is projected, the icon itself doesn't require an\n * additional DOM node which is an advantage over the component selector.\n */\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set cxIcon(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set type(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * the icon provides an html fragment that is used to add SVG or text based icons.\n   */\n  icon: SafeHtml;\n\n  /**\n   * Maintains the applied style classes so we can remove them when the\n   * icon type changes at run time.\n   */\n  protected styleClasses: string[];\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected renderer: Renderer2\n  ) {}\n\n  protected setIcon(type: ICON_TYPE): void {\n    if (!type || <string>type === '') {\n      return;\n    }\n    this.icon = this.iconLoader.getHtml(type);\n    this.addStyleClasses(type);\n    this.iconLoader.addLinkResource(type);\n  }\n\n  /**\n   * Adds the style classes and the link resource (if available).\n   */\n  protected addStyleClasses(type: ICON_TYPE): void {\n    this.renderer.addClass(this.host, 'cx-icon');\n\n    if (this.styleClasses) {\n      this.styleClasses.forEach(cls =>\n        this.renderer.removeClass(this.host, cls)\n      );\n    }\n\n    this.styleClasses = this.iconLoader.getStyleClasses(type).split(' ');\n\n    this.styleClasses.forEach(cls => {\n      if (cls !== '') {\n        this.renderer.addClass(this.host, cls);\n      }\n    });\n  }\n\n  protected get host() {\n    return this.elementRef.nativeElement;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\nimport { IconConfig } from './icon.model';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(fontawesomeIconConfig),\n    { provide: IconConfig, useExisting: Config },\n  ],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n  isFeatureLevel,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../modal/index';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog',\n  templateUrl: './anonymous-consent-dialog.component.html',\n})\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  showLegalDescription = true;\n  iconTypes = ICON_TYPE;\n  requiredConsents: string[] = [];\n\n  loading$: Observable<boolean>;\n  templates$: Observable<ConsentTemplate[]>;\n  consents$: Observable<AnonymousConsent[]>;\n\n  // TODO(issue:4989) Anonymous consents - remove\n  isLevel13 = isFeatureLevel(this.config, '1.3');\n\n  constructor(\n    private config: AnonymousConsentsConfig,\n    private modalService: ModalService,\n    private anonymousConsentsService: AnonymousConsentsService\n  ) {\n    if (Boolean(this.config.anonymousConsents)) {\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.templates$ = this.anonymousConsentsService.getTemplates();\n    this.consents$ = this.anonymousConsentsService.getConsents();\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n\n  rejectAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach(template => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.withdrawConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.closeModal('rejectAll');\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach(template => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                (consent && consent.consentState == null) ||\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.giveConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.closeModal('allowAll');\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.config.anonymousConsents) &&\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\n    );\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.anonymousConsentsService.giveConsent(template.id);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(template.id);\n    }\n  }\n\n  getCorrespondingConsent(\n    template: ConsentTemplate,\n    consents: AnonymousConsent[] = []\n  ): AnonymousConsent {\n    for (const consent of consents) {\n      if (template.id === consent.templateCode) {\n        return consent;\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { AnonymousConsentsService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AnonymousConsentDialogComponent } from '../../../shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-management-banner',\n  templateUrl: './anonymous-consent-management-banner.component.html',\n})\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\n  private subscriptions = new Subscription();\n\n  bannerVisible$: Observable<\n    boolean\n  > = this.anonymousConsentsService.isBannerVisible();\n\n  constructor(\n    private modalService: ModalService,\n    private anonymousConsentsService: AnonymousConsentsService\n  ) {}\n\n  viewDetails(): void {\n    this.hideBanner();\n    this.modalService.open(AnonymousConsentDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      this.anonymousConsentsService\n        .giveAllConsents()\n        .pipe(tap(_ => this.hideBanner()))\n        .subscribe()\n    );\n  }\n\n  hideBanner(): void {\n    this.anonymousConsentsService.toggleBannerDismissed(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AnonymousConsentDialogComponent } from '../../../shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-open-dialog',\n  templateUrl: './anonymous-consent-open-dialog.component.html',\n})\nexport class AnonymousConsentOpenDialogComponent {\n  constructor(protected modalService: ModalService) {}\n\n  openDialog(): void {\n    this.modalService.open(AnonymousConsentDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  DeferLoadingStrategy,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, FeaturesConfigModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AnonymousConsentManagementBannerComponent: {\n          component: AnonymousConsentManagementBannerComponent,\n          deferLoading: DeferLoadingStrategy.INSTANT,\n        },\n        AnonymousConsentOpenDialogComponent: {\n          component: AnonymousConsentOpenDialogComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  exports: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  entryComponents: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n})\nexport class AnonymousConsentManagementBannerModule {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { CmsConfig } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ComponentMapperService {\n  missingComponents: string[] = [];\n\n  private loadedWebComponents: { [path: string]: any } = {};\n\n  constructor(\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: CmsConfig,\n    @Inject(DOCUMENT) protected document: any,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  /**\n   * @desc\n   * returns a web component for the CMS typecode.\n   *\n   * The mapping of CMS components to web componetns requires a mapping.\n   * This is configurable when the module is loaded.\n   *\n   * For example:\n   *\n   *  {\n   *      'CMSLinkComponent': 'LinkComponent',\n   *      'SimpleResponsiveBannerComponent': 'SimpleResponsiveBannerComponent',\n   *      [etc.]\n   *  }\n   *\n   * The type codes are dynamic since they depend on the implementation.\n   * Customer will add, extend or ingore standard components.\n   *\n   * @param typeCode the component type\n   */\n  protected getComponent(typeCode: string): any {\n    const componentConfig = this.config.cmsComponents[typeCode];\n    if (!componentConfig) {\n      if (!this.missingComponents.includes(typeCode)) {\n        this.missingComponents.push(typeCode);\n        console.warn(\n          `No component implementation found for the CMS component type '${typeCode}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n    return componentConfig ? componentConfig.component : null;\n  }\n\n  getComponentFactoryByCode(typeCode: string): any {\n    const component = this.getComponent(typeCode);\n    if (!component) {\n      return null;\n    }\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      component\n    );\n\n    if (!factory) {\n      console.warn(\n        `No component factory found for the CMS component type '${typeCode}'.\\n`,\n        `Make sure you add a component to the 'entryComponents' array in the NgModule.`\n      );\n      return null;\n    }\n    return factory;\n  }\n\n  isWebComponent(typeCode: string): boolean {\n    const component = this.getComponent(typeCode);\n    return typeof component === 'string' && (component || '').includes('#');\n  }\n\n  initWebComponent(\n    componentType: string,\n    renderer: Renderer2\n  ): Promise<string> {\n    return new Promise(resolve => {\n      const [path, selector] = this.getComponent(componentType).split('#');\n\n      let script = this.loadedWebComponents[path];\n\n      if (!script) {\n        if (path) {\n          script = renderer.createElement('script');\n          this.loadedWebComponents[path] = script;\n          script.setAttribute('src', path);\n          renderer.appendChild(this.document.body, script);\n          if (isPlatformBrowser(this.platform)) {\n            script.onload = () => {\n              script.onload = null;\n            };\n          }\n        } else {\n          script = {};\n        }\n      }\n\n      if (script.onload) {\n        // If script is still loading (has onload callback defined)\n        // add new callback and chain it with the existing one.\n        // Needed to support loading multiple components from one script\n        const chainedOnload = script.onload;\n        script.onload = () => {\n          chainedOnload();\n          resolve(selector);\n        };\n      } else {\n        resolve(selector);\n      }\n    });\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport {\n  ActiveCartService,\n  AuthService,\n  BaseSiteService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  CmsService,\n  CurrencyService,\n  FeatureConfigService,\n  GlobalMessageService,\n  KymaService,\n  LanguageService,\n  OccEndpointsService,\n  PageMetaService,\n  ProductReferenceService,\n  ProductReviewService,\n  ProductSearchService,\n  ProductService,\n  RoutingService,\n  SearchboxService,\n  SelectiveCartService,\n  TranslationService,\n  UserAddressService,\n  UserConsentService,\n  UserInterestsService,\n  UserNotificationPreferenceService,\n  UserOrderService,\n  UserPaymentService,\n  UserService,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CxApiService {\n  cmsComponentData?: CmsComponentData<any>;\n\n  constructor(\n    // auth\n    @Optional() public auth: AuthService,\n    // cart\n    @Optional() public cart: ActiveCartService,\n    // checkout\n    @Optional() public checkout: CheckoutService,\n    @Optional() public checkoutDelivery: CheckoutDeliveryService,\n    @Optional() public checkoutPayment: CheckoutPaymentService,\n    // cms\n    @Optional() public cms: CmsService,\n    @Optional() public pageMeta: PageMetaService,\n    // features config\n    @Optional() public featureConfig: FeatureConfigService,\n    // global message\n    @Optional() public globalMessage: GlobalMessageService,\n    // i18n\n    @Optional() public translation: TranslationService,\n    // kyma\n    @Optional() public kyma: KymaService,\n    // occ\n    @Optional() public occEndpoints: OccEndpointsService,\n    // product\n    @Optional() public product: ProductService,\n    @Optional() public productSearch: ProductSearchService,\n    @Optional() public productReview: ProductReviewService,\n    @Optional() public productReference: ProductReferenceService,\n    @Optional() public searchbox: SearchboxService,\n    // routing\n    @Optional() public routing: RoutingService,\n    // site context\n    @Optional() public currency: CurrencyService,\n    @Optional() public language: LanguageService,\n    @Optional() public baseSite: BaseSiteService,\n    // user\n    @Optional() public user: UserService,\n    @Optional() public userAddress: UserAddressService,\n    @Optional() public userConsent: UserConsentService,\n    @Optional() public userOrder: UserOrderService,\n    @Optional() public userPayment: UserPaymentService,\n    @Optional()\n    public userNotificationPreferenceService: UserNotificationPreferenceService,\n    @Optional()\n    public userInterestsService: UserInterestsService,\n    @Optional() public selectiveCartService: SelectiveCartService,\n    // framework\n    public ngZone: NgZone\n  ) {}\n}\n","import { isPlatformServer } from '@angular/common';\nimport {\n  ComponentRef,\n  Directive,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  CmsComponent,\n  CmsConfig,\n  CmsService,\n  ContentSlotComponentData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../model/cms-component-data';\nimport { ComponentMapperService } from './component-mapper.service';\nimport { CxApiService } from './cx-api.service';\n\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n\n  cmpRef: ComponentRef<any>;\n  webElement: any;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private componentMapper: ComponentMapperService,\n    private injector: Injector,\n    private cmsService: CmsService,\n    private dynamicAttributeService: DynamicAttributeService,\n    private renderer: Renderer2,\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngOnInit() {\n    if (!this.shouldRenderComponent()) {\n      return;\n    }\n    if (this.componentMapper.isWebComponent(this.cxComponentWrapper.flexType)) {\n      this.launchWebComponent();\n    } else {\n      this.launchComponent();\n    }\n  }\n\n  private shouldRenderComponent(): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (\n      this.config.cmsComponents[this.cxComponentWrapper.flexType] || {}\n    ).disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  private launchComponent() {\n    const factory = this.componentMapper.getComponentFactoryByCode(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (factory) {\n      this.cmpRef = this.vcr.createComponent(\n        factory,\n        undefined,\n        this.getInjectorForComponent()\n      );\n\n      if (this.cmsService.isLaunchInSmartEdit()) {\n        this.addSmartEditContract(this.cmpRef.location.nativeElement);\n      }\n    }\n  }\n\n  private async launchWebComponent() {\n    const elementName = await this.componentMapper.initWebComponent(\n      this.cxComponentWrapper.flexType,\n      this.renderer\n    );\n\n    if (elementName) {\n      this.webElement = this.renderer.createElement(elementName);\n\n      const cmsComponentData = this.getCmsDataForComponent();\n\n      this.webElement.cxApi = {\n        ...this.injector.get(CxApiService),\n        cmsComponentData,\n      };\n\n      this.renderer.appendChild(\n        this.vcr.element.nativeElement.parentElement,\n        this.webElement\n      );\n\n      if (this.cmsService.isLaunchInSmartEdit()) {\n        this.addSmartEditContract(this.webElement);\n      }\n    }\n  }\n\n  private getCmsDataForComponent<T extends CmsComponent>(): CmsComponentData<\n    T\n  > {\n    return {\n      uid: this.cxComponentWrapper.uid,\n      data$: this.cmsService.getComponentData(this.cxComponentWrapper.uid),\n    };\n  }\n\n  private getInjectorForComponent(): Injector {\n    const configProviders =\n      (this.config.cmsComponents[this.cxComponentWrapper.flexType] || {})\n        .providers || [];\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useValue: this.getCmsDataForComponent(),\n        },\n        ...configProviders,\n      ],\n      parent: this.injector,\n    });\n  }\n\n  private addSmartEditContract(element: Element) {\n    this.dynamicAttributeService.addDynamicAttributes(\n      this.cxComponentWrapper.properties,\n      element,\n      this.renderer\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.cmpRef) {\n      this.cmpRef.destroy();\n    }\n    if (this.webElement) {\n      this.webElement.remove();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [],\n  declarations: [ComponentWrapperDirective],\n  exports: [ComponentWrapperDirective],\n})\nexport class PageComponentModule {}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { CmsConfig } from '@spartacus/core';\nimport { Route } from '@angular/router';\nimport { isPlatformServer } from '@angular/common';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsMappingService {\n  constructor(\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  isComponentEnabled(flexType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (this.config.cmsComponents[flexType] || {})\n      .disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  getRoutesForComponents(componentTypes: string[]): Route[] {\n    const routes = [];\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        routes.push(...this.getRoutesForComponent(componentType));\n      }\n    }\n    return routes;\n  }\n\n  getGuardsForComponents(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getGuardsForComponent(componentType).forEach(guard =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  getI18nKeysForComponents(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        this.getI18nKeysForComponent(componentType).forEach(key =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n\n  private getRoutesForComponent(componentType: string): Route[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.childRoutes) || [];\n  }\n\n  private getGuardsForComponent(componentType: string): any[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.guards) || [];\n  }\n\n  private getI18nKeysForComponent(componentType: string): string[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.i18nKeys) || [];\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsMappingService } from './cms-mapping.service';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsMapping.getGuardsForComponents(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map(guardClass => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { CmsMappingService } from './cms-mapping.service';\nimport { TranslationService, TranslationChunkService } from '@spartacus/core';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private translation: TranslationService,\n    private translationChunk: TranslationChunkService\n  ) {}\n\n  loadChunksForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsMapping.getI18nKeysForComponents(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { DeferLoadingStrategy } from '@spartacus/core';\n\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n\n  /**\n   * The page fold identifies the last expected page slot above-the-fold.\n   * It's perfectly fine to specify this by idication, however a more\n   * precise indication will have an positive impact on performance.\n   */\n  pageFold?: string;\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\nexport abstract class LayoutConfig {\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\n  breakpoints?: {\n    [BREAKPOINT.xs]?: number;\n    [BREAKPOINT.sm]?: number;\n    [BREAKPOINT.md]?: number;\n    [BREAKPOINT.lg]?: number;\n  };\n  layoutSlots?: LayoutSlotConfig;\n\n  /**\n   * Deferrred loading is a technique to hold of with the loading / creation\n   * of DOM elements which are not not in the initial view port.\n   * This technique wil increase performance.\n   */\n  deferredLoading?: {\n    /**\n     * The global strategy will be used as a fallback strategy for all DOM creation,\n     * but can be overriden by local configuration, i.e. for cms components.\n     */\n    strategy?: DeferLoadingStrategy;\n    /**\n     * The intersection margin contains the offset used by the Intersection Observer\n     * to observe elements outside the view port.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\n     */\n    intersectionMargin?: string;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\n\nconst DEFAULT_BREAKPOINTS = {\n  [BREAKPOINT.xs]: 576,\n  [BREAKPOINT.sm]: 768,\n  [BREAKPOINT.md]: 992,\n  [BREAKPOINT.lg]: 1200,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\n\n  get breakpoint$(): Observable<BREAKPOINT> {\n    if (!this.window) {\n      return of(BREAKPOINT.xs);\n    }\n    return this.winRef.resize$.pipe(\n      map(event => this.getBreakpoint((<Window>event.target).innerWidth)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpint, given by the `LayoutConfig.breakpoints`\n   * configuration. If no configuration is available for the given breakpoint, the\n   * method will return the default values:\n   * - xs: 567\n   * - sm: 768\n   * - md: 992\n   * - lg: 1200\n   */\n  getSize(breakpoint: BREAKPOINT): number {\n    return this.config.breakpoints?.hasOwnProperty(breakpoint)\n      ? this.config.breakpoints[breakpoint]\n      : DEFAULT_BREAKPOINTS[breakpoint];\n  }\n\n  /**\n   * Returns all available breakpoints for the system.\n   */\n  get breakpoints(): BREAKPOINT[] {\n    return [\n      BREAKPOINT.xs,\n      BREAKPOINT.sm,\n      BREAKPOINT.md,\n      BREAKPOINT.lg,\n      BREAKPOINT.xl,\n    ];\n  }\n\n  /**\n   * Indicates whether the current screen size is smaller than the maximum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\n   */\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map(br =>\n        this.breakpoints\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is larger than the minimum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\n   */\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map(br =>\n        this.breakpoints\n          .slice(this.breakpoints.indexOf(breakpoint))\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size fits to the given breakpoint\n   */\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(map(br => br === breakpoint));\n  }\n\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    const breakpoint = this.getClosest(windowWidth);\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\n  }\n\n  protected getClosest(windowWidth?: number): BREAKPOINT {\n    if (!windowWidth) {\n      windowWidth = this.window.innerWidth;\n    }\n\n    return windowWidth > this.getSize(BREAKPOINT.lg)\n      ? BREAKPOINT.xl\n      : this.breakpoints.find(br => windowWidth <= this.getSize(br));\n  }\n\n  get window(): Window {\n    return this.winRef.nativeWindow;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable()\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // Prints warn messages for missing layout configs.\n  // The warnings are only printed once per config\n  // to not pollute the console log.\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged((a, b) => {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n\n  /**\n   * Returns an observable with the last page slot above-the-fold\n   * for the given pageTemplate / breakpoint.\n   *\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\n   */\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\n    return this.breakpointService.breakpoint$.pipe(\n      map(breakpoint => {\n        if (!this.config.layoutSlots) {\n          // no layout config available\n          return null;\n        }\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\n        const config = this.getResponsiveSlotConfig(\n          <LayoutSlotConfig>pageTemplateConfig,\n          'pageFold',\n          breakpoint\n        );\n        return config ? config.pageFold : null;\n      })\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      const pageSlots = Object.keys(page.slots);\n      return config.slots.filter(slot => pageSlots.includes(slot));\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter(page => !!page));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter(page => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuratoin\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!layoutSlotConfig || !breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // tslint:disable-next-line: no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n  readonly templateName$: Observable<string> = this.pageLayoutService\n    .templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap(section => (section ? of(section) : this.templateName$)),\n    tap(name => {\n      this.styleClass = name;\n    })\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap(section => this.pageLayoutService.getSlots(section))\n  );\n\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\n    switchMap(templateName =>\n      this.pageLayoutService.getPageFoldSlot(templateName)\n    ),\n    distinctUntilChanged()\n  );\n\n  private currentClass;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private pageLayoutService: PageLayoutService\n  ) {}\n\n  set styleClass(cls: string) {\n    if (this.currentClass) {\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\n    }\n    this.renderer.addClass(this.el.nativeElement, cls);\n    this.currentClass = cls;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsMappingService } from './cms-mapping.service';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsRoutesService {\n  constructor(private router: Router, private cmsMapping: CmsMappingService) {}\n\n  cmsRouteExist(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean {\n    const componentRoutes = this.cmsMapping.getRoutesForComponents(\n      componentTypes\n    );\n    if (componentRoutes.length) {\n      if (this.updateRouting(pageContext, currentPageLabel, componentRoutes)) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(\n    pageContext: PageContext,\n    pageLabel: string,\n    routes: Route[]\n  ): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageLabel.startsWith('/') &&\n      pageLabel.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageLabel.substr(1),\n        component: PageLayoutComponent,\n        children: routes,\n        data: {\n          cxCmsRouteContext: {\n            type: pageContext.type,\n            id: pageLabel,\n          },\n        },\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  Page,\n  PageContext,\n  PageType,\n  ProtectedRoutesGuard,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  first,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    routingService: RoutingService,\n    cmsService: CmsService,\n    cmsRoutes: CmsRoutesService,\n    cmsI18n: CmsI18nService,\n    cmsGuards: CmsGuardsService,\n    semanticPathService: SemanticPathService,\n    protectedRoutesGuard: ProtectedRoutesGuard // tslint:disable-line\n  );\n\n  /**\n   * @deprecated since version 1.2.0\n   * Use constructor with more dependencies and make them all required.\n   *\n   * TODO(issue:4646) deprecated since version 1.2.0\n   */\n  constructor(\n    routingService: RoutingService,\n    cmsService: CmsService,\n    cmsRoutes: CmsRoutesService,\n    cmsI18n: CmsI18nService,\n    cmsGuards: CmsGuardsService,\n    semanticPathService: SemanticPathService\n  );\n  constructor(\n    // expose as `protected` only services from public API:\n    protected routingService: RoutingService,\n    protected cmsService: CmsService,\n    private cmsRoutes: CmsRoutesService,\n    private cmsI18n: CmsI18nService,\n    private cmsGuards: CmsGuardsService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutesGuard?: ProtectedRoutesGuard\n  ) {}\n\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    /**\n     * TODO(issue:4646) Expect that `ProtectedRoutesGuard` dependency is required (remove `if` logic)\n     */\n    return this.protectedRoutesGuard\n      ? this.protectedRoutesGuard\n          .canActivate(route)\n          .pipe(\n            switchMap(result =>\n              result ? this.getCmsPage(route, state) : of(result)\n            )\n          )\n      : this.getCmsPage(route, state);\n  }\n\n  private getCmsPage(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.routingService.getNextPageContext().pipe(\n      switchMap(pageContext =>\n        this.cmsService\n          .getPage(pageContext, true)\n          .pipe(first(), withLatestFrom(of(pageContext)))\n      ),\n      switchMap(([pageData, pageContext]) =>\n        pageData\n          ? this.resolveCmsPageLogic(pageContext, pageData, route, state)\n          : this.handleNotFoundPage(pageContext, route, state)\n      )\n    );\n  }\n\n  private resolveCmsPageLogic(\n    pageContext: PageContext,\n    pageData: Page,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      take(1),\n      switchMap(componentTypes =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadChunksForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\n        if (\n          canActivate === true &&\n          !route.data.cxCmsRouteContext &&\n          !this.cmsRoutes.cmsRouteExist(pageLabel)\n        ) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url,\n            pageLabel\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  private handleNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\n      switchMap(notFoundPage => {\n        if (notFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap(notFoundIndex => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n            }),\n            switchMap(notFoundIndex =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter(index => index === notFoundIndex)\n              )\n            ),\n            switchMap(() =>\n              this.resolveCmsPageLogic(pageContext, notFoundPage, route, state)\n            )\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService<T = TemplateRef<any>> {\n  private templatesRefs = new Map<string, T[]>();\n  private templatesRefsBefore = new Map<string, T[]>();\n  private templatesRefsAfter = new Map<string, T[]>();\n\n  /**\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\n   * The UI position where this template or ComponentFactory is inserted is given by a\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\n   * is either before or after, or replaces the entire UI.\n   *\n   * @param outlet the UI location represented by a string\n   * @param template the `TemplateRef` that will be used to insert UI\n   * @param position the `OutletPosition` in the UI\n   */\n  add(outlet: string, template: T, position?: OutletPosition): void;\n  /**\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\n   */\n  add(\n    outlet: string,\n    // tslint:disable-next-line: unified-signatures\n    factory: T,\n    position?: OutletPosition\n  ): void;\n  /**\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\n   */\n  add(\n    outlet: string,\n    templateOrFactory: T,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    if (position === OutletPosition.BEFORE) {\n      this.store(this.templatesRefsBefore, outlet, templateOrFactory);\n    }\n    if (position === OutletPosition.REPLACE) {\n      this.store(this.templatesRefs, outlet, templateOrFactory);\n    }\n    if (position === OutletPosition.AFTER) {\n      this.store(this.templatesRefsAfter, outlet, templateOrFactory);\n    }\n  }\n\n  /**\n   *\n   * Returns a single object or multiple objects for the given outlet reference,\n   * depending on the `stacked` argument.\n   *\n   * @param outlet The outlet reference\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\n   * @param stacked Indicates whether an array of outlet components is returned\n   */\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    stacked = AVOID_STACKED_OUTLETS\n  ): T[] | T {\n    let templateRef: T[];\n    switch (position) {\n      case OutletPosition.BEFORE:\n        templateRef = this.templatesRefsBefore.get(outlet);\n        break;\n      case OutletPosition.AFTER:\n        templateRef = this.templatesRefsAfter.get(outlet);\n        break;\n      default:\n        templateRef = this.templatesRefs.get(outlet);\n    }\n    if (templateRef && !stacked) {\n      return templateRef[0];\n    }\n    return templateRef;\n  }\n\n  private store(store: Map<string, T[]>, outlet: string, value: T) {\n    const existing = store.get(outlet) || [];\n    const newValue: T[] = existing.concat([value]);\n    store.set(outlet, newValue);\n  }\n}\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\n\n/**\n * The IntersectionService uses the native IntersectionObserver (v2), which\n * can be used to implement pre-loading and deferred loading of DOM content.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntersectionService {\n  constructor(protected config: LayoutConfig) {}\n\n  /**\n   * Returns an Observable that emits only once a boolean value whenever\n   * the given element has shown in the view port.\n   *\n   * The returned obervable will only emit the first value. The\n   * observable must be cleaned up either way, since the value might never emit; it\n   *  depends on whether the element appears in the view port.\n   */\n  isIntersected(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    return this.intersects(element, options).pipe(first(v => v === true));\n  }\n\n  /**\n   * Indicates whenever the element intersects the view port. An optional margin\n   * is used to intersects before the element shows up in the viewport.\n   * A value is emitted each time the element intersects.\n   *\n   * This is private for now, but could be exposed as a public API\n   * to introduce additional (css) render effects to the UI.\n   */\n  private intersects(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    const elementVisible$ = new Observable(observer => {\n      const rootMargin = this.getRootMargin(options);\n      const intersectOptions = { rootMargin };\n      const intersectionObserver = new IntersectionObserver(entries => {\n        observer.next(entries);\n      }, intersectOptions);\n      intersectionObserver.observe(element);\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    }).pipe(\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\n      distinctUntilChanged()\n    );\n\n    return elementVisible$;\n  }\n\n  private getRootMargin(options?: IntersectionOptions) {\n    if (options.rootMargin) {\n      return options.rootMargin;\n    }\n    const layoutConfig = this.config as LayoutConfig;\n    if (\n      layoutConfig.deferredLoading &&\n      layoutConfig.deferredLoading.intersectionMargin\n    ) {\n      return layoutConfig.deferredLoading.intersectionMargin;\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\nimport { IntersectionService } from './intersection.service';\n\n/**\n * The defer loading serivce is used to defer loading of DOM elements\n * until the elements are required for the user experience.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeferLoaderService {\n  globalLoadStrategy: DeferLoadingStrategy;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected config: LayoutConfig,\n    protected intersectionService: IntersectionService\n  ) {\n    this.globalLoadStrategy = config.deferredLoading\n      ? config.deferredLoading.strategy\n      : DeferLoadingStrategy.INSTANT;\n  }\n\n  /**\n   * Defer loading till the element intersects the viewport.\n   *\n   * We evalutes whether we instantly load the element for different reasons:\n   * - we run in SSR mode\n   * - there's no global strategy given\n   * - the global loading strategy is set to INSTANT loading,\n   *   and the loading strategy in the given is not set to DEFER\n   * - the loading strategy in the given options is set to INSTANT\n   */\n  load(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\n      return of(true);\n    } else {\n      return this.intersectionService.isIntersected(element, options);\n    }\n  }\n\n  private shouldLoadInstantly(\n    elementLoadingStrategy: DeferLoadingStrategy\n  ): boolean {\n    return (\n      isPlatformServer(this.platformId) ||\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\n    );\n  }\n}\n","import {\n  ComponentFactory,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\nimport { OutletPosition, USE_STACKED_OUTLETS } from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective implements OnDestroy, OnChanges {\n  @Input() cxOutlet: string;\n\n  @Input() cxOutletContext: any;\n\n  /**\n   * Defers loading options for the the templates of this outlet.\n   */\n  @Input() cxOutletDefer: IntersectionOptions;\n\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\n\n  subscription = new Subscription();\n\n  constructor(\n    vcr: ViewContainerRef,\n    templateRef: TemplateRef<any>,\n    outletService: OutletService<TemplateRef<any> | ComponentFactory<any>>,\n    // tslint:disable-next-line: unified-signatures\n    intersectionService: DeferLoaderService\n  );\n  /**\n   * @deprecated since version 1.4\n   * Use constructor(vcr: ViewContainerRef, templateRef: TemplateRef<any>, outletService: OutletService<TemplateRef<any> | ComponentFactory<any>>, intersectionService?: IntersectionService) instead\n   */\n  constructor(\n    vcr: ViewContainerRef,\n    templateRef: TemplateRef<any>,\n    outletService: OutletService<TemplateRef<any> | ComponentFactory<any>>\n  );\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService<\n      TemplateRef<any> | ComponentFactory<any>\n    >,\n    private deferLoaderService?: DeferLoaderService\n  ) {}\n\n  private initializeOutlet(): void {\n    this.vcr.clear();\n    this.subscription.unsubscribe();\n    this.subscription = new Subscription();\n\n    if (this.cxOutletDefer) {\n      this.deferLoading();\n    } else {\n      this.render();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.cxOutlet) {\n      this.initializeOutlet();\n    }\n  }\n\n  private deferLoading(): void {\n    this.loaded.emit(false);\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\n    // Although the deferLoaderService might emit only once, as long as the hostElement\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\n    // the subscription on destroy.\n    this.subscription.add(\n      this.deferLoaderService\n        .load(hostElement, this.cxOutletDefer)\n        .subscribe(() => {\n          this.render();\n          this.loaded.emit(true);\n        })\n    );\n  }\n\n  private render() {\n    this.renderOutlet(OutletPosition.BEFORE);\n    this.renderOutlet(OutletPosition.REPLACE);\n    this.renderOutlet(OutletPosition.AFTER);\n  }\n\n  private renderOutlet(position: OutletPosition): void {\n    let templates: any[] = <any[]>(\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\n    );\n\n    if (!templates && position === OutletPosition.REPLACE) {\n      templates = [this.templateRef];\n    }\n\n    // Just in case someone extended the `OutletService` and\n    // returns a singular object.\n    if (!Array.isArray(templates)) {\n      templates = [templates];\n    }\n\n    templates.forEach(obj => {\n      this.create(obj);\n    });\n  }\n\n  private create(tmplOrFactory: any): void {\n    if (tmplOrFactory instanceof ComponentFactory) {\n      this.vcr.createComponent(tmplOrFactory);\n    } else if (tmplOrFactory instanceof TemplateRef) {\n      const view = this.vcr.createEmbeddedView(\n        <TemplateRef<any>>tmplOrFactory,\n        {\n          $implicit: this.cxOutletContext,\n        }\n      );\n\n      // we do not know if content is created dynamically or not\n      // so we apply change detection anyway\n      view.markForCheck();\n    }\n  }\n\n  /**\n   * Returns the closest `HtmlElement`, by iterating over the\n   * parent elements of the given element.\n   *\n   * @param element\n   */\n  private getHostElement(element: Element): HTMLElement {\n    if (element instanceof HTMLElement) {\n      return element;\n    }\n    return this.getHostElement(element.parentElement);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsConfig,\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DeferLoadingStrategy,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\n\n@Component({\n  selector: 'cx-page-slot,[cx-page-slot]',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent implements OnInit, OnDestroy {\n  /**\n   * The position is used to find the CMS page slot (and optional outlet)\n   * that is rendered in the PageSlotComponent. Furthermore, the position\n   * is added as a CSS class name to the host element.\n   */\n  @Input()\n  set position(position: string) {\n    this.position$.next(position);\n    this.renderer.addClass(this.hostElement.nativeElement, position);\n  }\n  get position(): string {\n    return this.position$.value;\n  }\n\n  @HostBinding('class.cx-pending') isPending = true;\n  @HostBinding('class.has-components') hasComponents = false;\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\n\n  private pendingComponentCount: number;\n\n  readonly position$ = new BehaviorSubject<string>(undefined);\n\n  /**\n   * observable with `ContentSlotData` for the current position\n   *\n   * @deprecated we'll stop supporting this property in 2.0 as\n   * it is not used separately.\n   */\n  readonly slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap(position => this.cmsService.getContentSlot(position)),\n    tap(slot => this.addSmartEditSlotClass(slot))\n  );\n\n  readonly components$: Observable<\n    ContentSlotComponentData[]\n  > = this.slot$.pipe(\n    map(slot => (slot && slot.components ? slot.components : [])),\n    distinctUntilChanged(\n      (a, b) =>\n        a.length === b.length && !a.find((el, index) => el.uid !== b[index].uid)\n    )\n  );\n\n  private subscription = new Subscription();\n\n  constructor(\n    cmsService: CmsService,\n    dynamicAttributeService: DynamicAttributeService,\n    renderer: Renderer2,\n    hostElement: ElementRef,\n    // tslint:disable-next-line:unified-signatures\n    config: CmsConfig\n  );\n  /**\n   * @deprecated since version 1.4\n   * Use constructor(cmsService: CmsService, dynamicAttributeService: DynamicAttributeService, renderer: Renderer2, hostElement: ElementRef, config?: CmsConfig) instead\n   */\n  constructor(\n    cmsService: CmsService,\n    dynamicAttributeService: DynamicAttributeService,\n    renderer: Renderer2,\n    hostElement: ElementRef\n  );\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected hostElement: ElementRef,\n    protected config?: CmsConfig\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.components$.subscribe(components => {\n        this.hasComponents = components && components.length > 0;\n        this.pendingComponentCount = components ? components.length : 0;\n        this.isPending = this.pendingComponentCount > 0;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Is triggered when a component is added to the view.\n   * We use this information to dropthe `is-pending` class from the page slot\n   * when all nested components have been added.\n   */\n  isLoaded(loadState: boolean) {\n    if (loadState) {\n      this.pendingComponentCount--;\n    }\n    this.isPending = this.pendingComponentCount > 0;\n  }\n\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\n    const deferLoading = this.getDeferLoadingStrategy(componentType);\n    return { deferLoading };\n  }\n\n  /**\n   * The `DeferLoadingStrategy` indicates whether component rendering\n   * should be deferred.\n   */\n  private getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\n    if (this.config) {\n      return ((this.config as CmsConfig).cmsComponents[componentType] || {})\n        .deferLoading;\n    }\n  }\n\n  private addSmartEditSlotClass(slot): void {\n    if (slot && this.cmsService.isLaunchInSmartEdit()) {\n      this.addSmartEditContract(slot);\n    }\n  }\n\n  private addSmartEditContract(slot: ContentSlotData): void {\n    this.dynamicAttributeService.addDynamicAttributes(\n      slot.properties,\n      this.hostElement.nativeElement,\n      this.renderer\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  providers: [],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageLayoutService } from './page-layout.service';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent],\n  providers: [PageLayoutService],\n  exports: [PageLayoutComponent],\n})\nexport class PageLayoutModule {}\n","export abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable()\nexport class AddToHomeScreenService {\n  private deferredEvent: any;\n\n  private canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    private config: PWAModuleConfig,\n    private globalMessageService: GlobalMessageService,\n    private winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        event => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ServiceWorkerModule.register('/ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultPWAModuleConfig),\n    { provide: PWAModuleConfig, useExisting: Config },\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n    AddToHomeScreenService,\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector) {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: { paths: ['login'], protected: false },\n  register: { paths: ['login/register'], protected: false },\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\n  resetPassword: { paths: ['login/pw/change'], protected: false },\n  logout: { paths: ['logout'] },\n  checkoutLogin: { paths: ['checkout-login'] },\n\n  checkout: { paths: ['checkout'] },\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\n  orderConfirmation: { paths: ['order-confirmation'] },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  orders: {\n    paths: ['my-account/orders'],\n  },\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderGuest: {\n    paths: ['guest/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturn: {\n    paths: ['my-account/order/return/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturnConfirmation: {\n    paths: ['my-account/order/return/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancel: {\n    paths: ['my-account/order/cancel/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancelConfirmation: {\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  returnRequestDetails: {\n    paths: ['my-account/return-request/:returnCode'],\n    paramsMapping: { returnCode: 'rma' },\n  },\n  coupons: { paths: ['my-account/coupons'] },\n  couponClaim: {\n    paths: ['my-account/coupon/claim/:couponCode'],\n    paramsMapping: { couponCode: 'code' },\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function getSuffixUrlMatcher({\n  marker,\n  paramName,\n  precedingParamName,\n}: {\n  marker: string;\n  paramName: string;\n  precedingParamName?: string;\n}) {\n  precedingParamName = precedingParamName || 'param';\n  const matcher = function suffixUrlMatcher(\n    segments: UrlSegment[]\n  ): UrlMatchResult | null {\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n    if (markerIndex === -1 || isMarkerLastSegment) {\n      return null;\n    }\n\n    const paramIndex = markerIndex + 1;\n    const posParams: { [name: string]: UrlSegment } = {\n      [paramName]: segments[paramIndex],\n    };\n\n    for (let i = 0; i < markerIndex; i++) {\n      posParams[`${precedingParamName}${i}`] = segments[i];\n    }\n\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\n  };\n\n  if (isDevMode()) {\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\n  }\n\n  return matcher;\n}\n\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { Injectable } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  init() {\n    this.pageMetaService\n      .getMeta()\n      .pipe(filter(Boolean))\n      .subscribe((meta: PageMeta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\n  }\n\n  protected set title(title: string) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string) {\n    this.addTag({ name: 'description', content: value });\n  }\n\n  protected set image(imageUrl: string) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[]) {\n    if (value) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  protected addTag(meta: MetaDefinition) {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { WindowRef, LanguageService } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n) {\n  const result = () => {\n    languageService.getActive().subscribe(lang => {\n      winRef.document.documentElement.lang = lang;\n    });\n  };\n  return result;\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { SchemaBuilder } from './builders/schema.interface';\nimport { SCHEMA_BUILDER } from './builders/tokens';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StructuredDataFactory {\n  constructor(\n    private scriptBuilder: JsonLdScriptFactory,\n    @Optional()\n    @Inject(SCHEMA_BUILDER)\n    private builders: SchemaBuilder[]\n  ) {}\n\n  build() {\n    this.collectSchemas().subscribe((schema: {}[]) => {\n      this.scriptBuilder.build(schema);\n    });\n  }\n\n  private collectSchemas(): Observable<any[]> {\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\n      return of();\n    }\n    return combineLatest(this.builders.map(builder => builder.build())).pipe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import { Injectable } from '@angular/core';\nimport { PageMeta, PageMetaService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaBuilder } from '../schema.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\n  constructor(protected pageMetaService: PageMetaService) {}\n\n  build(): Observable<any> {\n    return this.pageMetaService\n      .getMeta()\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\n  }\n\n  protected collect(pageMeta: PageMeta): any {\n    if (!pageMeta?.breadcrumbs) {\n      return;\n    }\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@id': crumb.link,\n          name: crumb.label,\n        },\n      };\n    });\n\n    if (pageMeta.title) {\n      crumbs.push({\n        '@type': 'ListItem',\n        position: crumbs.length + 1,\n        item: {\n          '@id': pageMeta.title,\n          name: pageMeta.title,\n        },\n      });\n    }\n\n    return {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: crumbs,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product reviews, see https://schema.org/Review.\n * The data includes the aggregated product rating and the individual reviews.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\n  constructor(private reviewService: ProductReviewService) {}\n\n  build(product: Product): Observable<any> {\n    return this.reviewService.getByProductCode(product.code).pipe(\n      filter(Boolean),\n      map((reviews: Review[]) => {\n        return {\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\n          review: reviews.map(review => this.buildReviews(review)),\n        };\n      })\n    );\n  }\n\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\n    const aggregated: any = {\n      '@type': 'AggregateRating',\n    };\n    if (product.averageRating) {\n      aggregated.ratingValue = product.averageRating;\n    }\n    if (reviews) {\n      aggregated.ratingCount = reviews.filter(rev => !!rev.rating).length;\n      aggregated.reviewCount = reviews.filter(rev => !!rev.comment).length;\n    }\n    return aggregated;\n  }\n\n  private buildReviews(review: Review) {\n    const reviewSchema: any = {\n      '@type': 'review',\n    };\n\n    if (review.principal && review.principal.name) {\n      reviewSchema.author = review.principal.name;\n    }\n    if (review.date) {\n      const date = new Date(review.date);\n      reviewSchema.datePublished = `${date.getFullYear()}-${date.getMonth() +\n        1}-${date.getDate()}`;\n    }\n    if (review.headline) {\n      reviewSchema.name = review.headline;\n    }\n    if (review.comment) {\n      reviewSchema.description = review.comment;\n    }\n    if (review.rating) {\n      reviewSchema.reviewRating = {\n        '@type': 'Rating',\n        ratingValue: review.rating.toString(),\n      };\n    }\n\n    return reviewSchema;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductScope,\n  ProductService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\n\n  /**\n   * Will emit current product or null, if there is no current product (i.e. we are not on PDP)\n   *\n   * @param scopes\n   */\n  getProduct(\n    scopes?: (ProductScope | string)[] | ProductScope | string\n  ): Observable<Product | null> {\n    return this.routingService.getRouterState().pipe(\n      map(state => state.state.params['productCode']),\n      switchMap((productCode: string) => {\n        return productCode\n          ? this.productService.get(\n              productCode,\n              scopes || this.DEFAULT_PRODUCT_SCOPE\n            )\n          : of(null);\n      }),\n      filter(x => x !== undefined),\n      distinctUntilChanged()\n    );\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\n\n/**\n * Adds the minimal structured data for the product, see https://schema.org/product.\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\n * using the `JSONLD_PRODUCT_BUILDER` token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSchemaBuilder implements SchemaBuilder {\n  constructor(\n    private currentProduct: CurrentProductService,\n    @Optional()\n    @Inject(JSONLD_PRODUCT_BUILDER)\n    protected builders: JsonLdBuilder<Product>[]\n  ) {}\n\n  build(): Observable<any> {\n    return this.currentProduct.getProduct().pipe(\n      switchMap((product: Product) => {\n        if (product) {\n          return combineLatest(this.collect(product)).pipe(\n            map((res: {}[]) => Object.assign({}, ...res))\n          );\n        }\n        return of({});\n      })\n    );\n  }\n\n  protected collect(product: Product): Observable<any>[] {\n    if (!product || !product.code) {\n      return [];\n    }\n    const builders = this.builders\n      ? this.builders.map(builder => builder.build(product))\n      : [];\n    return [\n      of({\n        '@context': 'http://schema.org',\n        '@type': 'Product',\n      }),\n      ...builders,\n    ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Injectable } from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmComponentService {\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected routingService: RoutingService,\n    protected winRef: WindowRef\n  ) {}\n\n  logoutCustomerSupportAgentAndCustomer(): void {\n    this.authService\n      .getUserToken()\n      .pipe(take(1))\n      .subscribe(token => {\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\n          this.logoutCustomer();\n        }\n        this.asmAuthService.logoutCustomerSupportAgent();\n      });\n  }\n\n  logoutCustomer(): void {\n    this.authService.logout();\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\n    return this.authService\n      .getUserToken()\n      .pipe(\n        mergeMap(userToken =>\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\n        )\n      );\n  }\n\n  /**\n   * We're currently only removing the persisted storage in the browser\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\n   * optimsiations we could think of:\n   * - drop the `asm` parameter from the URL, in case it's still there\n   * - remove the generated UI from the DOM (outlets currently do not support this)\n   */\n  unload() {\n    if (this.winRef.localStorage) {\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\n    }\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  User,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-main-ui',\n  templateUrl: './asm-main-ui.component.html',\n  styleUrls: ['./asm-main-ui.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmMainUiComponent implements OnInit {\n  csAgentToken$: Observable<UserToken>;\n  csAgentTokenLoading$: Observable<boolean>;\n  customer$: Observable<User>;\n\n  @HostBinding('class.hidden') disabled = false;\n\n  private startingCustomerSession = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected userService: UserService,\n    protected asmComponentService: AsmComponentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService\n  ) {}\n\n  ngOnInit(): void {\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\n    this.customer$ = this.authService.getUserToken().pipe(\n      switchMap(token => {\n        if (token && !!token.access_token) {\n          this.handleCustomerSessionStartRedirection(token);\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\n    if (\n      this.startingCustomerSession &&\n      this.asmAuthService.isCustomerEmulationToken(token)\n    ) {\n      this.startingCustomerSession = false;\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n      this.routingService.go('/');\n    }\n  }\n\n  loginCustomerSupportAgent({\n    userId,\n    password,\n  }: {\n    userId: string;\n    password: string;\n  }): void {\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\n  }\n\n  logout(): void {\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n  }\n\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\n    this.asmAuthService\n      .getCustomerSupportAgentToken()\n      .pipe(take(1))\n      .subscribe(customerSupportAgentToken =>\n        this.asmAuthService.startCustomerEmulationSession(\n          customerSupportAgentToken,\n          customerId\n        )\n      )\n      .unsubscribe();\n    this.startingCustomerSession = true;\n  }\n\n  hideUi(): void {\n    this.disabled = true;\n    this.asmComponentService.unload();\n  }\n}\n","import { Location } from '@angular/common';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Injectable,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { OutletPosition, OutletService } from '../../../cms-structure/index';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\nimport { AsmMainUiComponent } from '../asm-main-ui/asm-main-ui.component';\n\n/**\n * The AsmEnablerService is used to enable ASM for those scenario's\n * where it's actually used. This service is added to avoid any polution\n * of the UI and runtime performance for the ordinary production user.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmEnablerService {\n  /** indicates whether the ASM UI has been added already */\n  private isUiAdded = false;\n\n  constructor(\n    protected location: Location,\n    protected winRef: WindowRef,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected outletService: OutletService<ComponentFactory<any>>\n  ) {}\n\n  /**\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\n   * existence of a URL parameter or previous usage given by local storage.\n   */\n  load(): void {\n    if (this.isEnabled()) {\n      this.addUi();\n    }\n  }\n\n  /**\n   * Indicates whether the ASM module is enabled.\n   */\n  isEnabled(): boolean {\n    if (this.isLaunched() && !this.isUsedBefore()) {\n      if (this.winRef.localStorage) {\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\n      }\n    }\n    return this.isLaunched() || this.isUsedBefore();\n  }\n\n  /**\n   * Indicates whether ASM is launched through the URL,\n   * using the asm flag in the URL.\n   */\n  private isLaunched(): boolean {\n    const params = this.location.path().split('?')[1];\n    return params && params.split('&').includes('asm=true');\n  }\n\n  /**\n   * Evaluates local storage where we persist the usage of ASM.\n   */\n  private isUsedBefore(): boolean {\n    return (\n      this.winRef.localStorage &&\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\n    );\n  }\n\n  /**\n   * Adds the ASM UI by using the `cx-storefront` outlet.\n   */\n  private addUi(): void {\n    if (this.isUiAdded) {\n      return;\n    }\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      AsmMainUiComponent\n    );\n    this.outletService.add('cx-storefront', factory, OutletPosition.BEFORE);\n    this.isUiAdded = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { PageComponentModule } from '../../cms-structure/page/component/page-component.module';\nimport { AsmEnablerService } from './services/asm-enabler.service';\n\n/**\n * The ASM loader module takes care of loading the ASM UI\n * only in case there's a reason to do so.\n */\n@NgModule({\n  imports: [CommonModule, PageComponentModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: asmFactory,\n      deps: [AsmEnablerService],\n      multi: true,\n    },\n  ],\n})\nexport class AsmLoaderModule {}\n\n/**\n *\n * We do not like to block the UI, which is why we delgate loading of ASM\n * to a real component; the router and state aren't available in an optimized\n * way during the APP_INITIALIZER.\n */\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\n  const isReady = () => {\n    asmEnablerService.load();\n  };\n  return isReady;\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-session-timer',\n  templateUrl: './asm-session-timer.component.html',\n  styleUrls: ['./asm-session-timer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private interval: any;\n  private maxStartDelayInSeconds = 60000;\n  timeLeft: number;\n\n  constructor(\n    private config: AsmConfig,\n    private asmComponentService: AsmComponentService,\n    private authService: AuthService,\n    private routingService: RoutingService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.timeLeft = this.getTimerStartDelayInSeconds();\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        clearInterval(this.interval);\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n      }\n      this.changeDetectorRef.markForCheck();\n    }, 1000);\n\n    this.resetOnNavigate();\n    this.resetOnCustomerSessionChange();\n  }\n\n  private resetOnNavigate(): void {\n    this.subscriptions.add(\n      this.routingService.isNavigating().subscribe(isNavigating => {\n        if (isNavigating) {\n          this.resetTimer();\n        }\n      })\n    );\n  }\n\n  private resetOnCustomerSessionChange(): void {\n    this.subscriptions.add(\n      this.authService\n        .getOccUserId()\n        .pipe(distinctUntilChanged())\n        .subscribe(_ => this.resetTimer())\n    );\n  }\n\n  resetTimer(): void {\n    if (this.timeLeft > 0) {\n      this.timeLeft = this.getTimerStartDelayInSeconds();\n    }\n  }\n\n  private getTimerStartDelayInSeconds(): number {\n    if (\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\n      this.maxStartDelayInSeconds\n    ) {\n      return this.maxStartDelayInSeconds;\n    } else {\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import { FormGroup, AbstractControl } from '@angular/forms';\n\n/**\n * Utility class when working with forms.\n */\nexport class FormUtils {\n  /**\n   *\n   * Validates a field of the given form group\n   *\n   * If the field is NOT valid (or invalid), the method returns `true`.\n   *\n   * @param form Form with fields to check\n   * @param formControlName Name of the form field to check\n   * @param submitted Has the form been submitted\n   */\n  static isNotValidField(\n    form: FormGroup,\n    formControlName: string,\n    submitted: boolean\n  ): boolean {\n    const control: AbstractControl = form.get(formControlName);\n    return control.invalid && (submitted || (control.touched && control.dirty));\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormUtils } from '../../../shared/utils/forms/form-utils';\n\n@Component({\n  selector: 'cx-csagent-login-form',\n  templateUrl: './csagent-login-form.component.html',\n  styleUrls: ['./csagent-login-form.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CSAgentLoginFormComponent implements OnInit {\n  form: FormGroup;\n  private submitClicked = false;\n\n  @Input()\n  csAgentTokenLoading = false;\n\n  @Output()\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userId: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submitEvent.emit({\n      userId: this.form.controls.userId.value,\n      password: this.form.controls.password.value,\n    });\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { User, UserService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-customer-emulation',\n  templateUrl: './customer-emulation.component.html',\n  styleUrls: ['./customer-emulation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\n  customer: User;\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  constructor(\n    protected asmComponentService: AsmComponentService,\n    protected userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.userService.get().subscribe(user => (this.customer = user))\n    );\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\n  }\n\n  logoutCustomer() {\n    this.asmComponentService.logoutCustomer();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  AsmConfig,\n  AsmService,\n  CustomerSearchPage,\n  User,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-customer-selection',\n  templateUrl: './customer-selection.component.html',\n  styleUrls: ['./customer-selection.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '(document:click)': 'onDocumentClick($event)',\n  },\n})\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  private subscription = new Subscription();\n  searchResultsLoading$: Observable<boolean>;\n  searchResults: Observable<CustomerSearchPage>;\n  selectedCustomer: User;\n\n  @Output()\n  submitEvent = new EventEmitter<{ customerId: string }>();\n\n  @ViewChild('resultList') resultList: ElementRef;\n  @ViewChild('searchTerm') searchTerm: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private asmService: AsmService,\n    private config: AsmConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      searchTerm: [''],\n    });\n    this.asmService.customerSearchReset();\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\n    this.searchResults = this.asmService.getCustomerSearchResults();\n\n    this.subscription.add(\n      this.form.controls.searchTerm.valueChanges\n        .pipe(debounceTime(300))\n        .subscribe(searchTermValue => {\n          this.handleSearchTerm(searchTermValue);\n        })\n    );\n  }\n\n  private handleSearchTerm(searchTermValue: string) {\n    if (\n      Boolean(this.selectedCustomer) &&\n      searchTermValue !== this.selectedCustomer.name\n    ) {\n      this.selectedCustomer = undefined;\n    }\n    if (Boolean(this.selectedCustomer)) {\n      return;\n    }\n    this.asmService.customerSearchReset();\n    if (searchTermValue.trim().length >= 3) {\n      this.asmService.customerSearch({\n        query: searchTermValue,\n        pageSize: this.config.asm.customerSearch.maxResults,\n      });\n    }\n  }\n\n  selectCustomerFromList(customer: User) {\n    this.selectedCustomer = customer;\n    this.form.controls.searchTerm.setValue(this.selectedCustomer.name);\n    this.asmService.customerSearchReset();\n  }\n\n  onSubmit(): void {\n    if (Boolean(this.selectedCustomer)) {\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\n    }\n  }\n\n  onDocumentClick(event) {\n    if (Boolean(this.resultList)) {\n      if (\n        this.resultList.nativeElement.contains(event.target) ||\n        this.searchTerm.nativeElement.contains(event.target)\n      ) {\n        return;\n      } else {\n        this.asmService.customerSearchReset();\n      }\n    }\n  }\n\n  closeResults() {\n    this.asmService.customerSearchReset();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.asmService.customerSearchReset();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AsmModule as AsmCoreModule, I18nModule } from '@spartacus/core';\nimport { AsmLoaderModule } from './asm-loader.module';\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    AsmCoreModule.forRoot(),\n    AsmLoaderModule,\n  ],\n  declarations: [\n    AsmMainUiComponent,\n    CSAgentLoginFormComponent,\n    CustomerSelectionComponent,\n    AsmSessionTimerComponent,\n    FormatTimerPipe,\n    CustomerEmulationComponent,\n  ],\n  entryComponents: [AsmMainUiComponent],\n})\nexport class AsmModule {}\n","import { Injectable } from '@angular/core';\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService\n  ) {\n    this.orderCode$ = this.routingService\n      .getRouterState()\n      .pipe(map(routingData => routingData.state.params.orderCode));\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap(orderCode => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CheckoutService,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PromotionService {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected checkoutService: CheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  getOrderPromotions(\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.getOrderPromotionsFromCart();\n      case PromotionLocation.Checkout:\n        return this.getOrderPromotionsFromCheckout();\n      case PromotionLocation.Order:\n        return this.getOrderPromotionsFromOrder();\n      default:\n        return of([]);\n    }\n  }\n\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\n    return this.activeCartService\n      .getActive()\n      .pipe(map(cart => this.getOrderPromotionsFromCartHelper(cart)));\n  }\n\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\n    const potentialPromotions = [];\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\n\n    const appliedPromotions = [];\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\n\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\n    return this.checkoutService\n      .getOrderDetails()\n      .pipe(map(order => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\n    return this.orderDetailsService\n      .getOrderDetails()\n      .pipe(map(order => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\n    const appliedOrderPromotions = [];\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\n\n    return appliedOrderPromotions;\n  }\n\n  getProductPromotionForEntry(\n    item: OrderEntry,\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.activeCartService\n          .getActive()\n          .pipe(\n            map(cart =>\n              this.getProductPromotion(\n                item,\n                cart.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Checkout:\n        return this.checkoutService\n          .getOrderDetails()\n          .pipe(\n            map(order =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Order:\n        return this.orderDetailsService\n          .getOrderDetails()\n          .pipe(\n            map(order =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n    }\n  }\n\n  private getProductPromotion(\n    item: OrderEntry,\n    promotions: PromotionResult[]\n  ): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    if (promotions && promotions.length > 0) {\n      for (const promotion of promotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumedEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumedEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  Cart,\n  ActiveCartService,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n  increment: boolean;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  quantity = 0;\n  modalIsOpen = false;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = new FormGroup({});\n\n  private quantityControl$: Observable<FormControl>;\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: ActiveCartService,\n    protected promotionService: PromotionService\n  ) {}\n  /**\n   * Returns an observable formControl with the quantity of the cartEntry,\n   * but also updates the entry in case of a changed value.\n   * The quantity can be set to zero in order to remove the entry.\n   */\n  getQuantityControl(): Observable<FormControl> {\n    if (!this.quantityControl$) {\n      this.quantityControl$ = this.entry$.pipe(\n        filter(e => !!e),\n        map(entry => this.getFormControl(entry)),\n        switchMap(() =>\n          this.form.valueChanges.pipe(\n            // tslint:disable-next-line:deprecation\n            startWith(null),\n            tap(valueChange => {\n              if (valueChange) {\n                this.cartService.updateEntry(\n                  valueChange.entryNumber,\n                  valueChange.quantity\n                );\n                if (valueChange.quantity === 0) {\n                  this.dismissModal('Removed');\n                }\n              } else {\n                this.form.markAsPristine();\n              }\n            })\n          )\n        ),\n        map(() => <FormControl>this.form.get('quantity'))\n      );\n    }\n    return this.quantityControl$;\n  }\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  private getFormControl(entry: OrderEntry): FormControl {\n    if (!this.form.get('quantity')) {\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\n      this.form.addControl('quantity', quantity);\n\n      const entryNumber = new FormControl(entry.entryNumber);\n      this.form.addControl('entryNumber', entryNumber);\n    }\n    return <FormControl>this.form.get('quantity');\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActiveCartService, OrderEntry, Product } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  /**\n   * As long as we do not support #5026, we require product input, as we need\n   *  a reference to the product model to fetch the stock data.\n   */\n  @Input() product: Product;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock = false;\n  quantity = 1;\n  increment = false;\n  cartEntry$: Observable<OrderEntry>;\n\n  subscription: Subscription;\n\n  addToCartForm = new FormGroup({\n    quantity: new FormControl(1),\n  });\n\n  constructor(\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    private cd: ChangeDetectorRef,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.product) {\n      this.productCode = this.product.code;\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n      this.setStockInfo(this.product);\n      this.cd.markForCheck();\n    } else if (this.productCode) {\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n      // force hasStock and quantity for the time being, as we do not have more info:\n      this.quantity = 1;\n      this.hasStock = true;\n      this.cd.markForCheck();\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(Boolean))\n        .subscribe((product: Product) => {\n          this.productCode = product.code;\n          this.setStockInfo(product);\n          this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  private setStockInfo(product: Product): void {\n    this.quantity = 1;\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n    if (this.hasStock && product.stock.stockLevel) {\n      this.maxQuantity = product.stock.stockLevel;\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    const quantity = this.addToCartForm.get('quantity').value;\n    if (!this.productCode || quantity <= 0) {\n      return;\n    }\n    // check item is already present in the cart\n    // so modal will have proper header text displayed\n    this.activeCartService\n      .getEntry(this.productCode)\n      .subscribe(entry => {\n        if (entry) {\n          this.increment = true;\n        }\n        this.openModal();\n        this.activeCartService.addEntry(this.productCode, quantity);\n        this.increment = false;\n      })\n      .unsubscribe();\n  }\n\n  private openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.entry$ = this.cartEntry$;\n    modalInstance.cart$ = this.activeCartService.getActive();\n    modalInstance.loaded$ = this.activeCartService.isStable();\n    modalInstance.quantity = this.quantity;\n    modalInstance.increment = this.increment;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/** The element attribute used to store the focus state */\nexport const FOCUS_ATTR = 'data-cx-focus';\n/** The element attribute used to store the focus group state */\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\n\nexport const enum MOVE_FOCUS {\n  NEXT = 1,\n  PREV = -1,\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface BaseFocusConfig {}\n\nexport interface VisibleFocusConfig {\n  /**\n   * When set to true, the mouse-focus class is added to the host element,\n   * indicating that the element focus was not caused by the keyboard.\n   */\n  disableMouseFocus?: boolean;\n}\n\nexport interface BlockFocusConfig extends VisibleFocusConfig {\n  block?: boolean;\n}\n\nexport interface PersistFocusConfig extends BlockFocusConfig {\n  /**\n   * A key to maintain the focus of an element in case the component is\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\n   */\n  key?: string;\n\n  /**\n   * Optional group identifier that can be used to persist the focus. This allows\n   * to have separate persisted focus available when the DOM is partially rebuild.\n   */\n  group?: string;\n}\n\nexport interface EscapeFocusConfig extends PersistFocusConfig {\n  focusOnEscape?: boolean;\n  /**\n   * Force an autofocus in case of double-escape\n   */\n  focusOnDoubleEscape?: boolean;\n}\n\nexport interface AutoFocusConfig extends EscapeFocusConfig {\n  /**\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\n   * In case the focus is explicitly set to `true`, the first accessible element\n   * is focussed in case there is no _autofocus_ element found.\n   * If the focus is set to false, autofocus will be disabled completely.\n   *\n   * If a string value is given, the autofocus will be restored based on the persisted\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\n   *\n   * Defaults to `true`.\n   */\n  autofocus?: boolean | string;\n\n  // whenever the target autofocus element is selected by the `skipFocus` selector,\n  // autofocus is ignored.\n  skipFocus?: string;\n}\n\nexport interface TabFocusConfig extends AutoFocusConfig {\n  tab?: boolean | 'scroll' | string;\n}\n\n/**\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\n * for the nested focusable elements. This means that the focus can not\n * \"leave\" the elements. If the last element is focused, the keyboard will\n * navigate to the first element and visa versa.\n */\nexport interface TrapFocusConfig extends TabFocusConfig {\n  /** traps the focus */\n  trap?: boolean | 'start' | 'end';\n}\n\nexport interface LockFocusConfig extends TrapFocusConfig {\n  /**\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\n   */\n  lock?: boolean;\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface FocusConfig extends LockFocusConfig {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseFocusService {}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { BaseFocusConfig } from '../keyboard-focus.model';\nimport { BaseFocusService } from './base-focus.service';\n\n/**\n * Abstract directive that provides a common interface for all focus directives:\n * - Block Focus\n * - Persist Focus\n * - Escape Focus\n * - Auto Focus\n * - Tab Focus\n * - Trap Focus\n * - Lock Focus\n */\n@Directive()\nexport abstract class BaseFocusDirective implements OnInit {\n  /**\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\n   * focus directive.\n   */\n  protected config: BaseFocusConfig;\n\n  /**\n   * A default config can be provided for each directive if a specific focus directive\n   * is used directly. i.e. `<div cxAutoFocus></div>`\n   */\n  protected defaultConfig: BaseFocusConfig = {};\n\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected service: BaseFocusService\n  ) {}\n\n  ngOnInit() {\n    this.setDefaultConfiguration();\n    this.requiredTabindex = -1;\n  }\n\n  /**\n   * Override the (input) config if it undefined or an empty string, with the\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\n   * specific (inherited) defaultConfig will be used.\n   */\n  protected setDefaultConfiguration(): void {\n    if ((!this.config || this.config === '') && this.defaultConfig) {\n      this.config = this.defaultConfig;\n    }\n  }\n\n  /**\n   * Helper method to return the host element for the directive\n   * given by the `elementRef`.\n   */\n  protected get host(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /**\n   * Force a tabindex on the host element if it is _requried_ to make the element\n   * focusable. If the element is focusable by nature or by a given tabindex, the\n   * `tabindex` is not applied.\n   *\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\n   */\n  protected set requiredTabindex(tabindex: number) {\n    if (this.requiresExplicitTabIndex) {\n      this.tabindex = tabindex;\n    }\n  }\n\n  /**\n   * Returns true if the host element does not have a tabindex defined\n   * and it also doesn't get focus by browsers nature (i.e. button or\n   * active link).\n   */\n  protected get requiresExplicitTabIndex(): boolean {\n    return (\n      this.tabindex === undefined &&\n      ['button', 'input', 'select', 'textarea'].indexOf(\n        this.host.tagName.toLowerCase()\n      ) === -1 &&\n      !(\n        this.host.tagName === 'A' &&\n        (this.host.hasAttribute('href') || this.host.hasAttribute('routerlink'))\n      )\n    );\n  }\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\nimport { BaseFocusDirective } from '../base/base-focus.directive';\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\n\n/**\n * Directive implementation that adds a CSS class to the host element\n * when the moused is used to focus an element. As soon as the keyboard\n * is used, the class is removed.\n */\n@Directive() // selector: '[cxVisibleFocus]'\nexport class VisibleFocusDirective extends BaseFocusDirective {\n  protected defaultConfig: VisibleFocusConfig = { disableMouseFocus: true };\n\n  // @Input('cxVisibleFocus')\n  protected config: VisibleFocusConfig;\n\n  /** controls a polyfill class for the lacking focus-visible feature */\n  @HostBinding('class.mouse-focus') mouseFocus = false;\n\n  @HostListener('mousedown') handleMousedown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = true;\n    }\n  }\n\n  @HostListener('keydown') handleKeydown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = false;\n    }\n  }\n\n  protected get shouldFocusVisible(): boolean {\n    return this.config?.disableMouseFocus;\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { BlockFocusConfig } from '../keyboard-focus.model';\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\n\n@Directive()\n// { selector: '[cxBlockFocus]' }\nexport class BlockFocusDirective extends VisibleFocusDirective\n  implements OnInit {\n  protected defaultConfig: BlockFocusConfig = { block: true };\n\n  // @Input('cxBlockFocus')\n  protected config: BlockFocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: BaseFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.config.block) {\n      this.tabindex = -1;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\n\nconst GLOBAL_GROUP = '_g_';\n\n/**\n * Shared service to persist the focus for an element or a group\n * of elements. The persisted element focus can be used to persist\n * the focus for a DOM tree, so that the focus remains after a repaint\n * or reoccurs when a DOM tree is \"unlocked\".\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersistFocusService extends BaseFocusService {\n  // this is going to fail as we have sub services. They will al have their own map.\n  // We must bring this to a singlton map.\n  protected focus = new Map<string, string>();\n\n  get(group?: string): string {\n    return this.focus.get(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Persist the keyboard focus state for the given key. The focus is stored globally\n   * or for the given group.\n   */\n  set(key: string, group?: string) {\n    if (key) {\n      this.focus.set(group || GLOBAL_GROUP, key);\n    }\n  }\n\n  /**\n   * Clears the persisted keyboard focus state globally or for the given group.\n   */\n  clear(group?: string) {\n    this.focus.delete(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Returns the group for the host element based on the configured group or\n   * by the `data-cx-focus-group` attribute stored on the host.\n   */\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { BlockFocusDirective } from '../block/block-focus.directive';\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from './persist-focus.service';\n\n/**\n * Directive that provides persistence of the focused state. This is useful\n * when a group of focusable elements got refocused or even recreated. That\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\n *\n * The focus state is based on a configured _key_, which can be passed in the\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\n *\n * ```html\n * <button cxPersistFocus=\"myKey\"></button>\n * <button cxFocus=\"myKey\"></button>\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\n * ```\n *\n * The focus state can be part of a focus _group_, so that the state is shared\n * and remember for the given group. In order to detect the persistence for a\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\n *\n * ```html\n * <button data-cx-focus=\"myKey\"></button>\n * ```\n *\n * Other keyboard focus directives can read the key to understand whether the element\n * should retrieve focus.\n *\n */\n@Directive() // selector: '[cxPersistFocus]',\nexport class PersistFocusDirective extends BlockFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: PersistFocusConfig = {};\n\n  /**\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\n   * While this could be considered a global key, the likeliness of conflicts\n   * is very small since the key is cleared when the focus is changed.\n   */\n  // @Input('cxPersistFocus')\n  protected config: PersistFocusConfig = {};\n\n  /**\n   * The persistance key is maintained in an element attribute for other\n   * implementations. This is needed to ensure that we can resolve the focus\n   * state in case of a repaint.\n   */\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\n\n  @HostListener('focus', ['$event'])\n  handleFocus(event?: KeyboardEvent) {\n    this.service.set(this.key, this.group);\n\n    event?.preventDefault();\n    event?.stopPropagation();\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: PersistFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.attr = this.key ? this.key : undefined;\n  }\n\n  protected setDefaultConfiguration() {\n    if (typeof this.config === 'string' && this.config !== '') {\n      this.config = { key: this.config };\n    }\n    super.setDefaultConfiguration();\n  }\n\n  /**\n   * Focus the element explicitly if it was focused before.\n   */\n  ngAfterViewInit() {\n    if (this.isPersisted) {\n      this.host.focus({ preventScroll: true });\n    }\n  }\n\n  protected get isPersisted(): boolean {\n    return !!this.key && this.service.get(this.group) === this.key;\n  }\n\n  /**\n   * Returns the key for the host element, which is used to persist the\n   * focus state. This is useful in cases where the DOM is rebuild.\n   */\n  protected get key(): string {\n    return (this.config as PersistFocusConfig)?.key;\n  }\n\n  /**\n   * returns the persistence group (if any) for the focusable elements.\n   */\n  protected get group(): string {\n    return this.service.getPersistenceGroup(\n      this.host,\n      this.config as PersistFocusConfig\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectFocusUtility {\n  /**\n   * Query selectors used to query focusable child elements of the host element.\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\n   */\n  protected focusableSelectors: string[] = [\n    'a[href]',\n    'button',\n    '[tabindex]',\n    'input',\n    'select',\n    'textarea',\n  ];\n\n  // like to leave out the following as we don't use it, and make this list exensible.\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\n  //   `iframe`, // we really don't like iframes...\n  //   `area[href]`, // very debatable!\n\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\n\n  query(host: HTMLElement, selector: string): HTMLElement[] {\n    if (!selector || selector === '') {\n      return [];\n    }\n    return Array.from(\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\n    );\n  }\n\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    const selector =\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\n    // fallback to first focusable\n    return (\n      this.query(host, selector).find(el => !this.isHidden(el)) ||\n      this.findFocusable(host).find(el => Boolean(el))\n    );\n  }\n\n  /**\n   * returns all focusable child elements of the host element. The element selectors\n   * are build from the `focusableSelectors`.\n   *\n   * @param host the `HTMLElement` used to query focusable elements\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\n   * @param invisible indicates whether hidden focusable elements should be returned\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    let suffix = this.focusableSelectorSuffix;\n    if (!locked) {\n      suffix += `:not([tabindex='-1'])`;\n    }\n    const selector = this.focusableSelectors.map(s => (s += suffix)).join(',');\n    return this.query(host, selector).filter(el =>\n      !invisible ? !this.isHidden(el) : Boolean(el)\n    );\n  }\n\n  /**\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\n   *\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\n   * phyisical location on the element itself or any of it's anchestor elements. Those\n   * technique require to work with the _computed styles_, which will cause a performance\n   * downgrade. We don't do this in the standard implementaton.\n   */\n  protected isHidden(el: HTMLElement): boolean {\n    return el.offsetParent === null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from '../persist/persist-focus.service';\nimport { SelectFocusUtility } from '../services/select-focus.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EscapeFocusService extends PersistFocusService {\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\n    super();\n  }\n\n  shouldFocus(config: EscapeFocusConfig): boolean {\n    return !!config?.focusOnEscape;\n  }\n\n  handleEscape(\n    host: HTMLElement,\n    config: EscapeFocusConfig,\n    event: KeyboardEvent\n  ): void {\n    if (this.shouldFocus(config)) {\n      if (host !== event.target) {\n        host.focus({ preventScroll: true });\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        if (config?.focusOnDoubleEscape) {\n          this.selectFocusUtil\n            .findFirstFocusable(host, { autofocus: true })\n            ?.focus();\n        }\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\nimport { EscapeFocusService } from './escape-focus.service';\n\n/**\n * Directive to focus the host element whenever the `escape` key is captured.\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\n * on a tree of elements. Each time the escape key is used, the focus will\n * move up in the DOM tree.\n *\n */\n@Directive() // selector: '[cxEscFocus]',\nexport class EscapeFocusDirective extends PersistFocusDirective\n  implements OnInit {\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\n\n  // @Input('cxEscFocus')\n  protected config: EscapeFocusConfig;\n\n  @Output() esc = new EventEmitter<boolean>();\n\n  /**\n   * Handles the escape key event.\n   * @param event the native keyboard event which contains the escape keydown event\n   */\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    if (this.service.shouldFocus(this.config)) {\n      this.service.handleEscape(this.host, this.config, event);\n    }\n    this.esc.emit(this.service.shouldFocus(this.config));\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: EscapeFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    if (this.service.shouldFocus(this.config)) {\n      this.requiredTabindex = -1;\n    }\n    super.ngOnInit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusService } from '../escape/escape-focus.service';\nimport {\n  AutoFocusConfig,\n  FOCUS_ATTR,\n  PersistFocusConfig,\n} from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutoFocusService extends EscapeFocusService {\n  /**\n   * Returns the first focusable child element of the host element.\n   */\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    if (config?.autofocus === ':host') {\n      return host;\n    } else if (this.hasPersistedFocus(host, config)) {\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\n    } else {\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\n    }\n  }\n\n  /**\n   * Indicates whether any of the focusabe child elements is focused.\n   */\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\n  }\n\n  /**\n   * Returns the element that has a persisted focus state.\n   *\n   * @param host the `HTMLElement` used to query for focusable children\n   * @param group the optional group for the persistent state, to separate different focus\n   *   groups and remain the persistance\n   */\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\n    if (!this.get(group)) {\n      return;\n    }\n    const focussed = Array.from(\n      host.querySelectorAll(\n        `[${FOCUS_ATTR}='${this.get(group)}']`\n      ) as NodeListOf<HTMLElement>\n    );\n    return focussed.length > 0 ? focussed[0] : null;\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\nimport { AutoFocusService } from './auto-focus.service';\n\n/**\n * Directive that focus the first nested _focusable_ element based on state and configuration:\n *\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\n * 4. first focusable element\n * 5. the host element, in case the configured CSS selector is `:host`.\n *\n * Example configurations:\n *\n * `<div cxAutoFocus>[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\n *\n */\n@Directive() // selector: '[cxAutoFocus]'\nexport class AutoFocusDirective extends EscapeFocusDirective\n  implements AfterViewInit {\n  /** The AutoFocusDirective will be using autofocus by default  */\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\n\n  // @Input('cxAutoFocus')\n  protected config: AutoFocusConfig;\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: AutoFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Focus the element explicitly if it was focussed before.\n   */\n  ngAfterViewInit(): void {\n    if (this.shouldAutofocus) {\n      this.handleFocus();\n    }\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\n      super.ngAfterViewInit();\n    }\n  }\n\n  /**\n   * Mimic the focus without setting the actual focus on the host. The first\n   * focusable child element will be focussed.\n   */\n  handleFocus(event?: KeyboardEvent) {\n    if (this.shouldAutofocus) {\n      if (!event?.target || event.target === this.host) {\n        this.firstFocusable?.focus();\n      } else {\n        (event.target as HTMLElement).focus();\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  /**\n   * Helper function to get the first focusable child element\n   */\n  protected get hasPersistedFocus() {\n    return this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Helper function to indicate whether we should use autofocus for the\n   * child elements.\n   */\n  protected get shouldAutofocus(): boolean {\n    return !!this.config?.autofocus;\n  }\n\n  /**\n   * Helper function to get the first focusable child element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get firstFocusable(): HTMLElement {\n    return this.service.findFirstFocusable(this.host, this.config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TabFocusService extends AutoFocusService {\n  /**\n   * Moves to the next (or previous) tab.\n   */\n  moveTab(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS,\n    event: KeyboardEvent\n  ): void {\n    if (config?.tab) {\n      const next =\n        config.tab === 'scroll'\n          ? this.findNextScrollable(host, config, increment)\n          : this.findNext(host, config, increment);\n\n      next?.focus();\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * builds out virtual slides out of the full scrollable area, to allow\n   * for maximum flexibility for the underlying layout without using hardcoded\n   * slide sizes.\n   */\n  protected findNextScrollable(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const active = this.getActiveChild(host, config);\n\n    if (!active) {\n      return;\n    }\n    // slide count\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\n\n    // find current virtual slide\n    const currentVirtualSlide = Math.round(\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\n    );\n\n    let nextVirtualSlide = currentVirtualSlide + increment;\n    if (\n      increment === MOVE_FOCUS.NEXT &&\n      nextVirtualSlide >= virtualSlideCount\n    ) {\n      nextVirtualSlide = 0;\n    }\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\n      nextVirtualSlide = virtualSlideCount - 1;\n    }\n\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\n      tab =>\n        tab.offsetLeft >=\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\n    );\n\n    return firstItemOnNextSlide;\n  }\n\n  protected findNext(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const childs = this.getChildren(host, config);\n    let activeIndex = childs?.findIndex(\n      c => c === this.getActiveChild(host, config)\n    );\n\n    if (!activeIndex || activeIndex === -1) {\n      activeIndex = 0;\n    }\n    activeIndex += increment;\n\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\n      activeIndex = childs.length - 1;\n    }\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\n      activeIndex = 0;\n    }\n    return childs ? childs[activeIndex] : undefined;\n  }\n\n  /**\n   * Returns the active focusable child element. If there's no active\n   * focusable child element, the first focusable child is returned.\n   */\n  protected getActiveChild(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement {\n    const persisted = this.getPersisted(host, config?.group);\n    if (persisted) {\n      return persisted;\n    }\n    const children = this.getChildren(host, config);\n    let index = children.findIndex(tab => this.isActive(tab));\n    if (!index || index === -1) {\n      index = 0;\n    }\n    return children[index];\n  }\n\n  protected getChildren(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement[] {\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\n      return this.selectFocusUtil.query(host, config.tab);\n    } else {\n      return this.findFocusable(host, true);\n    }\n  }\n\n  /**\n   * Returns all focusable child elements of the host element.\n   *\n   * @param host The host element is used to query child focusable elements.\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\n  }\n\n  protected isActive(el: HTMLElement): boolean {\n    const child = document.activeElement;\n    const selector = child.tagName;\n\n    return (\n      el === child ||\n      !!Array.from(el.querySelectorAll(selector)).find(e => e === child)\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from './tab-focus.service';\n\n/**\n * Directive to move the focus of (\"locked\") child elements. This is useful\n * for a nested list of tabs, carousel slides or any group of elements that\n * requires horizontal navigation.\n */\n@Directive() // selector: '[cxTabFocus]'\nexport class TabFocusDirective extends AutoFocusDirective {\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\n  protected defaultConfig: TabFocusConfig = { tab: true };\n\n  // @Input('cxTabFocus')\n  protected config: TabFocusConfig = {};\n\n  @HostListener('keydown.arrowRight', ['$event'])\n  handleNextTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\n    }\n  }\n\n  @HostListener('keydown.arrowLeft', ['$event'])\n  handlePreviousTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TabFocusService\n  ) {\n    super(elementRef, service);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from '../tab/tab-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrapFocusService extends TabFocusService {\n  /**\n   * Indicates whether any of the child elements of the host are focusable.\n   *\n   * @param host `HTMLElement` that is used to query the focusable elements.\n   */\n  hasFocusableChildren(host: HTMLElement): boolean {\n    return this.findFocusable(host).length > 0;\n  }\n\n  /**\n   * Focus the next or previous element of all available focusable elements.\n   * The focus is _trapped_ in case there's no next or previous available element.\n   * The focus will automatically move the start or end of the list.\n   */\n  moveFocus(\n    host: HTMLElement,\n    config: TrapFocusConfig,\n    increment: MOVE_FOCUS,\n    event: UIEvent\n  ): void {\n    const focusable: HTMLElement[] = this.findFocusable(host);\n\n    let index = focusable.findIndex(v => v === event.target) + increment;\n\n    const shouldMoveFocus =\n      (index >= 0 && index < focusable.length) ||\n      (index < 0 && this.getTrapStart(config.trap)) ||\n      (index >= focusable.length && this.getTrapEnd(config.trap));\n\n    if (shouldMoveFocus) {\n      if (index >= focusable.length) {\n        index = 0;\n      }\n      if (index < 0) {\n        index = focusable.length - 1;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const el = focusable[index];\n\n      el.focus();\n    }\n  }\n\n  protected getTrapStart(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'start';\n  }\n\n  protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'end';\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\nimport { TrapFocusService } from './trap-focus.service';\n\n/**\n * Directive that keeps the focus inside the focussable child elements,\n * also known as a _focus trap_.\n */\n@Directive() // selector: '[cxTrapFocus]'\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\n  protected defaultConfig: TrapFocusConfig = { trap: true };\n\n  // @Input('cxTrapFocus')\n  protected config: TrapFocusConfig = {};\n\n  @HostListener('keydown.arrowdown', ['$event'])\n  @HostListener('keydown.tab', ['$event'])\n  handleTrapDown = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\n    }\n  };\n\n  @HostListener('keydown.arrowup', ['$event'])\n  @HostListener('keydown.shift.tab', ['$event'])\n  handleTrapUp = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.PREV);\n    }\n  };\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TrapFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Moves the focus of the element reference up or down, depending on the increment.\n   * The focus of the element is trapped to avoid it from going out of the group.\n   *\n   * @param event UIEvent that is used to get the target element. The event is blocked\n   *   from standard execution and further bubbling.\n   * @param increment indicates whether the next or previous is focussed.\n   */\n  protected moveFocus(event: UIEvent, increment: number) {\n    if (this.service.hasFocusableChildren(this.host)) {\n      this.service.moveFocus(\n        this.host,\n        this.config,\n        increment,\n        event as UIEvent\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TrapFocusService } from '../trap/trap-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LockFocusService extends TrapFocusService {}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\nimport { LockFocusService } from './lock-focus.service';\n\n/**\n * Focusable elements exclude hidden elements by default, but this contradicts with\n * unlocking (hidden) elements.\n */\nconst UNLOCK_HIDDEN_ELEMENTS = true;\n/**\n * Directive that adds persistence for focussed element in case\n * the elements are being rebuild. This happens often when change\n * detection kicks in because of new data set from the backend.\n */\n@Directive() // selector: '[cxLockFocus]'\nexport class LockFocusDirective extends TrapFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: LockFocusConfig = { lock: true };\n\n  // @Input('cxLockFocus')\n  protected config: LockFocusConfig = {};\n\n  /**\n   * Indicates that the host is configured to use locking. This is available as a\n   * CSS class `focus-lock`.\n   */\n  @HostBinding('class.focus-lock') shouldLock: boolean;\n  /**\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\n   */\n  @HostBinding('class.is-locked')\n  isLocked: boolean;\n\n  /**\n   * Emits an event when the host is unlocked.\n   */\n  @Output() unlock = new EventEmitter<boolean>();\n\n  /**\n   * When the user selects enter or space, the focusable childs are\n   * unlocked, which means that the tabindex is set to 0.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handleEnter(event: KeyboardEvent) {\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * In case any of the children elements is touched by the mouse,\n   * we unlock the group to not break the mouse-experience.\n   */\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if (this.shouldLock && this.isLocked) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: LockFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service);\n  }\n\n  protected lockFocus() {\n    this.addTabindexToChildren(-1);\n  }\n\n  protected unlockFocus(event?: UIEvent) {\n    this.unlock.emit(true);\n    this.addTabindexToChildren(0);\n    // we focus the host if the event was triggered from a child\n    if (event?.target === this.host) {\n      super.handleFocus(event as KeyboardEvent);\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.shouldLock = this.config?.lock;\n\n    if (this.shouldLock) {\n      this.tabindex = 0;\n\n      // Locked elements will be set to `autofocus` by default if it's not\n      // been configured. This will ensure that autofocus kicks in upon unlock.\n      if (!this.config.hasOwnProperty('autofocus')) {\n        this.config.autofocus = true;\n      }\n      // Locked elements will be set to `focusOnEscape` by default if it's not\n      // been configured. This will ensure that  the host gets locked again when\n      // `escape` is pressed.\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.shouldLock) {\n      /**\n       * If the component hosts a group of focusable children elmenents,\n       * we persist the group key to the children, so that they can taken this\n       * into account when they persist their focus state.\n       */\n      if (!!this.group) {\n        this.service.findFocusable(this.host).forEach(el =>\n          // we must do this in after view init as\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\n        );\n      }\n\n      if (this.shouldAutofocus) {\n        this.handleFocus();\n      }\n    }\n    super.ngAfterViewInit();\n  }\n\n  handleFocus(event?: KeyboardEvent): void {\n    if (this.shouldLock) {\n      if (this.shouldUnlockAfterAutofocus(event)) {\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\n        setTimeout(() => this.unlockFocus(event));\n      } else {\n        setTimeout(() => this.lockFocus());\n        event?.stopPropagation();\n        return;\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  handleEscape(event: KeyboardEvent): void {\n    if (this.shouldLock) {\n      this.service.clear(this.config.group);\n    }\n    super.handleEscape(event);\n  }\n\n  /**\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\n   * In this case we unlock the focusable children in case there's a focusable child that\n   * was unlocked before.\n   *\n   * We keep this private to not polute the API.\n   */\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Add the tabindex attribute to the focusable children elements\n   */\n  protected addTabindexToChildren(i = 0): void {\n    if (this.shouldLock) {\n      this.isLocked = i === -1;\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\n        this.focusable.forEach(el =>\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\n        );\n      }\n    }\n  }\n\n  /**\n   * Utility method, returns all focusable children for the host element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get hasFocusableChildren(): boolean {\n    return this.service.hasFocusableChildren(this.host);\n  }\n\n  /**\n   * Returns the focusable children of the host element. If the host element\n   * is configured to be locked, the query is restricted to child elements\n   * with a tabindex !== `-1`.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get focusable(): HTMLElement[] {\n    return this.service.findFocusable(\n      this.host,\n      this.shouldLock,\n      UNLOCK_HIDDEN_ELEMENTS\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LockFocusService } from '../lock/lock-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeyboardFocusService extends LockFocusService {}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\nimport { LockFocusDirective } from './lock/lock-focus.directive';\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class FocusDirective extends LockFocusDirective {\n  protected defaultConfig: FocusConfig = {};\n  // tslint:disable-next-line: no-input-rename\n  @Input('cxFocus') protected config: FocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: KeyboardFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service, renderer);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\n\nconst directives = [\n  // PersistFocusDirective,\n  // VisibleFocusDirective,\n  // BlockFocusDirective,\n  // AutoFocusDirective,\n  // EscapeFocusDirective,\n  // LockFocusDirective,\n  // TrapFocusDirective,\n  // TabFocusDirective,\n  FocusDirective,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...directives],\n  exports: [...directives],\n})\nexport class KeyboardFocusModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n  @Input()\n  fitToContainer = false;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { CardComponent } from './card.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map(totalWidth => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the items can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '@spartacus/core';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport { Media, MediaFormats } from './media.model';\n\n/** the default format is used for browsers that do not support   */\nconst DEFAULT_MEDIA_FORMAT = 'tablet';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  constructor(\n    protected config: OccConfig,\n    protected breakpointService: BreakpointService\n  ) {}\n\n  private get mediaFormats(): MediaFormats[] {\n    return [\n      {\n        code: 'mobile',\n        threshold: this.breakpointService.getSize(BREAKPOINT.xs),\n      },\n      {\n        code: 'tablet',\n        threshold: this.breakpointService.getSize(BREAKPOINT.sm),\n      },\n      {\n        code: 'desktop',\n        threshold: this.breakpointService.getSize(BREAKPOINT.md),\n      },\n      {\n        code: 'widescreen',\n        threshold: this.breakpointService.getSize(BREAKPOINT.lg),\n      },\n    ];\n  }\n\n  getMedia(container, format?: string, alt?: string): Media {\n    return {\n      src: this.getMainImage(container, format),\n      srcset: this.getSrcSet(container),\n      alt: alt || this.getAlt(container, format),\n    };\n  }\n\n  private getMainImage(media, format?: string): string {\n    if (media && media[format || DEFAULT_MEDIA_FORMAT]) {\n      return this.getImageUrl(media[format || DEFAULT_MEDIA_FORMAT].url);\n    } else if (media && media.url) {\n      return this.getImageUrl(media.url);\n    } else if (media && media[this.getHighestAvailableFormat(media)]) {\n      return this.getImageUrl(media[this.getHighestAvailableFormat(media)].url);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * returns highest resolution format name from media formats\n   */\n  private getHighestAvailableFormat(media): string {\n    if (media) {\n      let mediaFormat: MediaFormats;\n\n      this.mediaFormats.forEach(format => {\n        if (\n          !mediaFormat ||\n          (mediaFormat.threshold < format.threshold && media[format.code])\n        ) {\n          mediaFormat = format;\n        }\n      });\n\n      return mediaFormat.code;\n    }\n\n    return null;\n  }\n\n  private getAlt(media, format?: string): string {\n    if (!media) {\n      return undefined;\n    } else if (media[format || DEFAULT_MEDIA_FORMAT]) {\n      return media[format || DEFAULT_MEDIA_FORMAT].altText;\n    } else if (media.altText) {\n      return media.altText;\n    }\n  }\n\n  /**\n   * builds a set of images aligned with the breakpoints\n   */\n  private getSrcSet(media): string {\n    if (!media) {\n      return undefined;\n    }\n    const srcset = this.mediaFormats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.getImageUrl(media[format.code].url)} ${\n          format.threshold\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  private getImageUrl(url: string): string {\n    if (!url) {\n      return null;\n    }\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\n  }\n\n  private getBaseUrl(): string {\n    return (\n      this.config.backend.media.baseUrl || this.config.backend.occ.baseUrl || ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Media } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container: any;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  private create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container,\n      this.format,\n      this.alt\n    );\n    if (!this.media.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  private handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\n\n/**\n * Provides a UI to manage the count of the quantity, typically by using\n * increase and decrease functinality. The item counter expects an input `FormControl`\n * so that the state of the control can be managed outside of this component.\n */\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  // do not use OnPush change detection strategy as we would not\n  // get updates of other form control state (disabled). We want to have a\n  // disabled state in order to ensure that the control cannot be used while\n  // the cart is updated.\n})\nexport class ItemCounterComponent {\n  /**\n   * Holds the value of the counter, the state of the `FormControl`\n   * can be managed outside of the item counter.\n   */\n  @Input() control: FormControl;\n\n  /**\n   * This can be used in case an item has a minmum order quantity.\n   * @default 1\n   */\n  @Input() min = 1;\n\n  /**\n   * This can be used in case an item has a maximum order quantity.\n   */\n  @Input() max: number;\n\n  /**\n   * The step is used to increment the count. It is supposed to be a\n   * positive inteteger or float.\n   * @default 1\n   */\n  @Input() step = 1;\n\n  /**\n   * Inidicates that the input can be manually set to zero,\n   * despite the fact that the input controls will be limited to\n   * the minimum. The zero value can be used to remove an item.\n   */\n  @Input() allowZero = false;\n\n  private _control$: Observable<FormControl>;\n\n  /**\n   * In readonly mode the item counter will only be shown as a label,\n   * the form controls are not rendered.\n   * Please not that readonly is different from the `disabled` form state.\n   * @default false\n   */\n  @HostBinding('class.readonly') @Input() readonly = false;\n\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\n\n  @HostListener('click') handleClick() {\n    this.input.nativeElement.focus();\n  }\n\n  increment() {\n    // it's too early to use the `stepUp` and `stepDown` API...\n    // let's wait for FF: https://caniuse.com/#search=stepUp\n    this.control.setValue(this.control.value + this.step);\n    this.control.markAsDirty();\n  }\n\n  decrement() {\n    this.control.setValue(this.control.value - this.step);\n    this.control.markAsDirty();\n  }\n\n  /**\n   * Returns an observable with the control. The value changes of the\n   * control are intercepted in order to suppress invalid values.\n   */\n  getControl(): Observable<FormControl> {\n    if (!this._control$) {\n      this._control$ = this.control.valueChanges.pipe(\n        startWith(this.control.value),\n        tap(value =>\n          this.control.setValue(this.getValidCount(value), { emitEvent: false })\n        ),\n        map(() => this.control)\n      );\n    }\n    return this._control$;\n  }\n\n  /**\n   * Validate that the given value is in between\n   * the `min` and `max` value. If the value is out\n   * of  the min/max range, it will be altered.\n   * If `allowZero` is set to true, the 0 value is ignored.\n   *\n   */\n  private getValidCount(value: number) {\n    if (value < this.min && !(value === 0 && this.allowZero)) {\n      value = this.min;\n    }\n    if (this.max && value > this.max) {\n      value = this.max;\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ItemCounterComponent } from './item-counter.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { Component, Input } from '@angular/core';\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent {\n  private readonly protocolRegex: RegExp = /^https?:\\/\\//i;\n\n  @Input() url: string | any[];\n  @Input() target: string;\n  @Input() class: string;\n  @Input() id: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  get routerUrl(): any[] {\n    if (typeof this.url === 'string') {\n      return [this.getAbsoluteUrl(this.url)];\n    }\n    return this.url;\n  }\n\n  isExternalUrl(): boolean {\n    return typeof this.url === 'string' && this.protocolRegex.test(this.url);\n  }\n\n  private getAbsoluteUrl(url: string) {\n    return url.startsWith('/') ? this.url : '/' + this.url;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import { PaginationConfig } from './pagination.config';\n\nexport const defaultPaginationConfig: PaginationConfig = {\n  pagination: {\n    addStart: true,\n    addEnd: true,\n  },\n};\n","import { PaginationOptions } from '../pagination.model';\n\nexport abstract class PaginationConfig {\n  pagination?: PaginationOptions;\n}\n","/**\n * Represents a page item for a pagination system. This is used\n * to store the model of each page.\n */\nexport interface PaginationItem {\n  label?: string;\n  type?: PaginationItemType;\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\n  number?: number;\n}\n\n/**\n * The item type is used to add semantic structure to the\n * PaginationItem, so that the UI understands the usage.\n */\nexport enum PaginationItemType {\n  GAP = 'gap',\n  FIRST = 'first',\n  LAST = 'last',\n  PREVIOUS = 'previous',\n  NEXT = 'next',\n  START = 'start',\n  END = 'end',\n  PAGE = 'page',\n}\n\nexport interface PaginationOptions {\n  /**\n   * The range of direct accessible pages in the pagination.\n   *\n   * `« 4 (5) 6 »`\n   *\n   * Defaults to 3.\n   */\n  rangeCount?: number;\n\n  /** Adds a link to skip to the start of the pages, defaults to false. */\n  addStart?: boolean;\n  /** A link to skip to the end of the pages, defaults to false. */\n  addEnd?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addPrevious?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addNext?: boolean;\n\n  navigationPosition?: PaginationNavigationPosition;\n\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\n  addFirst?: boolean;\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\n  addLast?: boolean;\n\n  /**\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\n   *\n   * `1 ...  4 (5) 6 ... 18`\n   *\n   * Defaults to false.\n   */\n  addDots?: boolean;\n\n  /**\n   * If the page dots only represents a single page, we rather add the page\n   * as this would take the same amount of space. Some UX might want to use\n   * the dots for consistency reasons, which why this option is configurable.\n   *\n   * This typically happens on the 4th page (in case the range is 3):\n   * Instead of having:\n   *\n   *  `1 ...  3 (4) 5`\n   *\n   * we'd have\n   *\n   * `1 2 3 (4) 5`.\n   *\n   * Defaults to false.\n   */\n  substituteDotsForSingularPage?: boolean;\n\n  /** Custom label for the start link, defaults to `«`. */\n  startLabel?: string;\n  /** Custom label for the previous link, defaults to `‹`. */\n  previousLabel?: string;\n  /** Custom label for the next link, defaults to `›`. */\n  nextLabel?: string;\n  /** Custom label for the end link, defaults to `»`. */\n  endLabel?: string;\n  /** Custom label for the dots, defaults to `...`. */\n  dotsLabel?: string;\n}\n\nexport enum PaginationNavigationPosition {\n  ASIDE = 'aside',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","import { Injectable } from '@angular/core';\nimport { PaginationConfig } from './config/pagination.config';\nimport {\n  PaginationItem,\n  PaginationItemType,\n  PaginationNavigationPosition,\n  PaginationOptions,\n} from './pagination.model';\n\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\n  rangeCount: 3,\n  dotsLabel: '...',\n  startLabel: '«',\n  previousLabel: '‹',\n  nextLabel: '›',\n  endLabel: '»',\n};\n\n/**\n * Builds a pagination structures based on a pageCount and current page number.\n * There are various {@link PaginationConfig} options which can be used to configure\n * the behaviour of the build. Alternatively, CSS can be used to further customise\n * the pagination.\n *\n * Examples:\n * The full blown pagination items contain the follow elements:\n *\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\n *\n * This includes pagination items to the following pages:\n * - start page\n * - previous page\n * - first page\n * - page range\n * - last page\n * - next page\n * - end page\n *\n * All of those links are configurable, including the size of the page range.\n * The current page will always be centered in the page range to provide direct access\n * to the previous and next page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaginationBuilder {\n  constructor(protected paginationConfig: PaginationConfig) {}\n\n  /**\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\n   * to build out the full pagination. There are various {@link PaginationConfig} options\n   * which can be used to configure the behaviour of the build. Alternatively, CSS\n   * can be used to further specialize visibility of the pagination.\n   *\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   * @returns An array of `PaginationItem`\n   */\n  paginate(pageCount: number, current: number): PaginationItem[] {\n    const pages: PaginationItem[] = [];\n    if (pageCount < 2) {\n      return pages;\n    }\n    this.addPages(pages, pageCount, current);\n    this.addDots(pages, pageCount);\n    this.addFirstLast(pages, pageCount);\n    this.addNavigation(pages, pageCount, current);\n\n    return pages;\n  }\n\n  /**\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\n   * The current page is always centered to provide direct access to the previous and next page.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   */\n  protected addPages(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const start = this.getStartOfRange(pageCount, current);\n    const max = Math.min(this.config.rangeCount, pageCount);\n\n    Array.from(Array(max)).forEach((_, i) => {\n      pages.push({\n        number: i + start,\n        label: String(i + start + 1),\n        type: PaginationItemType.PAGE,\n      });\n    });\n  }\n\n  /**\n   * Adds dots before and after the given pages, if configured (defaults to true).\n   * If the dots only represent a single page, the page number is added instead of\n   * the dots, unless the configuration requires dots always.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   */\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\n    if (!this.config.addDots) {\n      return;\n    }\n\n    const addFirstGap = () => {\n      const firstItemNumber = pages[0].number;\n      const gapNumber = this.config.addFirst ? 1 : 0;\n      if (firstItemNumber > gapNumber) {\n        const isGap =\n          !this.config.substituteDotsForSingularPage ||\n          firstItemNumber !== gapNumber + 1;\n        const isSubstitued =\n          this.config.addFirst &&\n          this.config.substituteDotsForSingularPage &&\n          gapNumber === 0;\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstitued\n          ? PaginationItemType.FIRST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\n              type,\n            },\n            isGap ? null : { number: gapNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    const addLastGap = () => {\n      const nextPageNumber = pages[pages.length - 1].number + 1;\n      const last = pageCount - (this.config.addLast ? 2 : 1);\n      if (nextPageNumber <= last) {\n        const isSubstitued =\n          this.config.addLast &&\n          this.config.substituteDotsForSingularPage &&\n          nextPageNumber === last;\n        const isGap =\n          nextPageNumber <\n          pageCount -\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\n            (this.config.addLast ? 1 : 0);\n\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstitued\n          ? PaginationItemType.LAST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\n              type,\n            },\n            isGap ? null : { number: nextPageNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    pages.unshift(...addFirstGap());\n    pages.push(...addLastGap());\n  }\n\n  /**\n   * Add links to the first and last page, if configured to do so.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   *\n   */\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\n    if (this.config.addFirst && pages[0].number !== 0) {\n      pages.unshift({\n        number: 0,\n        label: '1',\n        type: PaginationItemType.FIRST,\n      });\n    }\n    if (\n      this.config.addLast &&\n      pages[pages.length - 1].number !== pageCount - 1\n    ) {\n      pages.push({\n        number: pageCount - 1,\n        label: String(pageCount),\n        type: PaginationItemType.LAST,\n      });\n    }\n  }\n\n  /**\n   * Add links to the start, previous, next and last page, if configured to do so.\n   * The order of the links can be configured by using the {@link PaginationConfig},\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\n   * The `PaginationNavigationPosition` allows for 3 flavours:\n   *\n   * - by default the pagination starts with start and previous and ends with the next and end links\n   * - BEFORE – all navigation links are added in the front of the pagination list\n   * - AFTER – all navigation links are pushed to the end of the pagination list\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   *\n   */\n  protected addNavigation(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const before = this.getBeforeLinks(current);\n    const after = this.getAfter(pageCount, current);\n    const pos = this.config.navigationPosition;\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\n      pages.unshift(...before);\n      pages.push(...after);\n    } else {\n      if (pos === PaginationNavigationPosition.BEFORE) {\n        pages.unshift(...before, ...after);\n      }\n      if (pos === PaginationNavigationPosition.AFTER) {\n        pages.push(...before, ...after);\n      }\n    }\n  }\n\n  /**\n   * Returns the start and previous links, if applicable.\n   */\n  private getBeforeLinks(current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addStart) {\n      const start = () => {\n        return Object.assign(\n          {\n            label: this.config.startLabel,\n            type: PaginationItemType.START,\n          },\n          current > 0 ? { number: 0 } : null\n        );\n      };\n      list.push(start());\n    }\n    if (this.config.addPrevious) {\n      const previous = () => {\n        return Object.assign(\n          {\n            label: this.config.previousLabel,\n            type: PaginationItemType.PREVIOUS,\n          },\n          current > 0 ? { number: current - 1 } : null\n        );\n      };\n      list.push(previous());\n    }\n    return list;\n  }\n\n  /**\n   * Returns the next and end links, if applicable.\n   */\n  private getAfter(pageCount: number, current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addNext) {\n      const next = () => {\n        return Object.assign(\n          {\n            label: this.config.nextLabel,\n            type: PaginationItemType.NEXT,\n          },\n          current < pageCount - 1 ? { number: current + 1 } : null\n        );\n      };\n      list.push(next());\n    }\n    if (this.config.addEnd) {\n      const end = () => {\n        return Object.assign(\n          {\n            label: this.config.endLabel,\n            type: PaginationItemType.END,\n          },\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\n        );\n      };\n      list.push(end());\n    }\n\n    return list;\n  }\n  /**\n   * Resolves the first page of the range we need to build.\n   * This is the page that is leading up to the range of the\n   * current page.\n   *\n   * @param pageCount The total number of pages.\n   * @param current The current page number, 0-index based.\n   */\n  private getStartOfRange(pageCount: number, current: number): number {\n    const count = this.config.rangeCount - 1;\n    // the least number of pages before and after the current\n    const delta = Math.round(count / 2);\n\n    // ensure that we start with at least the first page\n    const minStart = Math.max(0, current - delta);\n    // ensures that we start with at least 1 and do not pass the last range\n    const maxStart = Math.max(0, pageCount - count - 1);\n\n    // ensure that we get at least a full range at the end\n    return Math.min(maxStart, minStart);\n  }\n\n  private get config(): PaginationOptions {\n    return Object.assign(\n      FALLBACK_PAGINATION_OPTIONS,\n      this.paginationConfig.pagination\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PaginationModel } from '@spartacus/core';\nimport { PaginationBuilder } from './pagination.builder';\nimport { PaginationItem, PaginationItemType } from './pagination.model';\n\n/**\n * The `PaginationComponent` is a generic component that is used for\n * all lists in Spartacus that require pagination. The component supports\n * all common features, which can be configured or hidden by CSS.\n */\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\n  @Input() pageRoute: string;\n\n  /** The (optional) query parameter which is added to the page route.  */\n  @Input() queryParam: string;\n\n  /**\n   * Whenever there's a default page specified, the routing logic\n   * will omit the page number in routeLink or parameters.\n   */\n  @Input() defaultPage;\n\n  private _pagination: PaginationModel;\n  get pagination(): PaginationModel {\n    return this._pagination;\n  }\n  @Input() set pagination(value: PaginationModel) {\n    this._pagination = value;\n    this.render(value);\n  }\n\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  pages: PaginationItem[] = [];\n\n  constructor(\n    private paginationBuilder: PaginationBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  private render(pagination: PaginationModel) {\n    this.pages = this.paginationBuilder.paginate(\n      pagination.totalPages,\n      pagination.currentPage\n    );\n  }\n\n  /**\n   * Inidicates whether the given item is the current item.\n   *\n   * @param item PaginationItem\n   * @returns boolean\n   */\n  isCurrent(item: PaginationItem): boolean {\n    return (\n      item.type === PaginationItemType.PAGE &&\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  /**\n   * Indicates whether the pagination item is inactive. This is used\n   * to disabled a link or set the tabindex to `-1`.\n   *\n   * Defaults to true\n   *\n   * @param item PaginationItem\n   * @returns returns -1 in case of a disabled\n   */\n  isInactive(item: PaginationItem): boolean {\n    return (\n      !item.hasOwnProperty('number') ||\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  getQueryParams(item: PaginationItem): Params {\n    const queryParams = Object.assign(\n      {},\n      this.activatedRoute.snapshot.queryParams\n    );\n    if (\n      this.queryParam &&\n      item.number < this.pagination.totalPages &&\n      !this.isCurrent(item)\n    ) {\n      queryParams[this.queryParam] = item.number;\n    }\n    // omit the page number from the query parameters in case it's the default\n    // to clean up the experience and avoid unnecessary polluting of the URL\n    if (queryParams[this.queryParam] === this.defaultPage) {\n      delete queryParams[this.queryParam];\n    }\n    return queryParams;\n  }\n\n  pageChange(page: PaginationItem): void {\n    this.viewPageEvent.emit(page.number);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport { defaultPaginationConfig, PaginationConfig } from './config/index';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultPaginationConfig),\n    { provide: PaginationConfig, useExisting: Config },\n  ],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class PaginationModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PaginationComponent, PaginationModule } from './pagination/index';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule, PaginationModule],\n  declarations: [SortingComponent],\n  exports: [SortingComponent, PaginationComponent],\n})\nexport class ListNavigationModule {}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","export abstract class QualtricsConfig {\n  qualtrics?: {\n    projectId?: string;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, fromEvent, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, tap } from 'rxjs/operators';\nimport { QualtricsConfig } from './config/qualtrics-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QualtricsLoaderService {\n  private qualtricsLoaded$ = new BehaviorSubject<boolean>(false);\n\n  constructor(private winRef: WindowRef, private config: QualtricsConfig) {\n    if (\n      Boolean(this.winRef.nativeWindow) &&\n      Boolean(this.winRef.document) &&\n      this.isQualtricsConfigured()\n    ) {\n      this.initialize();\n      this.setup();\n    }\n  }\n\n  private initialize(): void {\n    fromEvent(this.winRef.nativeWindow, 'qsi_js_loaded').subscribe(_ =>\n      this.qualtricsLoaded$.next(true)\n    );\n  }\n\n  private setup(): void {\n    const qualtricsScript = this.winRef.document.createElement('script');\n    qualtricsScript.type = 'text/javascript';\n    qualtricsScript.defer = true;\n    qualtricsScript.src = 'assets/qualtricsIntegration.js';\n\n    const idScript = this.winRef.document.createElement('div');\n    idScript.id = this.config.qualtrics.projectId;\n\n    this.winRef.document\n      .getElementsByTagName('head')[0]\n      .appendChild(qualtricsScript);\n\n    this.winRef.document.getElementsByTagName('head')[0].appendChild(idScript);\n  }\n\n  private isQualtricsConfigured(): boolean {\n    return (\n      Boolean(this.config.qualtrics) && Boolean(this.config.qualtrics.projectId)\n    );\n  }\n\n  load(): Observable<boolean> {\n    return this.qualtricsLoaded$.pipe(\n      filter(loaded => loaded),\n      switchMap(_ => {\n        const qsi = this.winRef.nativeWindow['QSI'];\n        return this.isDataLoaded().pipe(\n          distinctUntilChanged(),\n          tap(dataLoaded => {\n            if (dataLoaded) {\n              qsi.API.unload();\n              qsi.API.load().done(qsi.API.run());\n            }\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data\n   * If client(s) does not extend this service to override this implementation, it returns true\n   * Return false otherwise.\n   */\n  protected isDataLoaded(): Observable<boolean> {\n    return of(true);\n  }\n}\n","import { Component } from '@angular/core';\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\n\n@Component({\n  selector: 'cx-qualtrics',\n  template: `\n    <ng-container *ngIf=\"qualtricsEnabled$ | async\"></ng-container>\n  `,\n})\nexport class QualtricsComponent {\n  qualtricsEnabled$ = this.qualtricsLoader.load();\n\n  constructor(private qualtricsLoader: QualtricsLoaderService) {}\n}\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, Config, provideDefaultConfig } from '@spartacus/core';\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\nimport { QualtricsConfig } from './config/qualtrics-config';\nimport { QualtricsComponent } from './qualtrics.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [QualtricsComponent],\n  entryComponents: [QualtricsComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        QualtricsComponent: {\n          component: QualtricsComponent,\n        },\n      },\n    }),\n    provideDefaultConfig(defaultQualtricsConfig),\n\n    {\n      provide: QualtricsConfig,\n      useExisting: Config,\n    },\n  ],\n})\nexport class QualtricsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap(items =>\n        this.getContext(context).pipe(\n          switchMap(ctx => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map(ctx => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe(service => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map((ctx: string) => this.getInjectedService(ctx)),\n      filter(s => !!s)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map(data => data.context),\n        map(ctx => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ContextServiceMap,\n  provideDefaultConfig,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextComponentService,\n  ],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent implements OnInit {\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interation is not provided.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = false;\n\n  /**\n   * The rating will be used to render some colorful stars in the UI.\n   */\n  @Input() rating: number;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  @Output() change = new EventEmitter<number>();\n\n  private initialRate = 0;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.setRate(this.rating, true);\n  }\n\n  setRate(value: number, force?: boolean): void {\n    if (!this.disabled || force) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'style',\n        `--star-fill:${value || this.initialRate};`\n      );\n    }\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n\n  setRateOnEvent(event: any, rating: number) {\n    if (event.code === 'Space') {\n      event.preventDefault();\n      this.setRate(rating);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","export abstract class ViewConfig {\n  view?: {\n    /**\n     * Configurations related to the view of the application\n     */\n    infiniteScroll?: {\n      active?: boolean;\n      productLimit?: number;\n      showMoreButton?: boolean;\n    };\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ViewConfig } from './view-config';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({})\nexport class ViewConfigModule {\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\n    return {\n      ngModule: ViewConfigModule,\n      providers: [\n        provideDefaultConfig({\n          view: {},\n        }),\n        {\n          provide: ViewConfig,\n          useExisting: Config,\n        },\n      ],\n    };\n  }\n}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\n\nexport class CustomFormValidators {\n  static emailDomainValidator(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match('[.][a-zA-Z]+$') ? null : { InvalidEmail: true };\n  }\n\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match(EMAIL_PATTERN) ? null : { InvalidEmail: true };\n  }\n\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n    return password.match(PASSWORD_PATTERN) ? null : { InvalidPassword: true };\n  }\n\n  static matchPassword(control: AbstractControl): { NotEqual: boolean } {\n    if (control.get('password').value !== control.get('passwordconf').value) {\n      return { NotEqual: true };\n    }\n    return null;\n  }\n}\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\nimport { FeaturesConfigModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, FeaturesConfigModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Voucher, CartVoucherService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-applied-coupons',\n  templateUrl: './applied-coupons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppliedCouponsComponent {\n  @Input()\n  vouchers: Voucher[];\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isReadOnly = false;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(private cartVoucherService: CartVoucherService) {}\n\n  public get sortedVouchers(): Voucher[] {\n    this.vouchers = this.vouchers || [];\n    return this.vouchers.slice().sort((a, b) => {\n      return a.code.localeCompare(b.code);\n    });\n  }\n\n  removeVoucher(voucherId: string) {\n    this.cartVoucherService.removeVoucher(voucherId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ActiveCartService,\n  AuthService,\n  Cart,\n  CartVoucherService,\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n  FeatureConfigService,\n  OCC_USER_ID_ANONYMOUS,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-coupon',\n  templateUrl: './cart-coupon.component.html',\n})\nexport class CartCouponComponent implements OnInit, OnDestroy {\n  MAX_CUSTOMER_COUPON_PAGE = 100;\n  form: FormGroup;\n  cartIsLoading$: Observable<boolean>;\n  cart$: Observable<Cart>;\n  cartId: string;\n  applicableCoupons: CustomerCoupon[];\n\n  private ignoreCloseEvent = false;\n\n  private subscription = new Subscription();\n\n  couponBoxIsActive = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected cartVoucherService: CartVoucherService,\n    protected formBuilder: FormBuilder,\n    protected customerCouponService: CustomerCouponService,\n    protected featureConfig: FeatureConfigService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.customerCouponService) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n    }\n    if (this.featureConfig && this.featureConfig.isLevel('1.5')) {\n      this.cart$ = combineLatest([\n        this.activeCartService.getActive(),\n        this.authService.getOccUserId(),\n        this.customerCouponService.getCustomerCoupons(\n          this.MAX_CUSTOMER_COUPON_PAGE\n        ),\n      ]).pipe(\n        tap(\n          ([cart, userId, customerCoupons]: [\n            Cart,\n            string,\n            CustomerCouponSearchResult\n          ]) => {\n            this.cartId =\n              userId === OCC_USER_ID_ANONYMOUS ? cart.guid : cart.code;\n            this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\n          }\n        ),\n        map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\n      );\n    }\n    //TODO(issue:#5971) Deprecated since 1.5\n    else {\n      this.cart$ = combineLatest([\n        this.activeCartService.getActive(),\n        this.authService.getOccUserId(),\n      ]).pipe(\n        tap(\n          ([cart, userId]: [Cart, string]) =>\n            (this.cartId =\n              userId === OCC_USER_ID_ANONYMOUS ? cart.guid : cart.code)\n        ),\n        map(([cart]: [Cart, string]) => cart)\n      );\n    }\n    //TODO(issue:#5971) Deprecated since 1.5\n\n    this.cartIsLoading$ = this.activeCartService\n      .isStable()\n      .pipe(map(loaded => !loaded));\n\n    this.cartVoucherService.resetAddVoucherProcessingState();\n\n    this.form = this.formBuilder.group({\n      couponCode: ['', [Validators.required]],\n    });\n\n    this.subscription.add(\n      this.cartVoucherService\n        .getAddVoucherResultSuccess()\n        .subscribe(success => {\n          this.onSuccess(success);\n        })\n    );\n\n    this.subscription.add(\n      this.cartVoucherService.getAddVoucherResultError().subscribe(error => {\n        this.onError(error);\n      })\n    );\n  }\n\n  protected onError(error: boolean) {\n    if (error) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  onSuccess(success: boolean) {\n    if (success) {\n      this.form.reset();\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  protected getApplicableCustomerCoupons(\n    cart: Cart,\n    coupons: CustomerCoupon[]\n  ): void {\n    this.applicableCoupons = coupons || [];\n    if (cart.appliedVouchers) {\n      cart.appliedVouchers.forEach(appliedVoucher => {\n        this.applicableCoupons = this.applicableCoupons.filter(\n          coupon => coupon.couponId !== appliedVoucher.code\n        );\n      });\n    }\n  }\n\n  applyVoucher(): void {\n    if (!this.form.valid) {\n      this.form.markAsTouched();\n      return;\n    }\n    this.cartVoucherService.addVoucher(this.form.value.couponCode, this.cartId);\n  }\n  applyCustomerCoupon(couponId: string): void {\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\n    this.couponBoxIsActive = false;\n  }\n\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.couponBoxIsActive = false;\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.cartVoucherService.resetAddVoucherProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\nimport { CartCouponComponent } from './cart-coupon.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\n  exports: [CartCouponComponent, AppliedCouponsComponent],\n  imports: [\n    FeaturesConfigModule,\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartApplyCouponComponent: {\n          component: CartCouponComponent,\n        },\n      },\n    }),\n  ],\n\n  entryComponents: [CartCouponComponent],\n})\nexport class CartCouponModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  ConsignmentEntry,\n  FeatureConfigService,\n  PromotionLocation,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport {\n  CartItemComponentOptions,\n  Item,\n} from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemListComponent {\n  @Input() readonly = false;\n\n  @Input() hasHeader = true;\n\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  private _items: Item[] = [];\n  form: FormGroup;\n\n  @Input('items')\n  // TODO: currently we're getting a new array of items if the cart changes.\n  // pretty annoying as it forces a repaint on the screen,\n  // which is noticable in the UI.\n  set items(items: Item[]) {\n    this.resolveItems(items);\n    this.createForm();\n  }\n  get items(): Item[] {\n    return this._items;\n  }\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  @Input('cartIsLoading') set setLoading(value: boolean) {\n    if (!this.readonly) {\n      // Whenver the cart is loading, we disable the complete form\n      // to avoid any user interaction with the cart.\n      value\n        ? this.form.disable({ emitEvent: false })\n        : this.form.enable({ emitEvent: false });\n    }\n  }\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService,\n    protected featureConfig: FeatureConfigService\n  ) {}\n\n  //TODO remove feature flag for #5958\n  isSaveForLaterEnabled(): boolean {\n    if (this.featureConfig) {\n      return this.featureConfig.isEnabled('saveForLater');\n    }\n    return false;\n  }\n  //TODO remove feature flag for #5958\n\n  /**\n   * The items we're getting form the input do not have a consistent model.\n   * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\n   */\n  private resolveItems(items: Item[]): void {\n    if (items.every(item => item.hasOwnProperty('orderEntry'))) {\n      this._items = items.map(consignmentEntry => {\n        const entry = Object.assign(\n          {},\n          (consignmentEntry as ConsignmentEntry).orderEntry\n        );\n        entry.quantity = consignmentEntry.quantity;\n        return entry;\n      });\n    } else {\n      this._items = items;\n    }\n  }\n\n  private createForm(): void {\n    this.form = new FormGroup({});\n    this._items.forEach(item => {\n      const { code } = item.product;\n      const group = new FormGroup({\n        entryNumber: new FormControl((<any>item).entryNumber),\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\n      });\n      if (!item.updateable || this.readonly) {\n        group.disable();\n      }\n      this.form.addControl(code, group);\n    });\n  }\n\n  removeEntry(item: Item): void {\n    if (this.selectiveCartService && this.options.isSaveForLater) {\n      this.selectiveCartService.removeEntry(item);\n    } else {\n      this.activeCartService.removeEntry(item);\n    }\n    delete this.form.controls[item.product.code];\n  }\n\n  getControl(item: Item): Observable<FormGroup> {\n    return this.form.get(item.product.code).valueChanges.pipe(\n      // tslint:disable-next-line:deprecation\n      startWith(null),\n      map(value => {\n        if (value && this.selectiveCartService && this.options.isSaveForLater) {\n          this.selectiveCartService.updateEntry(\n            value.entryNumber,\n            value.quantity\n          );\n        } else if (value) {\n          this.activeCartService.updateEntry(value.entryNumber, value.quantity);\n        }\n      }),\n      map(() => <FormGroup>this.form.get(item.product.code))\n    );\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n  FeatureConfigService,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\nexport interface Item {\n  product?: any;\n  quantity?: any;\n  basePrice?: any;\n  totalPrice?: any;\n  updateable?: boolean;\n}\n\nexport interface CartItemComponentOptions {\n  isSaveForLater?: boolean;\n  optionalBtn?: any;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n})\nexport class CartItemComponent implements OnInit {\n  @Input() compact = false;\n  @Input() item: Item;\n  @Input() readonly = false;\n  @Input() quantityControl: FormControl;\n\n  @Output() view = new EventEmitter<any>();\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  // TODO: evaluate whether this is generic enough\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  appliedProductPromotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    promotionService: PromotionService,\n    // tslint:disable-next-line:unified-signatures\n    featureConfig: FeatureConfigService\n  );\n  /**\n   * @deprecated Since 1.5\n   * Add featureConfig for save for later.\n   * Remove issue: #5958\n   */\n  constructor(promotionService: PromotionService);\n\n  constructor(\n    protected promotionService: PromotionService,\n    private featureConfig?: FeatureConfigService\n  ) {}\n\n  ngOnInit() {\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\n      this.item,\n      this.promotionLocation\n    );\n  }\n\n  //TODO remove feature flag for #5958\n  isSaveForLaterEnabled(): boolean {\n    if (this.featureConfig) {\n      return this.featureConfig.isEnabled('saveForLater');\n    }\n    return false;\n  }\n  //TODO remove feature flag for #5958\n\n  isProductOutOfStock(product: any) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  removeItem() {\n    this.quantityControl.setValue(0);\n    this.quantityControl.markAsDirty();\n  }\n\n  viewItem() {\n    this.view.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CartCouponModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CartSharedModule,\n    RouterModule,\n    SpinnerModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  AuthService,\n  Cart,\n  FeatureConfigService,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n  RoutingService,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  loggedIn = false;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n  promotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected promotionService: PromotionService,\n    protected selectiveCartService: SelectiveCartService,\n    private authService: AuthService,\n    private routingService: RoutingService,\n    private featureConfig: FeatureConfigService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\n\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n\n    if (this.isSaveForLaterEnabled()) {\n      this.cartLoaded$ = combineLatest([\n        this.activeCartService.isStable(),\n        this.selectiveCartService.getLoaded(),\n        this.authService.isUserLoggedIn(),\n      ]).pipe(\n        tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\n        map(([cartLoaded, sflLoaded, loggedIn]) =>\n          loggedIn ? cartLoaded && sflLoaded : cartLoaded\n        )\n      );\n    }\n    //TODO remove for #5958\n    else {\n      this.cartLoaded$ = this.activeCartService.isStable();\n    }\n    //TODO  remove for #5958 end\n\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  //TODO remove feature flag for #5958\n  isSaveForLaterEnabled(): boolean {\n    if (this.featureConfig) {\n      return this.featureConfig.isEnabled('saveForLater');\n    }\n    return false;\n  }\n  //TODO remove feature flag for #5958 end\n\n  saveForLater(item: Item) {\n    if (this.loggedIn) {\n      this.activeCartService.removeEntry(item);\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\n    } else {\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartDetailsComponent } from './cart-details.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    CartCouponModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n  entryComponents: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { ActiveCartService, Cart, RoutingService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.isStable(),\n    ]).pipe(\n      filter(([_, loaded]) => loaded),\n      map(([cart]) => {\n        if (this.isEmpty(cart)) {\n          this.routingService.go({ cxRoute: 'home' });\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActiveCartService, SelectiveCartService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      return combineLatest([\n        slots$,\n        this.activeCartService.getActive(),\n        this.selectiveCartService.getCart(),\n      ]).pipe(\n        map(([slots, cart, selectiveCart]) => {\n          if (cart.totalItems) {\n            return slots.filter(slot => slot !== 'EmptyCartMiddleContent');\n          } else if (selectiveCart.totalItems) {\n            return slots.filter(\n              slot =>\n                slot !== 'EmptyCartMiddleContent' &&\n                slot !== 'CenterRightContentSlot'\n            );\n          } else {\n            return slots.filter(\n              slot => slot !== 'TopContent' && slot !== 'CenterRightContentSlot'\n            );\n          }\n        })\n      );\n    }\n    return slots$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n\n  constructor(protected activeCartService: ActiveCartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartTotalsComponent } from './cart-totals.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    CartSharedModule,\n    I18nModule,\n    CartCouponModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n  entryComponents: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\n    startWith({ deliveryItemsQuantity: 0 }),\n    map(cart => cart.deliveryItemsQuantity || 0)\n  );\n\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\n    filter(cart => !!cart.totalPrice),\n    map(cart => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected activeCartService: ActiveCartService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [MiniCartComponent],\n  exports: [MiniCartComponent],\n  entryComponents: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AuthService,\n  OrderEntry,\n  Product,\n  WishListService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CurrentProductService } from '../../product/current-product.service';\n\n@Component({\n  selector: 'cx-add-to-wishlist',\n  templateUrl: './add-to-wish-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToWishListComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\n    filter(product => Boolean(product)),\n    tap(product => this.setStockInfo(product))\n  );\n\n  wishListEntries$: Observable<\n    OrderEntry[]\n  > = this.wishListService.getWishList().pipe(\n    filter(wishlist => Boolean(wishlist)),\n    map(wishList => wishList.entries)\n  );\n\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  hasStock = false;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected wishListService: WishListService,\n    protected currentProductService: CurrentProductService,\n    protected authService: AuthService\n  ) {}\n\n  add(product: Product): void {\n    this.wishListService.addEntry(product.code);\n  }\n\n  remove(entry: OrderEntry): void {\n    this.wishListService.removeEntry(entry);\n  }\n\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\n    const item = entries.find(entry => entry.product.code === product.code);\n    return item;\n  }\n\n  private setStockInfo(product: Product): void {\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { AddToWishListComponent } from './add-to-wish-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AddToWishListComponent: {\n          component: AddToWishListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToWishListComponent],\n  entryComponents: [AddToWishListComponent],\n  exports: [AddToWishListComponent],\n})\nexport class AddToWishListModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CmsParagraphComponent,\n  CmsService,\n  OrderEntry,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-save-for-later',\n  templateUrl: './save-for-later.component.html',\n})\nexport class SaveForLaterComponent implements OnInit {\n  saveForLater$: Observable<Cart>;\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  data$: Observable<CmsParagraphComponent>;\n  isCartEmpty$: Observable<boolean>;\n\n  constructor(\n    protected cmsService: CmsService,\n    protected cartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isCartEmpty$ = this.cartService\n      .getActive()\n      .pipe(map(cart => !(cart && cart.totalItems && cart.totalItems > 0)));\n    this.saveForLater$ = this.selectiveCartService.getCart();\n    this.entries$ = this.selectiveCartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n    this.cartLoaded$ = combineLatest([\n      this.cartService.isStable(),\n      this.selectiveCartService.getLoaded(),\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\n    this.data$ = this.cmsService.getComponentData(\n      'EmptyCartParagraphComponent'\n    );\n  }\n\n  moveToCart(item: Item) {\n    this.selectiveCartService.removeEntry(item);\n    this.cartService.addEntry(item.product.code, item.quantity);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SaveForLaterComponent } from './save-for-later.component';\nimport {\n  CmsConfig,\n  FeaturesConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        SaveForLaterComponent: {\n          component: SaveForLaterComponent,\n        },\n      },\n      features: {\n        saveForLater: '1.5',\n      },\n    }),\n  ],\n  declarations: [SaveForLaterComponent],\n  exports: [SaveForLaterComponent],\n  entryComponents: [SaveForLaterComponent],\n})\nexport class SaveForLaterModule {}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","import { CheckoutStep } from '../model/checkout-step.model';\n\nexport enum DeliveryModePreferences {\n  FREE = 'FREE',\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\n}\n\nexport abstract class CheckoutConfig {\n  checkout?: {\n    /**\n     * Set checkout steps as ordered array of pages.\n     */\n    steps?: Array<CheckoutStep>;\n    /**\n     * Allow for express checkout when default shipping method and payment method are available.\n     */\n    express?: boolean;\n    /**\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\n     */\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\n    /**\n     * Allow for guest checkout.\n     */\n    guest?: boolean;\n  };\n}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\nimport {\n  CheckoutConfig,\n  DeliveryModePreferences,\n} from '../config/checkout-config';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\n  private express: boolean = this.checkoutConfig.checkout.express;\n  private guest: boolean = this.checkoutConfig.checkout.guest;\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\n\n  constructor(\n    private checkoutConfig: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\n    return this.getCheckoutStep(currentStepType).routeName;\n  }\n\n  getFirstCheckoutStepRoute(): string {\n    return this.steps[0].routeName;\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\n      : null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\n      : null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    let stepIndex: number;\n    let index = 0;\n    for (const step of this.steps) {\n      if (\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n      ) {\n        stepIndex = index;\n      } else {\n        index++;\n      }\n    }\n\n    return stepIndex >= 0 ? stepIndex : null;\n  }\n\n  protected compareDeliveryCost(\n    deliveryMode1: DeliveryMode,\n    deliveryMode2: DeliveryMode\n  ): number {\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\n      return 1;\n    } else if (\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\n    ) {\n      return -1;\n    }\n    return 0;\n  }\n\n  protected findMatchingDeliveryMode(\n    deliveryModes: DeliveryMode[],\n    index = 0\n  ): string {\n    switch (this.defaultDeliveryMode[index]) {\n      case DeliveryModePreferences.FREE:\n        if (deliveryModes[0].deliveryCost.value === 0) {\n          return deliveryModes[0].code;\n        }\n        break;\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\n        const leastExpensiveFound = deliveryModes.find(\n          deliveryMode => deliveryMode.deliveryCost.value !== 0\n        );\n        if (leastExpensiveFound) {\n          return leastExpensiveFound.code;\n        }\n        break;\n      case DeliveryModePreferences.MOST_EXPENSIVE:\n        return deliveryModes[deliveryModes.length - 1].code;\n      default:\n        const codeFound = deliveryModes.find(\n          deliveryMode => deliveryMode.code === this.defaultDeliveryMode[index]\n        );\n        if (codeFound) {\n          return codeFound.code;\n        }\n    }\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\n    return lastMode\n      ? deliveryModes[0].code\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\n  }\n\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\n    deliveryModes.sort(this.compareDeliveryCost);\n    return this.findMatchingDeliveryMode(deliveryModes);\n  }\n\n  isExpressCheckout(): boolean {\n    return this.express;\n  }\n\n  isGuestCheckout(): boolean {\n    return this.guest;\n  }\n\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string): string {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthRedirectService,\n  AuthService,\n  RoutingService,\n  User,\n  UserToken,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.authService.getUserToken(),\n      this.activeCartService.getAssignedUser(),\n    ]).pipe(\n      map(([token, user]: [UserToken, User]) => {\n        if (!token.access_token) {\n          if (this.activeCartService.isGuestCart()) {\n            return Boolean(user);\n          }\n          if (this.checkoutConfigService.isGuestCheckout()) {\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\n          } else {\n            this.routingService.go({ cxRoute: 'login' });\n          }\n          this.authRedirectService.reportAuthGuard();\n        }\n        return !!token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  OCC_USER_ID_ANONYMOUS,\n  PaymentDetails,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.cartId$ = this.activeCartService.getActive().pipe(\n      map(cartData => {\n        if (\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\n          this.activeCartService.isGuestCart()\n        ) {\n          return cartData.guid;\n        }\n        return cartData.code;\n      }),\n      filter(cartId => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap(cartId => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile(loaded => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, of, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\n\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n  UserPaymentService,\n  PaymentDetails,\n  DeliveryMode,\n  CheckoutPaymentService,\n  LoaderState,\n} from '@spartacus/core';\nimport { CheckoutConfigService } from './checkout-config.service';\nimport { CheckoutDetailsService } from './checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExpressCheckoutService {\n  private shippingAddressSet$: Observable<boolean>;\n  private deliveryModeSet$: Observable<boolean>;\n  private paymentMethodSet$: Observable<boolean>;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected checkoutConfigService: CheckoutConfigService\n  ) {\n    this.setShippingAddress();\n    this.setDeliveryMode();\n    this.setPaymentMethod();\n  }\n\n  protected setShippingAddress() {\n    this.shippingAddressSet$ = combineLatest([\n      this.userAddressService.getAddresses(),\n      this.userAddressService.getAddressesLoadedSuccess(),\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          if (!addressesLoadedSuccess) {\n            this.userAddressService.loadAddresses();\n          }\n        }\n      ),\n      filter(\n        ([, addressesLoadedSuccess]: [Address[], boolean, LoaderState<void>]) =>\n          addressesLoadedSuccess\n      ),\n      switchMap(\n        ([addresses, , setDeliveryAddressProcess]: [\n          Address[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          const defaultAddress =\n            addresses.find(address => address.defaultAddress) || addresses[0];\n          if (defaultAddress && Object.keys(defaultAddress).length) {\n            if (\n              !(\n                setDeliveryAddressProcess.success ||\n                setDeliveryAddressProcess.error ||\n                setDeliveryAddressProcess.loading\n              )\n            ) {\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\n            }\n            return of(setDeliveryAddressProcess).pipe(\n              filter((setDeliveryAddressProcessState: LoaderState<void>) => {\n                return (\n                  (setDeliveryAddressProcessState.success ||\n                    setDeliveryAddressProcessState.error) &&\n                  !setDeliveryAddressProcessState.loading\n                );\n              }),\n              switchMap((setDeliveryAddressProcessState: LoaderState<void>) => {\n                if (setDeliveryAddressProcessState.success) {\n                  return this.checkoutDetailsService.getDeliveryAddress();\n                }\n                return of(false);\n              }),\n              map(data => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setPaymentMethod() {\n    this.paymentMethodSet$ = combineLatest([\n      this.userPaymentService.getPaymentMethods(),\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, paymentMethodsLoadedSuccess]: [\n          PaymentDetails[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          if (!paymentMethodsLoadedSuccess) {\n            this.userPaymentService.loadPaymentMethods();\n          }\n        }\n      ),\n      filter(\n        ([, success]: [PaymentDetails[], boolean, LoaderState<void>]) => success\n      ),\n      switchMap(\n        ([payments, , setPaymentDetailsProcess]: [\n          PaymentDetails[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          const defaultPayment =\n            payments.find(address => address.defaultPayment) || payments[0];\n          if (defaultPayment && Object.keys(defaultPayment).length) {\n            if (\n              !(\n                setPaymentDetailsProcess.success ||\n                setPaymentDetailsProcess.error ||\n                setPaymentDetailsProcess.loading\n              )\n            ) {\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\n            }\n            return of(setPaymentDetailsProcess).pipe(\n              filter((setPaymentDetailsProcessState: LoaderState<void>) => {\n                return (\n                  (setPaymentDetailsProcessState.success ||\n                    setPaymentDetailsProcessState.error) &&\n                  !setPaymentDetailsProcessState.loading\n                );\n              }),\n              switchMap((setPaymentDetailsProcessState: LoaderState<void>) => {\n                if (setPaymentDetailsProcessState.success) {\n                  return this.checkoutDetailsService.getPaymentDetails();\n                }\n                return of(false);\n              }),\n              map(data => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setDeliveryMode() {\n    this.deliveryModeSet$ = combineLatest([\n      this.shippingAddressSet$,\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\n    ]).pipe(\n      debounceTime(0),\n      switchMap(\n        ([\n          addressSet,\n          supportedDeliveryModes,\n          setDeliveryModeStatusFlag,\n          loadSupportedDeliveryModeStatus,\n        ]: [boolean, DeliveryMode[], LoaderState<void>, LoaderState<void>]) => {\n          if (addressSet) {\n            return of([\n              supportedDeliveryModes,\n              setDeliveryModeStatusFlag,\n              loadSupportedDeliveryModeStatus,\n            ]).pipe(\n              filter(\n                ([, , supportedDeliveryModeStatus]: [\n                  DeliveryMode[],\n                  LoaderState<void>,\n                  LoaderState<void>\n                ]) => supportedDeliveryModeStatus.success\n              ),\n              switchMap(\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\n                  DeliveryMode[],\n                  LoaderState<void>,\n                  LoaderState<void>\n                ]) => {\n                  if (Boolean(deliveryModes.length)) {\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\n                      deliveryModes\n                    );\n                    return of([\n                      preferredDeliveryMode,\n                      setDeliveryModeStatus,\n                    ]).pipe(\n                      tap(\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\n                          string,\n                          LoaderState<void>\n                        ]) => {\n                          if (\n                            deliveryMode &&\n                            !(\n                              deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error ||\n                              deliveryModeLoadingStatus.loading\n                            )\n                          ) {\n                            this.checkoutDeliveryService.setDeliveryMode(\n                              deliveryMode\n                            );\n                          }\n                        }\n                      ),\n                      filter(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          LoaderState<void>\n                        ]) => {\n                          return (\n                            (deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error) &&\n                            !deliveryModeLoadingStatus.loading\n                          );\n                        }\n                      ),\n                      switchMap(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          LoaderState<void>\n                        ]) => {\n                          if (deliveryModeLoadingStatus.success) {\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\n                          }\n                          return of(false);\n                        }\n                      ),\n                      map(data => Boolean(data))\n                    );\n                  }\n                  return of(false);\n                }\n              )\n            );\n          } else {\n            return of(false);\n          }\n        }\n      )\n    );\n  }\n\n  protected resetCheckoutProcesses() {\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\n  }\n\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\n    this.resetCheckoutProcesses();\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\n      map(([deliveryModeSet, paymentMethodSet]) =>\n        Boolean(deliveryModeSet && paymentMethodSet)\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  private readonly firstStep$: Observable<UrlTree>;\n\n  constructor(\n    protected router: Router,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected expressCheckoutService: ExpressCheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.firstStep$ = of(\n      this.router.parseUrl(\n        this.routingConfigService.getRouteConfig(\n          this.checkoutConfigService.getFirstCheckoutStepRoute()\n        ).paths[0]\n      )\n    );\n  }\n\n  canActivate(): Observable<boolean | UrlTree> {\n    if (\n      this.checkoutConfigService.isExpressCheckout() &&\n      !this.activeCartService.isGuestCart()\n    ) {\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\n        switchMap((expressCheckoutPossible: boolean) => {\n          return expressCheckoutPossible\n            ? of(\n                this.router.parseUrl(\n                  this.routingConfigService.getRouteConfig(\n                    this.checkoutConfigService.getCheckoutStepRoute(\n                      CheckoutStepType.REVIEW_ORDER\n                    )\n                  ).paths[0]\n                )\n              )\n            : this.firstStep$;\n        })\n      );\n    }\n    return this.firstStep$;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, Config, provideDefaultConfig } from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n    { provide: CheckoutConfig, useExisting: Config },\n  ],\n  declarations: [CheckoutOrchestratorComponent],\n  entryComponents: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected activeCartService: ActiveCartService) {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [CommonModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  entryComponents: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n})\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit() {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  entryComponents: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  RoutingConfigService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  cart$: Observable<Cart>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.cart$ = this.activeCartService.getActive();\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  entryComponents: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { CheckoutStep } from '../../model/checkout-step.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n\n  getTabIndex(stepIndex: number): number {\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\n  }\n\n  isActive(index: number): boolean {\n    return index === this.activeStepIndex;\n  }\n\n  isDisabled(index: number): boolean {\n    return index > this.activeStepIndex;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  Config,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  declarations: [CheckoutProgressComponent],\n  entryComponents: [CheckoutProgressComponent],\n  exports: [CheckoutProgressComponent],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n    { provide: CheckoutConfig, useExisting: Config },\n  ],\n})\nexport class CheckoutProgressModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutDeliveryService,\n  DeliveryMode,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  currentDeliveryModeId: string;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n  private allowRedirect = false;\n\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private routingService: RoutingService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\n\n    this.deliveryModeSub = this.supportedDeliveryModes$\n      .pipe(\n        withLatestFrom(\n          this.checkoutDeliveryService\n            .getSelectedDeliveryMode()\n            .pipe(\n              map((deliveryMode: DeliveryMode) =>\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\n              )\n            )\n        )\n      )\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\n        if (!code && deliveryModes && deliveryModes.length) {\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\n            deliveryModes\n          );\n        }\n        if (\n          this.allowRedirect &&\n          !!code &&\n          code === this.currentDeliveryModeId\n        ) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        this.currentDeliveryModeId = code;\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n        }\n      });\n  }\n\n  changeMode(code: string): void {\n    if (code !== this.currentDeliveryModeId) {\n      this.currentDeliveryModeId = code;\n    }\n  }\n\n  next(): void {\n    this.allowRedirect = true;\n    if (this.mode.valid && this.mode.value) {\n      if (!this.currentDeliveryModeId) {\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\n      }\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\n    }\n    this.routingService.go(this.checkoutStepUrlNext);\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  entryComponents: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Country, Region, UserAddressService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-billing-address-form',\n  templateUrl: './billing-address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillingAddressFormComponent implements OnInit {\n  regions$: Observable<Region[]>;\n\n  @Input()\n  billingAddress: FormGroup;\n\n  @Input()\n  countries$: Observable<Country[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  constructor(protected userAddressService: UserAddressService) {}\n\n  ngOnInit() {\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.billingAddress.get('region.isocodeShort');\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddress['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.billingAddress['controls'].region['controls'].isocodeShort.setValue(\n      region.isocodeShort\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { I18nModule } from '@spartacus/core';\nimport { BillingAddressFormComponent } from './billing-address-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    I18nModule,\n  ],\n  declarations: [BillingAddressFormComponent],\n  exports: [BillingAddressFormComponent],\n})\nexport class BillingAddressFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  LoaderState,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\n\ntype monthType = { id: number; name: string };\ntype yearType = { id: number; name: number };\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private checkboxSub: Subscription;\n  private addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n  months: monthType[] = [];\n  years: yearType[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  loading$: Observable<LoaderState<void>>;\n  sameAsShippingAddress = true;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  payment: FormGroup = this.fb.group({\n    defaultPayment: [false],\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    cardType: this.fb.group({\n      code: ['', Validators.required],\n    }),\n    expiryMonth: ['', Validators.required],\n    expiryYear: ['', Validators.required],\n    cvn: ['', Validators.required],\n  });\n\n  billingAddress: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    private fb: FormBuilder,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap(countries => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap(cardTypes => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\n\n    this.checkboxSub = this.showSameAsShippingAddressCheckbox().subscribe(\n      (shouldShowCheckbox: boolean) => {\n        // this operation makes sure the checkbox is not checked if not shown and vice versa\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      }\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.next();\n        } else if (results.decision === 'REJECT') {\n          this.globalMessageService.add(\n            { key: 'addressForm.invalidAddress' },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n    for (let i = 0; i < 10; i++) {\n      this.years.push({ id: i + 1, name: year + i });\n    }\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push({ id: j, name: '0' + j.toString() });\n      } else {\n        this.months.push({ id: j, name: j.toString() });\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.payment.value.defaultPayment = !this.payment.value.defaultPayment;\n  }\n\n  paymentSelected(card: CardType): void {\n    this.payment['controls'].cardType['controls'].code.setValue(card.code);\n  }\n\n  monthSelected(month: monthType): void {\n    this.payment['controls'].expiryMonth.setValue(month.name);\n  }\n\n  yearSelected(year: yearType): void {\n    this.payment['controls'].expiryYear.setValue(year.name);\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  /**\n   * Check if the shipping address can also be a billing address\n   *\n   * @memberof PaymentFormComponent\n   */\n  showSameAsShippingAddressCheckbox(): Observable<boolean> {\n    return combineLatest([this.countries$, this.shippingAddress$]).pipe(\n      map(([countries, address]) => {\n        return (\n          address !== undefined &&\n          address.country !== undefined &&\n          !!countries.filter(\n            (country: Country): boolean =>\n              country.isocode === address.country.isocode\n          ).length\n        );\n      })\n    );\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    };\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddress.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.checkoutDeliveryService.verifyAddress(this.billingAddress.value);\n    }\n  }\n\n  next(): void {\n    this.setPaymentDetails.emit({\n      paymentDetails: this.payment.value,\n      billingAddress: this.sameAsShippingAddress\n        ? null\n        : this.billingAddress.value,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.checkboxSub) {\n      this.checkboxSub.unsubscribe();\n    }\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { BillingAddressFormModule } from '../billing-address-form/billing-address-form.module';\nimport { PaymentFormComponent } from './payment-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    BillingAddressFormModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n  ],\n  declarations: [PaymentFormComponent],\n  entryComponents: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  RoutingService,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  newPaymentFormManuallyOpened = false;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  selectedPayment: PaymentDetails;\n  allowRouting: boolean;\n  isGuestCheckout = false;\n\n  private getPaymentDetailsSub: Subscription;\n\n  private deliveryAddress: Address;\n  private checkoutStepUrlNext: string;\n  private checkoutStepUrlPrevious: string;\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.allowRouting = false;\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n\n    if (!this.activeCartService.isGuestCart()) {\n      this.userPaymentService.loadPaymentMethods();\n    } else {\n      this.isGuestCheckout = true;\n    }\n\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .pipe(take(1))\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n    this.getPaymentDetailsSub = this.checkoutPaymentService\n      .getPaymentDetails()\n      .pipe(\n        filter(paymentInfo => paymentInfo && !!Object.keys(paymentInfo).length)\n      )\n      .subscribe(paymentInfo => {\n        if (this.allowRouting) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        if (!paymentInfo['hasError']) {\n          this.selectedPayment = paymentInfo;\n        } else {\n          Object.keys(paymentInfo).forEach(key => {\n            if (key.startsWith('InvalidField')) {\n              this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\n            }\n          });\n          this.checkoutService.clearCheckoutStep(3);\n        }\n      });\n  }\n\n  getCardContent(payment: PaymentDetails): Observable<Card> {\n    if (!this.selectedPayment && payment.defaultPayment) {\n      this.selectedPayment = payment;\n    }\n\n    return combineLatest([\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          textExpires,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          return this.createCard(payment, {\n            textExpires,\n            textUseThisPayment,\n            textDefaultPaymentMethod,\n            textSelected,\n          });\n        }\n      )\n    );\n  }\n\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\n    this.selectedPayment = paymentDetails;\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n    isNewPayment = true,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n    isNewPayment?: boolean;\n  }): void {\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress || this.deliveryAddress;\n\n    if (isNewPayment) {\n      this.checkoutPaymentService.createPaymentDetails(details);\n    } else if (this.selectedPayment && this.selectedPayment.id === details.id) {\n      this.checkoutPaymentService.setPaymentDetails(details);\n    }\n\n    this.allowRouting = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.getPaymentDetailsSub) {\n      this.getPaymentDetailsSub.unsubscribe();\n    }\n\n    this.checkoutPaymentService.paymentProcessSuccess();\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n\n  protected sendPaymentMethodFailGlobalMessage(msg: string) {\n    this.globalMessageService.add(\n      {\n        key: 'paymentMethods.invalidField',\n        params: { field: msg },\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  protected createCard(paymentDetails, cardLabels) {\n    return {\n      title: paymentDetails.defaultPayment\n        ? cardLabels.textDefaultPaymentMethod\n        : '',\n      textBold: paymentDetails.accountHolderName,\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\n      img: this.getCardIcon(paymentDetails.cardType.code),\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\n      header:\n        this.selectedPayment && this.selectedPayment.id === paymentDetails.id\n          ? cardLabels.textSelected\n          : undefined,\n    };\n  }\n\n  goNext(): void {\n    this.setPaymentDetails({\n      paymentDetails: this.selectedPayment,\n      isNewPayment: false,\n    });\n  }\n\n  goPrevious(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodComponent],\n  entryComponents: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { CheckoutService, RoutingService } from '@spartacus/core';\n\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  tAndCToggler = false;\n  placeOrderSubscription: Subscription;\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private routingService: RoutingService\n  ) {}\n\n  toggleTAndC(): void {\n    this.tAndCToggler = !this.tAndCToggler;\n  }\n\n  placeOrder(): void {\n    this.checkoutService.placeOrder();\n  }\n\n  ngOnInit(): void {\n    this.placeOrderSubscription = this.checkoutService\n      .getOrderDetails()\n      .pipe(filter(order => Object.keys(order).length !== 0))\n      .subscribe(() => {\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.placeOrderSubscription) {\n      this.placeOrderSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PlaceOrderComponent } from './place-order.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  entryComponents: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentDetailsSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.PAYMENT_DETAILS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map(paymentDetails =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  Cart,\n  ActiveCartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  TranslationService,\n  UserAddressService,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutStepType } from '../../model/index';\nimport { CheckoutConfigService } from '../../services/index';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent implements OnInit {\n  checkoutStepType = CheckoutStepType;\n  entries$: Observable<OrderEntry[]>;\n  cart$: Observable<Cart>;\n  deliveryMode$: Observable<DeliveryMode>;\n  countryName$: Observable<string>;\n  deliveryAddress$: Observable<Address>;\n  paymentDetails$: Observable<PaymentDetails>;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected userAddressService: UserAddressService,\n    protected activeCartService: ActiveCartService,\n    protected translation: TranslationService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected promotionService: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.entries$ = this.activeCartService.getEntries();\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n\n    this.deliveryMode$ = this.checkoutDeliveryService\n      .getSelectedDeliveryMode()\n      .pipe(\n        tap((selected: DeliveryMode) => {\n          if (selected === null) {\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\n          }\n        })\n      );\n\n    this.countryName$ = this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address.country.isocode)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress.country.isocode;\n        }\n\n        let region = '';\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [deliveryMode.description],\n        };\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\n    const step = this.checkoutConfigService.getCheckoutStep(stepType);\n    return step && step.routeName;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\nimport { PromotionsModule } from '../promotions/promotions.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n            PaymentDetailsSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  entryComponents: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CheckoutDeliveryService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  regionsSub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  address: FormGroup = this.fb.group({\n    defaultAddress: [false],\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap(countries => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map(titles => {\n        titles.sort(sortTitles);\n        const noneTitle = { code: '', name: 'Title' };\n        return [noneTitle, ...titles];\n      })\n    );\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.address.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.submitAddress.emit(this.address.value);\n        } else if (results.decision === 'REJECT') {\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n          if (\n            results.errors.errors.some(error => error.subject === 'titleCode')\n          ) {\n            this.globalMessageService.add(\n              { key: 'addressForm.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          } else {\n            this.globalMessageService.add(\n              { key: 'addressForm.invalidAddress' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\n      this.address.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n  }\n\n  titleSelected(title: Title): void {\n    this.address['controls'].titleCode.setValue(title.code);\n  }\n\n  countrySelected(country: Country): void {\n    this.address['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.address['controls'].region['controls'].isocode.setValue(\n      region.isocode\n    );\n  }\n\n  toggleDefaultAddress(): void {\n    this.address['controls'].defaultAddress.setValue(\n      this.address.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.address.controls['region'].value.isocode) {\n      this.regionsSub = this.regions$.pipe(take(1)).subscribe(regions => {\n        const obj = regions.find(\n          region =>\n            region.isocode === this.address.controls['region'].value.isocode\n        );\n        Object.assign(this.address.value.region, {\n          isocodeShort: obj.isocodeShort,\n        });\n      });\n    }\n\n    if (this.address.dirty) {\n      this.checkoutDeliveryService.verifyAddress(this.address.value);\n    } else {\n      // address form value not changed\n      // ignore duplicate address\n      this.submitAddress.emit(undefined);\n    }\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.address.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(address => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.address.value.titleCode,\n                phone: this.address.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.address.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.checkoutDeliveryService.clearAddressVerificationResults();\n\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n\n    if (this.regionsSub) {\n      this.regionsSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  entryComponents: [SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\n})\nexport class AddressFormModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  RoutingService,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit {\n  existingAddresses$: Observable<Address[]>;\n  newAddressFormManuallyOpened = false;\n  isLoading$: Observable<boolean>;\n  cards$: Observable<CardWithAddress[]>;\n  selectedAddress$: Observable<Address>;\n  forceLoader = false; // this helps with smoother steps transition\n  isGuestCheckout = false;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected routingService: RoutingService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\n    this.existingAddresses$ = this.userAddressService.getAddresses();\n    this.selectedAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n\n    this.cards$ = combineLatest([\n      this.existingAddresses$,\n      this.selectedAddress$,\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          addresses,\n          selected,\n          textDefaultShippingAddress,\n          textShipToThisAddress,\n          textSelected,\n        ]) => {\n          // Select default address if none selected\n          if (\n            addresses.length &&\n            (!selected || Object.keys(selected).length === 0)\n          ) {\n            const defaultAddress = addresses.find(\n              address => address.defaultAddress\n            );\n            selected = defaultAddress;\n            this.selectAddress(defaultAddress);\n          }\n          return addresses.map(address => {\n            const card = this.getCardContent(\n              address,\n              selected,\n              textDefaultShippingAddress,\n              textShipToThisAddress,\n              textSelected\n            );\n            return {\n              address,\n              card,\n            };\n          });\n        }\n      )\n    );\n\n    if (!this.activeCartService.isGuestCart()) {\n      this.userAddressService.loadAddresses();\n    } else {\n      this.isGuestCheckout = true;\n    }\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    };\n  }\n\n  selectAddress(address: Address): void {\n    this.checkoutDeliveryService.setDeliveryAddress(address);\n  }\n\n  addAddress(address: Address): void {\n    const selectedSub = this.selectedAddress$.subscribe(selected => {\n      if (selected && selected.shippingAddress) {\n        this.goNext();\n        selectedSub.unsubscribe();\n      }\n    });\n\n    this.forceLoader = true;\n\n    this.existingAddresses$.pipe(take(1)).subscribe(addresses => {\n      addresses.includes(address)\n        ? this.selectAddress(address)\n        : this.checkoutDeliveryService.createAndSetAddress(address);\n    });\n  }\n\n  showNewAddressForm(): void {\n    this.newAddressFormManuallyOpened = true;\n  }\n\n  hideNewAddressForm(goPrevious: boolean = false): void {\n    this.newAddressFormManuallyOpened = false;\n    if (goPrevious) {\n      this.goPrevious();\n    }\n  }\n\n  goNext(): void {\n    this.routingService.go(\n      this.checkoutConfigService.getNextCheckoutStepUrl(this.activatedRoute)\n    );\n  }\n\n  goPrevious(): void {\n    this.routingService.go(\n      this.checkoutConfigService.getPreviousCheckoutStepUrl(\n        this.activatedRoute\n      ) || 'cart'\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\n// tslint:disable-next-line:max-line-length\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { CheckoutDetailsLoadedGuard } from '../../guards/checkout-details-loaded.guard';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            CheckoutDetailsLoadedGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  entryComponents: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotCheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authService.getUserToken().pipe(\n      map(token => {\n        if (token.access_token) {\n          this.routingService.go({ cxRoute: 'home' });\n        } else if (this.activeCartService.isGuestCart()) {\n          this.routingService.go({ cxRoute: 'cart' });\n          return false;\n        }\n        return !token.access_token;\n      })\n    );\n  }\n}\n","// given that we're likely going to refactor the directives, we're\n// NOT exposing all it to the public API.\nexport * from './focus.directive';\nexport { FocusConfig } from './keyboard-focus.model';\nexport * from './keyboard-focus.module';\nexport * from './services/index';\n\n// export * from './autofocus/index';\n// export * from './base/index';\n// export * from './block/index';\n// export * from './escape/index';\n// export * from './lock/index';\n// export * from './persist/index';\n// export * from './tab/index';\n// export * from './trap/index';\n// export * from './visible/index';\n// export * from './keyboard-focus.model';\n","export abstract class SkipLinkConfig {\n  skipLinks?: SkipLink[];\n}\n\nexport abstract class SkipLink {\n  key: string;\n  i18nKey: string;\n  target?: HTMLElement;\n  position?: SkipLinkScrollPosition;\n}\n\nexport enum SkipLinkScrollPosition {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { KeyboardFocusService } from '../../keyboard-focus';\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkipLinkService {\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\n\n  constructor(\n    protected config: SkipLinkConfig,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  getSkipLinks(): Observable<SkipLink[]> {\n    return this.skipLinks$;\n  }\n\n  add(key: string, target: HTMLElement): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      skipLink => skipLink.key === key\n    );\n\n    if (found) {\n      const existing: SkipLink[] = this.skipLinks$.value;\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\n        target,\n        i18nKey: found.i18nKey,\n        position: found.position,\n        key,\n      });\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  remove(key: string): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      skipLink => skipLink.key === key\n    );\n\n    if (found) {\n      let existing: SkipLink[] = this.skipLinks$.value;\n      existing = existing.filter(skipLink => skipLink.key !== key);\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  scrollToTarget(skipLink: SkipLink): void {\n    const target =\n      skipLink.target instanceof HTMLElement\n        ? skipLink.target\n        : (skipLink.target as Element).parentElement;\n\n    // focus first focusable element in the\n    const firstFocusable =\n      this.keyboardFocusService.findFirstFocusable(target) || target;\n\n    // we force a tabindex if not available, to ensure we can focus into the element\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\n    if (!hasTabindex) {\n      firstFocusable.setAttribute('tabindex', '-1');\n    }\n\n    firstFocusable.focus();\n\n    // drop the tmp tabindex\n    if (!hasTabindex) {\n      firstFocusable.removeAttribute('tabindex');\n    }\n  }\n\n  protected getSkipLinkIndexInArray(key: string): number {\n    let index: number = this.config.skipLinks.findIndex(\n      skipLink => skipLink.key === key\n    );\n\n    while (index > 0) {\n      index--;\n      const previous: SkipLink = this.config.skipLinks[index];\n      if (previous) {\n        const existing: SkipLink[] = this.skipLinks$.value;\n        const found: number = existing.findIndex(\n          skipLink => skipLink.key === previous.key\n        );\n        if (found > -1) {\n          return found + 1;\n        }\n      }\n    }\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SkipLink } from '../config/skip-link.config';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Component({\n  selector: 'cx-skip-link',\n  templateUrl: './skip-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkipLinkComponent {\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\n\n  constructor(private skipLinkService: SkipLinkService) {}\n\n  scrollToTarget(skipLink: SkipLink): void {\n    this.skipLinkService.scrollToTarget(skipLink);\n  }\n}\n","import { SkipLinkConfig } from './skip-link.config';\n\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\n  skipLinks: [\n    {\n      key: 'cx-header',\n      i18nKey: 'skipLink.labels.header',\n    },\n    {\n      key: 'cx-main',\n      i18nKey: 'skipLink.labels.main',\n    },\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\n  ],\n};\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Directive({\n  selector: '[cxSkipLink]',\n})\nexport class SkipLinkDirective implements OnInit, OnDestroy {\n  @Input() cxSkipLink: string;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected skipLinkService: SkipLinkService\n  ) {}\n\n  ngOnInit(): void {\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.skipLinkService.remove(this.cxSkipLink);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\nimport {\n  Config,\n  ConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\nimport { SkipLinkComponent } from './component/skip-link.component';\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\nimport { SkipLinkConfig } from './config/skip-link.config';\nimport { SkipLinkDirective } from './directive/skip-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(defaultSkipLinkConfig),\n    KeyboardFocusModule,\n  ],\n  declarations: [SkipLinkComponent, SkipLinkDirective],\n  exports: [SkipLinkDirective],\n  entryComponents: [SkipLinkComponent],\n\n  providers: [\n    provideDefaultConfig(defaultSkipLinkConfig),\n    { provide: SkipLinkConfig, useExisting: Config },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: skipLinkFactory,\n      deps: [ComponentFactoryResolver, OutletService],\n      multi: true,\n    },\n  ],\n})\nexport class SkipLinkModule {}\n\n/**\n * Adds the skip link component before the cx-storefront.\n */\nexport function skipLinkFactory(\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService\n) {\n  const isReady = () => {\n    const factory = componentFactoryResolver.resolveComponentFactory(\n      SkipLinkComponent\n    );\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\n  };\n  return isReady;\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter(event => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  exports: [HamburgerMenuComponent],\n  entryComponents: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","import { NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { LayoutConfig } from './config/layout-config';\n\n@NgModule({\n  imports: [OutletRefModule],\n  providers: [{ provide: LayoutConfig, useExisting: Config }],\n  exports: [OutletRefModule],\n})\nexport class LayoutModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  consentGiven = false;\n\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Input()\n  requiredConsents: string[] = [];\n\n  @Input()\n  isAnonymousConsentsEnabled = false;\n\n  @Input()\n  consent: AnonymousConsent;\n\n  // TODO(issue:4989) Anonymous consents - remove\n  @Input()\n  isLevel13 = false;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.isAnonymousConsentsEnabled && this.consent) {\n      this.consentGiven = Boolean(\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    } else {\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n          this.consentGiven = false;\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n          this.consentGiven = true;\n        }\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentGiven = !this.consentGiven;\n\n    this.consentChanged.emit({\n      given: this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n\n  isRequired(templateId: string): boolean {\n    return this.isAnonymousConsentsEnabled\n      ? this.requiredConsents.includes(templateId)\n      : false;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ANONYMOUS_CONSENTS_FEATURE,\n  AuthService,\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  isFeatureEnabled,\n  isFeatureLevel,\n  UserConsentService,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concat,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  skipWhile,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  requiredConsents: string[] = [];\n\n  isAnonymousConsentsEnabled = isFeatureEnabled(\n    this.anonymousConsentsConfig,\n    ANONYMOUS_CONSENTS_FEATURE\n  );\n\n  // TODO(issue:4989) Anonymous consents - remove\n  isLevel13 = isFeatureLevel(this.anonymousConsentsConfig, '1.3');\n\n  constructor(\n    userConsentService: UserConsentService,\n    globalMessageService: GlobalMessageService,\n    anonymousConsentsConfig: AnonymousConsentsConfig,\n    anonymousConsentsService: AnonymousConsentsService,\n    authService: AuthService\n  );\n\n  /**\n   * @deprecated since version 1.3\n   * Instead, use:\n   ```ts\n   constructor(\n     userConsentService: UserConsentService,\n     globalMessageService: GlobalMessageService,\n     anonymousConsentsConfig : AnonymousConsentsConfig,\n     anonymousConsentsService : AnonymousConsentsService,\n     authService: AuthService,\n   ) \n   ```\n   */\n  constructor(\n    userConsentService: UserConsentService,\n    globalMessageService: GlobalMessageService\n  );\n  constructor(\n    private userConsentService: UserConsentService,\n    private globalMessageService: GlobalMessageService,\n    private anonymousConsentsConfig?: AnonymousConsentsConfig,\n    private anonymousConsentsService?: AnonymousConsentsService,\n    private authService?: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n      this.authService.isUserLoggedIn(),\n      this.allConsentsLoading,\n    ]).pipe(\n      map(\n        ([\n          consentLoading,\n          giveConsentLoading,\n          withdrawConsentLoading,\n          isUserLoggedIn,\n          allConsentsLoading,\n        ]) =>\n          consentLoading ||\n          giveConsentLoading ||\n          withdrawConsentLoading ||\n          !isUserLoggedIn ||\n          allConsentsLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      withLatestFrom(\n        this.anonymousConsentsService.getTemplates(),\n        this.authService.isUserLoggedIn()\n      ),\n      filter(\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\n      ),\n      tap(([templateList, _anonymousTemplates]) => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      }),\n      map(([templateList, anonymousTemplates]) => {\n        if (!this.isAnonymousConsentsEnabled) {\n          return templateList;\n        }\n\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n            )\n          ) {\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\n          }\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents\n                .consentManagementPage\n            )\n          ) {\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\n          }\n        }\n\n        return templateList;\n      })\n    );\n  }\n\n  private hideAnonymousConsents(\n    templateList: ConsentTemplate[],\n    anonymousTemplates: ConsentTemplate[] = []\n  ): ConsentTemplate[] {\n    let hideTemplateIds: string[] = [];\n\n    if (\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .showAnonymousConsents\n    ) {\n      hideTemplateIds = anonymousTemplates.map(template => template.id);\n      return this.userConsentService.filterConsentTemplates(\n        templateList,\n        hideTemplateIds\n      );\n    }\n\n    if (\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents.length > 0\n    ) {\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\n        .consentManagementPage.hideConsents;\n    }\n\n    return this.userConsentService.filterConsentTemplates(\n      templateList,\n      hideTemplateIds\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe(success => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap(withdrawalSuccess => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe(withdrawalSuccess =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  rejectAll(templates: ConsentTemplate[] = []): void {\n    const consentsToWithdraw: ConsentTemplate[] = [];\n    templates.forEach(template => {\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n        consentsToWithdraw.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupWithdrawalStream(consentsToWithdraw)\n        .pipe(tap(_timesLoaded => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupWithdrawalStream(\n    consentsToWithdraw: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getWithdrawConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter(loading => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const withdraw$ = count$.pipe(\n      tap(i => {\n        if (i < consentsToWithdraw.length) {\n          this.userConsentService.withdrawConsent(\n            consentsToWithdraw[i].currentConsent.code\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = withdraw$.pipe(\n      filter(timesLoaded => timesLoaded === consentsToWithdraw.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  allowAll(templates: ConsentTemplate[] = []): void {\n    const consentsToGive: ConsentTemplate[] = [];\n    templates.forEach(template => {\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n\n        consentsToGive.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupGiveStream(consentsToGive)\n        .pipe(tap(_timesLoaded => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupGiveStream(\n    consentsToGive: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getGiveConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter(loading => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const giveConsent$ = count$.pipe(\n      tap(i => {\n        if (i < consentsToGive.length) {\n          this.userConsentService.giveConsent(\n            consentsToGive[i].id,\n            consentsToGive[i].version\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = giveConsent$.pipe(\n      filter(timesLoaded => timesLoaded === consentsToGive.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    if (!this.isAnonymousConsentsEnabled) {\n      return false;\n    }\n\n    return (\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n        template.id\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.allConsentsLoading.unsubscribe();\n\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\n  entryComponents: [ConsentManagementComponent],\n})\nexport class ConsentManagementModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { AnonymousConsentDialogComponent } from './dialog/anonymous-consent-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConsentManagementModule,\n  ],\n  declarations: [AnonymousConsentDialogComponent],\n  entryComponents: [AnonymousConsentDialogComponent],\n  exports: [AnonymousConsentDialogComponent],\n})\nexport class AnonymousConsentsModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  FocusConfig,\n  KeyboardFocusService,\n} from '../a11y/keyboard-focus/index';\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  // required by esc focus\n  @HostBinding('tabindex') tabindex = '0';\n\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\n\n  private keyboardFocusConfig: FocusConfig = {\n    focusOnEscape: true,\n    focusOnDoubleEscape: true,\n  };\n\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    this.keyboardFocusService.handleEscape(\n      this.elementRef.nativeElement,\n      this.keyboardFocusConfig,\n      event\n    );\n  }\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe(val => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: MouseEvent) {\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FeaturesConfigModule } from '@spartacus/core';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\nimport { AnonymousConsentsModule } from '../../shared/components/anonymous-consents/anonymous-consents.module';\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\nimport { StorefrontComponent } from './storefront.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageSlotModule,\n    AnonymousConsentsModule,\n    FeaturesConfigModule,\n\n    SkipLinkModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class MainModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<\n    Observable<ContentSlotComponentData>[]\n  > = this.componentData$.pipe(\n    map(data => data.banners.trim().split(' ')),\n    map(codes => codes.map(code => this.cmsService.getComponentData(code)))\n  );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\n  providers: [\n    provideDefaultConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n  ],\n  declarations: [BannerCarouselComponent],\n  entryComponents: [BannerCarouselComponent],\n  exports: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  entryComponents: [BannerComponent],\n  exports: [BannerComponent],\n})\nexport class BannerModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n  entryComponents: [LinkComponent],\n})\nexport class LinkModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParagraphComponent } from './paragraph.component';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n  entryComponents: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  CmsService,\n  CMSTabParagraphContainer,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  distinctUntilKeyChanged,\n  map,\n  switchMap,\n} from 'rxjs/operators';\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  activeTabNum = 0;\n\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\n    ComponentWrapperDirective\n  >;\n\n  tabTitleParams: Observable<any>[] = [];\n\n  subscription: Subscription;\n\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService,\n    // tslint:disable-next-line:unified-signatures\n    winRef: WindowRef\n  );\n  /**\n   * @deprecated since 1.4\n   *\n   * TODO(issue:#5813) Deprecated since 1.4\n   */\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService\n  );\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    private cmsService: CmsService,\n    private winRef?: WindowRef\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    distinctUntilKeyChanged('components'),\n    switchMap(data =>\n      combineLatest(\n        data.components.split(' ').map(component =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map(tab => {\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n\n              return {\n                ...tab,\n                title: `${data.uid}.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number): void {\n    this.activeTabNum = tabNum;\n  }\n\n  ngOnInit(): void {\n    if (this.winRef && this.winRef.nativeWindow) {\n      const routeState =\n        this.winRef.nativeWindow.history &&\n        this.winRef.nativeWindow.history.state;\n\n      if (routeState && routeState['activeTab']) {\n        this.activeTabNum = routeState['activeTab'];\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\n    // In this case, the title parameters are directly pulled from them.\n    // If the sub cms components data does not exist, it should should be loaded first.\n    // In this case, listen to the changes to wait for them to be created.\n    if (this.children.length > 0) {\n      this.getTitleParams(this.children);\n    } else {\n      this.subscription = this.children.changes.subscribe(\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\n          this.getTitleParams(tabComps)\n      );\n    }\n  }\n\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\n    children.forEach(comp => {\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\n      } else {\n        this.tabTitleParams.push(null);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [TabParagraphContainerComponent],\n  entryComponents: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressBookComponentService {\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  TranslationService,\n  UserAddressService,\n  CheckoutDeliveryService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { AddressBookComponentService } from './address-book.component.service';\nimport { Card } from '../../../shared/components/card';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  cards$: Observable<Card[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n  editCard: string;\n\n  constructor(\n    public service: AddressBookComponentService,\n    protected translation: TranslationService,\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n\n  getCardContent(address: Address) {\n    return combineLatest([\n      this.translation.translate('addressCard.default'),\n      this.translation.translate('addressCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('common.edit'),\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\n    ]).pipe(\n      map(\n        ([\n          defaultText,\n          setAsDefaultText,\n          textDelete,\n          textEdit,\n          textVerifyDeleteMsg,\n        ]) => {\n          let region = '';\n\n          if (address.region && address.region.isocode) {\n            region = address.region.isocode + ', ';\n          }\n\n          const actions: { name: string; event: string }[] = [];\n          if (!address.defaultAddress) {\n            actions.push({ name: setAsDefaultText, event: 'default' });\n          }\n          actions.push({ name: textEdit, event: 'edit' });\n          actions.push({ name: textDelete, event: 'delete' });\n\n          return {\n            textBold: address.firstName + ' ' + address.lastName,\n            text: [\n              address.line1,\n              address.line2,\n              address.town + ', ' + region + address.country.isocode,\n              address.postalCode,\n              address.phone,\n            ],\n            actions: actions,\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\n            deleteMsg: textVerifyDeleteMsg,\n          };\n        }\n      )\n    );\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  deleteAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  setEdit(addressId: string): void {\n    if (this.editCard !== addressId) {\n      this.editCard = addressId;\n    } else {\n      this.deleteAddress(addressId);\n    }\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent],\n  exports: [AddressBookComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          providers: [\n            {\n              provide: AddressBookComponentService,\n              useClass: AddressBookComponentService,\n              deps: [UserAddressService],\n            },\n          ],\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    UserAddressService,\n    AddressBookComponentService,\n  ],\n  entryComponents: [AddressBookComponent],\n})\nexport class AddressBookModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-close-account-modal',\n  templateUrl: './close-account-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private subscription = new Subscription();\n  userToken$: Observable<UserToken>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    protected modalService: ModalService,\n    private userService: UserService,\n    private authService: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private routingService: RoutingService,\n    private translationService: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.userToken$ = this.authService.getUserToken();\n    this.userService.resetRemoveUserProcessState();\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultError()\n        .subscribe(error => this.onError(error))\n    );\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedSuccessfully')\n        .pipe(first())\n        .subscribe(text => {\n          this.globalMessageService.add(\n            text,\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        });\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onError(error: boolean): void {\n    if (error) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedFailure')\n        .pipe(first())\n        .subscribe(text => {\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\n        });\n    }\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  closeAccount() {\n    this.userService.remove();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CloseAccountComponent: {\n          component: CloseAccountComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\n})\nexport class CloseAccountModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  form: FormGroup;\n  submited = false;\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      userEmail: [\n        '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n    });\n  }\n\n  requestForgotPasswordEmail() {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n    this.userService.requestForgotPasswordEmail(this.form.value.userEmail);\n    this.routingService.go({ cxRoute: 'login' });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ForgotPasswordComponent } from './forgot-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ForgotPasswordComponent],\n  exports: [ForgotPasswordComponent],\n  entryComponents: [ForgotPasswordComponent],\n})\nexport class ForgotPasswordModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\n\n@Component({\n  selector: 'cx-amend-order-actions',\n  templateUrl: './amend-order-actions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmendOrderActionsComponent {\n  @Input() orderCode: string;\n  @Input() isValid: string;\n  @Input() backRoute: string;\n  @Input() forwardRoute: string;\n\n  @HostBinding('class') styles = 'row';\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Order, OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { AmendOrderType } from './amend-order.model';\n\nfunction ValidateQuantity(control: FormControl) {\n  let q = 0;\n  Object.keys(control.value).forEach(key => (q += control.value[key]));\n\n  return q > 0 ? null : { required: true };\n}\n\n@Injectable()\nexport abstract class OrderAmendService {\n  protected amendType: AmendOrderType;\n  protected form: FormGroup;\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  /**\n   * Returns entries for the given order.\n   */\n  abstract getEntries(): Observable<OrderEntry[]>;\n\n  /**\n   * Returns entries with an amended quantity.\n   */\n  getAmendedEntries(): Observable<OrderEntry[]> {\n    return this.getForm().pipe(\n      switchMap(form => {\n        return this.getEntries().pipe(\n          map(entries =>\n            entries.filter(entry => this.getFormControl(form, entry).value > 0)\n          )\n        );\n      })\n    );\n  }\n\n  /**\n   * Submits the amended order.\n   */\n  abstract save(): void;\n\n  getOrder(): Observable<Order> {\n    return this.orderDetailsService.getOrderDetails();\n  }\n\n  /**\n   * returns the form with form data at runtime\n   */\n  getForm(): Observable<FormGroup> {\n    return this.getOrder().pipe(\n      tap(order => {\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\n          this.buildForm(order);\n        }\n      }),\n      map(() => this.form)\n    );\n  }\n\n  private buildForm(order: Order): void {\n    this.form = new FormGroup({});\n    this.form.addControl('orderCode', new FormControl(order.code));\n\n    const entryGroup = new FormGroup({}, { validators: [ValidateQuantity] });\n    this.form.addControl('entries', entryGroup);\n\n    (order.entries || []).forEach(entry => {\n      const key = entry.entryNumber.toString();\n      entryGroup.addControl(\n        key,\n        new FormControl(0, {\n          validators: [\n            Validators.min(0),\n            Validators.max(this.getMaxAmendQuantity(entry)),\n          ],\n        })\n      );\n    });\n  }\n\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\n  }\n\n  /**\n   * As discussed, this calculation is moved to SPA side.\n   * The calculation and validation should be in backend facade layer.\n   */\n  getAmendedPrice(entry: OrderEntry): Price {\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\n    const amendedPrice = Object.assign({}, entry.basePrice);\n    amendedPrice.value =\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\n\n    amendedPrice.formattedValue = formatCurrency(\n      amendedPrice.value,\n      // TODO: user current language\n      'en',\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\n      amendedPrice.currencyIso\n    );\n\n    return amendedPrice;\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return (\n      (this.isCancellation()\n        ? entry.cancellableQuantity\n        : entry.returnableQuantity) || entry.quantity\n    );\n  }\n\n  isCancellation() {\n    return this.amendType === AmendOrderType.CANCEL;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Component({\n  selector: 'cx-amend-order-items',\n  templateUrl: './amend-order-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrReturnItemsComponent {\n  @Input() entries: OrderEntry[];\n  @Input() isConfirmation = false;\n\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\n    const control = <FormControl>(\n      form.get('entries').get(entry.entryNumber.toString())\n    );\n    if (this.isConfirmation) {\n      control.disable();\n    }\n    return control;\n  }\n\n  setAll(form: FormGroup): void {\n    this.entries.forEach(entry =>\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\n    );\n  }\n\n  getItemPrice(entry: OrderEntry): Price {\n    return this.orderAmendService.getAmendedPrice(entry);\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return this.orderAmendService.getMaxAmendQuantity(entry);\n  }\n\n  isCancellation() {\n    return this.orderAmendService.isCancellation();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\nimport { ItemCounterModule, MediaModule } from '../../../../../shared/index';\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [CancelOrReturnItemsComponent],\n  exports: [CancelOrReturnItemsComponent],\n  entryComponents: [CancelOrReturnItemsComponent],\n})\nexport class AmendOrderItemsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order-confirmation',\n  templateUrl: './cancel-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  RoutingService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationService extends OrderAmendService {\n  amendType = AmendOrderType.CANCEL;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected userOrderService: UserOrderService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n  /**\n   * Return cancellable order entries.\n   */\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter(order => Boolean(order)),\n      map(order =>\n        order.entries.filter(\n          entry => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter(entryNumber => <number>entries[entryNumber] > 0)\n      .map(\n        entryNumber =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.userOrderService.cancelOrder(orderCode, {\n      cancellationRequestEntryInputs: inputs,\n    });\n\n    this.userOrderService\n      .getCancelOrderSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave(orderCode));\n  }\n\n  private afterSave(orderCode: string): void {\n    this.userOrderService.resetCancelOrderProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\n        params: { orderCode },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routing.go({\n      cxRoute: 'orders',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderCancellationService } from './order-cancellation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderCancellationService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map(form => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancelConfirmation',\n        },\n      },\n    ]),\n    ReactiveFormsModule,\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderConfirmationComponent: {\n          component: CancelOrderConfirmationComponent,\n          guards: [AuthGuard, OrderCancellationGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderConfirmationComponent],\n  exports: [CancelOrderConfirmationComponent],\n  entryComponents: [CancelOrderConfirmationComponent],\n})\nexport class CancelOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order',\n  templateUrl: './cancel-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport {\n  CmsPageGuard,\n  PageLayoutComponent,\n} from '../../../../../../cms-structure/index';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderComponent } from './cancel-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancel',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderComponent: {\n          component: CancelOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderComponent],\n  exports: [CancelOrderComponent],\n  entryComponents: [CancelOrderComponent],\n})\nexport class CancelOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  OrderReturnRequestService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnService extends OrderAmendService {\n  amendType = AmendOrderType.RETURN;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter(order => !!order.entries),\n      map(order =>\n        order.entries.filter(\n          entry => entry.entryNumber !== -1 && entry.returnableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter(entryNumber => <number>entries[entryNumber] > 0)\n      .map(\n        entryNumber =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.returnRequestService.createOrderReturnRequest({\n      orderCode,\n      returnRequestEntryInputs: inputs,\n    });\n\n    this.returnRequestService\n      .getReturnRequestSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave());\n  }\n\n  private afterSave(): void {\n    this.returnRequestService\n      .getOrderReturnRequest()\n      .pipe(first(r => !!r))\n      .subscribe(returnRequest => {\n        const rma = returnRequest.rma;\n        this.globalMessageService.add(\n          {\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\n            params: { rma },\n          },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n        this.routing.go({\n          cxRoute: 'returnRequestDetails',\n          params: { rma },\n        });\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderReturnService } from './order-return.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderReturnService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map(form => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order-confirmation',\n  templateUrl: './return-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnGuard } from '../order-return.guard';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturnConfirmation',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderConfirmationComponent: {\n          component: ReturnOrderConfirmationComponent,\n          guards: [AuthGuard, OrderReturnGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderConfirmationComponent],\n  exports: [ReturnOrderConfirmationComponent],\n  entryComponents: [ReturnOrderConfirmationComponent],\n})\nexport class ReturnOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order',\n  templateUrl: './return-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderComponent } from './return-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturn',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderComponent: {\n          component: ReturnOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderComponent],\n  exports: [ReturnOrderComponent],\n  entryComponents: [ReturnOrderComponent],\n})\nexport class ReturnOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\nimport { OrderDetailsService } from '../order-details.service';\nimport {\n  cancelledValues,\n  completedValues,\n} from './order-consigned-entries/order-consigned-entries.model';\n\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected promotionService: PromotionService\n  ) {}\n\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n  orderPromotions$: Observable<PromotionResult[]>;\n  others$: Observable<Consignment[]>;\n  completed$: Observable<Consignment[]>;\n  cancel$: Observable<Consignment[]>;\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\n    this.completed$ = this.getExactStatus(completedValues);\n    this.cancel$ = this.getExactStatus(cancelledValues);\n  }\n\n  private getExactStatus(\n    consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map(order => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(consignment =>\n            consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n\n  private getOtherStatus(\n    ...consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map(order => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(\n            consignment => !consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-consigned-entries',\n  templateUrl: './order-consigned-entries.component.html',\n})\nexport class OrderConsignedEntriesComponent {\n  @Input() consignments: Consignment[];\n  @Input() order: Order;\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach(element => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${address.postalCode}`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\n\nconst moduleComponents = [\n  OrderDetailActionsComponent,\n  OrderDetailHeadlineComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n  TrackingEventsComponent,\n  ConsignmentTrackingComponent,\n  OrderConsignedEntriesComponent,\n];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    PromotionsModule,\n    UrlModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\n      },\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        AccountOrderDetailsActionsComponent: {\n          component: OrderDetailActionsComponent,\n        },\n        AccountOrderDetailsHeadlineComponent: {\n          component: OrderDetailHeadlineComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n      features: {\n        consignmentTracking: '1.2',\n      },\n    }),\n    OrderDetailsService,\n  ],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderHistoryComponent implements OnDestroy {\n  constructor(\n    private routing: RoutingService,\n    private userOrderService: UserOrderService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  orders$: Observable<\n    OrderHistoryList\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\n    tap((orders: OrderHistoryList) => {\n      if (orders.pagination) {\n        this.sortType = orders.pagination.sort;\n      }\n    })\n  );\n\n  isLoaded$: Observable<\n    boolean\n  > = this.userOrderService.getOrderHistoryListLoaded();\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\n    map(order => order.pagination.totalResults),\n    filter(totalResults => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { OrderHistoryComponent } from './order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orders' },\n      },\n    ]),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  entryComponents: [OrderHistoryComponent],\n})\nexport class OrderHistoryModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-overview',\n  templateUrl: './return-request-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  rma: string;\n  subscription: Subscription;\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService\n    .getReturnRequest()\n    .pipe(tap(returnRequest => (this.rma = returnRequest.rma)));\n\n  isCancelling$ = this.returnRequestService.isCancelling$;\n\n  ngOnInit(): void {\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\n      success => {\n        if (success) {\n          this.returnRequestService.cancelSuccess(this.rma);\n        }\n      }\n    );\n  }\n\n  cancelReturn(returnRequestCode: string): void {\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\n  }\n\n  back(): void {\n    this.returnRequestService.backToList();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { MediaModule } from '../../../../shared/index';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\n\nconst components = [\n  ReturnRequestOverviewComponent,\n  ReturnRequestItemsComponent,\n  ReturnRequestTotalsComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'returnRequestDetails' },\n      },\n    ]),\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    MediaModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnRequestOverviewComponent: {\n          component: ReturnRequestOverviewComponent,\n        },\n        ReturnRequestItemsComponent: {\n          component: ReturnRequestItemsComponent,\n        },\n        ReturnRequestTotalsComponent: {\n          component: ReturnRequestTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [...components],\n  exports: [...components],\n  entryComponents: [...components],\n})\nexport class ReturnRequestDetailModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  ReturnRequestList,\n  OrderReturnRequestService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { tap, map, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-return-request-list',\n  templateUrl: './order-return-request-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderReturnRequestListComponent implements OnDestroy {\n  constructor(\n    private returnRequestService: OrderReturnRequestService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  returnRequests$: Observable<\n    ReturnRequestList\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\n    tap((requestList: ReturnRequestList) => {\n      if (requestList.pagination) {\n        this.sortType = requestList.pagination.sort;\n      }\n    })\n  );\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\n    map(returnRequests => returnRequests.pagination.totalResults),\n    filter(totalResults => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.returnRequestService.clearOrderReturnRequestList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReturnRequests(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReturnRequests(event);\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.rma'),\n    ]).pipe(\n      map(([textByDate, textByRma]) => {\n        return {\n          byDate: textByDate,\n          byRMA: textByRma,\n        };\n      })\n    );\n  }\n\n  private fetchReturnRequests(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.returnRequestService.loadOrderReturnRequestList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderReturnRequestListComponent: {\n          component: OrderReturnRequestListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [OrderReturnRequestListComponent],\n  exports: [OrderReturnRequestListComponent],\n  entryComponents: [OrderReturnRequestListComponent],\n})\nexport class ReturnRequestListModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  iconTypes = ICON_TYPE;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap(paymentDetails => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find(paymentDetail => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n    cardType,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n            img: this.getCardIcon(cardType.code),\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n\n  getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n  entryComponents: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n})\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\n  token: string;\n  subscription = new Subscription();\n  submited = false;\n\n  form: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      repassword: ['', [Validators.required]],\n    },\n    { validator: this.matchPassword }\n  );\n\n  constructor(\n    private fb: FormBuilder,\n    private routingService: RoutingService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.routingService\n        .getRouterState()\n        .subscribe(state => (this.token = state.state.queryParams['token']))\n    );\n\n    this.subscription.add(\n      this.userService.isPasswordReset().subscribe(reset => {\n        if (reset) {\n          this.routingService.go({ cxRoute: 'login' });\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  resetPassword() {\n    this.submited = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    const password = this.form.value['password'];\n    this.userService.resetPassword(this.token, password);\n  }\n\n  private matchPassword(ac: AbstractControl) {\n    if (ac.get('password').value !== ac.get('repassword').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ResetPasswordComponent: {\n          component: ResetPasswordFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ResetPasswordFormComponent],\n  exports: [ResetPasswordFormComponent],\n  entryComponents: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-update-email-form',\n  templateUrl: './update-email-form.component.html',\n})\nexport class UpdateEmailFormComponent {\n  submited = false;\n\n  @Output()\n  saveEmail = new EventEmitter<{\n    newUid: string;\n    password: string;\n  }>();\n\n  @Output()\n  cancelEmail = new EventEmitter<void>();\n\n  form: FormGroup = this.fb.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      confirmEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    },\n    { validator: this.matchEmail }\n  );\n\n  constructor(private fb: FormBuilder) {}\n\n  isEmailConfirmNotValid(formControlName: string): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submited ||\n        (this.form.get(formControlName).touched &&\n          this.form.get(formControlName).dirty))\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(this.form, formControlName, this.submited);\n  }\n\n  onSubmit(): void {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const newUid = this.form.value.confirmEmail;\n    const password = this.form.value.password;\n\n    this.saveEmail.emit({ newUid, password });\n  }\n\n  onCancel(): void {\n    this.cancelEmail.emit();\n  }\n\n  private matchEmail(ac: AbstractControl): ValidationErrors {\n    if (ac.get('email').value !== ac.get('confirmEmail').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-email',\n  templateUrl: './update-email.component.html',\n})\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\n  constructor(\n    private routingService: RoutingService,\n    private globalMessageService: GlobalMessageService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  private subscription = new Subscription();\n  private newUid: string;\n  isLoading$: Observable<boolean>;\n\n  ngOnInit() {\n    this.userService.resetUpdateEmailResultState();\n    this.subscription.add(\n      this.userService\n        .getUpdateEmailResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\n    this.newUid = newUid;\n    this.userService.updateEmail(password, newUid);\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        {\n          key: 'updateEmailForm.emailUpdateSuccess',\n          params: { newUid: this.newUid },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.authService.logout();\n      this.routingService.go({ cxRoute: 'login' }, null, {\n        state: {\n          newUid: this.newUid,\n        },\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetUpdateEmailResultState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\nimport { UpdateEmailComponent } from './update-email.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          component: UpdateEmailComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\n  entryComponents: [UpdateEmailComponent],\n})\nexport class UpdateEmailModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-update-password-form',\n  templateUrl: './update-password-form.component.html',\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n  private submitClicked = false;\n  form: FormGroup;\n\n  @Output()\n  submited = new EventEmitter<{ oldPassword: string; newPassword: string }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, CustomFormValidators.passwordValidator],\n        ],\n        newPasswordConfirm: ['', [Validators.required]],\n      },\n      { validator: this.matchPassword }\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  isPasswordConfirmNotValid(): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submitClicked ||\n        (this.form.get('newPasswordConfirm').touched &&\n          this.form.get('newPasswordConfirm').dirty))\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      oldPassword: this.form.value.oldPassword,\n      newPassword: this.form.value.newPassword,\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  private matchPassword(abstractControl: AbstractControl): ValidationErrors {\n    if (\n      abstractControl.get('newPassword').value !==\n      abstractControl.get('newPasswordConfirm').value\n    ) {\n      return { NotEqual: true };\n    }\n    return null;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-password',\n  templateUrl: './update-password.component.html',\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.resetUpdatePasswordProcessState();\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\n    this.subscription.add(\n      this.userService\n        .getUpdatePasswordResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({\n    oldPassword,\n    newPassword,\n  }: {\n    oldPassword: string;\n    newPassword: string;\n  }): void {\n    this.userService.updatePassword(oldPassword, newPassword);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    this.userService.resetUpdatePasswordProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          component: UpdatePasswordComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  entryComponents: [UpdatePasswordComponent],\n})\nexport class UpdatePasswordModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Title, User } from '@spartacus/core';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\n\n@Component({\n  selector: 'cx-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n})\nexport class UpdateProfileFormComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Input()\n  titles: Title[];\n\n  @Output()\n  submited = new EventEmitter<{ userUpdates: User }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  form = this.fb.group({\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  private submitClicked = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    if (this.user) {\n      this.form.patchValue(this.user);\n    }\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      userUpdates: { ...this.form.value },\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-update-profile',\n  templateUrl: './update-profile.component.html',\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  titles$: Observable<Title[]>;\n  user$: Observable<User>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    // reset the previous form processing state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n\n    this.user$ = this.userService.get();\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\n\n    this.subscription.add(\n      this.userService\n        .getUpdatePersonalDetailsResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updateProfileForm.profileUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\n    this.userService.updatePersonalDetails(userUpdates);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    // clean up the state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\nimport { UpdateProfileComponent } from './update-profile.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          component: UpdateProfileComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\n  entryComponents: [UpdateProfileComponent],\n})\nexport class UpdateProfileModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CustomerCoupon,\n  RoutingService,\n  TranslationService,\n} from '@spartacus/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyCouponsComponentService {\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  protected readonly RELEVANCE = ':relevance';\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected translation: TranslationService\n  ) {}\n\n  launchSearchPage(coupon: CustomerCoupon): void {\n    this.routingService.go(\n      {\n        cxRoute: 'search',\n        params: { query: this.buildSearchParam(coupon) },\n      },\n      { couponcode: coupon.couponId }\n    );\n  }\n\n  private buildSearchParam(coupon: CustomerCoupon): string {\n    return coupon.allProductsApplicable\n      ? this.RELEVANCE\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\n  }\n\n  getSortLabels(): Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('myCoupons.startDateAsc'),\n      this.translation.translate('myCoupons.startDateDesc'),\n      this.translation.translate('myCoupons.endDateAsc'),\n      this.translation.translate('myCoupons.endDateDesc'),\n    ]).pipe(\n      map(\n        ([\n          textByStartDateAsc,\n          textByStartDateDesc,\n          textByEndDateAsc,\n          textByEndDateDesc,\n        ]) => {\n          return {\n            byStartDateAsc: textByStartDateAsc,\n            byStartDateDesc: textByStartDateDesc,\n            byEndDateAsc: textByEndDateAsc,\n            byEndDateDesc: textByEndDateDesc,\n          };\n        }\n      )\n    );\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, combineLatest, Subscription } from 'rxjs';\nimport {\n  CustomerCouponService,\n  CustomerCouponSearchResult,\n  PaginationModel,\n} from '@spartacus/core';\nimport { tap, map } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { MyCouponsComponentService } from './my-coupons.component.service';\n\n@Component({\n  selector: 'cx-my-coupons',\n  templateUrl: './my-coupons.component.html',\n})\nexport class MyCouponsComponent implements OnInit, OnDestroy {\n  couponResult$: Observable<CustomerCouponSearchResult>;\n  couponsLoading$: Observable<boolean>;\n  couponSubscriptionLoading$: Observable<boolean>;\n\n  iconTypes = ICON_TYPE;\n\n  private subscriptions = new Subscription();\n\n  private PAGE_SIZE = 10;\n  private sortMapping = {\n    byStartDateAsc: 'startDate:asc',\n    byStartDateDesc: 'startDate:desc',\n    byEndDateAsc: 'endDate:asc',\n    byEndDateDesc: 'endDate:desc',\n  };\n  sort = 'byStartDateAsc';\n\n  sortOptions = [\n    {\n      code: 'byStartDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byStartDateDesc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateDesc',\n      selected: false,\n    },\n  ];\n\n  pagination: PaginationModel;\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    this.couponResult$ = this.couponService\n      .getCustomerCoupons(this.PAGE_SIZE)\n      .pipe(\n        tap(\n          coupons =>\n            (this.pagination = {\n              currentPage: coupons.pagination.page,\n              pageSize: coupons.pagination.count,\n              totalPages: coupons.pagination.totalPages,\n              totalResults: coupons.pagination.totalCount,\n              sort: this.sort,\n            })\n        )\n      );\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\n    this.couponSubscriptionLoading$ = combineLatest([\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\n    ]).pipe(\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\n    );\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\n\n    this.subscriptions\n      .add(\n        this.couponService\n          .getSubscribeCustomerCouponResultError()\n          .subscribe(error => {\n            this.subscriptionFail(error);\n          })\n      )\n      .add(\n        this.couponService\n          .getUnsubscribeCustomerCouponResultError()\n          .subscribe(error => {\n            this.subscriptionFail(error);\n          })\n      );\n  }\n\n  private subscriptionFail(error: boolean) {\n    if (error) {\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    }\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      this.pagination.currentPage,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  notificationChange({\n    couponId,\n    notification,\n  }: {\n    couponId: string;\n    notification: boolean;\n  }): void {\n    if (notification) {\n      this.couponService.subscribeCustomerCoupon(couponId);\n    } else {\n      this.couponService.unsubscribeCustomerCoupon(couponId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { CustomerCoupon } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-coupon-dialog',\n  templateUrl: './coupon-dialog.component.html',\n})\nexport class CouponDialogComponent {\n  iconTypes = ICON_TYPE;\n  coupon: CustomerCoupon;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  constructor(protected modalService: ModalService) {}\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  RoutingService,\n  CustomerCouponService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './coupon-claim.component.html',\n  selector: 'cx-coupon-claim',\n})\nexport class CouponClaimComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected routingService: RoutingService,\n    protected messageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService\n      .getRouterState()\n      .subscribe(k => {\n        const couponCode = k.state.params.couponCode;\n        if (couponCode) {\n          this.couponService.claimCustomerCoupon(couponCode);\n          this.subscription = this.couponService\n            .getClaimCustomerCouponResultSuccess()\n            .subscribe(success => {\n              if (success) {\n                this.messageService.add(\n                  { key: 'myCoupons.claimCustomerCoupon' },\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\n                );\n              }\n              this.routingService.go({ cxRoute: 'coupons' });\n            });\n        } else {\n          this.routingService.go({ cxRoute: 'notFound' });\n        }\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyCouponsComponent } from './my-coupons.component';\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\n\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { IconModule } from '../../misc/icon/icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    IconModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'couponClaim' },\n      },\n    ]),\n  ],\n  declarations: [\n    MyCouponsComponent,\n    CouponCardComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyCouponsComponent: {\n          component: MyCouponsComponent,\n          guards: [AuthGuard],\n        },\n        CouponClaimComponent: {\n          component: CouponClaimComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyCouponsComponent, CouponClaimComponent],\n  entryComponents: [\n    MyCouponsComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n})\nexport class MyCouponsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  NotificationPreference,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-notification-preference',\n  templateUrl: './notification-preference.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPreferenceComponent implements OnInit {\n  preferences$: Observable<NotificationPreference[]>;\n  isLoading$: Observable<boolean>;\n\n  protected preferences: NotificationPreference[] = [];\n\n  constructor(\n    private notificationPreferenceService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.notificationPreferenceService.resetNotificationPreferences();\n    this.preferences$ = this.notificationPreferenceService\n      .getPreferences()\n      .pipe(tap(preferences => (this.preferences = preferences)));\n    this.notificationPreferenceService.loadPreferences();\n\n    this.isLoading$ = combineLatest([\n      this.notificationPreferenceService.getPreferencesLoading(),\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\n    ]).pipe(\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\n    );\n  }\n\n  updatePreference(preference: NotificationPreference) {\n    const updatedPreferences = [];\n    this.preferences.forEach(p => {\n      if (p.channel === preference.channel) {\n        updatedPreferences.push({\n          ...p,\n          enabled: !p.enabled,\n        });\n      } else {\n        updatedPreferences.push(p);\n      }\n    });\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { NotificationPreferenceComponent } from './notification-preference.component';\n\n@NgModule({\n  declarations: [NotificationPreferenceComponent],\n  imports: [CommonModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NotificationPreferenceComponent: {\n          component: NotificationPreferenceComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [NotificationPreferenceComponent],\n  entryComponents: [NotificationPreferenceComponent],\n})\nexport class NotificationPreferenceModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  PaginationModel,\n  Product,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n  ProductScope,\n  ProductService,\n  TranslationService,\n  UserInterestsService,\n} from '@spartacus/core';\nimport { map, tap } from 'rxjs/operators';\n\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\n  results?: (ProductInterestEntryRelation & {\n    product$?: Observable<Product>;\n  })[];\n}\n\n@Component({\n  selector: 'cx-my-interests',\n  templateUrl: './my-interests.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyInterestsComponent implements OnInit, OnDestroy {\n  private DEFAULT_PAGE_SIZE = 10;\n  private sortMapping = {\n    byNameAsc: 'name:asc',\n    byNameDesc: 'name:desc',\n  };\n\n  sort = 'byNameAsc';\n  sortOptions = [\n    {\n      code: 'byNameAsc',\n      selected: false,\n    },\n    {\n      code: 'byNameDesc',\n      selected: false,\n    },\n  ];\n  pagination: PaginationModel;\n\n  interests$: Observable<ProductInterestSearchResultUI>;\n  isRemoveDisabled$: Observable<boolean>;\n  getInterestsloading$: Observable<boolean>;\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\n\n  constructor(\n    private productInterestService: UserInterestsService,\n    private translationService: TranslationService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.interests$ = this.productInterestService\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\n      .pipe(\n        tap(\n          interests =>\n            (this.pagination = {\n              currentPage: interests.pagination.page,\n              pageSize: interests.pagination.count,\n              totalPages: interests.pagination.totalPages,\n              totalResults: interests.pagination.totalCount,\n              sort: 'byNameAsc',\n            })\n        ),\n        map(interest => ({\n          ...interest,\n          results: interest.results\n            ? interest.results.map(result => ({\n                ...result,\n                product$: this.getProduct(result),\n              }))\n            : interest.results,\n        }))\n      );\n\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\n    this.isRemoveDisabled$ = combineLatest([\n      this.getInterestsloading$,\n      this.productInterestService.getRemoveProdutInterestLoading(),\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\n\n    this.sortLabels = this.getSortLabels();\n  }\n\n  private getSortLabels(): Observable<{\n    byNameAsc: string;\n    byNameDesc: string;\n  }> {\n    return combineLatest([\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\n    ]).pipe(\n      map(([asc, desc]) => {\n        return {\n          byNameAsc: asc,\n          byNameDesc: desc,\n        };\n      })\n    );\n  }\n\n  private getProduct(\n    interest: ProductInterestEntryRelation\n  ): Observable<Product> {\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\n  }\n\n  removeInterest(\n    relation: ProductInterestEntryRelation & {\n      product$?: Observable<Product>;\n    }\n  ): void {\n    this.productInterestService.removeProdutInterest({\n      product: relation.product,\n      productInterestEntry: relation.productInterestEntry,\n    });\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      0,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.productInterestService.clearProductInterests();\n    this.productInterestService.resetRemoveInterestState();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { MyInterestsComponent } from './my-interests.component';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\n\n@NgModule({\n  declarations: [MyInterestsComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    RouterModule,\n    ListNavigationModule,\n    I18nModule,\n    UrlModule,\n    MediaModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyInterestsComponent: {\n          component: MyInterestsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyInterestsComponent],\n  entryComponents: [MyInterestsComponent],\n})\nexport class MyInterestsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMeta,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { asyncScheduler, combineLatest, Observable } from 'rxjs';\nimport { filter, map, observeOn } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent implements OnInit {\n  title$: Observable<string>;\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n    this.setCrumbs();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(Boolean),\n      map((meta: PageMeta) => meta.heading || meta.title)\n    );\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home').pipe(observeOn(asyncScheduler)),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  CmsPageTitleModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, CmsPageTitleModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BreadcrumbComponent],\n  exports: [BreadcrumbComponent],\n  entryComponents: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return {\n          title: data.name,\n          children: [nav],\n        };\n      })\n    );\n  }\n\n  /**\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n   * This function will load the navigation underlying entries and childs if they haven't been\n   * loaded so far.\n   */\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter(data => !!data),\n      switchMap(data => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap(items => {\n            if (items === undefined) {\n              this.loadNavigationEntryItems(navigation, true);\n            } else {\n              // we should check whether the existing node items are what expected\n              const expectedItems = [];\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\n              const existingItems = Object.keys(items).map(\n                key => items[key].uid\n              );\n              const missingItems = expectedItems.filter(\n                it => !existingItems.includes(it.id)\n              );\n              if (missingItems.length > 0) {\n                this.cmsService.loadNavigationItems(\n                  navigation.uid,\n                  missingItems\n                );\n              }\n            }\n          }),\n          filter(Boolean),\n          map(items => this.populateNavigationNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private loadNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ): void {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach(entry => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      nodeData.children.forEach(child =>\n        this.loadNavigationEntryItems(child, false, itemsList)\n      );\n    }\n\n    if (root) {\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for the view\n   * @param nodeData\n   * @param items\n   */\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    if (nodeData.title) {\n      // the node title will be populated by the first entry (if any)\n      // if there's no nodeData.title available\n      node.title = nodeData.title;\n    }\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.populateLink(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      const children = nodeData.children\n        .map(child => this.populateNavigationNode(child, items))\n        .filter(Boolean);\n      if (children.length > 0) {\n        node.children = children;\n      }\n    }\n\n    // return null in case there are no children\n    return Object.keys(node).length === 0 ? null : node;\n  }\n\n  /**\n   * The node link is driven by the first entry.\n   */\n  private populateLink(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (item && entry.itemType === 'CMSLinkComponent') {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n      const url = this.getLink(item);\n      // only populate the node link if we have a visible node\n      if (node.title && url) {\n        node.url = url;\n        // the backend provide boolean value for the target\n        // in case the link should be opened in a new window\n        node.target = !!item.target ? '_blank' : '';\n      }\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category)\n   */\n  private getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n  @Input() allowAlignToRight = false;\n\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navitation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter(event => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  toggleOpen(event: UIEvent): void {\n    event.preventDefault();\n    const node = <HTMLElement>event.currentTarget;\n    if (this.openNodes.includes(node)) {\n      if (event.type === 'keydown') {\n        this.back();\n      } else {\n        this.openNodes = this.openNodes.filter(n => n !== node);\n        this.renderer.removeClass(node, 'is-open');\n      }\n    } else {\n      this.openNodes.push(node);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    if (this.openNodes[this.openNodes.length - 1]) {\n      this.renderer.removeClass(\n        this.openNodes[this.openNodes.length - 1],\n        'is-open'\n      );\n      this.openNodes.pop();\n      this.updateClasses();\n    }\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(...node.children.map(n => this.getDepth(n, depth + 1)));\n    } else {\n      return depth;\n    }\n  }\n\n  getColumnCount(length: number): number {\n    return Math.round(length / (this.wrapAfter || length));\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\n      target.parentElement.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    if (this.allowAlignToRight) {\n      const wrapper = <HTMLElement>node.querySelector('.wrapper');\n      const navBar = <HTMLElement>this.elemRef.nativeElement;\n      if (wrapper) {\n        this.renderer.removeStyle(wrapper, 'margin-left');\n        if (\n          wrapper.offsetLeft + wrapper.offsetWidth >\n          navBar.offsetLeft + navBar.offsetWidth\n        ) {\n          this.renderer.setStyle(\n            wrapper,\n            'margin-left',\n            `${node.offsetWidth - wrapper.offsetWidth}px`\n          );\n        }\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter(node => node.tagName === 'NAV')\n      .forEach(nav => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n\n  isTabbable(node: any) {\n    return this.flyout && node.children && node.children.length;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  entryComponents: [NavigationComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, NavigationModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  entryComponents: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  ANONYMOUS_CONSENTS_FEATURE,\n  CmsNavigationComponent,\n  isFeatureEnabled,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  // in order to preserve the backwards compatibility, this should render only if anonymous consents feature is disabled\n  data$ = this.componentData.data$.pipe(\n    filter(\n      _ =>\n        !isFeatureEnabled(\n          this.anonymousConsentsConfig,\n          ANONYMOUS_CONSENTS_FEATURE\n        )\n    )\n  );\n\n  constructor(\n    componentData: CmsComponentData<CmsNavigationComponent>,\n    service: NavigationService,\n    // tslint:disable-next-line: unified-signatures\n    anonymousConsentsConfig: AnonymousConsentsConfig\n  );\n  /**\n   * @deprecated since version 1.3\n   * Instead, use:\n   * \n    ```ts\n      constructor(\n      componentData: CmsComponentData<CmsNavigationComponent>,\n      service: NavigationService,\n      anonymousConsentsConfig: AnonymousConsentsConfig\n    )\n    ```\n   */\n  constructor(\n    componentData: CmsComponentData<CmsNavigationComponent>,\n    service: NavigationService\n  );\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService,\n    protected anonymousConsentsConfig?: AnonymousConsentsConfig\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [FooterNavigationComponent],\n  entryComponents: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap(results =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  private hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  private getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map(res => res.map(suggestion => suggestion.value)),\n        switchMap(suggestions => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map(match => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap(productResult => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          suggestions &&\n          suggestions.length === 0\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  public launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent {\n  config: SearchBoxConfig;\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n\n  /**\n   * The component data is optional, so that this component\n   * can be reused without CMS integration.\n   */\n\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\n    protected winRef: WindowRef\n  ) {}\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    tap(c => (this.config = c)),\n    switchMap(config => this.searchBoxComponentService.getResults(config))\n  );\n\n  /**\n   * Returns the backend configuration or default configuration for the searchbox.\n   */\n  private get config$(): Observable<SearchBoxConfig> {\n    if (this.componentData) {\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\n        // boolean values, we replace them with boolean values.\n        map(c => {\n          return {\n            ...c,\n            displayProducts:\n              <any>c.displayProducts === 'true' || c.displayProducts === true,\n            displayProductImages:\n              <any>c.displayProductImages === 'true' ||\n              c.displayProductImages === true,\n            displaySuggestions:\n              <any>c.displaySuggestions === 'true' ||\n              c.displaySuggestions === true,\n          };\n        })\n      );\n    } else {\n      return of(DEFAULT_SEARCHBOX_CONFIG);\n    }\n  }\n\n  /**\n   * Closes the searchbox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchbox to open\n    this.open();\n  }\n\n  /**\n   * Opens the typeahead searchbox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Closes the typehead searchbox.\n   */\n  close(event: UIEvent, force?: boolean): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if ((!this.ignoreCloseEvent && !this.isSearchboxFocused()) || force) {\n        this.blurSearchBox(event);\n      }\n    });\n  }\n\n  protected blurSearchBox(event: UIEvent): void {\n    this.searchBoxComponentService.toggleBodyClass(\n      'searchbox-is-active',\n      false\n    );\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Check if focus is on searchbox or result list elements\n  private isSearchboxFocused(): boolean {\n    return (\n      this.getResultElements().includes(this.getFocusedElement()) ||\n      this.winRef.document.querySelector('input[aria-label=\"search\"]') ===\n        this.getFocusedElement()\n    );\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  // Return result list as HTMLElement array\n  private getResultElements(): HTMLElement[] {\n    return Array.from(\n      this.winRef.document.querySelectorAll('.products > a, .suggestions > a')\n    );\n  }\n\n  // Return focused element as HTMLElement\n  private getFocusedElement(): HTMLElement {\n    return <HTMLElement>this.winRef.document.activeElement;\n  }\n\n  private getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  // Focus on previous item in results list\n  focusPreviousChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  // Focus on next item in results list\n  focusNextChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a single product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    if (!query || query.trim().length === 0) {\n      return;\n    }\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  public clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  entryComponents: [SearchBoxComponent],\n  exports: [SearchBoxComponent],\n})\nexport class SearchBoxModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  CheckoutService,\n  Order,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\n  order$: Observable<Order>;\n  orderPromotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected promotionService: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  Address,\n  CheckoutService,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      filter(_ => Boolean(deliveryAddress)),\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [\n          deliveryAddress.line1,\n          deliveryAddress.line2,\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${deliveryAddress.postalCode}`,\n          deliveryAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      filter(_ => Boolean(deliveryMode)),\n      map(textTitle => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [deliveryMode.description],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.billTo').pipe(\n      filter(_ => Boolean(billingAddress)),\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [\n          billingAddress.line1,\n          billingAddress.line2,\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n          billingAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: Boolean(payment) ? payment.expiryMonth : '',\n        year: Boolean(payment) ? payment.expiryYear : '',\n      }),\n    ]).pipe(\n      filter(_ => Boolean(payment)),\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n  isGuestCustomer = false;\n  orderGuid: string;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\n      tap(order => {\n        this.isGuestCustomer = order.guestCustomer;\n        this.orderGuid = order.guid;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-guest-register-form',\n  templateUrl: './guest-register-form.component.html',\n})\nexport class GuestRegisterFormComponent implements OnDestroy {\n  @Input() guid: string;\n  @Input() email: string;\n\n  subscription: Subscription;\n\n  guestRegisterForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n    },\n    { validator: CustomFormValidators.matchPassword }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected fb: FormBuilder\n  ) {}\n\n  submit() {\n    this.userService.registerGuest(\n      this.guid,\n      this.guestRegisterForm.value.password\n    );\n    if (!this.subscription) {\n      this.subscription = this.authService.getUserToken().subscribe(token => {\n        if (token.access_token) {\n          this.routingService.go({ cxRoute: 'home' });\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutService,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map(orderDetails => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../shared/components/card/card.module';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\n// tslint:disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n  GuestRegisterFormComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n  entryComponents: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductReference,\n  ProductReferenceService,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected referenceService: ProductReferenceService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map(product => this.convertProduct(product))\n    );\n  }\n\n  getProductReferences(\n    code: string,\n    referenceType: string,\n    displayTitle: boolean,\n    displayProductPrices: boolean\n  ): Observable<ProductCarouselItem[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) =>\n        refs.map(ref =>\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\n        )\n      )\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  Product,\n  ProductScope,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\n\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean)\n  );\n\n  /**\n   * returns an Obervable string for the title.\n   */\n  title$: Observable<string> = this.componentData$.pipe(\n    map(data => data.title)\n  );\n\n  /**\n   * Obervable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\n    map(data => data.productCodes.trim().split(' ')),\n    map(codes =>\n      codes.map(code => this.productService.get(code, this.PRODUCT_SCOPE))\n    )\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  entryComponents: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  /**\n   * returns an Obervable string for the title\n   */\n  title$ = this.component.data$.pipe(map(d => d.title));\n\n  private currentProductCode$: Observable<\n    string\n  > = this.current.getProduct().pipe(\n    filter(Boolean),\n    map((p: Product) => p.code),\n    distinctUntilChanged(),\n    tap(() => this.referenceService.cleanReferences())\n  );\n\n  /**\n   * Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = combineLatest([\n    this.currentProductCode$,\n    this.component.data$,\n  ]).pipe(\n    switchMap(([code, data]) =>\n      this.getProductReferences(code, data.productReferenceTypes)\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\n    protected current: CurrentProductService,\n    protected referenceService: ProductReferenceService\n  ) {}\n\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product>[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) => refs.map(ref => of(ref.target)))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  entryComponents: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  private mainMediaContainer = new BehaviorSubject(null);\n\n  private product$: Observable<\n    Product\n  > = this.currentProductService.getProduct().pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap((p: Product) =>\n      this.mainMediaContainer.next(p.images ? p.images.PRIMARY : {})\n    )\n  );\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map((p: Product) => this.createThumbs(p))\n  );\n\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\n    map(([, container]) => container)\n  );\n\n  constructor(private currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          t =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map(c => of({ container: c }));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    CarouselModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductImagesComponent],\n  entryComponents: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\n      .subscribe(reviewsTabLabel => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through button tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const tabElements: HTMLCollectionOf<HTMLElement> = tabsComponent.getElementsByTagName(\n        'button'\n      );\n\n      // Look through button tab elements until finding tab with label\n      for (const buttonElement of Array.from(tabElements)) {\n        if (buttonElement.innerHTML.includes(label)) {\n          return buttonElement;\n        }\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, StarRatingModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  exports: [ProductIntroComponent],\n  entryComponents: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RoutingService,\n  SearchConfig,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  pluck,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\n\ninterface ProductListRouteParams {\n  brandCode?: string;\n  categoryCode?: string;\n  query?: string;\n}\n\ninterface SearchCriteria {\n  currentPage?: number;\n  pageSize?: number;\n  sortCode?: string;\n  query?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  // TODO: make it configurable\n  protected defaultPageSize = 10;\n\n  protected sub: Subscription;\n\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router\n  ) {}\n\n  private searchResults$: Observable<\n    ProductSearchPage\n  > = this.productSearchService\n    .getResults()\n    .pipe(filter(searchResult => Object.keys(searchResult).length > 0));\n\n  private searchByRouting$: Observable<\n    ActivatedRouterStateSnapshot\n  > = combineLatest([\n    this.routing.getRouterState().pipe(\n      distinctUntilChanged((x, y) => {\n        // router emits new value also when the anticipated `nextState` changes\n        // but we want to perform search only when current url changes\n        return x.state.url === y.state.url;\n      })\n    ),\n    // also trigger search on site context changes\n    this.languageService.getActive(),\n    this.currencyService.getActive(),\n  ]).pipe(\n    pluck(0, 'state'),\n    tap((state: ActivatedRouterStateSnapshot) => {\n      const criteria = this.getCriteriaFromRoute(\n        state.params,\n        state.queryParams\n      );\n      this.search(criteria);\n    })\n  );\n\n  /**\n   * This stream should be used only on the Product Listing Page.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\n    this.searchResults$,\n    this.searchByRouting$,\n  ]).pipe(pluck(0), shareReplay({ bufferSize: 1, refCount: true }));\n\n  clearSearchResults(): void {\n    this.productSearchService.clearResults();\n  }\n\n  private getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  private getQueryFromRouteParams({\n    brandCode,\n    categoryCode,\n    query,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\n    }\n    if (brandCode) {\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\n    }\n  }\n\n  private search(criteria: SearchCriteria): void {\n    const query = criteria.query;\n    const searchConfig = this.getSearchConfig(criteria);\n\n    this.productSearchService.search(query, searchConfig);\n  }\n\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\n    const result: SearchConfig = {\n      currentPage: criteria.currentPage,\n      pageSize: criteria.pageSize,\n      sortCode: criteria.sortCode,\n    };\n\n    // drop empty keys\n    Object.keys(result).forEach(key => !result[key] && delete result[key]);\n\n    return result;\n  }\n\n  setQuery(query: string): void {\n    this.setQueryParams({ query, currentPage: undefined });\n  }\n\n  viewPage(pageNumber: number): void {\n    this.setQueryParams({ currentPage: pageNumber });\n  }\n\n  /**\n   * Get items from a given page without using navigation\n   */\n  getPageItems(pageNumber: number): void {\n    this.routing\n      .getRouterState()\n      .subscribe(route => {\n        const routeCriteria = this.getCriteriaFromRoute(\n          route.state.params,\n          route.state.queryParams\n        );\n        const criteria = {\n          ...routeCriteria,\n          currentPage: pageNumber,\n        };\n        this.search(criteria);\n      })\n      .unsubscribe();\n  }\n\n  sort(sortCode: string): void {\n    this.setQueryParams({ sortCode });\n  }\n\n  private setQueryParams(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewConfig } from '../../../../shared/config/view-config';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  isInfiniteScroll: boolean;\n\n  model$: Observable<ProductSearchPage> = this.productListComponentService\n    .model$;\n\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    pageLayoutService: PageLayoutService,\n    productListComponentService: ProductListComponentService,\n    // tslint:disable-next-line: unified-signatures\n    scrollConfig: ViewConfig\n  );\n\n  /**\n   * @deprecated since version 1.x\n   *  Use constructor(pageLayoutService: PageLayoutService,\n   *  productListComponentService: ProductListComponentService,\n   *  ref: ChangeDetectorRef,\n   *  scrollConfig: ViewConfig) instead\n   */\n  constructor(\n    pageLayoutService: PageLayoutService,\n    productListComponentService: ProductListComponentService\n  );\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService,\n    public scrollConfig?: ViewConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\n\n    this.productListComponentService.clearSearchResults();\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$.pipe(take(1)).subscribe(template => {\n        this.viewMode$.next(\n          template === 'ProductGridPageTemplate'\n            ? ViewModes.Grid\n            : ViewModes.List\n        );\n      })\n    );\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { ViewModes } from '../../product-view/product-view.component';\nimport { Subscription } from 'rxjs';\nimport { ProductListComponentService } from '../product-list-component.service';\nimport { ViewConfig } from '../../../../../shared/config/view-config';\n\n@Component({\n  selector: 'cx-product-scroll',\n  templateUrl: './product-scroll.component.html',\n})\nexport class ProductScrollComponent implements OnDestroy {\n  private subscription = new Subscription();\n\n  @Input('scrollConfig')\n  set setConfig(inputConfig: ViewConfig) {\n    this.setComponentConfigurations(inputConfig);\n  }\n\n  model: ProductSearchPage;\n  @Input('model')\n  set setModel(inputModel: ProductSearchPage) {\n    this.infiniteScrollOperations(inputModel);\n  }\n\n  inputViewMode: ViewModes;\n  @Input('inputViewMode')\n  set setViewMode(inputViewMode: ViewModes) {\n    this.inputViewMode = inputViewMode;\n    //If viewMode is already set (meaning it is not the first load)\n    //Reset the product list\n    if (this.viewMode) {\n      this.resetListOnViewModeChange();\n    } else {\n      //If viewMode is not set (meaning it is the first load)\n      //Set the viewMode\n      this.viewMode = inputViewMode;\n    }\n  }\n\n  viewMode: ViewModes;\n  productLimit: number;\n  maxProducts: number;\n\n  ViewModes = ViewModes;\n  appendProducts = false;\n  resetList = false;\n  isMaxProducts = false;\n  isLastPage = false;\n  isEmpty = false;\n\n  constructor(\n    private productListComponentService: ProductListComponentService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  scrollPage(pageNumber: number): void {\n    this.appendProducts = true;\n    this.ref.markForCheck();\n    this.productListComponentService.getPageItems(pageNumber);\n  }\n\n  loadNextPage(pageNumber: number): void {\n    this.isMaxProducts = false;\n    this.scrollPage(pageNumber);\n  }\n\n  scrollToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\n\n    //Display \"show more\" button every time when button configuration is true\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\n    this.productLimit = isButton ? 1 : configProductLimit;\n  }\n\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\n    if (this.isSamePage(inputModel)) {\n      return;\n    }\n\n    if (this.appendProducts) {\n      this.model = {\n        ...inputModel,\n        products: this.model.products.concat(inputModel.products),\n      };\n    } else {\n      this.model = inputModel;\n      this.maxProducts = this.productLimit;\n    }\n    this.setConditions();\n    this.ref.markForCheck();\n  }\n\n  private resetListOnViewModeChange(): void {\n    this.scrollToTop();\n    this.resetList = true;\n    this.productListComponentService.getPageItems(0);\n  }\n\n  //Set booleans after model has been retrieved\n  private setConditions(): void {\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\n\n    this.isLastPage =\n      this.model.pagination.currentPage ===\n      this.model.pagination.totalPages - 1;\n\n    this.isMaxProducts =\n      this.productLimit &&\n      this.productLimit !== 0 &&\n      this.model.products.length >= this.maxProducts;\n\n    //Add the productLimit to the current number of products to determine the next max number of products\n    if (this.isMaxProducts) {\n      this.maxProducts = this.model.products.length + this.productLimit;\n    }\n\n    //Only change viewMode once the new model is set\n    //This prevents flickering issues\n    if (this.viewMode !== this.inputViewMode) {\n      this.viewMode = this.inputViewMode;\n    }\n\n    this.resetList = false;\n    this.appendProducts = false;\n  }\n\n  /**\n   * @deprecated at release 2.0.\n   * If the new list is the same and it is not intended to reset the list then return true\n   * Return false otherwise.\n   */\n  private isSamePage(inputModel: ProductSearchPage): boolean {\n    if (\n      !this.resetList &&\n      this.model &&\n      this.model.breadcrumbs &&\n      inputModel.breadcrumbs &&\n      this.model.breadcrumbs.length > 0 &&\n      inputModel.breadcrumbs.length > 0\n    ) {\n      if (this.model.breadcrumbs.length === inputModel.breadcrumbs.length) {\n        for (let i = 0; i < this.model.breadcrumbs.length; i++) {\n          if (\n            this.model.breadcrumbs[i].facetCode ===\n              inputModel.breadcrumbs[i].facetCode &&\n            this.model.breadcrumbs[i].facetValueCode ===\n              inputModel.breadcrumbs[i].facetValueCode &&\n            this.model.breadcrumbs[i].removeQuery.query.value ===\n              inputModel.breadcrumbs[i].removeQuery.query.value &&\n            this.model.pagination.currentPage ===\n              inputModel.pagination.currentPage\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Facet, ProductSearchPage } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\nimport { ProductListComponentService } from '../container/product-list-component.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent implements OnInit, OnDestroy {\n  private sub: Subscription;\n\n  iconTypes = ICON_TYPE;\n\n  activeFacetValueCode: string;\n  searchResult: ProductSearchPage;\n  showAllPerFacetMap: Map<String, boolean>;\n  protected queryCodec: HttpUrlEncodingCodec;\n  private collapsedFacets = new Set<string>();\n  searchResult$: Observable<ProductSearchPage>;\n  visibleFacets$: Observable<Facet[]>;\n\n  constructor(\n    private modalService: ModalService,\n    private activatedRoute: ActivatedRoute,\n    private productListComponentService: ProductListComponentService\n  ) {\n    this.showAllPerFacetMap = new Map<String, boolean>();\n    this.queryCodec = new HttpUrlEncodingCodec();\n  }\n\n  ngOnInit(): void {\n    this.sub = this.activatedRoute.params.subscribe(params => {\n      this.activeFacetValueCode = params.categoryCode || params.brandCode;\n    });\n\n    this.searchResult$ = this.productListComponentService.model$.pipe(\n      tap(searchResult => {\n        if (searchResult.facets) {\n          searchResult.facets.forEach(el => {\n            this.showAllPerFacetMap.set(el.name, false);\n          });\n        }\n      })\n    );\n\n    this.visibleFacets$ = this.searchResult$.pipe(\n      map(searchResult => {\n        return searchResult.facets\n          ? searchResult.facets.filter(facet => facet.visible)\n          : [];\n      })\n    );\n  }\n\n  openFilterModal(content): void {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n  }\n\n  toggleValue(query: string): void {\n    this.productListComponentService.setQuery(\n      this.queryCodec.decodeValue(query)\n    );\n  }\n\n  showLess(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, false);\n  }\n\n  showMore(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, true);\n  }\n\n  private updateShowAllPerFacetMap(facetName: String, showAll: boolean): void {\n    this.showAllPerFacetMap.set(facetName, showAll);\n  }\n\n  isFacetCollapsed(facetName: string): boolean {\n    return this.collapsedFacets.has(facetName);\n  }\n\n  toggleFacet(facetName: string): void {\n    if (this.collapsedFacets.has(facetName)) {\n      this.collapsedFacets.delete(facetName);\n    } else {\n      this.collapsedFacets.add(facetName);\n    }\n  }\n\n  getVisibleFacetValues(facet: Facet): Facet[] {\n    return facet.values.slice(\n      0,\n      this.showAllPerFacetMap.get(facet.name)\n        ? facet.values.length\n        : facet.topValueCount\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variants',\n  templateUrl: './product-variants.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsComponent implements OnInit {\n  constructor(private currentProductService: CurrentProductService) {}\n\n  variants: BaseOption[] = [];\n  variantType = VariantType;\n  product$: Observable<Product>;\n\n  ngOnInit(): void {\n    this.product$ = this.currentProductService.getProduct().pipe(\n      filter(product => !!(product && product.baseOptions)),\n      distinctUntilChanged(),\n      tap(product => {\n        product.baseOptions.forEach(option => {\n          if (option && option.variantType) {\n            this.variants[option.variantType] = option;\n          }\n        });\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  OccConfig,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  Product,\n  ProductService,\n  ProductScope,\n  RoutingService,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-style-selector',\n  templateUrl: './variant-style-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleSelectorComponent {\n  constructor(\n    private config: OccConfig,\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  variantQualifier = VariantQualifier;\n\n  @Input()\n  variants: BaseOption;\n\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find(q => q.qualifier === VariantQualifier.STYLE);\n    return obj ? obj.value : '';\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const qualifier = variantOptionQualifiers.find(item => item.image);\n    return qualifier\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\n      : '';\n  }\n\n  changeStyle(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Product,\n  RoutingService,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  ProductService,\n  ProductScope,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-size-selector',\n  templateUrl: './variant-size-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantSizeSelectorComponent {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeSize(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find(q => q.qualifier === VariantQualifier.SIZE);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BaseOption,\n  Product,\n  RoutingService,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-color-selector',\n  templateUrl: './variant-color-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantColorSelectorComponent {\n  constructor(private routingService: RoutingService) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeColor(code: string, name: string): void {\n    if (code) {\n      this.routingService.go({\n        cxRoute: 'product',\n        params: { code, name },\n      });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find(q => q.qualifier === VariantQualifier.COLOR);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {\n  OccConfig,\n  VariantOption,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-style-icons',\n  templateUrl: './variant-style-icons.component.html',\n  styleUrls: ['./variant-style-icons.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleIconsComponent implements OnInit {\n  constructor(private config: OccConfig) {}\n\n  @Input()\n  variants: VariantOption[];\n\n  variantNames: { [key: string]: string } = {};\n\n  ngOnInit() {\n    this.variants.forEach(variant => {\n      this.variantNames[variant.code] = this.getVariantName(\n        variant.variantOptionQualifiers\n      );\n    });\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const thumbnail = variantOptionQualifiers.find(\n      item => item.qualifier === VariantQualifier.THUMBNAIL\n    );\n    return thumbnail\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\n      : '';\n  }\n\n  private getVariantName(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const rollupProperty = variantOptionQualifiers.find(\n      item => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\n    );\n    const property = rollupProperty\n      ? variantOptionQualifiers.find(\n          item => item.qualifier === rollupProperty.value\n        )\n      : null;\n    return property ? property.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, filter, take } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  VariantOption,\n  ProductService,\n  Product,\n  RoutingService,\n  ProductScope,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductVariantGuard implements CanActivate {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.routingService.getRouterState().pipe(\n      map(state => state.nextState.params.productCode),\n      switchMap((productCode: string) => {\n        // if open pdp from smartedit\n        if (!productCode) {\n          return of(true);\n        }\n\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\n          filter(Boolean),\n          map((product: Product) => {\n            if (!product.purchasable) {\n              const variant = this.findVariant(product.variantOptions);\n              // below call might looks redundant but in fact this data is going to be loaded anyways\n              // we're just calling it earlier and storing\n              this.productService\n                .get(variant.code, ProductScope.LIST)\n                .pipe(filter(Boolean), take(1))\n                .subscribe((_product: Product) => {\n                  this.routingService.go({\n                    cxRoute: 'product',\n                    params: _product,\n                  });\n                });\n              return false;\n            } else {\n              return true;\n            }\n          })\n        );\n      })\n    );\n  }\n\n  findVariant(variants: VariantOption[]): VariantOption {\n    const results: VariantOption[] = variants.filter(variant => {\n      return variant.stock && variant.stock.stockLevel ? variant : false;\n    });\n    return !results.length && variants.length ? variants[0] : results[0];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ProductVariantsComponent } from './product-variants.component';\nimport { RouterModule } from '@angular/router';\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\nimport { ProductVariantGuard } from './guards/product-variant.guard';\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    VariantStyleSelectorModule,\n    VariantSizeSelectorModule,\n    VariantColorSelectorModule,\n    VariantStyleIconsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductVariantSelectorComponent: {\n          component: ProductVariantsComponent,\n          guards: [ProductVariantGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ProductVariantsComponent],\n  entryComponents: [ProductVariantsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class ProductVariantsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ViewConfig } from '../../../shared/config/view-config';\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { defaultScrollConfig } from '../config/default-scroll-config';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n    SpinnerModule,\n    InfiniteScrollModule,\n    ViewConfigModule,\n    ProductVariantsModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<ViewConfig>defaultScrollConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        ProductGridComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductFacetNavigationComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductFacetNavigationComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\n})\nexport class ProductListModule {}\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  entryComponents: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct(\n    ProductScope.ATTRIBUTES\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  entryComponents: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  entryComponents: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\n  @ViewChild('writeReviewButton', { static: false })\n  writeReviewButton: ElementRef;\n\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter(p => !!p),\n    map(p => p.code),\n    distinctUntilChanged(),\n    switchMap(productCode => this.reviewService.getByProductCode(productCode)),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n\n    this.cd.detectChanges();\n\n    if (this.titleInput && this.titleInput.nativeElement) {\n      this.titleInput.nativeElement.focus();\n    }\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  setRating(rating): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  private markFormAsTouched(): void {\n    Object.keys(this.reviewForm.controls).forEach(key => {\n      this.reviewForm.controls[key].markAsTouched();\n    });\n  }\n\n  submitReview(product: Product) {\n    if (this.reviewForm.valid) {\n      this.addReview(product);\n    } else {\n      this.markFormAsTouched();\n    }\n  }\n\n  addReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [0, [Validators.min(1), Validators.max(5)]],\n      reviewerName: '',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { StarRatingModule } from '../../../../shared/components/star-rating/star-rating.module';\nimport { ProductReviewsComponent } from './product-reviews.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  entryComponents: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-stock-notification-dialog',\n  templateUrl: './stock-notification-dialog.component.html',\n})\nexport class StockNotificationDialogComponent implements OnDestroy {\n  subscribeSuccess$: Observable<boolean>;\n  enabledPrefs: NotificationPreference[] = [];\n\n  constructor(\n    private modalService: ModalService,\n    private interestsService: UserInterestsService\n  ) {}\n\n  close() {\n    this.modalService.dismissActiveModal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribeSuccess$) {\n      this.subscribeSuccess$\n        .subscribe(success => {\n          if (success) {\n            this.interestsService.resetAddInterestState();\n          }\n        })\n        .unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  UserInterestsService,\n  UserNotificationPreferenceService,\n  AuthService,\n  OCC_USER_ID_ANONYMOUS,\n  NotificationPreference,\n  NotificationType,\n  Product,\n  GlobalMessageService,\n  TranslationService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { map, filter, tap, first } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\n\n@Component({\n  selector: 'cx-stock-notification',\n  templateUrl: './stock-notification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationComponent implements OnInit, OnDestroy {\n  hasProductInterests$: Observable<boolean>;\n  prefsEnabled$: Observable<boolean>;\n  outOfStock$: Observable<boolean>;\n  isRemoveInterestLoading$: Observable<boolean>;\n  anonymous = true;\n\n  private enabledPrefs: NotificationPreference[] = [];\n  private productCode: string;\n  private subscribeSuccess$: Observable<boolean>;\n  private subscriptions = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private currentProductService: CurrentProductService,\n    private globalMessageService: GlobalMessageService,\n    private translationService: TranslationService,\n    private interestsService: UserInterestsService,\n    private modalService: ModalService,\n    private notificationPrefService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.outOfStock$ = combineLatest([\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\n      this.authService.getOccUserId(),\n    ]).pipe(\n      tap(([product, userId]: [Product, String]) => {\n        this.productCode = product.code;\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\n          this.anonymous = false;\n          this.notificationPrefService.loadPreferences();\n          this.interestsService.loadProductInterests(\n            null,\n            null,\n            null,\n            product.code,\n            NotificationType.BACK_IN_STOCK\n          );\n        }\n      }),\n      map(\n        ([product]: [Product, String]) =>\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\n      )\n    );\n\n    this.hasProductInterests$ = this.interestsService\n      .getProductInterests()\n      .pipe(\n        map(interests => !!interests.results && interests.results.length === 1)\n      );\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\n    this.prefsEnabled$ = this.notificationPrefService\n      .getEnabledPreferences()\n      .pipe(\n        tap(prefs => (this.enabledPrefs = prefs)),\n        map(prefs => prefs.length > 0)\n      );\n\n    this.subscriptions.add(\n      this.interestsService.getAddProductInterestError().subscribe(error => {\n        if (error) {\n          this.onInterestAddingError();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.interestsService\n        .getRemoveProdutInterestSuccess()\n        .subscribe(success => {\n          if (success) {\n            this.onInterestRemovingSuccess();\n          }\n        })\n    );\n  }\n\n  subscribe() {\n    this.openDialog();\n    this.interestsService.addProductInterest(\n      this.productCode,\n      NotificationType.BACK_IN_STOCK\n    );\n  }\n\n  unsubscribe() {\n    this.interestsService.removeProdutInterest(\n      {\n        product: {\n          code: this.productCode,\n        },\n        productInterestEntry: [\n          {\n            interestType: NotificationType.BACK_IN_STOCK,\n          },\n        ],\n      },\n      true\n    );\n  }\n\n  private onInterestRemovingSuccess() {\n    this.subscriptions.add(\n      this.translationService\n        .translate('stockNotification.unsubscribeSuccess')\n        .pipe(first())\n        .subscribe(text =>\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\n        )\n    );\n    this.interestsService.resetRemoveInterestState();\n  }\n\n  private onInterestAddingError() {\n    this.modalService.dismissActiveModal();\n    this.interestsService.resetAddInterestState();\n  }\n\n  private openDialog() {\n    const modalInstance = this.modalService.open(\n      StockNotificationDialogComponent,\n      {\n        centered: true,\n        size: 'lg',\n      }\n    ).componentInstance;\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\n    modalInstance.enabledPrefs = this.enabledPrefs;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.interestsService.clearProductInterests();\n    this.notificationPrefService.clearPreferences();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockNotificationComponent } from './stock-notification.component';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        StockNotificationComponent: {\n          component: StockNotificationComponent,\n        },\n      },\n    }),\n  ],\n  entryComponents: [\n    StockNotificationComponent,\n    StockNotificationDialogComponent,\n  ],\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\n})\nexport class StockNotificationModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StoreFinderService, GeoPoint } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-grid',\n  templateUrl: './store-finder-grid.component.html',\n})\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\n  locations$: any;\n  isLoading$: Observable<boolean>;\n  defaultLocation: GeoPoint;\n  country: string;\n  region: string;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.defaultLocation = {};\n\n    if (this.route.snapshot.params.country) {\n      this.storeFinderService.findStoresAction(\n        '',\n        {\n          pageSize: -1,\n        },\n        undefined,\n        this.route.snapshot.params.country\n      );\n    }\n  }\n\n  ngOnDestroy() {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input, Directive } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\n// tslint:disable:directive-class-suffix\n@Directive()\nexport class AbstractStoreItemComponent {\n  @Input()\n  location;\n\n  constructor(protected storeDataService: StoreDataService) {}\n\n  getDirections(location: any): string {\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\n    const latitude = this.storeDataService.getStoreLatitude(location);\n    const longitude = this.storeDataService.getStoreLongitude(location);\n    return google_map_url + latitude + ',' + longitude;\n  }\n\n  getFormattedStoreAddress(addressParts: string[]): string {\n    return addressParts.filter(Boolean).join(', ');\n  }\n}\n","import { ActivatedRoute } from '@angular/router';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { StoreDataService, RoutingService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-list-item',\n  templateUrl: './store-finder-list-item.component.html',\n})\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\n  @Input()\n  locationIndex: number = null;\n  @Input()\n  listOrderLabel: any;\n  @Input()\n  displayDistance: boolean;\n  @Input()\n  useClickEvent: boolean;\n  @Output()\n  storeItemClick: EventEmitter<number> = new EventEmitter();\n\n  constructor(\n    protected storeDataService: StoreDataService,\n    protected route: ActivatedRoute,\n    protected routingService: RoutingService\n  ) {\n    super(storeDataService);\n  }\n\n  handleStoreItemClick() {\n    if (this.locationIndex !== null) {\n      this.storeItemClick.emit(this.locationIndex);\n    }\n  }\n\n  viewStore(location: any): void {\n    this.routingService.go([this.prepareRouteUrl(location)]);\n  }\n\n  prepareRouteUrl(location: any): string {\n    const countryParam = this.route.snapshot.params.country\n      ? `country/${this.route.snapshot.params.country}/`\n      : '';\n    const regionParam = this.route.snapshot.params.region\n      ? `region/${this.route.snapshot.params.region}/`\n      : '';\n    return `store-finder/${countryParam}${regionParam}${location.name}`;\n  }\n\n  onKey(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.handleStoreItemClick();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleMapRendererService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-map',\n  templateUrl: './store-finder-map.component.html',\n})\nexport class StoreFinderMapComponent implements OnChanges {\n  @ViewChild('mapElement', { static: true })\n  mapElement: ElementRef;\n  @Input()\n  locations: any[];\n  @Output()\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\n\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.locations && this.locations) {\n      this.renderMap();\n    }\n  }\n\n  /**\n   * Sets the center of the map to the given location\n   * @param latitude latitude of the new center\n   * @param longitude longitude of the new center\n   */\n  centerMap(latitude: number, longitude: number): void {\n    this.googleMapRendererService.centerMap(latitude, longitude);\n  }\n\n  renderMap(): void {\n    this.googleMapRendererService.renderMap(\n      this.mapElement.nativeElement,\n      this.locations,\n      markerIndex => {\n        this.selectStoreItemClickHandle(markerIndex);\n      }\n    );\n  }\n\n  private selectStoreItemClickHandle(markerIndex: number) {\n    this.selectedStoreItem.emit(markerIndex);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-store-finder-list',\n  templateUrl: './store-finder-list.component.html',\n})\nexport class StoreFinderListComponent {\n  @Input()\n  locations: any;\n  @Input()\n  useMylocation: boolean;\n  @ViewChild('storeMap')\n  storeMap: StoreFinderMapComponent;\n\n  selectedStore: PointOfService;\n  selectedStoreIndex: number;\n  isDetailsModeVisible: boolean;\n  storeDetails: PointOfService;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    private storeDataService: StoreDataService,\n    @Inject(DOCUMENT) private document: any\n  ) {\n    this.isDetailsModeVisible = false;\n  }\n\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\n    this.showStoreDetails(location);\n    this.selectedStoreIndex = index;\n    this.selectedStore = location;\n    this.storeMap.centerMap(\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\n    );\n  }\n\n  selectStoreItemList(index: number): void {\n    this.selectedStoreIndex = index;\n    const storeListItem = this.document.getElementById('item-' + index);\n    storeListItem.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n    });\n  }\n\n  showStoreDetails(location: PointOfService) {\n    this.isDetailsModeVisible = true;\n    this.storeDetails = location;\n  }\n\n  hideStoreDetails() {\n    this.isDetailsModeVisible = false;\n    this.selectedStoreIndex = undefined;\n    this.selectedStore = undefined;\n    this.storeMap.renderMap();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {\n  GeoPoint,\n  SearchConfig,\n  StoreFinderSearchQuery,\n  StoreFinderService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-search-result',\n  templateUrl: './store-finder-search-result.component.html',\n})\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\n  locations: any;\n  searchQuery: StoreFinderSearchQuery;\n  locations$: Observable<any>;\n  isLoading$: Observable<any>;\n  geolocation: GeoPoint;\n  subscription: Subscription;\n  useMyLocation: boolean;\n  countryCode: string = null;\n  searchConfig: SearchConfig = {\n    currentPage: 0,\n  };\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.route.queryParams.subscribe(params =>\n      this.initialize(params)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  viewPage(pageNumber: number) {\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation\n    );\n  }\n\n  private initialize(params: Params) {\n    this.searchQuery = this.parseParameters(params);\n    this.useMyLocation = params && params.useMyLocation ? true : false;\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation\n    );\n\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\n  }\n\n  private parseParameters(queryParams: {\n    [key: string]: any;\n  }): StoreFinderSearchQuery {\n    let searchQuery: StoreFinderSearchQuery;\n\n    if (queryParams.query) {\n      searchQuery = { queryText: queryParams.query };\n    } else {\n      searchQuery = { queryText: '' };\n    }\n\n    searchQuery.useMyLocation =\n      queryParams.useMyLocation != null &&\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\n\n    return searchQuery;\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  StoreFinderCoreModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\nimport { IconModule } from './../misc/icon/icon.module';\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ListNavigationModule,\n    NgbTabsetModule,\n    SpinnerModule,\n    UrlModule,\n    StoreFinderCoreModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | LayoutConfig>{\n      cmsComponents: {\n        StoreFinderComponent: {\n          component: StoreFinderComponent,\n          childRoutes: [\n            {\n              path: 'find',\n              component: StoreFinderSearchResultComponent,\n            },\n            {\n              path: 'view-all',\n              component: StoreFinderStoresCountComponent,\n            },\n            {\n              path: 'country/:country',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region/:store',\n              component: StoreFinderStoreComponent,\n            },\n            {\n              path: 'country/:country/:store',\n              component: StoreFinderStoreComponent,\n            },\n          ],\n        },\n      },\n      layoutSlots: {\n        StoreFinderPageTemplate: {\n          slots: ['MiddleContent', 'SideContent'],\n        },\n      },\n    }),\n  ],\n  declarations: [\n    StoreFinderSearchComponent,\n    StoreFinderListComponent,\n    StoreFinderMapComponent,\n    StoreFinderListItemComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreDescriptionComponent,\n    ScheduleComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderStoreComponent,\n  ],\n  exports: [\n    ScheduleComponent,\n    StoreFinderComponent,\n    StoreFinderGridComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderListItemComponent,\n    StoreFinderMapComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderSearchComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderListComponent,\n    StoreFinderStoreDescriptionComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderStoreComponent,\n  ],\n  entryComponents: [\n    StoreFinderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreComponent,\n  ],\n})\nexport class StoreFinderModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { FormUtils } from '../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-checkout-login',\n  templateUrl: './checkout-login.component.html',\n})\nexport class CheckoutLoginComponent implements OnDestroy {\n  form: FormGroup = this.formBuilder.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      emailConfirmation: ['', [Validators.required]],\n    },\n    { validator: this.emailsMatch }\n  );\n\n  sub: Subscription;\n\n  private submitClicked = false;\n\n  constructor(\n    protected formBuilder: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  isEmailConfirmInvalid(): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submitClicked ||\n        (this.form.get('emailConfirmation').touched &&\n          this.form.get('emailConfirmation').dirty))\n    );\n  }\n\n  onSubmit() {\n    this.submitClicked = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const email = this.form.value.email;\n    this.activeCartService.addEmail(email);\n\n    if (!this.sub) {\n      this.sub = this.activeCartService.getAssignedUser().subscribe(_ => {\n        if (this.activeCartService.isGuestCart()) {\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private emailsMatch(abstractControl: AbstractControl): { NotEqual: boolean } {\n    return abstractControl.get('email').value !==\n      abstractControl.get('emailConfirmation').value\n      ? { NotEqual: true }\n      : null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CheckoutLoginComponent } from './checkout-login.component';\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        GuestCheckoutLoginComponent: {\n          component: CheckoutLoginComponent,\n          guards: [NotCheckoutAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutLoginComponent],\n  exports: [CheckoutLoginComponent],\n  entryComponents: [CheckoutLoginComponent],\n})\nexport class CheckoutLoginModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\nimport { CheckoutConfigService } from '../../checkout/services/checkout-config.service';\n\n@Component({\n  selector: 'cx-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  form: FormGroup;\n  loginAsGuest = false;\n\n  constructor(\n    protected auth: AuthService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected winRef: WindowRef,\n    protected activatedRoute: ActivatedRoute,\n    protected checkoutConfigService: CheckoutConfigService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userId: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: ['', Validators.required],\n    });\n\n    if (this.checkoutConfigService.isGuestCheckout()) {\n      this.loginAsGuest = this.activatedRoute?.snapshot?.queryParams?.[\n        'forced'\n      ];\n    }\n\n    const prefilledEmail = this.winRef?.nativeWindow?.history?.state?.[\n      'newUid'\n    ];\n\n    if (prefilledEmail?.length) {\n      this.prefillForm('userId', prefilledEmail);\n    }\n  }\n\n  login(): void {\n    if (this.form.valid) {\n      this.submitLogin();\n    } else {\n      this.markFormAsTouched();\n    }\n  }\n\n  private submitLogin(): void {\n    const { userId, password } = this.form.controls;\n    this.auth.authorize(\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\n      password.value\n    );\n\n    if (!this.sub) {\n      this.sub = this.auth.getUserToken().subscribe(data => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n\n  private markFormAsTouched(): void {\n    Object.keys(this.form.controls).forEach(key => {\n      this.form.controls[key].markAsTouched();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private prefillForm(field: string, value: string): void {\n    this.form.patchValue({\n      [field]: value,\n    });\n\n    this.form.get(field).markAsTouched(); // this action will check field validity on load\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { LoginFormComponent } from './login-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [LoginFormComponent],\n  exports: [LoginFormComponent],\n  entryComponents: [LoginFormComponent],\n})\nexport class LoginFormModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService, User, UserService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(private auth: AuthService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user$ = this.auth.isUserLoggedIn().pipe(\n      switchMap(isUserLoggedIn => {\n        if (isUserLoggedIn) {\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n  ProtectedRoutesService,\n  FeatureConfigService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  /**\n   * @deprecated since 1.4\n   * Check #5666 for more info\n   *\n   * TODO(issue:5666) Deprecated since 1.4\n   */\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected routing: RoutingService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutes?: ProtectedRoutesService,\n    protected featureConfig?: FeatureConfigService\n  ) {}\n\n  canActivate(): Observable<any> {\n    this.logout();\n\n    return this.cms\n      .hasPage({\n        id: this.semanticPathService.get('logout'),\n        type: PageType.CONTENT_PAGE,\n      })\n      .pipe(\n        tap(hasPage => {\n          if (!hasPage) {\n            this.redirect();\n          }\n        })\n      );\n  }\n\n  protected redirect(): void {\n    // TODO(issue:5666) Deprecated since 1.4\n    const cxRoute: string =\n      this.featureConfig.isLevel('1.4') &&\n      this.protectedRoutes &&\n      this.protectedRoutes.shouldProtect\n        ? 'login'\n        : 'home';\n\n    this.routing.go({ cxRoute });\n  }\n\n  protected logout(): void {\n    this.auth.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  UserService,\n  UserSignUp,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { sortTitles } from '../../../shared/utils/forms/title-utils';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  titles$: Observable<Title[]>;\n  loading$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  anonymousConsent$: Observable<{\n    consent: AnonymousConsent;\n    template: string;\n  }>;\n\n  userRegistrationForm: FormGroup = this.fb.group(\n    {\n      titleCode: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n      newsletter: new FormControl({\n        value: false,\n        disabled: this.isConsentRequired(),\n      }),\n      termsandconditions: [false, Validators.requiredTrue],\n    },\n    { validator: CustomFormValidators.matchPassword }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected router: RoutingService,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig\n  ) {}\n\n  ngOnInit() {\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map(titles => {\n        return titles.sort(sortTitles);\n      })\n    );\n\n    this.loading$ = this.userService.getRegisterUserResultLoading();\n    this.registerUserProcessInit();\n\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n    this.subscription.add(\n      this.globalMessageService\n        .get()\n        .pipe(filter(messages => !!Object.keys(messages).length))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          const messages =\n            globalMessageEntities &&\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\n\n          if (\n            messages &&\n            messages.some(message => message === 'This field is required.')\n          ) {\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.globalMessageService.add(\n              { key: 'register.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n        })\n    );\n\n    const { registerConsent } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    this.anonymousConsent$ = combineLatest([\n      this.anonymousConsentsService.getConsent(registerConsent),\n      this.anonymousConsentsService.getTemplate(registerConsent),\n    ]).pipe(\n      map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\n        return {\n          consent,\n          template: template ? template.description : '',\n        };\n      })\n    );\n\n    this.subscription.add(\n      this.userRegistrationForm.get('newsletter').valueChanges.subscribe(() => {\n        this.toggleAnonymousConsent();\n      })\n    );\n  }\n\n  submit(): void {\n    this.userService.register(\n      this.collectDataFromRegisterForm(this.userRegistrationForm.value)\n    );\n  }\n\n  titleSelected(title: Title): void {\n    this.userRegistrationForm['controls'].titleCode.setValue(title.code);\n  }\n\n  collectDataFromRegisterForm(formData: any): UserSignUp {\n    const { firstName, lastName, email, password, titleCode } = formData;\n\n    return {\n      firstName,\n      lastName,\n      uid: email.toLowerCase(),\n      password,\n      titleCode,\n    };\n  }\n\n  isConsentGiven(consent: AnonymousConsent): boolean {\n    return this.anonymousConsentsService.isConsentGiven(consent);\n  }\n\n  private isConsentRequired(): boolean {\n    const {\n      requiredConsents,\n      registerConsent,\n    } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    if (requiredConsents && registerConsent) {\n      return requiredConsents.includes(registerConsent);\n    }\n\n    return false;\n  }\n\n  private onRegisterUserSuccess(success: boolean): void {\n    if (success) {\n      this.router.go('login');\n      this.globalMessageService.add(\n        { key: 'register.postRegisterMessage' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  toggleAnonymousConsent(): void {\n    const { registerConsent } = this.anonymousConsentsConfig.anonymousConsents;\n\n    if (Boolean(this.userRegistrationForm.get('newsletter').value)) {\n      this.anonymousConsentsService.giveConsent(registerConsent);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(registerConsent);\n    }\n  }\n\n  private registerUserProcessInit(): void {\n    this.userService.resetRegisterUserProcessState();\n    this.subscription.add(\n      this.userService.getRegisterUserResultSuccess().subscribe(success => {\n        this.onRegisterUserSuccess(success);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetRegisterUserProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/index';\nimport { LoginModule } from '../login/login.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          component: RegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [RegisterComponent],\n  exports: [RegisterComponent],\n  entryComponents: [RegisterComponent],\n})\nexport class RegisterComponentModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../shared/index';\nimport { AddToCartModule } from '../cart/index';\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\nimport { WishListComponent } from './components/wish-list/wish-list.component';\n\n@NgModule({\n  imports: [\n    AddToCartModule,\n    CommonModule,\n    I18nModule,\n    MediaModule,\n    RouterModule,\n    StarRatingModule,\n    UrlModule,\n    ItemCounterModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        WishListComponent: {\n          component: WishListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [WishListComponent, WishListItemComponent],\n  entryComponents: [WishListComponent],\n  exports: [WishListComponent, WishListItemComponent],\n})\nexport class WishListModule {}\n","import { NgModule } from '@angular/core';\nimport { HamburgerMenuModule } from '../layout/index';\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\nimport { AsmModule } from './asm/asm.module';\nimport { CartComponentModule } from './cart/cart.module';\nimport { CheckoutComponentModule } from './checkout/checkout.module';\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\nimport {\n  BannerModule,\n  CmsParagraphModule,\n  LinkModule,\n  TabParagraphContainerModule,\n} from './content/index';\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\nimport {\n  AddressBookModule,\n  CloseAccountModule,\n  ConsentManagementModule,\n  ForgotPasswordModule,\n  MyInterestsModule,\n  NotificationPreferenceModule,\n  OrderCancellationModule,\n  OrderDetailsModule,\n  OrderHistoryModule,\n  OrderReturnModule,\n  PaymentMethodsModule,\n  ResetPasswordModule,\n  ReturnRequestDetailModule,\n  ReturnRequestListModule,\n  UpdateEmailModule,\n  UpdatePasswordModule,\n  UpdateProfileModule,\n  MyCouponsModule,\n} from './myaccount/index';\nimport {\n  BreadcrumbModule,\n  CategoryNavigationModule,\n  FooterNavigationModule,\n  NavigationModule,\n  SearchBoxModule,\n} from './navigation/index';\nimport { OrderConfirmationModule } from './order-confirmation/index';\nimport {\n  ProductCarouselModule,\n  ProductIntroModule,\n  ProductListModule,\n  ProductReferencesModule,\n  ProductTabsModule,\n  StockNotificationModule,\n} from './product/index';\nimport { ProductImagesModule } from './product/product-images/product-images.module';\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\nimport { StoreFinderModule } from './storefinder/store-finder.module';\nimport { UserComponentModule } from './user/user.module';\nimport { WishListModule } from './wish-list/wish-list.module';\n\n@NgModule({\n  imports: [\n    AnonymousConsentManagementBannerModule,\n    AsmModule,\n    HamburgerMenuModule,\n    CmsParagraphModule,\n    LinkModule,\n    BannerModule,\n    CategoryNavigationModule,\n    NavigationModule,\n    FooterNavigationModule,\n    BreadcrumbModule,\n    SearchBoxModule,\n    SiteContextSelectorModule,\n    QualtricsModule,\n    AddressBookModule,\n    OrderHistoryModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n    ProductListModule,\n    ProductTabsModule,\n    ProductCarouselModule,\n    ProductReferencesModule,\n    OrderDetailsModule,\n    PaymentMethodsModule,\n    UpdateEmailModule,\n    UpdatePasswordModule,\n    UpdateProfileModule,\n    ConsentManagementModule,\n    CloseAccountModule,\n    CartComponentModule,\n    TabParagraphContainerModule,\n    OrderConfirmationModule,\n    StoreFinderModule,\n    ProductImagesModule,\n    ProductSummaryModule,\n    ProductVariantsModule,\n    ProductIntroModule,\n    CheckoutComponentModule,\n    ForgotPasswordModule,\n    ResetPasswordModule,\n    BannerCarouselModule,\n    UserComponentModule,\n    MyCouponsModule,\n    WishListModule,\n    NotificationPreferenceModule,\n    MyInterestsModule,\n    StockNotificationModule,\n  ],\n})\nexport class CmsLibModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductDetailsUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPDPMatcher = getSuffixUrlMatcher({\n      marker: 'p',\n      paramName: 'productCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PDP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / p / :productCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_DETAILS_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_DETAILS_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductDetailsUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          product: {\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductListingUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPLPMatcher = getSuffixUrlMatcher({\n      marker: 'c',\n      paramName: 'categoryCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PLP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / c / :categoryCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_LISTING_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_LISTING_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductListingUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          category: {\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\nexport const b2cLayoutConfig: LayoutConfig = {\n  // deferredLoading: {\n  //   strategy: DeferLoadingStrategy.DEFER,\n  //   intersectionMargin: '50px',\n  // },\n  layoutSlots: {\n    header: {\n      lg: {\n        slots: [\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n    },\n    navigation: {\n      lg: { slots: [] },\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      pageFold: 'Section2B',\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      pageFold: 'Section2',\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\n    },\n    ProductGridPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsListSlot',\n        'Section4',\n      ],\n    },\n    SearchResultsGridPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsGridSlot',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      lg: {\n        pageFold: 'UpSelling',\n      },\n\n      pageFold: 'Summary',\n\n      slots: [\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n    CheckoutLoginPageTemplate: {\n      slots: ['RightContentSlot'],\n    },\n  },\n};\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\nimport {\n  AnonymousConsentsModule,\n  AuthModule,\n  CartModule,\n  CheckoutModule,\n  CmsModule,\n  ConfigInitializerModule,\n  ConfigModule,\n  ConfigValidatorModule,\n  FeaturesConfigModule,\n  GlobalMessageModule,\n  I18nModule,\n  ProcessModule,\n  ProductModule,\n  provideConfigFromMetaTags,\n  StateModule,\n  UserModule,\n} from '@spartacus/core';\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { ViewConfigModule } from '../shared/config/view-config.module';\n\n@NgModule({\n  imports: [\n    StateModule.forRoot(),\n    AuthModule.forRoot(),\n    AnonymousConsentsModule.forRoot(),\n    ConfigModule.forRoot(),\n    ConfigInitializerModule.forRoot(),\n    ConfigValidatorModule.forRoot(),\n    RoutingModule.forRoot(),\n    I18nModule.forRoot(),\n    CmsModule.forRoot(),\n    GlobalMessageModule.forRoot(),\n    ProcessModule.forRoot(),\n    CartModule.forRoot(),\n    CheckoutModule.forRoot(),\n    UserModule.forRoot(),\n    ProductModule.forRoot(),\n    ViewConfigModule.forRoot(),\n    FeaturesConfigModule.forRoot('2.0'),\n    LayoutModule,\n  ],\n  exports: [LayoutModule],\n  providers: [...provideConfigFromMetaTags()],\n})\nexport class StorefrontFoundationModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  ExternalRoutesModule,\n  OccModule,\n  PersonalizationModule,\n  provideConfig,\n  SiteContextModule,\n  SmartEditModule,\n} from '@spartacus/core';\nimport { AsmModule } from '../cms-components/asm/asm.module';\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\nimport { MainModule } from '../layout/main/main.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n    }),\n\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\n    // since we might have conflicting interceptor logic. See #5461.\n    AsmModule,\n\n    StorefrontFoundationModule,\n    MainModule,\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n\n    SmartEditModule.forRoot(), // should be custom\n    PersonalizationModule.forRoot(), // should be custom\n\n    // opt-in explicitly\n    OccModule.forRoot(),\n    ProductDetailsPageModule,\n    ProductListingPageModule,\n    ExternalRoutesModule.forRoot(),\n  ],\n  exports: [MainModule, StorefrontFoundationModule],\n})\nexport class StorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<StorefrontModule> {\n    return {\n      ngModule: StorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideConfig,\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { b2cLayoutConfig } from './config/b2c-layout-config';\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\nimport { StorefrontModule } from './storefront.module';\n\n@NgModule({\n  imports: [\n    StorefrontModule,\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n  ],\n  providers: [\n    provideDefaultConfig({\n      pwa: {\n        enabled: true,\n        addToHomeScreen: true,\n      },\n    }),\n    provideDefaultConfig(b2cLayoutConfig),\n    provideDefaultConfigFactory(defaultCmsContentConfig),\n  ],\n  exports: [StorefrontModule],\n})\nexport class B2cStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2cStorefrontModule> {\n    return {\n      ngModule: B2cStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","/**\n * @deprecated since 2.0.0\n * NOTE: delete this file altogether, move below slots to the main default layout config\n */\n\nimport { LayoutConfig } from '../../../layout/config/layout-config';\n\nexport const PLPAccessibilityLayoutConfig: LayoutConfig = {\n  layoutSlots: {\n    ProductListPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\n    },\n  },\n};\n","/*\n * Public API Surface of storefrontlib\n */\n\nexport * from './cms-components/index';\nexport * from './cms-pages/index';\nexport * from './cms-structure/index';\nexport * from './layout/index';\nexport * from './recipes/index';\nexport * from './recipes/storefront.module';\nexport * from './shared/index';\nexport * from './storefront-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AsmLoaderModule as ɵf,asmFactory as ɵg} from './cms-components/asm/asm-loader.module';\nexport {AsmMainUiComponent as ɵj} from './cms-components/asm/asm-main-ui/asm-main-ui.component';\nexport {AsmSessionTimerComponent as ɵn} from './cms-components/asm/asm-session-timer/asm-session-timer.component';\nexport {FormatTimerPipe as ɵo} from './cms-components/asm/asm-session-timer/format-timer.pipe';\nexport {CSAgentLoginFormComponent as ɵl} from './cms-components/asm/csagent-login-form/csagent-login-form.component';\nexport {CustomerEmulationComponent as ɵp} from './cms-components/asm/customer-emulation/customer-emulation.component';\nexport {CustomerSelectionComponent as ɵm} from './cms-components/asm/customer-selection/customer-selection.component';\nexport {AsmComponentService as ɵk} from './cms-components/asm/services/asm-component.service';\nexport {AsmEnablerService as ɵi} from './cms-components/asm/services/asm-enabler.service';\nexport {defaultCheckoutConfig as ɵbg} from './cms-components/checkout/config/default-checkout-config';\nexport {ExpressCheckoutService as ɵbh} from './cms-components/checkout/services/express-checkout.service';\nexport {defaultQualtricsConfig as ɵbi} from './cms-components/misc/qualtrics/config/default-qualtrics-config';\nexport {MyCouponsComponentService as ɵbp} from './cms-components/myaccount/my-coupons/my-coupons.component.service';\nexport {ReturnRequestService as ɵbn} from './cms-components/myaccount/order/return-request-detail/return-request.service';\nexport {ComponentMapperService as ɵh} from './cms-structure/page/component/component-mapper.service';\nexport {pwaConfigurationFactory as ɵa,pwaFactory as ɵb} from './cms-structure/pwa/pwa.module';\nexport {AddToHomeScreenService as ɵbo} from './cms-structure/pwa/services/add-to-home-screen.service';\nexport {addCmsRoute as ɵbq} from './cms-structure/routing/cms-route/add-cms-route';\nexport {defaultRoutingConfig as ɵbs,defaultStorefrontRoutesConfig as ɵbr} from './cms-structure/routing/default-routing-config';\nexport {htmlLangProvider as ɵbt,setHtmlLangAttribute as ɵbu} from './cms-structure/seo/html-lang-provider';\nexport {getStructuredDataFactory as ɵc} from './cms-structure/seo/structured-data/structured-data.module';\nexport {CmsGuardsService as ɵbm} from './cms-structure/services/cms-guards.service';\nexport {CmsI18nService as ɵbl} from './cms-structure/services/cms-i18n.service';\nexport {CmsMappingService as ɵbk} from './cms-structure/services/cms-mapping.service';\nexport {CmsRoutesService as ɵbj} from './cms-structure/services/cms-routes.service';\nexport {KeyboardFocusService as ɵbv} from './layout/a11y/keyboard-focus';\nexport {AutoFocusDirective as ɵt} from './layout/a11y/keyboard-focus/autofocus/auto-focus.directive';\nexport {AutoFocusService as ɵbc} from './layout/a11y/keyboard-focus/autofocus/auto-focus.service';\nexport {BaseFocusDirective as ɵy} from './layout/a11y/keyboard-focus/base/base-focus.directive';\nexport {BaseFocusService as ɵz} from './layout/a11y/keyboard-focus/base/base-focus.service';\nexport {BlockFocusDirective as ɵw} from './layout/a11y/keyboard-focus/block/block-focus.directive';\nexport {EscapeFocusDirective as ɵu} from './layout/a11y/keyboard-focus/escape/escape-focus.directive';\nexport {EscapeFocusService as ɵbb} from './layout/a11y/keyboard-focus/escape/escape-focus.service';\nexport {FOCUS_ATTR as ɵd} from './layout/a11y/keyboard-focus/keyboard-focus.model';\nexport {LockFocusDirective as ɵq} from './layout/a11y/keyboard-focus/lock/lock-focus.directive';\nexport {LockFocusService as ɵbf} from './layout/a11y/keyboard-focus/lock/lock-focus.service';\nexport {PersistFocusDirective as ɵv} from './layout/a11y/keyboard-focus/persist/persist-focus.directive';\nexport {PersistFocusService as ɵba} from './layout/a11y/keyboard-focus/persist/persist-focus.service';\nexport {TabFocusDirective as ɵs} from './layout/a11y/keyboard-focus/tab/tab-focus.directive';\nexport {TabFocusService as ɵbd} from './layout/a11y/keyboard-focus/tab/tab-focus.service';\nexport {TrapFocusDirective as ɵr} from './layout/a11y/keyboard-focus/trap/trap-focus.directive';\nexport {TrapFocusService as ɵbe} from './layout/a11y/keyboard-focus/trap/trap-focus.service';\nexport {VisibleFocusDirective as ɵx} from './layout/a11y/keyboard-focus/visible/visible-focus.directive';\nexport {skipLinkFactory as ɵe} from './layout/a11y/skip-link/skip-link.module';\nexport {AnonymousConsentsModule as ɵbw} from './shared/components/anonymous-consents/anonymous-consents.module';\nexport {AnonymousConsentDialogComponent as ɵbx} from './shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component';"]}