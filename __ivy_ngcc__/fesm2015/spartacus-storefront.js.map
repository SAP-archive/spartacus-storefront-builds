{"version":3,"file":"spartacus-storefront.js","sources":["../../../projects/storefrontlib/src/layout/launch-dialog/config/launch-config.ts","../../../projects/storefrontlib/src/layout/config/layout-config.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/launch-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/inline-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/launch-dialog.service.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.model.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.service.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet-renderer.service.ts","../../../projects/storefrontlib/src/layout/loading/intersection.service.ts","../../../projects/storefrontlib/src/layout/loading/defer-loader.service.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.directive.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.module.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/outlet-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/routing-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/launch-dialog.module.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/anonymous-consent-launch-dialog.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/keyboard-focus.model.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/base/base-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/base/base-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/block/block-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/services/select-focus.util.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/keyboard-focus.module.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/index.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon.model.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/fontawesome-icon.config.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon-loader.service.ts","../../../projects/storefrontlib/src/layout/direction/config/direction.model.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon.component.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/default-icon.config.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon.module.ts","../../../projects/storefrontlib/src/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/default-anonymous-consent-layout.config.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","../../../projects/storefrontlib/src/shared/components/spinner/spinner.component.ts","../../../projects/storefrontlib/src/shared/components/spinner/spinner.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/consent-management/components/consent-management.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/consent-management/consent-management.module.ts","../../../projects/storefrontlib/src/shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module.ts","../../../projects/storefrontlib/src/shared/components/card/card.component.ts","../../../projects/storefrontlib/src/shared/components/card/card.module.ts","../../../projects/storefrontlib/src/shared/components/carousel/carousel.service.ts","../../../projects/storefrontlib/src/shared/components/carousel/carousel.component.ts","../../../projects/storefrontlib/src/layout/breakpoint/breakpoint.service.ts","../../../projects/storefrontlib/src/shared/components/media/media.service.ts","../../../projects/storefrontlib/src/shared/components/media/media.component.ts","../../../projects/storefrontlib/src/shared/components/media/media.module.ts","../../../projects/storefrontlib/src/shared/components/carousel/carousel.module.ts","../../../projects/storefrontlib/src/shared/components/date-picker/date-picker-formatter.service.ts","../../../projects/storefrontlib/src/shared/components/date-picker/date-picker.component.ts","../../../projects/storefrontlib/src/shared/components/date-picker/date-picker.module.ts","../../../projects/storefrontlib/src/shared/components/date-time-picker/date-time-picker-formatter.service.ts","../../../projects/storefrontlib/src/shared/components/date-time-picker/date-time-picker.component.ts","../../../projects/storefrontlib/src/shared/components/date-time-picker/date-time-picker.module.ts","../../../projects/storefrontlib/src/shared/components/form/form-errors/form-errors.component.ts","../../../projects/storefrontlib/src/shared/components/form/form-errors/form-errors.module.ts","../../../projects/storefrontlib/src/shared/components/generic-link/generic-link.component.ts","../../../projects/storefrontlib/src/shared/components/generic-link/generic-link.module.ts","../../../projects/storefrontlib/src/shared/components/item-counter/item-counter.component.ts","../../../projects/storefrontlib/src/shared/components/item-counter/item-counter.module.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/config/default-pagination.config.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/config/pagination.config.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.model.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.builder.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.component.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.module.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/sorting/sorting.component.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/list-navigation.module.ts","../../../projects/storefrontlib/src/shared/components/media/media.config.ts","../../../projects/storefrontlib/src/shared/components/modal/modal-ref.ts","../../../projects/storefrontlib/src/shared/components/modal/modal.service.ts","../../../projects/storefrontlib/src/shared/components/order-overview/order-overview.component.ts","../../../projects/storefrontlib/src/shared/components/order-overview/order-overview.module.ts","../../../projects/storefrontlib/src/shared/components/replenishment-order-cancellation-dialog/replenishment-order-cancellation-dialog.component.ts","../../../projects/storefrontlib/src/shared/components/replenishment-order-cancellation-dialog/replenishment-order-cancellation-dialog.module.ts","../../../projects/storefrontlib/src/shared/components/split-view/split-view-deactivate.guard.ts","../../../projects/storefrontlib/src/shared/components/split-view/split-view.service.ts","../../../projects/storefrontlib/src/shared/components/split-view/split/split-view.component.ts","../../../projects/storefrontlib/src/shared/components/split-view/view/view.component.ts","../../../projects/storefrontlib/src/shared/components/split-view/split-view.module.ts","../../../projects/storefrontlib/src/cms-components/misc/global-message/global-message.component.ts","../../../projects/storefrontlib/src/cms-components/misc/global-message/global-message.module.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/config/qualtrics-config.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/qualtrics-loader.service.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/qualtrics.component.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/qualtrics.module.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/language-currency.component.ts","../../../projects/storefrontlib/src/cms-structure/page/model/cms-component-data.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context-component.service.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context-selector.component.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context-selector.module.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context.model.ts","../../../projects/storefrontlib/src/shared/components/star-rating/star-rating.component.ts","../../../projects/storefrontlib/src/shared/components/star-rating/star-rating.module.ts","../../../projects/storefrontlib/src/shared/components/table/table-data-cell/table-data-cell.component.ts","../../../projects/storefrontlib/src/shared/components/table/table-header-cell/table-header-cell.component.ts","../../../projects/storefrontlib/src/shared/components/table/config/default-table.config.ts","../../../projects/storefrontlib/src/shared/components/table/config/table.config.ts","../../../projects/storefrontlib/src/shared/components/table/table-data-cell/table-data-cell.module.ts","../../../projects/storefrontlib/src/shared/components/table/table-header-cell/table-header-cell.module.ts","../../../projects/storefrontlib/src/shared/components/table/table-renderer.service.ts","../../../projects/storefrontlib/src/shared/components/table/table.model.ts","../../../projects/storefrontlib/src/shared/components/table/table.component.ts","../../../projects/storefrontlib/src/shared/components/table/table.module.ts","../../../projects/storefrontlib/src/shared/components/table/table.service.ts","../../../projects/storefrontlib/src/shared/config/view-config.ts","../../../projects/storefrontlib/src/shared/config/view-config.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-details.service.ts","../../../projects/storefrontlib/src/shared/services/promotion/promotion.service.ts","../../../projects/storefrontlib/src/shared/utils/validators/custom-form-validators.ts","../../../projects/storefrontlib/src/shared/utils/forms/title-utils.ts","../../../projects/storefrontlib/src/cms-structure/services/feature-modules.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-components.service.ts","../../../projects/storefrontlib/src/shared/utils/combined-injector.ts","../../../projects/storefrontlib/src/cms-structure/page/component/services/cms-injector.service.ts","../../../projects/storefrontlib/src/cms-structure/page/component/handlers/component-handler.ts","../../../projects/storefrontlib/src/cms-structure/page/component/services/component-handler.service.ts","../../../projects/storefrontlib/src/cms-structure/page/component/component-wrapper.directive.ts","../../../projects/storefrontlib/src/cms-structure/page/component/handlers/default-component.handler.ts","../../../projects/storefrontlib/src/cms-structure/page/component/handlers/lazy-component.handler.ts","../../../projects/storefrontlib/src/cms-structure/page/component/page-component.module.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-constants.ts","../../../projects/storefrontlib/src/cms-components/asm/services/asm-enabler.service.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-loader.module.ts","../../../projects/storefrontlib/src/cms-components/asm/services/asm-component.service.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-session-timer/format-timer.pipe.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-toggle-ui/asm-toggle-ui.component.ts","../../../projects/storefrontlib/src/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","../../../projects/storefrontlib/src/cms-components/asm/customer-emulation/customer-emulation.component.ts","../../../projects/storefrontlib/src/cms-components/asm/customer-selection/customer-selection.component.ts","../../../projects/storefrontlib/src/cms-components/asm/default-asm-layout.config.ts","../../../projects/storefrontlib/src/cms-components/asm/asm.module.ts","../../../projects/storefrontlib/src/cms-components/product/current-product.service.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-cart/add-to-cart.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/promotions/promotions.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/promotions/promotions.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-coupon/cart-coupon.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-coupon/cart-coupon.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/cart-shared.module.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-cart/add-to-cart.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-details/cart-details.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-details/cart-details.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-not-empty.guard.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-page-layout-handler.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-totals/cart-totals.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-totals/cart-totals.module.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout-handler.ts","../../../projects/storefrontlib/src/cms-components/cart/mini-cart/mini-cart.component.ts","../../../projects/storefrontlib/src/cms-components/cart/mini-cart/mini-cart.module.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","../../../projects/storefrontlib/src/cms-components/cart/save-for-later/save-for-later.component.ts","../../../projects/storefrontlib/src/cms-components/cart/save-for-later/save-for-later.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/model/checkout-step.model.ts","../../../projects/storefrontlib/src/cms-components/checkout/config/checkout-config.ts","../../../projects/storefrontlib/src/cms-components/checkout/config/default-checkout-config.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/checkout-config.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout-auth.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/checkout-step.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/checkout-details.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/express-checkout.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout-steps-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/multiline-titles.pipe.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout-details-loaded.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/not-checkout-auth.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/delivery-mode-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/payment-details-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/shipping-address-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/cost-center/cost-center.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/cost-center/cost-center.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-method.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-method.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-type/payment-type.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-type/payment-type.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/place-order/default-place-order-spinner-layout.config.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/checkout-replenishment-form-service.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/place-order/place-order.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/place-order/place-order.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/review-submit/review-submit.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/review-submit/review-submit.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/schedule-replenishment-order/schedule-replenishment-order.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/schedule-replenishment-order/schedule-replenishment-order.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/shipping-address.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/shipping-address.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/checkout.module.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/config/skip-link.config.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/service/skip-link.service.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/component/skip-link.component.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/config/default-skip-link.config.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/directive/skip-link.directive.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/skip-link.module.ts","../../../projects/storefrontlib/src/layout/config/default-layout.config.ts","../../../projects/storefrontlib/src/layout/direction/config/direction.config.ts","../../../projects/storefrontlib/src/layout/direction/config/default-direction.config.ts","../../../projects/storefrontlib/src/layout/direction/direction.service.ts","../../../projects/storefrontlib/src/layout/direction/direction.module.ts","../../../projects/storefrontlib/src/layout/header/hamburger-menu/hamburger-menu.service.ts","../../../projects/storefrontlib/src/layout/header/hamburger-menu/hamburger-menu.component.ts","../../../projects/storefrontlib/src/layout/header/hamburger-menu/hamburger-menu.module.ts","../../../projects/storefrontlib/src/layout/layout.module.ts","../../../projects/storefrontlib/src/cms-structure/page/slot/page-slot.component.ts","../../../projects/storefrontlib/src/cms-structure/page/slot/page-slot.module.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout.service.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout.component.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-template.directive.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout.module.ts","../../../projects/storefrontlib/src/cms-structure/pwa/pwa.module-config.ts","../../../projects/storefrontlib/src/cms-structure/pwa/services/add-to-home-screen.service.ts","../../../projects/storefrontlib/src/cms-structure/pwa/components/add-to-home-screen.component.ts","../../../projects/storefrontlib/src/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","../../../projects/storefrontlib/src/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","../../../projects/storefrontlib/src/cms-structure/pwa/pwa.module.ts","../../../projects/storefrontlib/src/cms-structure/seo/html-lang-provider.ts","../../../projects/storefrontlib/src/cms-structure/seo/seo-meta.service.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/json-ld-script.factory.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/json-ld.directive.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/tokens.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/structured-data.factory.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/structured-data.module.ts","../../../projects/storefrontlib/src/cms-structure/seo/seo.module.ts","../../../projects/storefrontlib/src/layout/main/storefront.component.ts","../../../projects/storefrontlib/src/layout/main/main.module.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-guards.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-i18n.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-routes-impl.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-routes.service.ts","../../../projects/storefrontlib/src/cms-structure/guards/cms-page-guard.service.ts","../../../projects/storefrontlib/src/cms-structure/guards/cms-page.guard.ts","../../../projects/storefrontlib/src/cms-structure/routing/cms-route/add-cms-route.ts","../../../projects/storefrontlib/src/cms-structure/routing/cms-route/cms-route.module.ts","../../../projects/storefrontlib/src/cms-structure/routing/default-routing-config.ts","../../../projects/storefrontlib/src/cms-structure/routing/routing.module.ts","../../../projects/storefrontlib/src/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","../../../projects/storefrontlib/src/cms-components/content/banner-carousel/banner-carousel.component.ts","../../../projects/storefrontlib/src/cms-components/content/banner-carousel/banner-carousel.module.ts","../../../projects/storefrontlib/src/cms-components/content/banner/banner.component.ts","../../../projects/storefrontlib/src/cms-components/content/banner/banner.module.ts","../../../projects/storefrontlib/src/cms-components/content/link/link.component.ts","../../../projects/storefrontlib/src/cms-components/content/link/link.module.ts","../../../projects/storefrontlib/src/cms-components/content/paragraph/paragraph.component.ts","../../../projects/storefrontlib/src/cms-components/content/paragraph/paragraph.module.ts","../../../projects/storefrontlib/src/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","../../../projects/storefrontlib/src/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/address-book/address-book.component.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/address-book/address-book.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/address-book/address-book.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/close-account/close-account.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/forgot-password/forgot-password.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/forgot-password/forgot-password.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order.model.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-approval-details/order-detail-approval-details.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-details.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-history/order-history.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-history/order-history.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/replenishment-order-details/default-replenishment-order-cancellation-layout.config.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/replenishment-order-details/replenishment-order-cancellation/replenishment-order-cancellation-launch-dialog.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/replenishment-order-details/replenishment-order-cancellation/replenishment-order-cancellation.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/replenishment-order-details/replenishment-order-details.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/replenishment-order-details/replenishment-order-details.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/replenishment-order-history/replenishment-order-history.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/replenishment-order-history/replenishment-order-history.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/payment-methods/payment-methods.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/payment-methods/payment-methods.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/reset-password/reset-password-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/reset-password/reset-password.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-email/update-email.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-email/update-email.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-password/update-password.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-profile/update-profile.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-profile/update-profile.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/my-coupons.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/my-coupons.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/notification-preference/notification-preference.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/notification-preference/notification-preference.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-interests/my-interests.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-interests/my-interests.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/breadcrumb/breadcrumb.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/breadcrumb/breadcrumb.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation.service.ts","../../../projects/storefrontlib/src/cms-components/navigation/category-navigation/category-navigation.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation-ui.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/category-navigation/category-navigation.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/footer-navigation/footer-navigation.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/footer-navigation/footer-navigation.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/search-box-component.service.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/search-box.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/highlight.pipe.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/search-box.module.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/guards/order-confirmation.guard.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/order-confirmation.module.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/replenishment-order-confirmation.module.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-carousel.service.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-carousel/product-carousel.component.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-carousel/product-carousel.module.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-references/product-references.component.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-references/product-references.module.ts","../../../projects/storefrontlib/src/cms-components/product/config/default-scroll-config.ts","../../../projects/storefrontlib/src/cms-components/product/product-images/product-images.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-images/product-images.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-intro/product-intro.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-intro/product-intro.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/container/product-list-component.service.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-view/product-view.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/container/product-list.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet.model.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-list-item/product-list-item.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/product-variants.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/guards/product-variant.guard.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/product-variants.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-list.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-outlets.model.ts","../../../projects/storefrontlib/src/cms-components/product/product-summary/product-summary.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-summary/product-summary.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-tabs.module.ts","../../../projects/storefrontlib/src/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/product/stock-notification/stock-notification.component.ts","../../../projects/storefrontlib/src/cms-components/product/stock-notification/stock-notification.module.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/schedule-component/schedule.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder/store-finder.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/store-finder.module.ts","../../../projects/storefrontlib/src/cms-components/user/checkout-login/checkout-login.component.ts","../../../projects/storefrontlib/src/cms-components/user/checkout-login/checkout-login.module.ts","../../../projects/storefrontlib/src/cms-components/user/login-form/login-form.component.ts","../../../projects/storefrontlib/src/cms-components/user/login-form/login-form.module.ts","../../../projects/storefrontlib/src/cms-components/user/login/login.component.ts","../../../projects/storefrontlib/src/cms-components/user/login/login.module.ts","../../../projects/storefrontlib/src/cms-components/user/logout/logout-guard.ts","../../../projects/storefrontlib/src/cms-components/user/logout/logout.module.ts","../../../projects/storefrontlib/src/cms-components/user/register/register.component.ts","../../../projects/storefrontlib/src/cms-components/user/register/register.module.ts","../../../projects/storefrontlib/src/cms-components/user/login-register/login-register.component.ts","../../../projects/storefrontlib/src/cms-components/user/login-register/login-register.module.ts","../../../projects/storefrontlib/src/cms-components/user/user.module.ts","../../../projects/storefrontlib/src/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","../../../projects/storefrontlib/src/cms-components/wish-list/components/wish-list/wish-list.component.ts","../../../projects/storefrontlib/src/cms-components/wish-list/wish-list.module.ts","../../../projects/storefrontlib/src/cms-components/cms-lib.module.ts","../../../projects/storefrontlib/src/cms-pages/product-details-page/product-details-url-matcher.ts","../../../projects/storefrontlib/src/cms-pages/product-details-page/product-details-page.module.ts","../../../projects/storefrontlib/src/cms-pages/product-listing-page/product-listing-url-matcher.ts","../../../projects/storefrontlib/src/cms-pages/product-listing-page/product-listing-page.module.ts","../../../projects/storefrontlib/src/events/page/page.events.ts","../../../projects/storefrontlib/src/events/cart/cart-page.events.ts","../../../projects/storefrontlib/src/events/cart/cart-page-event.builder.ts","../../../projects/storefrontlib/src/events/cart/cart-page-event.module.ts","../../../projects/storefrontlib/src/events/page/page-event.builder.ts","../../../projects/storefrontlib/src/events/page/page-event.module.ts","../../../projects/storefrontlib/src/events/product/product-page.events.ts","../../../projects/storefrontlib/src/events/product/product-page-event.builder.ts","../../../projects/storefrontlib/src/events/product/product-page-event.module.ts","../../../projects/storefrontlib/src/recipes/config/default-media.config.ts","../../../projects/storefrontlib/src/recipes/config/layout-config.ts","../../../projects/storefrontlib/src/recipes/config/static-cms-structure/default-header.config.ts","../../../projects/storefrontlib/src/recipes/config/static-cms-structure/default-cms-content.config.ts","../../../projects/storefrontlib/src/events/events.module.ts","../../../projects/storefrontlib/src/recipes/storefront-foundation.module.ts","../../../projects/storefrontlib/src/recipes/storefront.module.ts","../../../projects/storefrontlib/src/recipes/b2c-storefront.module.ts","../../../projects/storefrontlib/src/utils/form-utils.ts","../../../projects/storefrontlib/src/public_api.ts","../../../projects/storefrontlib/src/spartacus-storefront.ts"],"names":["AsmCoreModule","CoreRoutingModule","moduleComponents"],"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","sourcesContent":["import { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\n\nexport interface LaunchConfig {\n  [key: string]: LaunchOptions;\n}\n\nexport type LaunchOptions =\n  | LaunchOutletDialog\n  | LaunchInlineDialog\n  | LaunchRoute;\n\n/**\n * Parent type for configurations that render components\n */\nexport interface LaunchDialog {\n  component: any;\n  /**\n   * Can the element be rendered multiple times\n   */\n  multi?: boolean;\n  /**\n   * Dialog type is used to apply CSS classes\n   */\n  dialogType?: DIALOG_TYPE;\n}\n\n/**\n * Configuration type to render a component in an outlet\n */\nexport interface LaunchOutletDialog extends LaunchDialog {\n  /**\n   * The outlet to render the element in\n   */\n  outlet: string;\n  /**\n   * Default: OutletPosition.BEFORE\n   */\n  position?: OutletPosition;\n}\n\n/**\n * Configuration type to render a component inline (next to the trigger)\n */\nexport interface LaunchInlineDialog extends LaunchDialog {\n  inline: boolean;\n}\n\n/**\n * Configuration type to render as link\n */\nexport interface LaunchRoute {\n  /**\n   * The route for the url\n   */\n  cxRoute: string;\n  /**\n   * The parameters for the route\n   */\n  params?: { [param: string]: any };\n}\n\n/**\n * Types of dialog openings supported\n */\nexport enum DIALOG_TYPE {\n  POPOVER = 'POPOVER',\n  POPOVER_CENTER = 'POPOVER_CENTER',\n  POPOVER_CENTER_BACKDROP = 'POPOVER_CENTER_BACKDROP',\n  DIALOG = 'DIALOG',\n  SIDEBAR_START = 'SIDEBAR_START',\n  SIDEBAR_END = 'SIDEBAR_END',\n}\n\n/**\n * List of available callers\n */\nexport enum LAUNCH_CALLER {\n  ASM = 'ASM',\n  SKIP_LINKS = 'SKIP_LINKS',\n  ANONYMOUS_CONSENT = 'ANONYMOUS_CONSENT',\n  REPLENISHMENT_ORDER = 'REPLENISHMENT_ORDER',\n  PLACE_ORDER_SPINNER = 'PLACE_ORDER_SPINNER',\n}\n","import { Injectable } from '@angular/core';\nimport { Config, DeferLoadingStrategy } from '@spartacus/core';\nimport { LaunchConfig } from '../launch-dialog/index';\n\n/**\n * The `BREAKPOINT` typing defaults to five default screen names:\n * xs, sm, md, lg, xl.\n *\n * The type can be extended to allow for custom screens, such as XLL or `tablet`.\n *\n * While the screen names are fully configurable, other features might have\n * pre-configured layout settings per screen. Page layouts or table configurations,\n * for example, are driven by screen size. In case you change the screen size or\n * introduce new screen names, you might loose out on these configurations.\n */\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n\n  /**\n   * The page fold identifies the last expected page slot above-the-fold.\n   * It's perfectly fine to specify this by indication, but keep in mind that\n   * a more precise indication will gain a more positive impact on performance.\n   */\n  pageFold?: string;\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\n};\n\nexport interface BreakPoint {\n  /**\n   * The minimum screen width.\n   */\n  min?: number;\n\n  /**\n   * The minimum screen width.\n   */\n  max?: number;\n}\n\n/**\n * The `LayoutBreakPoints` can be used to configure the size of a specific screen. The screen\n * are defined by breakpoints, with a min and/or max value. The breakpoint size is in pixels,\n * hence a numeric value is expected.\n */\nexport type LayoutBreakPoints = {\n  [t in BREAKPOINT]?: number | BreakPoint;\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breakpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class LayoutConfig {\n  /**\n   * The breakpoint configuration is used to defined various screens. A specific screen name can\n   * be used to further configure certain features, such as the overall layout or specific\n   * component configurations.\n   */\n  breakpoints?: LayoutBreakPoints;\n\n  layoutSlots?: LayoutSlotConfig;\n\n  /**\n   * Deferred loading is a technique to hold of with the loading / creation\n   * of DOM elements which are not not in the initial view port.\n   * This technique wil increase performance.\n   */\n  deferredLoading?: {\n    /**\n     * The global strategy will be used as a fallback strategy for all DOM creation,\n     * but can be overridden by local configuration, i.e. for cms components.\n     */\n    strategy?: DeferLoadingStrategy;\n    /**\n     * The intersection margin contains the offset used by the Intersection Observer\n     * to observe elements outside the view port.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\n     */\n    intersectionMargin?: string;\n  };\n\n  launch?: LaunchConfig;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentRef,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Applicable, Priority } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  DIALOG_TYPE,\n  LaunchDialog,\n  LaunchOptions,\n  LAUNCH_CALLER,\n} from '../config';\n\nexport abstract class LaunchRenderStrategy implements Applicable {\n  // List of called references; only used for rendered elements\n  protected renderedCallers: Array<{\n    caller: LAUNCH_CALLER | string;\n    element?: any;\n    component?: ComponentRef<any>;\n  }> = [];\n\n  /**\n   * Classes to apply to the component when the dialog is a DIALOG\n   */\n  protected dialogClasses = ['d-block', 'fade', 'modal', 'show'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER\n   */\n  protected popoverClasses = ['cx-dialog-popover'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER_CENTER\n   */\n  protected popoverCenterClasses = ['cx-dialog-popover-center'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER_CENTER with a backdrop\n   */\n  protected popoverCenterBackdropClasses = [\n    'cx-dialog-popover-center-backdrop',\n  ];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_END\n   */\n  protected sidebarEndClasses = ['cx-sidebar-end'];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_START\n   */\n  protected sidebarStartClasses = ['cx-sidebar-start'];\n\n  protected renderer: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2\n  ) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /**\n   * Render method to implement based on the strategy\n   *\n   * @param config Launch configuration\n   */\n  abstract render(\n    config: LaunchOptions,\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef\n  ): void | Observable<ComponentRef<any>>;\n\n  /**\n   * Determines if the strategy is the right one for the provided configuration\n   *\n   * @param config\n   */\n  abstract hasMatch(config: LaunchOptions): boolean;\n\n  /**\n   * Determines if element should render\n   *\n   * @param caller\n   * @param config\n   */\n  protected shouldRender(\n    caller: LAUNCH_CALLER | string,\n    config: LaunchDialog\n  ): boolean {\n    return (\n      Boolean(config.component) &&\n      (this.renderedCallers.some((el) => el.caller === caller)\n        ? !!config.multi\n        : true)\n    );\n  }\n\n  protected applyClasses(\n    component: ComponentRef<any>,\n    dialogType: DIALOG_TYPE\n  ): void {\n    let classes = [];\n\n    // TODO: make classes configurable\n    switch (dialogType) {\n      case DIALOG_TYPE.DIALOG:\n        classes = this.dialogClasses;\n        this.renderer.addClass(this.document.body, 'modal-open');\n        break;\n      case DIALOG_TYPE.POPOVER:\n        classes = this.popoverClasses;\n        break;\n      case DIALOG_TYPE.POPOVER_CENTER:\n        classes = this.popoverCenterClasses;\n        break;\n      case DIALOG_TYPE.POPOVER_CENTER_BACKDROP:\n        classes = this.popoverCenterBackdropClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_END:\n        classes = this.sidebarEndClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_START:\n        classes = this.sidebarStartClasses;\n        break;\n    }\n\n    for (const newClass of classes) {\n      this.renderer.addClass(component.location.nativeElement, newClass);\n    }\n  }\n\n  /**\n   * Method to call when rendered element is destroyed\n   * The element will be removed from the list of rendered elements\n   *\n   * @param caller\n   * @param _config optional parameters used in children strategies\n   */\n  public remove(caller: LAUNCH_CALLER | string, config: LaunchOptions): void {\n    this.renderedCallers = this.renderedCallers.filter(\n      (el) => el.caller !== caller\n    );\n\n    if ((config as LaunchDialog)?.dialogType === DIALOG_TYPE.DIALOG) {\n      this.renderer.removeClass(this.document.body, 'modal-open');\n    }\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW; // low, as it's a default matcher\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the component from the configuration in the view container ref\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchInlineDialog,\n    caller: LAUNCH_CALLER | string,\n    vcr: ViewContainerRef\n  ): Observable<ComponentRef<any>> {\n    // Only render if a ViewContainerRef is provided\n    if (vcr && this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n\n      const component = vcr.createComponent(template);\n\n      if (config?.dialogType) {\n        this.applyClasses(component, config?.dialogType);\n      }\n\n      this.renderedCallers.push({ caller, element: vcr.element, component });\n\n      return of(component);\n    } else if (isDevMode()) {\n      if (!vcr) {\n        console.warn(`No view container ref provided for ${caller}`);\n      } else {\n        console.warn(\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\n        );\n      }\n    }\n  }\n\n  hasMatch(config: LaunchInlineDialog) {\n    return Boolean(config.inline);\n  }\n}\n","import {\n  ComponentRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  ViewContainerRef,\n} from '@angular/core';\nimport { resolveApplicable } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LayoutConfig } from '../../config/layout-config';\nimport { LaunchOptions, LAUNCH_CALLER } from '../config/launch-config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class LaunchDialogService {\n  private _dialogClose = new BehaviorSubject<string>(undefined);\n  private _dataSubject = new BehaviorSubject<any>(undefined);\n\n  get data$(): Observable<any> {\n    return this._dataSubject.asObservable();\n  }\n\n  constructor(\n    @Inject(LaunchRenderStrategy)\n    protected renderStrategies: LaunchRenderStrategy[],\n    protected layoutConfig: LayoutConfig\n  ) {\n    this.renderStrategies = this.renderStrategies || [];\n  }\n\n  /**\n   * Render the element based on the strategy from the launch configuration\n   *\n   * @param caller LAUNCH_CALLER\n   * @param vcr View Container Ref of the container for inline rendering\n   */\n  launch(\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef,\n    data?: any\n  ): void | Observable<ComponentRef<any>> {\n    const config = this.findConfiguration(caller);\n    if (config) {\n      const renderer = this.getStrategy(config);\n\n      // Render if the strategy exists\n      if (renderer) {\n        this._dialogClose.next(undefined);\n        this._dataSubject.next(data);\n\n        return renderer.render(config, caller, vcr);\n      }\n    } else if (isDevMode()) {\n      console.warn('No configuration provided for caller ' + caller);\n    }\n  }\n\n  /**\n   * Util method to remove element from rendered elements list\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  clear(caller: LAUNCH_CALLER | string): void {\n    const config = this.findConfiguration(caller);\n    const renderer = this.getStrategy(config);\n\n    // Render if the strategy exists\n    if (renderer) {\n      renderer.remove(caller, config);\n    }\n  }\n\n  get dialogClose(): Observable<string> {\n    return this._dialogClose.asObservable();\n  }\n\n  closeDialog(reason: string) {\n    this._dialogClose.next(reason);\n  }\n\n  /**\n   * Returns the configuration for the caller\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  protected findConfiguration(caller: LAUNCH_CALLER | string): LaunchOptions {\n    if (this.layoutConfig?.launch) {\n      return this.layoutConfig.launch[caller];\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the render strategy based on the configuration\n   *\n   * @param config Configuration for launch\n   */\n  protected getStrategy(config: LaunchOptions): LaunchRenderStrategy {\n    return resolveApplicable(this.renderStrategies, [config]);\n  }\n}\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n\n/**\n * Token for injecting outlet related context to the component rendered in the outlet\n */\nexport abstract class OutletContextData<T = any> {\n  /**\n   * Provides reference of the outlet where component is rendered in\n   */\n  reference: string;\n  /**\n   * Provides position of the outlet\n   */\n  position: OutletPosition;\n  /**\n   * Provides outlet context\n   */\n  context: T;\n}\n","import { ComponentFactory, Injectable, TemplateRef } from '@angular/core';\nimport { FeatureConfigService } from '@spartacus/core';\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService<T = TemplateRef<any> | ComponentFactory<any>> {\n  /**\n   * @deprecated since 2.1, see #8116\n   */\n  constructor();\n  // tslint:disable-next-line: unified-signatures\n  constructor(features: FeatureConfigService);\n  constructor(protected features?: FeatureConfigService) {}\n\n  private templatesRefs = {\n    [OutletPosition.BEFORE]: new Map<string, T[]>(),\n    [OutletPosition.REPLACE]: new Map<string, T[]>(),\n    [OutletPosition.AFTER]: new Map<string, T[]>(),\n  };\n\n  /**\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\n   * The UI position where this template or ComponentFactory is inserted is given by a\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\n   * is either before or after, or replaces the entire UI.\n   *\n   * @param outlet the UI location represented by a string\n   * @param template the `TemplateRef` that will be used to insert UI\n   * @param position the `OutletPosition` in the UI\n   */\n  add(outlet: string, template: T, position?: OutletPosition): void;\n  /**\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\n   */\n  add(\n    outlet: string,\n    // tslint:disable-next-line: unified-signatures\n    factory: T,\n    position?: OutletPosition\n  ): void;\n  /**\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\n   */\n  add(\n    outlet: string,\n    templateOrFactory: T,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    const store = this.templatesRefs[position];\n    if (store) {\n      const existing = store.get(outlet) || [];\n      const newValue: T[] = existing.concat([templateOrFactory]);\n      store.set(outlet, newValue);\n    }\n  }\n\n  /**\n   *\n   * Returns a single object or multiple objects for the given outlet reference,\n   * depending on the `stacked` argument.\n   *\n   * @param outlet The outlet reference\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\n   * @param stacked Indicates whether an array of outlet components is returned\n   */\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    stacked = AVOID_STACKED_OUTLETS\n  ): T[] | T {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    const templateRef: T[] = store.get(outlet);\n    if (templateRef && !stacked) {\n      return templateRef[0];\n    }\n    return templateRef;\n  }\n\n  remove(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    value?: T\n  ): void {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    this.removeValueOrAll(store, outlet, value);\n  }\n\n  protected removeValueOrAll(\n    store: Map<string, T[]>,\n    outlet: string,\n    value?: T\n  ): void {\n    if (!value && store.has(outlet)) {\n      store.delete(outlet);\n    } else if (value && store.has(outlet)) {\n      let existing = store.get(outlet);\n\n      if (this.features?.isLevel('2.1')) {\n        existing = existing.filter((val) => val !== value);\n      } else {\n        // deprecated since 2.1, see #8116:\n        existing = existing.filter((val) => val === value);\n      }\n\n      store.set(outlet, existing);\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { FeatureConfigService } from '@spartacus/core';\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit, OnDestroy {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  /**\n   * @deprecated since 2.1, see #8201\n   */\n  constructor(tpl: TemplateRef<any>, outletService: OutletService);\n  constructor(\n    tpl: TemplateRef<any>,\n    outletService: OutletService,\n    // tslint:disable-next-line: unified-signatures\n    features: FeatureConfigService\n  );\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService,\n    private features?: FeatureConfigService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n\n  ngOnDestroy() {\n    if (this.features?.isLevel('2.1')) {\n      this.outletService.remove(this.cxOutletRef, this.cxOutletPos, this.tpl);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { OutletDirective } from './outlet.directive';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletRendererService {\n  private outletRefs = new BehaviorSubject(new Map<string, OutletDirective>());\n\n  /**\n   * Dynamically render the templates in the specified array\n   *\n   * @param outlet\n   */\n  render(outlet: string): void {\n    if (this.outletRefs.value.size !== 0) {\n      this.outletRefs.value.get(outlet).render();\n    }\n  }\n\n  /**\n   * Register outlet to be available to render dynamically\n   *\n   * @param cxOutlet\n   * @param context\n   */\n  register(cxOutlet: string, context: OutletDirective): void {\n    this.outletRefs.next(this.outletRefs.value.set(cxOutlet, context));\n  }\n  /**\n   * Returns map of outlets\n   *\n   */\n  getOutletRef(outlet: string): Observable<OutletDirective> {\n    return this.outletRefs.asObservable().pipe(\n      map((val) => val.get(outlet)),\n      filter((val) => Boolean(val))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\n\n/**\n * The IntersectionService uses the native IntersectionObserver (v2), which\n * can be used to implement pre-loading and deferred loading of DOM content.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntersectionService {\n  constructor(protected config: LayoutConfig) {}\n\n  /**\n   * Returns an Observable that emits only once a boolean value whenever\n   * the given element has shown in the view port.\n   *\n   * The returned observable will only emit the first value. The\n   * observable must be cleaned up either way, since the value might never emit; it\n   *  depends on whether the element appears in the view port.\n   */\n  isIntersected(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    return this.intersects(element, options).pipe(first((v) => v === true));\n  }\n\n  /**\n   * Indicates whenever the element intersects the view port. An optional margin\n   * is used to intersects before the element shows up in the viewport.\n   * A value is emitted each time the element intersects.\n   *\n   * This is private for now, but could be exposed as a public API\n   * to introduce additional (css) render effects to the UI.\n   */\n  private intersects(\n    element: HTMLElement,\n    options: IntersectionOptions = {}\n  ): Observable<boolean> {\n    const elementVisible$ = new Observable((observer) => {\n      const rootMargin = this.getRootMargin(options);\n      const intersectOptions = { rootMargin, threshold: options.threshold };\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        observer.next(entries);\n      }, intersectOptions);\n      intersectionObserver.observe(element);\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    }).pipe(\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\n      distinctUntilChanged()\n    );\n\n    return elementVisible$;\n  }\n\n  private getRootMargin(options: IntersectionOptions = {}): string {\n    if (options.rootMargin) {\n      return options.rootMargin;\n    }\n    const layoutConfig = this.config as LayoutConfig;\n    if (\n      layoutConfig.deferredLoading &&\n      layoutConfig.deferredLoading.intersectionMargin\n    ) {\n      return layoutConfig.deferredLoading.intersectionMargin;\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\nimport { IntersectionService } from './intersection.service';\n\n/**\n * The defer loading serivce is used to defer loading of DOM elements\n * until the elements are required for the user experience.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeferLoaderService {\n  globalLoadStrategy: DeferLoadingStrategy;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected config: LayoutConfig,\n    protected intersectionService: IntersectionService\n  ) {\n    this.globalLoadStrategy = config.deferredLoading\n      ? config.deferredLoading.strategy\n      : DeferLoadingStrategy.INSTANT;\n  }\n\n  /**\n   * Defer loading till the element intersects the viewport.\n   *\n   * We evaluate whether we instantly load the element for different reasons:\n   * - we run in SSR mode\n   * - there's no global strategy given\n   * - the global loading strategy is set to INSTANT loading,\n   *   and the loading strategy in the given is not set to DEFER\n   * - the loading strategy in the given options is set to INSTANT\n   */\n  load(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\n      return of(true);\n    } else {\n      return this.intersectionService.isIntersected(element, options);\n    }\n  }\n\n  private shouldLoadInstantly(\n    elementLoadingStrategy: DeferLoadingStrategy\n  ): boolean {\n    return (\n      isPlatformServer(this.platformId) ||\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\n    );\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\nimport { OutletRendererService } from './outlet-renderer.service';\nimport {\n  OutletContextData,\n  OutletPosition,\n  USE_STACKED_OUTLETS,\n} from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective implements OnDestroy, OnChanges {\n  private renderedTemplate = [];\n  public renderedComponents = new Map<\n    OutletPosition,\n    Array<ComponentRef<any> | EmbeddedViewRef<any>>\n  >();\n\n  @Input() cxOutlet: string;\n\n  @Input() cxOutletContext: any;\n\n  /**\n   * Defers loading options for the the templates of this outlet.\n   */\n  @Input() cxOutletDefer: IntersectionOptions;\n\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\n\n  subscription = new Subscription();\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService,\n    private deferLoaderService: DeferLoaderService,\n    private outletRendererService: OutletRendererService\n  ) {}\n\n  public render(): void {\n    this.vcr.clear();\n    this.renderedTemplate = [];\n    this.renderedComponents.clear();\n    this.subscription.unsubscribe();\n    this.subscription = new Subscription();\n\n    if (this.cxOutletDefer) {\n      this.deferLoading();\n    } else {\n      this.build();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.cxOutlet) {\n      this.render();\n      this.outletRendererService.register(this.cxOutlet, this);\n    }\n  }\n\n  private deferLoading(): void {\n    this.loaded.emit(false);\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\n    // Although the deferLoaderService might emit only once, as long as the hostElement\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\n    // the subscription on destroy.\n    this.subscription.add(\n      this.deferLoaderService\n        .load(hostElement, this.cxOutletDefer)\n        .subscribe(() => {\n          this.build();\n          this.loaded.emit(true);\n        })\n    );\n  }\n\n  private build() {\n    this.buildOutlet(OutletPosition.BEFORE);\n    this.buildOutlet(OutletPosition.REPLACE);\n    this.buildOutlet(OutletPosition.AFTER);\n  }\n\n  private buildOutlet(position: OutletPosition): void {\n    let templates: any[] = <any[]>(\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\n    );\n\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\n\n    if (!templates && position === OutletPosition.REPLACE) {\n      templates = [this.templateRef];\n    }\n\n    // Just in case someone extended the `OutletService` and\n    // returns a singular object.\n    if (!Array.isArray(templates)) {\n      templates = [templates];\n    }\n\n    const components = [];\n    templates.forEach((obj) => {\n      const component = this.create(obj, position);\n      components.push(component);\n    });\n\n    this.renderedComponents.set(position, components);\n  }\n\n  private create(\n    tmplOrFactory: any,\n    position: OutletPosition\n  ): ComponentRef<any> | EmbeddedViewRef<any> {\n    this.renderedTemplate.push(tmplOrFactory);\n\n    if (tmplOrFactory instanceof ComponentFactory) {\n      const component = this.vcr.createComponent(\n        tmplOrFactory,\n        undefined,\n        this.getComponentInjector(position)\n      );\n      return component;\n    } else if (tmplOrFactory instanceof TemplateRef) {\n      const view = this.vcr.createEmbeddedView(\n        <TemplateRef<any>>tmplOrFactory,\n        {\n          $implicit: this.cxOutletContext,\n        }\n      );\n\n      // we do not know if content is created dynamically or not\n      // so we apply change detection anyway\n      view.markForCheck();\n      return view;\n    }\n  }\n\n  /**\n   * Returns injector with OutletContextData that can be injected to the component\n   * rendered in the outlet\n   */\n  private getComponentInjector(position: OutletPosition): Injector {\n    const contextData: OutletContextData = {\n      reference: this.cxOutlet,\n      position,\n      context: this.cxOutletContext,\n    };\n\n    return Injector.create({\n      providers: [\n        {\n          provide: OutletContextData,\n          useValue: contextData,\n        },\n      ],\n      parent: this.vcr.injector,\n    });\n  }\n\n  /**\n   * Returns the closest `HtmlElement`, by iterating over the\n   * parent nodes of the given element.\n   *\n   * We avoid traversing the parent _elements_, as this is blocking\n   * ie11 implementations. One of the spare exclusions we make to not\n   * supporting ie11.\n   *\n   * @param element\n   */\n  private getHostElement(element: Node): HTMLElement {\n    if (element instanceof HTMLElement) {\n      return element;\n    }\n    return this.getHostElement(element.parentNode);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  RendererFactory2,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport {\n  OutletPosition,\n  OutletService,\n} from '../../../cms-structure/outlet/index';\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected outletService: OutletService<ComponentFactory<any>>,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected outletRendererService: OutletRendererService\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the element in the configured outlet\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchOutletDialog,\n    caller: LAUNCH_CALLER | string\n  ): Observable<ComponentRef<any>> {\n    if (this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n      this.outletService.add(\n        config.outlet,\n        template,\n        config.position ? config.position : OutletPosition.BEFORE\n      );\n      this.outletRendererService.render(config.outlet);\n      this.renderedCallers.push({ caller });\n\n      return this.outletRendererService.getOutletRef(config.outlet).pipe(\n        map((outletDirective) => {\n          const components = outletDirective.renderedComponents.get(\n            config.position ? config.position : OutletPosition.BEFORE\n          ) as ComponentRef<any>[];\n\n          return components\n            .reverse()\n            .find(\n              (component) => component.componentType === template.componentType\n            );\n        }),\n        tap((component) => {\n          if (config?.dialogType) {\n            this.applyClasses(component, config?.dialogType);\n          }\n        })\n      );\n    }\n  }\n\n  hasMatch(config: LaunchOutletDialog) {\n    return Boolean(config.outlet);\n  }\n\n  remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void {\n    const template = this.componentFactoryResolver.resolveComponentFactory(\n      config.component\n    );\n\n    this.outletService.remove(\n      config.outlet,\n      config.position ? config.position : OutletPosition.BEFORE,\n      template\n    );\n\n    super.remove(caller, config);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, RendererFactory2 } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected routingService: RoutingService\n  ) {\n    super(document, rendererFactory);\n  }\n  /**\n   * Navigates to the route configured for the caller\n   */\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER | string) {\n    this.routingService.go(config);\n  }\n\n  hasMatch(config: LaunchRoute) {\n    return Boolean(config.cxRoute);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { LayoutConfig } from '../config/layout-config';\nimport {\n  InlineRenderStrategy,\n  LaunchRenderStrategy,\n  OutletRenderStrategy,\n  RoutingRenderStrategy,\n} from './services/index';\n\n@NgModule({\n  providers: [\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: OutletRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: InlineRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: RoutingRenderStrategy,\n      multi: true,\n    },\n  ],\n})\nexport class LaunchDialogModule {\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\n    return {\n      ngModule: LaunchDialogModule,\n      providers: [{ provide: LayoutConfig, useExisting: Config }],\n    };\n  }\n}\n","import { ElementRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport {\n  LaunchDialogService,\n  LAUNCH_CALLER,\n} from '../../layout/launch-dialog/index';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentLaunchDialogService {\n  constructor(protected launchDialogService: LaunchDialogService) {}\n\n  openDialog(\n    openElement?: ElementRef,\n    vcr?: ViewContainerRef\n  ): Observable<any> | undefined {\n    const component = this.launchDialogService.launch(\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\n      vcr\n    );\n\n    if (component) {\n      return combineLatest([\n        component,\n        this.launchDialogService.dialogClose,\n      ]).pipe(\n        filter(([, close]) => close && close !== undefined),\n        tap(([comp]) => {\n          openElement?.nativeElement.focus();\n          this.launchDialogService.clear(LAUNCH_CALLER.ANONYMOUS_CONSENT);\n          comp.destroy();\n        }),\n        map(([comp]) => comp)\n      );\n    }\n  }\n}\n","/** The element attribute used to store the focus state */\nexport const FOCUS_ATTR = 'data-cx-focus';\n/** The element attribute used to store the focus group state */\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\n\nexport const enum MOVE_FOCUS {\n  NEXT = 1,\n  PREV = -1,\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface BaseFocusConfig {}\n\nexport interface VisibleFocusConfig {\n  /**\n   * When set to true, the `mouse-focus` class is added to the host element,\n   * indicating that the element focus should not be made visible.\n   */\n  disableMouseFocus?: boolean;\n}\n\nexport interface BlockFocusConfig extends VisibleFocusConfig {\n  block?: boolean;\n}\n\nexport interface PersistFocusConfig extends BlockFocusConfig {\n  /**\n   * A key to maintain the focus of an element in case the component is\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\n   */\n  key?: string;\n\n  /**\n   * Optional group identifier that can be used to persist the focus. This allows\n   * to have separate persisted focus available when the DOM is partially rebuild.\n   */\n  group?: string;\n}\n\nexport interface EscapeFocusConfig extends PersistFocusConfig {\n  focusOnEscape?: boolean;\n  /**\n   * Force an autofocus in case of double-escape\n   */\n  focusOnDoubleEscape?: boolean;\n}\n\nexport interface AutoFocusConfig extends EscapeFocusConfig {\n  /**\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\n   * In case the focus is explicitly set to `true`, the first accessible element\n   * is focussed in case there is no _autofocus_ element found.\n   * If the focus is set to false, autofocus will be disabled completely.\n   *\n   * If a string value is given, the autofocus will be restored based on the persisted\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\n   *\n   * Defaults to `true`.\n   */\n  autofocus?: boolean | string;\n}\n\nexport interface TabFocusConfig extends AutoFocusConfig {\n  tab?: boolean | 'scroll' | string;\n}\n\n/**\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\n * for the nested focusable elements. This means that the focus can not\n * \"leave\" the elements. If the last element is focused, the keyboard will\n * navigate to the first element and visa versa.\n */\nexport interface TrapFocusConfig extends TabFocusConfig {\n  /** traps the focus */\n  trap?: boolean | 'start' | 'end';\n}\n\nexport interface LockFocusConfig extends TrapFocusConfig {\n  /**\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\n   */\n  lock?: boolean;\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface FocusConfig extends LockFocusConfig {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseFocusService {}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { BaseFocusConfig } from '../keyboard-focus.model';\nimport { BaseFocusService } from './base-focus.service';\n\n/**\n * Abstract directive that provides a common interface for all focus directives:\n * - Block Focus\n * - Persist Focus\n * - Escape Focus\n * - Auto Focus\n * - Tab Focus\n * - Trap Focus\n * - Lock Focus\n */\n@Directive()\nexport abstract class BaseFocusDirective implements OnInit {\n  /**\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\n   * focus directive.\n   */\n  protected config: BaseFocusConfig;\n\n  /**\n   * A default config can be provided for each directive if a specific focus directive\n   * is used directly. i.e. `<div cxAutoFocus></div>`\n   */\n  protected defaultConfig: BaseFocusConfig = {};\n\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected service: BaseFocusService\n  ) {}\n\n  ngOnInit() {\n    this.setDefaultConfiguration();\n    this.requiredTabindex = -1;\n  }\n\n  /**\n   * Override the (input) config if it undefined or an empty string, with the\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\n   * specific (inherited) defaultConfig will be used.\n   */\n  protected setDefaultConfiguration(): void {\n    if ((!this.config || this.config === '') && this.defaultConfig) {\n      this.config = this.defaultConfig;\n    }\n  }\n\n  /**\n   * Helper method to return the host element for the directive\n   * given by the `elementRef`.\n   */\n  protected get host(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /**\n   * Force a tabindex on the host element if it is _requried_ to make the element\n   * focusable. If the element is focusable by nature or by a given tabindex, the\n   * `tabindex` is not applied.\n   *\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\n   */\n  protected set requiredTabindex(tabindex: number) {\n    if (this.requiresExplicitTabIndex) {\n      this.tabindex = tabindex;\n    }\n  }\n\n  /**\n   * Returns true if the host element does not have a tabindex defined\n   * and it also doesn't get focus by browsers nature (i.e. button or\n   * active link).\n   */\n  protected get requiresExplicitTabIndex(): boolean {\n    return (\n      this.tabindex === undefined &&\n      ['button', 'input', 'select', 'textarea'].indexOf(\n        this.host.tagName.toLowerCase()\n      ) === -1 &&\n      !(\n        this.host.tagName === 'A' &&\n        (this.host.hasAttribute('href') || this.host.hasAttribute('routerlink'))\n      )\n    );\n  }\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\nimport { BaseFocusDirective } from '../base/base-focus.directive';\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\n\n/**\n * Directive implementation that adds a CSS class to the host element\n * when the moused is used to focus an element. As soon as the keyboard\n * is used, the class is removed.\n *\n * This feature must be explicitly enabled with the `disableMouseFocus` config.\n *\n * The appearance of the visual focus depends on the CSS implementation to\n * begin with. Spartacus styles add a blue border around each focusable element.\n * This can be considered annoying by keyboard users, as they won't need such a\n * strong indication of the selected element.\n */\n@Directive() // selector: '[cxVisibleFocus]'\nexport class VisibleFocusDirective extends BaseFocusDirective {\n  protected defaultConfig: VisibleFocusConfig = {\n    disableMouseFocus: true,\n  };\n\n  // @Input('cxVisibleFocus')\n  protected config: VisibleFocusConfig;\n\n  /** Controls a css class to hide focus visible CSS rules */\n  @HostBinding('class.mouse-focus') mouseFocus = false;\n\n  @HostListener('mousedown') handleMousedown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = true;\n    }\n  }\n\n  @HostListener('keydown', ['$event']) handleKeydown(event: KeyboardEvent) {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = !this.isNavigating(event);\n    }\n  }\n\n  /**\n   * Indicates whether the configurations setup to disable visual focus.\n   */\n  protected get shouldFocusVisible(): boolean {\n    return this.config?.disableMouseFocus;\n  }\n\n  /**\n   * Indicates whether the event is used to navigate the storefront. Some keyboard events\n   * are used by mouse users to fill a form or interact with the OS or browser.\n   */\n  protected isNavigating(event: KeyboardEvent): boolean {\n    // when the cmd or ctrl keys are used, the user doesn't navigate the storefront\n    if (event.metaKey) {\n      return false;\n    }\n    // when the tab key is used, users are for navigating away from the current (form) element\n    if (event.code === 'Tab') {\n      return true;\n    }\n    // If the user fill in a form, we don't considering it part of storefront navigation.\n    if (['INPUT', 'TEXTAREA'].includes((event.target as HTMLElement).tagName)) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { BlockFocusConfig } from '../keyboard-focus.model';\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\n\n@Directive()\n// { selector: '[cxBlockFocus]' }\nexport class BlockFocusDirective\n  extends VisibleFocusDirective\n  implements OnInit {\n  protected defaultConfig: BlockFocusConfig = { block: true };\n\n  // @Input('cxBlockFocus')\n  protected config: BlockFocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: BaseFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.config.block) {\n      this.tabindex = -1;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\n\nconst GLOBAL_GROUP = '_g_';\n\n/**\n * Shared service to persist the focus for an element or a group\n * of elements. The persisted element focus can be used to persist\n * the focus for a DOM tree, so that the focus remains after a repaint\n * or reoccurs when a DOM tree is \"unlocked\".\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersistFocusService extends BaseFocusService {\n  // this is going to fail as we have sub services. They will al have their own map.\n  // We must bring this to a singleton map.\n  protected focus = new Map<string, string>();\n\n  get(group?: string): string {\n    return this.focus.get(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Persist the keyboard focus state for the given key. The focus is stored globally\n   * or for the given group.\n   */\n  set(key: string, group?: string) {\n    if (key) {\n      this.focus.set(group || GLOBAL_GROUP, key);\n    }\n  }\n\n  /**\n   * Clears the persisted keyboard focus state globally or for the given group.\n   */\n  clear(group?: string) {\n    this.focus.delete(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Returns the group for the host element based on the configured group or\n   * by the `data-cx-focus-group` attribute stored on the host.\n   */\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { BlockFocusDirective } from '../block/block-focus.directive';\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from './persist-focus.service';\n\n/**\n * Directive that provides persistence of the focused state. This is useful\n * when a group of focusable elements got refocused or even recreated. That\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\n *\n * The focus state is based on a configured _key_, which can be passed in the\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\n *\n * ```html\n * <button cxPersistFocus=\"myKey\"></button>\n * <button cxFocus=\"myKey\"></button>\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\n * ```\n *\n * The focus state can be part of a focus _group_, so that the state is shared\n * and remember for the given group. In order to detect the persistence for a\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\n *\n * ```html\n * <button data-cx-focus=\"myKey\"></button>\n * ```\n *\n * Other keyboard focus directives can read the key to understand whether the element\n * should retrieve focus.\n *\n */\n@Directive() // selector: '[cxPersistFocus]',\nexport class PersistFocusDirective\n  extends BlockFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: PersistFocusConfig = {};\n\n  /**\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\n   * While this could be considered a global key, the likeliness of conflicts\n   * is very small since the key is cleared when the focus is changed.\n   */\n  // @Input('cxPersistFocus')\n  protected config: PersistFocusConfig = {};\n\n  /**\n   * The persistence key is maintained in an element attribute for other\n   * implementations. This is needed to ensure that we can resolve the focus\n   * state in case of a repaint.\n   */\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\n\n  @HostListener('focus', ['$event'])\n  handleFocus(event?: KeyboardEvent) {\n    this.service.set(this.key, this.group);\n\n    event?.preventDefault();\n    event?.stopPropagation();\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: PersistFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.attr = this.key ? this.key : undefined;\n  }\n\n  protected setDefaultConfiguration() {\n    if (typeof this.config === 'string' && this.config !== '') {\n      this.config = { key: this.config };\n    }\n    super.setDefaultConfiguration();\n  }\n\n  /**\n   * Focus the element explicitly if it was focused before.\n   */\n  ngAfterViewInit() {\n    if (this.isPersisted) {\n      this.host.focus({ preventScroll: true });\n    }\n  }\n\n  protected get isPersisted(): boolean {\n    return !!this.key && this.service.get(this.group) === this.key;\n  }\n\n  /**\n   * Returns the key for the host element, which is used to persist the\n   * focus state. This is useful in cases where the DOM is rebuild.\n   */\n  protected get key(): string {\n    return (this.config as PersistFocusConfig)?.key;\n  }\n\n  /**\n   * returns the persistence group (if any) for the focusable elements.\n   */\n  protected get group(): string {\n    return this.service.getPersistenceGroup(\n      this.host,\n      this.config as PersistFocusConfig\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectFocusUtility {\n  /**\n   * Query selectors used to query focusable child elements of the host element.\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\n   */\n  protected focusableSelectors: string[] = [\n    'a[href]',\n    'button',\n    '[tabindex]',\n    'input',\n    'select',\n    'textarea',\n  ];\n\n  // like to leave out the following as we don't use it, and make this list exensible.\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\n  //   `iframe`, // we really don't like iframes...\n  //   `area[href]`, // very debatable!\n\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\n\n  query(host: HTMLElement, selector: string): HTMLElement[] {\n    if (!selector || selector === '') {\n      return [];\n    }\n    return Array.from(\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\n    );\n  }\n\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    const selector =\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\n    // fallback to first focusable\n    return (\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\n      this.findFocusable(host).find((el) => Boolean(el))\n    );\n  }\n\n  /**\n   * returns all focusable child elements of the host element. The element selectors\n   * are build from the `focusableSelectors`.\n   *\n   * @param host the `HTMLElement` used to query focusable elements\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\n   * @param invisible indicates whether hidden focusable elements should be returned\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    let suffix = this.focusableSelectorSuffix;\n    if (!locked) {\n      suffix += `:not([tabindex='-1'])`;\n    }\n    const selector = this.focusableSelectors\n      .map((s) => (s += suffix))\n      .join(',');\n    return this.query(host, selector).filter((el) =>\n      !invisible ? !this.isHidden(el) : Boolean(el)\n    );\n  }\n\n  /**\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\n   *\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\n   * phyisical location on the element itself or any of it's anchestor elements. Those\n   * technique require to work with the _computed styles_, which will cause a performance\n   * downgrade. We don't do this in the standard implementaton.\n   */\n  protected isHidden(el: HTMLElement): boolean {\n    return el.offsetParent === null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from '../persist/persist-focus.service';\nimport { SelectFocusUtility } from '../services/select-focus.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EscapeFocusService extends PersistFocusService {\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\n    super();\n  }\n\n  shouldFocus(config: EscapeFocusConfig): boolean {\n    return !!config?.focusOnEscape;\n  }\n\n  handleEscape(\n    host: HTMLElement,\n    config: EscapeFocusConfig,\n    event: KeyboardEvent\n  ): void {\n    if (this.shouldFocus(config)) {\n      if (host !== event.target) {\n        host.focus({ preventScroll: true });\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        if (config?.focusOnDoubleEscape) {\n          this.selectFocusUtil\n            .findFirstFocusable(host, { autofocus: true })\n            ?.focus();\n        }\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\nimport { EscapeFocusService } from './escape-focus.service';\n\n/**\n * Directive to focus the host element whenever the `escape` key is captured.\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\n * on a tree of elements. Each time the escape key is used, the focus will\n * move up in the DOM tree.\n *\n */\n@Directive() // selector: '[cxEscFocus]',\nexport class EscapeFocusDirective\n  extends PersistFocusDirective\n  implements OnInit {\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\n\n  // @Input('cxEscFocus')\n  protected config: EscapeFocusConfig;\n\n  @Output() esc = new EventEmitter<boolean>();\n\n  /**\n   * Handles the escape key event.\n   * @param event the native keyboard event which contains the escape keydown event\n   */\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    if (this.service.shouldFocus(this.config)) {\n      this.service.handleEscape(this.host, this.config, event);\n    }\n    this.esc.emit(this.service.shouldFocus(this.config));\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: EscapeFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    if (this.service.shouldFocus(this.config)) {\n      this.requiredTabindex = -1;\n    }\n    super.ngOnInit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusService } from '../escape/escape-focus.service';\nimport {\n  AutoFocusConfig,\n  FOCUS_ATTR,\n  PersistFocusConfig,\n} from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutoFocusService extends EscapeFocusService {\n  /**\n   * Returns the first focusable child element of the host element.\n   */\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    if (config?.autofocus === ':host') {\n      return host;\n    } else if (this.hasPersistedFocus(host, config)) {\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\n    } else {\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\n    }\n  }\n\n  /**\n   * Indicates whether any of the focusabe child elements is focused.\n   */\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\n  }\n\n  /**\n   * Returns the element that has a persisted focus state.\n   *\n   * @param host the `HTMLElement` used to query for focusable children\n   * @param group the optional group for the persistent state, to separate different focus\n   *   groups and remain the persistence\n   */\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\n    if (!this.get(group)) {\n      return;\n    }\n    const focussed = Array.from(\n      host.querySelectorAll(\n        `[${FOCUS_ATTR}='${this.get(group)}']`\n      ) as NodeListOf<HTMLElement>\n    );\n    return focussed.length > 0 ? focussed[0] : null;\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\nimport { AutoFocusService } from './auto-focus.service';\n\n/**\n * Directive that focus the first nested _focusable_ element based on state and configuration:\n *\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\n * 4. first focusable element\n * 5. the host element, in case the configured CSS selector is `:host`.\n *\n * Example configurations:\n *\n * `<div cxAutoFocus>[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\n *\n */\n@Directive() // selector: '[cxAutoFocus]'\nexport class AutoFocusDirective\n  extends EscapeFocusDirective\n  implements AfterViewInit {\n  /** The AutoFocusDirective will be using autofocus by default  */\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\n\n  // @Input('cxAutoFocus')\n  protected config: AutoFocusConfig;\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: AutoFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Focus the element explicitly if it was focussed before.\n   */\n  ngAfterViewInit(): void {\n    if (this.shouldAutofocus) {\n      this.handleFocus();\n    }\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\n      super.ngAfterViewInit();\n    }\n  }\n\n  /**\n   * Mimic the focus without setting the actual focus on the host. The first\n   * focusable child element will be focussed.\n   */\n  handleFocus(event?: KeyboardEvent) {\n    if (this.shouldAutofocus) {\n      if (!event?.target || event.target === this.host) {\n        this.firstFocusable?.focus();\n      } else {\n        (event.target as HTMLElement).focus();\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  /**\n   * Helper function to get the first focusable child element\n   */\n  protected get hasPersistedFocus() {\n    return this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Helper function to indicate whether we should use autofocus for the\n   * child elements.\n   */\n  protected get shouldAutofocus(): boolean {\n    return !!this.config?.autofocus;\n  }\n\n  /**\n   * Helper function to get the first focusable child element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get firstFocusable(): HTMLElement {\n    return this.service.findFirstFocusable(this.host, this.config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TabFocusService extends AutoFocusService {\n  /**\n   * Moves to the next (or previous) tab.\n   */\n  moveTab(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS,\n    event: KeyboardEvent\n  ): void {\n    if (config?.tab) {\n      const next =\n        config.tab === 'scroll'\n          ? this.findNextScrollable(host, config, increment)\n          : this.findNext(host, config, increment);\n\n      next?.focus();\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * builds out virtual slides out of the full scrollable area, to allow\n   * for maximum flexibility for the underlying layout without using hardcoded\n   * slide sizes.\n   */\n  protected findNextScrollable(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const active = this.getActiveChild(host, config);\n\n    if (!active) {\n      return;\n    }\n    // slide count\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\n\n    // find current virtual slide\n    const currentVirtualSlide = Math.round(\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\n    );\n\n    let nextVirtualSlide = currentVirtualSlide + increment;\n    if (\n      increment === MOVE_FOCUS.NEXT &&\n      nextVirtualSlide >= virtualSlideCount\n    ) {\n      nextVirtualSlide = 0;\n    }\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\n      nextVirtualSlide = virtualSlideCount - 1;\n    }\n\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\n      (tab) =>\n        tab.offsetLeft >=\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\n    );\n\n    return firstItemOnNextSlide;\n  }\n\n  protected findNext(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const childs = this.getChildren(host, config);\n    let activeIndex = childs?.findIndex(\n      (c) => c === this.getActiveChild(host, config)\n    );\n\n    if (!activeIndex || activeIndex === -1) {\n      activeIndex = 0;\n    }\n    activeIndex += increment;\n\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\n      activeIndex = childs.length - 1;\n    }\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\n      activeIndex = 0;\n    }\n    return childs ? childs[activeIndex] : undefined;\n  }\n\n  /**\n   * Returns the active focusable child element. If there's no active\n   * focusable child element, the first focusable child is returned.\n   */\n  protected getActiveChild(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement {\n    const persisted = this.getPersisted(host, config?.group);\n    if (persisted) {\n      return persisted;\n    }\n    const children = this.getChildren(host, config);\n    let index = children.findIndex((tab) => this.isActive(tab));\n    if (!index || index === -1) {\n      index = 0;\n    }\n    return children[index];\n  }\n\n  protected getChildren(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement[] {\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\n      return this.selectFocusUtil.query(host, config.tab);\n    } else {\n      return this.findFocusable(host, true);\n    }\n  }\n\n  /**\n   * Returns all focusable child elements of the host element.\n   *\n   * @param host The host element is used to query child focusable elements.\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\n  }\n\n  protected isActive(el: HTMLElement): boolean {\n    const child = document.activeElement;\n    const selector = child.tagName;\n\n    return (\n      el === child ||\n      !!Array.from(el.querySelectorAll(selector)).find((e) => e === child)\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from './tab-focus.service';\n\n/**\n * Directive to move the focus of (\"locked\") child elements. This is useful\n * for a nested list of tabs, carousel slides or any group of elements that\n * requires horizontal navigation.\n */\n@Directive() // selector: '[cxTabFocus]'\nexport class TabFocusDirective extends AutoFocusDirective {\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\n  protected defaultConfig: TabFocusConfig = { tab: true };\n\n  // @Input('cxTabFocus')\n  protected config: TabFocusConfig = {};\n\n  @HostListener('keydown.arrowRight', ['$event'])\n  handleNextTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\n    }\n  }\n\n  @HostListener('keydown.arrowLeft', ['$event'])\n  handlePreviousTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TabFocusService\n  ) {\n    super(elementRef, service);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from '../tab/tab-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrapFocusService extends TabFocusService {\n  /**\n   * Indicates whether any of the child elements of the host are focusable.\n   *\n   * @param host `HTMLElement` that is used to query the focusable elements.\n   */\n  hasFocusableChildren(host: HTMLElement): boolean {\n    return this.findFocusable(host).length > 0;\n  }\n\n  /**\n   * Focus the next or previous element of all available focusable elements.\n   * The focus is _trapped_ in case there's no next or previous available element.\n   * The focus will automatically move the start or end of the list.\n   */\n  moveFocus(\n    host: HTMLElement,\n    config: TrapFocusConfig,\n    increment: MOVE_FOCUS,\n    event: UIEvent\n  ): void {\n    const focusable: HTMLElement[] = this.findFocusable(host);\n\n    let index = focusable.findIndex((v) => v === event.target) + increment;\n\n    const shouldMoveFocus =\n      (index >= 0 && index < focusable.length) ||\n      (index < 0 && this.getTrapStart(config.trap)) ||\n      (index >= focusable.length && this.getTrapEnd(config.trap));\n\n    if (shouldMoveFocus) {\n      if (index >= focusable.length) {\n        index = 0;\n      }\n      if (index < 0) {\n        index = focusable.length - 1;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const el = focusable[index];\n\n      el.focus();\n    }\n  }\n\n  protected getTrapStart(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'start';\n  }\n\n  protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'end';\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\nimport { TrapFocusService } from './trap-focus.service';\n\n/**\n * Directive that keeps the focus inside the focussable child elements,\n * also known as a _focus trap_.\n */\n@Directive() // selector: '[cxTrapFocus]'\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\n  protected defaultConfig: TrapFocusConfig = { trap: true };\n\n  // @Input('cxTrapFocus')\n  protected config: TrapFocusConfig = {};\n\n  @HostListener('keydown.arrowdown', ['$event'])\n  @HostListener('keydown.tab', ['$event'])\n  handleTrapDown = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\n    }\n  };\n\n  @HostListener('keydown.arrowup', ['$event'])\n  @HostListener('keydown.shift.tab', ['$event'])\n  handleTrapUp = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.PREV);\n    }\n  };\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TrapFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Moves the focus of the element reference up or down, depending on the increment.\n   * The focus of the element is trapped to avoid it from going out of the group.\n   *\n   * @param event UIEvent that is used to get the target element. The event is blocked\n   *   from standard execution and further bubbling.\n   * @param increment indicates whether the next or previous is focussed.\n   */\n  protected moveFocus(event: UIEvent, increment: number) {\n    if (this.service.hasFocusableChildren(this.host)) {\n      this.service.moveFocus(\n        this.host,\n        this.config,\n        increment,\n        event as UIEvent\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TrapFocusService } from '../trap/trap-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LockFocusService extends TrapFocusService {}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\nimport { LockFocusService } from './lock-focus.service';\n\n/**\n * Focusable elements exclude hidden elements by default, but this contradicts with\n * unlocking (hidden) elements.\n */\nconst UNLOCK_HIDDEN_ELEMENTS = true;\n/**\n * Directive that adds persistence for focussed element in case\n * the elements are being rebuild. This happens often when change\n * detection kicks in because of new data set from the backend.\n */\n@Directive() // selector: '[cxLockFocus]'\nexport class LockFocusDirective\n  extends TrapFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: LockFocusConfig = { lock: true };\n\n  // @Input('cxLockFocus')\n  protected config: LockFocusConfig = {};\n\n  /**\n   * Indicates that the host is configured to use locking. This is available as a\n   * CSS class `focus-lock`.\n   */\n  @HostBinding('class.focus-lock') shouldLock: boolean;\n\n  /**\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\n   */\n  @HostBinding('class.is-locked') isLocked: boolean;\n\n  /**\n   * Emits an event when the host is unlocked.\n   */\n  @Output() unlock = new EventEmitter<boolean>();\n\n  /**\n   * When the user selects enter or space, the focusable childs are\n   * unlocked, which means that the tabindex is set to 0.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handleEnter(event: KeyboardEvent) {\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\n      this.unlockFocus(event);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * In case any of the children elements is touched by the mouse,\n   * we unlock the group to not break the mouse-experience.\n   */\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if (this.shouldLock && this.isLocked) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: LockFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service);\n  }\n\n  protected lockFocus() {\n    this.addTabindexToChildren(-1);\n  }\n\n  protected unlockFocus(event?: UIEvent) {\n    this.unlock.emit(true);\n    this.addTabindexToChildren(0);\n    // we focus the host if the event was triggered from a child\n    if (event?.target === this.host) {\n      // we wait a few milliseconds, mainly because firefox will otherwise apply\n      // the mouse event on the new focused child element\n      setTimeout(() => {\n        super.handleFocus(event as KeyboardEvent);\n      }, 100);\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.shouldLock = this.config?.lock;\n\n    if (this.shouldLock) {\n      this.tabindex = 0;\n\n      // Locked elements will be set to `autofocus` by default if it's not\n      // been configured. This will ensure that autofocus kicks in upon unlock.\n      if (!this.config.hasOwnProperty('autofocus')) {\n        this.config.autofocus = true;\n      }\n      // Locked elements will be set to `focusOnEscape` by default if it's not\n      // been configured. This will ensure that  the host gets locked again when\n      // `escape` is pressed.\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.shouldLock) {\n      /**\n       * If the component hosts a group of focusable children elements,\n       * we persist the group key to the children, so that they can taken this\n       * into account when they persist their focus state.\n       */\n      if (!!this.group) {\n        this.service.findFocusable(this.host).forEach((el) =>\n          // we must do this in after view init as\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\n        );\n      }\n\n      if (this.shouldAutofocus) {\n        this.handleFocus();\n      }\n    }\n    super.ngAfterViewInit();\n  }\n\n  handleFocus(event?: KeyboardEvent): void {\n    if (this.shouldLock) {\n      if (this.shouldUnlockAfterAutofocus(event)) {\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\n        setTimeout(() => this.unlockFocus(event));\n      } else {\n        setTimeout(() => this.lockFocus());\n        event?.stopPropagation();\n        return;\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  handleEscape(event: KeyboardEvent): void {\n    if (this.shouldLock) {\n      this.service.clear(this.config.group);\n    }\n    super.handleEscape(event);\n  }\n\n  /**\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\n   * In this case we unlock the focusable children in case there's a focusable child that\n   * was unlocked before.\n   *\n   * We keep this private to not polute the API.\n   */\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Add the tabindex attribute to the focusable children elements\n   */\n  protected addTabindexToChildren(i = 0): void {\n    if (this.shouldLock) {\n      this.isLocked = i === -1;\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\n        this.focusable.forEach((el) =>\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\n        );\n      }\n    }\n  }\n\n  /**\n   * Utility method, returns all focusable children for the host element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get hasFocusableChildren(): boolean {\n    return this.service.hasFocusableChildren(this.host);\n  }\n\n  /**\n   * Returns the focusable children of the host element. If the host element\n   * is configured to be locked, the query is restricted to child elements\n   * with a tabindex !== `-1`.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get focusable(): HTMLElement[] {\n    return this.service.findFocusable(\n      this.host,\n      this.shouldLock,\n      UNLOCK_HIDDEN_ELEMENTS\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LockFocusService } from '../lock/lock-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeyboardFocusService extends LockFocusService {}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\nimport { LockFocusDirective } from './lock/lock-focus.directive';\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class FocusDirective extends LockFocusDirective {\n  protected defaultConfig: FocusConfig = {};\n  // tslint:disable-next-line: no-input-rename\n  @Input('cxFocus') protected config: FocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: KeyboardFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service, renderer);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\n\nconst directives = [\n  // PersistFocusDirective,\n  // VisibleFocusDirective,\n  // BlockFocusDirective,\n  // AutoFocusDirective,\n  // EscapeFocusDirective,\n  // LockFocusDirective,\n  // TrapFocusDirective,\n  // TabFocusDirective,\n  FocusDirective,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...directives],\n  exports: [...directives],\n})\nexport class KeyboardFocusModule {}\n","// given that we're likely going to refactor the directives, we're\n// NOT exposing all it to the public API.\nexport * from './focus.directive';\nexport { FocusConfig } from './keyboard-focus.model';\nexport * from './keyboard-focus.module';\nexport * from './services/index';\n\n// export * from './autofocus/index';\n// export * from './base/index';\n// export * from './block/index';\n// export * from './escape/index';\n// export * from './lock/index';\n// export * from './persist/index';\n// export * from './tab/index';\n// export * from './trap/index';\n// export * from './visible/index';\n// export * from './keyboard-focus.model';\n","import { Component, OnDestroy, ViewContainerRef } from '@angular/core';\nimport { AnonymousConsentsService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-management-banner',\n  templateUrl: './anonymous-consent-management-banner.component.html',\n})\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\n  private subscriptions = new Subscription();\n\n  bannerVisible$: Observable<\n    boolean\n  > = this.anonymousConsentsService.isBannerVisible();\n\n  constructor(\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  viewDetails(): void {\n    this.hideBanner();\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\n      null,\n      this.vcr\n    );\n    if (dialog) {\n      this.subscriptions.add(dialog.subscribe());\n    }\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      this.anonymousConsentsService\n        .giveAllConsents()\n        .pipe(tap(() => this.hideBanner()))\n        .subscribe()\n    );\n  }\n\n  hideBanner(): void {\n    this.anonymousConsentsService.toggleBannerDismissed(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\n\nexport enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n  HEART = 'HEART',\n  EMPTY_HEART = 'EMPTY_HEART',\n  FILTER = 'FILTER',\n  PENCIL = 'PENCIL',\n  CLOCK = 'CLOCK',\n  TRASH = 'TRASH',\n  ACTIVE = 'ACTIVE',\n  SORT_DOWN = 'SORT_DOWN',\n  SORT = 'SORT',\n  ON = 'ON',\n  OFF = 'OFF',\n  LINK_OUT = 'LINK_OUT',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class IconConfig {\n  icon?: IconOptions;\n}\n\nexport interface IconOptions {\n  /**\n   * Each icon type can be configured with a so-called symbol. The symbol will\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n   * a font based icon. The following configuration would map to a fontawesome\n   * icon:\n   *\n   * icon: {\n   *   symbols: {\n   *     CART: 'fas fa-shopping-cart'\n   *   }\n   * }\n   */\n  symbols?: {\n    [ICON_TYPE: string]: string;\n  };\n\n  /**\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n   * is used for the SVG xlink reference.\n   */\n  resources?: IconConfigResource[];\n\n  /**\n   * Lists icons that should be flipped for a specific direction.\n   */\n  flipDirection?: {\n    [ICON_TYPE: string]: DirectionMode;\n  };\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: (ICON_TYPE | string)[];\n}\n\n/**\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\n * The resources will be automatically loaded in case they're required for the `ICON_TYPE`.\n */\nexport enum IconResourceType {\n  /**\n   * An svg based icon requires an SVG resource that must be loaded,\n   * this is typically a sprite svg file.\n   */\n  SVG = 'svg',\n\n  /**\n   * A font based ICON might require an additional CSS file to be loaded.\n   */\n  LINK = 'link',\n  /**\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\n   */\n  TEXT = 'text',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n      HEART: 'fas fa-heart',\n      EMPTY_HEART: 'far fa-heart',\n      FILTER: 'fas fa-filter',\n      PENCIL: 'fas fa-pencil-alt',\n      CLOCK: 'far fa-clock',\n      TRASH: 'fas fa-trash',\n      ACTIVE: 'fas fa-check',\n      ON: 'fas fa-toggle-on',\n      OFF: 'fas fa-toggle-off',\n      LINK_OUT: 'fas fa-external-link-alt',\n      SORT_DOWN: 'fas fa-sort-down',\n      SORT: 'fas fa-sort',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconOptions,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(\n    protected winRef: WindowRef,\n    protected iconConfig: IconConfig,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  /**\n   * Returns an html fragment which can be added to the DOM in a safe way.\n   */\n  getHtml(type: ICON_TYPE | string): SafeHtml {\n    if (this.isResourceType(type, IconResourceType.SVG)) {\n      return this.sanitizer.bypassSecurityTrustHtml(\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\n      );\n    }\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\n    }\n  }\n\n  /**\n   * Return the direction for which the icon should mirror (ltr vs rtl). The icon direction\n   * is configurable, but optional, as only a few icons should be flipped for rtl direction.\n   */\n  getFlipDirection(type: ICON_TYPE | string): DirectionMode {\n    return this.config?.flipDirection?.[type];\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Indicates whether the given `ICON_TYPE` is configured for\n   * the given `IconResourceType`.\n   */\n  private isResourceType(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): boolean {\n    return (\n      this.config.resources &&\n      !!this.config.resources.find(\n        (res) =>\n          res.types && res.type === resourceType && res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config a[[s been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  private getSvgPath(iconType: ICON_TYPE | string): string {\n    const svgResource = this.config.resources.find(\n      (res) =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE | string): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (\n      resource &&\n      resource.url &&\n      !this.loadedResources.includes(resource.url)\n    ) {\n      this.loadedResources.push(resource.url);\n      const head = this.winRef.document.getElementsByTagName('head')[0];\n      const link = this.winRef.document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = 'text/css';\n      link.href = resource.url;\n      head.appendChild(link);\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.resources) {\n      return;\n    }\n\n    let resource = this.config.resources.find(\n      (res) =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.resources.find(\n        (res) => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  getSymbol(iconType: ICON_TYPE | string) {\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\n      return this.config.symbols[iconType];\n    }\n  }\n\n  private get config(): IconOptions {\n    return this.iconConfig.icon;\n  }\n}\n","/**\n * The ltr and rtl directions can be used to configure the storefront for a certain direction, both statically\n * or dynamically.\n *\n * The HTML5 \"auto\" value is not supported in Spartacus, as it's considered to be too fragile for the global\n * direction.\n */\nexport enum DirectionMode {\n  /**\n   * Indicates Left to Right direction.\n   */\n  LTR = 'ltr',\n  /**\n   * Indicates Right to Left direction.\n   */\n  RTL = 'rtl',\n}\n\n/**\n * Contains the configuration mode for language driven directionality. The detect mode is recommended\n * for a multi-site or multi-lingual setup where the active language should dictate the direction mode.\n */\nexport interface Direction {\n  /**\n   * The default direction mode is used for the direction mode of the overall storefront. The default mode\n   * can be used for all languages, but can be further enhanced dynamically by using the language detect mode.\n   * The default mode will also be used in detect mode for those languages that are not listed in either\n   * `rtlLanguages` or `ltrLanguages`.\n   */\n  default?: DirectionMode;\n\n  /**\n   * If detect is enabled, the direction is driven by the active language. The language is compared to the\n   * list of configured `rtlLanguages` vs `ltrLanguages`. If no language is resolved, the default direction\n   * mode is used.\n   *\n   * If no direction can be resolved, the direction is removed.\n   */\n  detect?: boolean;\n\n  /**\n   * The language isoCodes that are used to detect Right to Left languages.\n   */\n  rtlLanguages?: string[];\n\n  /**\n   * The language isoCodes that are used to detect Left to Right languages.\n   */\n  ltrLanguages?: string[];\n}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE } from './icon.model';\n\n/**\n *\n * The icon component can be added in different ways:\n *\n * With the component selector:\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\n *\n * With the attribute selector:\n * `<span cxIcon=\"STAR\"></span>`\n *\n * Additionally, content can be projected to the icon:\n *\n * `<button cxIcon=\"HAPPY\">happy label</button>`\n *\n * The above button would become (based on a TEXT resource type):\n * `<button>😊happy label</button>`\n *\n * While the content is projected, the icon itself doesn't require an\n * additional DOM node which is an advantage over the component selector.\n */\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set cxIcon(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set type(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * the icon provides an html fragment that is used to add SVG or text based icons.\n   */\n  icon: SafeHtml;\n\n  /**\n   * The `flip-at-rtl` class is added to the DOM for the style layer to flip the icon in RTL direction.\n   */\n  @HostBinding('class.flip-at-rtl') flipAtRtl: boolean;\n\n  /**\n   * The `flip-at-ltr` class is added to the DOM for the style layer to flip the icon in LTR direction.\n   */\n  @HostBinding('class.flip-at-ltr') flipAtLtr: boolean;\n\n  /**\n   * Maintains the applied style classes so we can remove them when the\n   * icon type changes at run time.\n   */\n  protected styleClasses: string[];\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected renderer: Renderer2\n  ) {}\n\n  protected setIcon(type: ICON_TYPE): void {\n    if (!type || <string>type === '') {\n      return;\n    }\n    this.icon = this.iconLoader.getHtml(type);\n    this.addStyleClasses(type);\n    this.iconLoader.addLinkResource(type);\n    this.flipIcon(type);\n  }\n\n  /**\n   * The icons supports flipping for some icons to support rtl and ltr directions.\n   */\n  protected flipIcon(type: ICON_TYPE) {\n    // TODO: this can be dropped with the next major release.\n    if (!this.iconLoader.getFlipDirection) {\n      return;\n    }\n    const iconDirection = this.iconLoader.getFlipDirection(type);\n    this.flipAtLtr = iconDirection === DirectionMode.LTR;\n    this.flipAtRtl = iconDirection === DirectionMode.RTL;\n  }\n\n  /**\n   * Adds the style classes and the link resource (if available).\n   */\n  protected addStyleClasses(type: ICON_TYPE): void {\n    this.renderer.addClass(this.host, 'cx-icon');\n\n    this.styleClasses?.forEach((cls) =>\n      this.renderer.removeClass(this.host, cls)\n    );\n\n    this.styleClasses = this.iconLoader.getStyleClasses(type)?.split(' ');\n    this.styleClasses?.forEach((cls) => {\n      if (cls !== '') {\n        this.renderer.addClass(this.host, cls);\n      }\n    });\n  }\n\n  protected get host() {\n    return this.elementRef.nativeElement;\n  }\n}\n","import { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconConfig } from './icon.model';\n\nexport const defaultIconConfig: IconConfig = {\n  icon: {\n    flipDirection: {\n      CARET_RIGHT: DirectionMode.RTL,\n      CARET_LEFT: DirectionMode.RTL,\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultIconConfig } from './default-icon.config';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultIconConfig),\n    // TODO: move the opinionated fontawesome config to a recipe\n    provideDefaultConfig(fontawesomeIconConfig),\n  ],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog',\n  templateUrl: './anonymous-consent-dialog.component.html',\n})\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\n  @HostBinding('attr.role') role = 'dialog';\n  @HostBinding('attr.aria-modal') modal = true;\n\n  private subscriptions = new Subscription();\n\n  showLegalDescription = true;\n  iconTypes = ICON_TYPE;\n  requiredConsents: string[] = [];\n\n  loading$: Observable<boolean>;\n  templates$: Observable<ConsentTemplate[]>;\n  consents$: Observable<AnonymousConsent[]>;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'input[type=\"checkbox\"]',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    // Close on click outside the dialog window\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected config: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected el: ElementRef,\n    protected launchDialogService: LaunchDialogService\n  ) {\n    if (Boolean(this.config.anonymousConsents)) {\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.templates$ = this.anonymousConsentsService.getTemplates();\n    this.consents$ = this.anonymousConsentsService.getConsents();\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\n  }\n\n  close(reason?: any): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  rejectAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.withdrawConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('rejectAll');\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                (consent && consent.consentState == null) ||\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.giveConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('allowAll');\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.config.anonymousConsents) &&\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\n    );\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.anonymousConsentsService.giveConsent(template.id);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(template.id);\n    }\n  }\n\n  getCorrespondingConsent(\n    template: ConsentTemplate,\n    consents: AnonymousConsent[] = []\n  ): AnonymousConsent {\n    for (const consent of consents) {\n      if (template.id === consent.templateCode) {\n        return consent;\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { LayoutConfig } from '../../layout/config/layout-config';\nimport { DIALOG_TYPE } from '../../layout/launch-dialog/index';\nimport { AnonymousConsentDialogComponent } from '../../shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component';\n\nexport const defaultAnonymousConsentLayoutConfig: LayoutConfig = {\n  launch: {\n    ANONYMOUS_CONSENT: {\n      inline: true,\n      component: AnonymousConsentDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-open-dialog',\n  templateUrl: './anonymous-consent-open-dialog.component.html',\n})\nexport class AnonymousConsentOpenDialogComponent {\n  @ViewChild('open') openElement: ElementRef;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService\n  ) {}\n\n  openDialog(): void {\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\n      this.openElement,\n      this.vcr\n    );\n    if (dialog) {\n      dialog.pipe(take(1)).subscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  DeferLoadingStrategy,\n  FeaturesConfigModule,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../layout/a11y/keyboard-focus/index';\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\nimport { defaultAnonymousConsentLayoutConfig } from './default-anonymous-consent-layout.config';\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideConfig(defaultAnonymousConsentLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AnonymousConsentManagementBannerComponent: {\n          component: AnonymousConsentManagementBannerComponent,\n          deferLoading: DeferLoadingStrategy.INSTANT,\n        },\n        AnonymousConsentOpenDialogComponent: {\n          component: AnonymousConsentOpenDialogComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  exports: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  entryComponents: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n})\nexport class AnonymousConsentManagementBannerModule {}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  consentGiven = false;\n\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Input()\n  requiredConsents: string[] = [];\n\n  @Input()\n  consent: AnonymousConsent;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.consent) {\n      this.consentGiven = Boolean(\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    } else {\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n          this.consentGiven = false;\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n          this.consentGiven = true;\n        }\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentGiven = !this.consentGiven;\n\n    this.consentChanged.emit({\n      given: this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n\n  isRequired(templateId: string): boolean {\n    return this.requiredConsents.includes(templateId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  AuthService,\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserConsentService,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concat,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  skipWhile,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  requiredConsents: string[] = [];\n\n  constructor(\n    protected userConsentService: UserConsentService,\n    protected globalMessageService: GlobalMessageService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n      this.authService.isUserLoggedIn(),\n      this.allConsentsLoading,\n    ]).pipe(\n      map(\n        ([\n          consentLoading,\n          giveConsentLoading,\n          withdrawConsentLoading,\n          isUserLoggedIn,\n          allConsentsLoading,\n        ]) =>\n          consentLoading ||\n          giveConsentLoading ||\n          withdrawConsentLoading ||\n          !isUserLoggedIn ||\n          allConsentsLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      withLatestFrom(\n        this.anonymousConsentsService.getTemplates(),\n        this.authService.isUserLoggedIn()\n      ),\n      filter(\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\n      ),\n      tap(([templateList, _anonymousTemplates]) => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      }),\n      map(([templateList, anonymousTemplates]) => {\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n            )\n          ) {\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\n          }\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents\n                .consentManagementPage\n            )\n          ) {\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\n          }\n        }\n\n        return templateList;\n      })\n    );\n  }\n\n  private hideAnonymousConsents(\n    templateList: ConsentTemplate[],\n    anonymousTemplates: ConsentTemplate[] = []\n  ): ConsentTemplate[] {\n    let hideTemplateIds: string[] = [];\n\n    if (\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .showAnonymousConsents\n    ) {\n      hideTemplateIds = anonymousTemplates.map((template) => template.id);\n      return this.userConsentService.filterConsentTemplates(\n        templateList,\n        hideTemplateIds\n      );\n    }\n\n    if (\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents.length > 0\n    ) {\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\n        .consentManagementPage.hideConsents;\n    }\n\n    return this.userConsentService.filterConsentTemplates(\n      templateList,\n      hideTemplateIds\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe((success) => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap((withdrawalSuccess) => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe((withdrawalSuccess) =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  rejectAll(templates: ConsentTemplate[] = []): void {\n    const consentsToWithdraw: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n        consentsToWithdraw.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupWithdrawalStream(consentsToWithdraw)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupWithdrawalStream(\n    consentsToWithdraw: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getWithdrawConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const withdraw$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToWithdraw.length) {\n          this.userConsentService.withdrawConsent(\n            consentsToWithdraw[i].currentConsent.code\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = withdraw$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  allowAll(templates: ConsentTemplate[] = []): void {\n    const consentsToGive: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n\n        consentsToGive.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupGiveStream(consentsToGive)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupGiveStream(\n    consentsToGive: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getGiveConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const giveConsent$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToGive.length) {\n          this.userConsentService.giveConsent(\n            consentsToGive[i].id,\n            consentsToGive[i].version\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = giveConsent$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n        template.id\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.allConsentsLoading.unsubscribe();\n\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\n  entryComponents: [ConsentManagementComponent],\n})\nexport class ConsentManagementModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/index';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { AnonymousConsentDialogComponent } from './anonymous-consent-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConsentManagementModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [AnonymousConsentDialogComponent],\n  entryComponents: [AnonymousConsentDialogComponent],\n  exports: [AnonymousConsentDialogComponent],\n})\nexport class AnonymousConsentsDialogModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  paragraphs?: Array<{ title?: string; text?: Array<string> }>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n  @Input()\n  fitToContainer = false;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { CardComponent } from './card.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the items can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport {\n  BreakPoint,\n  BREAKPOINT,\n  LayoutBreakPoints,\n  LayoutConfig,\n} from '../config/layout-config';\n\n/**\n * The `BreakpointService` resolves the various screen sizes that are used in\n * the storefront. The screen sizes are globally configurable based on your\n * layout requirements. You can adjust the screen sizes by setting the minimum\n * and/or maximum size for a breakpoint, as well as extending the configuration\n * with new screens.\n *\n * By default, the `BreakpointService` is based on the breakpoints from the\n * Bootstrap ui library:\n * - `xs`: 0 - 576px\n * - `sm`: 576px - 768px\n * - `md`: 768px - 992px\n * - `lg`: 992px - 1200px\n * - `xl`: > 1200px\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  private _breakpoints: BREAKPOINT[];\n\n  breakpoint$: Observable<BREAKPOINT> = isPlatformBrowser(this.platform)\n    ? this.winRef.resize$.pipe(\n        map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\n        distinctUntilChanged()\n      )\n    : of(this.fallbackBreakpoint);\n\n  constructor(\n    protected winRef: WindowRef,\n    protected layoutConfig: LayoutConfig,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  /**\n   * Returns the breakpoints for the storefront layout.\n   *\n   * The breakpoints are driven by the `LayoutConfig.breakpoints` and sorted based on\n   * the given screen size.\n   */\n  get breakpoints(): BREAKPOINT[] {\n    if (!this._breakpoints) {\n      this._breakpoints = this.resolveBreakpointsFromConfig();\n    }\n    return this._breakpoints;\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpoint, given by the `LayoutConfig.breakpoints`\n   * configuration.\n   */\n  getSize(breakpoint: BREAKPOINT): number {\n    return (\n      this.getMaxSize(breakpoint) ??\n      // if there's no direct max value or explicit max value\n      // we must derive the max value from the previous min\n      this.getMinSize(\n        this.breakpoints?.[this.breakpoints.indexOf(breakpoint) + 1]\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is smaller than the maximum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\n   */\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is larger than the minimum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\n   */\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(this.breakpoints.indexOf(breakpoint))\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the given breakpoint fits in the current screen size.\n   */\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\n  }\n\n  /**\n   * Returns the fallback breakpoint in case no breakpoint can be resolved. This is\n   * typically the case when we're on SSR without an actual window.\n   *\n   * Returns the smallest screen size (mobile first).\n   */\n  protected get fallbackBreakpoint(): BREAKPOINT {\n    return this.breakpoints?.[0];\n  }\n\n  /**\n   * Resolves the breakpoints and sorts them according to the configured size.\n   *\n   * The sort order is by small to large screens.\n   */\n  protected resolveBreakpointsFromConfig(): BREAKPOINT[] {\n    const sortByScreenSize = (next: BREAKPOINT, prev: BREAKPOINT): number => {\n      const maxNext = Math.max(\n        this.getMinSize(next) + 1 || 0,\n        this.getMaxSize(next) || 0\n      );\n      const maxPrev = Math.max(\n        this.getMinSize(prev) + 1 || 0,\n        this.getMaxSize(prev) || 0\n      );\n      return maxNext < maxPrev ? -1 : 0;\n    };\n    return (Object.keys(this.config) as BREAKPOINT[]).sort(sortByScreenSize);\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpoint, given by the\n   * `LayoutConfig.breakpoints` configuration. We will try to resolve the\n   * max size form the current breakpoint, but if this is not available, we\n   * resolve it form the next breakpoint\n   */\n  protected getMaxSize(breakpoint: BREAKPOINT): number {\n    const breakpointConfig = this.config[breakpoint];\n\n    if (!breakpointConfig) {\n      return null;\n    }\n\n    // we treat numbers as the max number by default\n    if (typeof breakpointConfig === 'number') {\n      return breakpointConfig as number;\n    } else if (breakpointConfig.max) {\n      return breakpointConfig.max;\n    } else {\n      return null;\n    }\n  }\n\n  protected getMinSize(breakpoint: BREAKPOINT): number {\n    return (this.config[breakpoint] as BreakPoint)?.min;\n  }\n\n  /**\n   * Returns a `BREAKPOINT` for the given window size.\n   *\n   * This method tries to match the closest breakpoint for the give\n   * window size. We'll fallback to the `largest` size in case the window\n   * is greater than the largest configurable breakpoint.\n   */\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    return (\n      this.breakpoints.find((br) => windowWidth <= this.getSize(br)) ??\n      this.breakpoints?.[this.breakpoints.length - 1]\n    );\n  }\n\n  /**\n   * Helper method to return the breakpoint configuration.\n   */\n  protected get config(): LayoutBreakPoints {\n    return this.layoutConfig?.breakpoints || {};\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Config, Image, OccConfig } from '@spartacus/core';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { StorefrontConfig } from '../../../storefront-config';\nimport { MediaConfig } from './media.config';\nimport { Media, MediaContainer, MediaFormatSize } from './media.model';\n\n/**\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\n * that URLs and sizes are generated for the same media. This helps to improve performance\n * across difference devices and layouts.\n *\n * Media formats are optional, but highly recommended. The format will help the browser to\n * identify the right media for the right experience.\n *\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\n * `occConfig.backend.occ.baseUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  /**\n   * The media formats sorted by size. The media format representing the smallest\n   * size is sorted on top.\n   */\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\n\n  constructor(\n    @Inject(Config) protected config: StorefrontConfig,\n    /**\n     * The BreakpointService is no longer used in version 2.0 as the different size formats are\n     * driven by configuration only. There's however a change that this service will play a role\n     * in the near future, which is why we keep the constructor as-is.\n     */\n    protected breakpointService: BreakpointService\n  ) {}\n\n  /**\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\n   * for specific formats.\n   */\n  getMedia(\n    mediaContainer: MediaContainer | Image,\n    format?: string,\n    alt?: string\n  ): Media {\n    if (!mediaContainer) {\n      return;\n    }\n\n    const mainMedia: Image = mediaContainer.url\n      ? mediaContainer\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\n\n    return {\n      src: this.resolveAbsoluteUrl(mainMedia?.url),\n      alt: alt || mainMedia?.altText,\n      srcset: this.resolveSrcSet(mediaContainer),\n    };\n  }\n\n  /**\n   * Creates the media formats in a logical sorted order. The map contains the\n   * format key and the format size information. We do this only once for performance\n   * benefits.\n   */\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._sortedFormats) {\n      this._sortedFormats = Object.keys(\n        (this.config as MediaConfig).mediaFormats\n      )\n        .map((key) => ({\n          code: key,\n          size: (this.config as MediaConfig).mediaFormats[key],\n        }))\n        .sort((a, b) => (a.size.width > b.size.width ? 1 : -1));\n    }\n    return this._sortedFormats;\n  }\n\n  /**\n   * Creates the media formats in a reversed sorted order.\n   */\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._reversedFormats) {\n      this._reversedFormats = this.sortedFormats.slice().reverse();\n    }\n    return this._reversedFormats;\n  }\n\n  /**\n   * Resolves the right media for the given format. The fo\n   */\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\n    return media[this.resolveFormat(media, format)];\n  }\n\n  /**\n   * Validates the format against the given mediaContainer. If there is no format available,\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\n   * format is resolved. If even that is not possible, the first format is returned.\n   */\n  protected resolveFormat(\n    mediaContainer: MediaContainer,\n    format?: string\n  ): string {\n    if (format && mediaContainer[format]) {\n      return format;\n    }\n    return (\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\n    );\n  }\n\n  /**\n   * Returns the media format code with the best size.\n   */\n  protected resolveBestFormat(media: MediaContainer | Image): string {\n    return this.reversedFormats.find((format) =>\n      media.hasOwnProperty(format.code)\n    )?.code;\n  }\n\n  /**\n   * Returns a set of media for the available media formats. Additionally, the congiured media\n   * format width is added to the srcset, so that browsers can select the appropriate media.\n   */\n  protected resolveSrcSet(media: MediaContainer | Image): string {\n    if (!media) {\n      return undefined;\n    }\n\n    const srcset = this.sortedFormats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.resolveAbsoluteUrl(media[format.code].url)} ${\n          format.size.width\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  /**\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\n   */\n  protected resolveAbsoluteUrl(url: string): string {\n    if (!url) {\n      return null;\n    }\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\n  }\n\n  /**\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\n   * `backend.occ.baseUrl`.\n   *\n   * The `backend.media.baseUrl` can be used to load media from a different location.\n   *\n   * In Commerce Cloud, a differnt location could mean a different \"aspect\".\n   */\n  protected getBaseUrl(): string {\n    return (\n      (this.config as OccConfig).backend.media.baseUrl ||\n      (this.config as OccConfig).backend.occ.baseUrl ||\n      ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Media, MediaContainer } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container: MediaContainer;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  protected create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container,\n      this.format,\n      this.alt\n    );\n    if (!this.media?.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  protected handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {\n  static forRoot(): ModuleWithProviders<MediaModule> {\n    return {\n      ngModule: MediaModule,\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatePickerFormatterService {\n  constructor() {}\n\n  toNative(value: string): string {\n    return value ? new Date(value).toISOString().split('T')[0] : null;\n  }\n\n  toModel(value: string, endOfDay: boolean): string {\n    if (value) {\n      let date = new Date(value)\n        .toISOString()\n        .replace('.', '+')\n        .replace('Z', '0');\n\n      if (endOfDay) {\n        date = date.replace('00:00:00', '23:59:59');\n      }\n      return date;\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  Validator,\n} from '@angular/forms';\nimport { DatePickerFormatterService } from './date-picker-formatter.service';\n\n@Component({\n  selector: 'cx-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class DatePickerComponent implements ControlValueAccessor, Validator {\n  value: string;\n  nativeValue: string = null;\n\n  @ViewChild('inputElement', { static: false, read: ElementRef })\n  input: ElementRef;\n\n  @Input()\n  min?: string;\n\n  @Input()\n  max?: string;\n\n  @Input()\n  endOfDay = false;\n\n  @Input()\n  required?: boolean;\n\n  @Input()\n  invalid?: boolean;\n\n  constructor(protected dateFormatterService: DatePickerFormatterService) {}\n\n  onInput(event) {\n    this.value = this.dateFormatterService.toModel(\n      event.target.value,\n      this.endOfDay\n    );\n    this.nativeValue = event.target.value;\n    this.onChange(this.value);\n  }\n\n  onChange(_event: any) {}\n\n  onTouched() {}\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: string): void {\n    if (value) {\n      this.value = value;\n      this.nativeValue = this.dateFormatterService.toNative(value);\n    }\n  }\n\n  getMin(): string {\n    return this.dateFormatterService.toNative(this.min);\n  }\n\n  getMax(): string {\n    return this.dateFormatterService.toNative(this.max);\n  }\n\n  validate(): { [key: string]: any } {\n    if (this.input && !this.input.nativeElement.validity.valid) {\n      const validity = this.input.nativeElement.validity;\n      const validators: { [key: string]: boolean } = {};\n      if (validity.rangeOverflow) {\n        validators.cxDateMax = true;\n      }\n      if (validity.rangeUnderflow) {\n        validators.cxDateMin = true;\n      }\n      return validators;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DatePickerComponent } from './date-picker.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DatePickerComponent],\n  exports: [DatePickerComponent],\n})\nexport class DatePickerModule {}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service responsible for converting date-like strings to/from formats compatible with the `<input type=\"datetime-local\">`\n * HTML element and valid strings compatible with the `Date` object.\n *\n * Date values used are relative to the local timezone of the user.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateTimePickerFormatterService {\n  /**\n   * Convert date string into a string format compatable with the browser's native `<input type=\"datetime-local\">` HTML element.\n   * @param value: date string to convert\n   *\n   * @example\n   * With UTC-0 local offset, `toNative('2010-01-01T00:00+0000')` returns `'2010-01-01T00:00'`.\n   */\n  toNative(value: string): string {\n    return value\n      ? this.formatDateStringWithTimezone(\n          value,\n          this.getLocalTimezoneOffset(true)\n        )\n      : null;\n  }\n\n  /**\n   * Convert datetime-local native string into a valid datetime string.\n   * @param value: datetime-local string to convert\n   *\n   * @example\n   * With UTC-0 locale offset, `toModel('2010-01-01T00:00')` returns `'2010-01-01T00:00:00+00:00'`.\n   */\n  toModel(value: string): string {\n    return value ? `${value}:00${this.getLocalTimezoneOffset()}` : null;\n  }\n\n  /**\n   * Returns the local timezone in a format that can be appended to a date-like string.\n   * @param invert (default: false): returns the opposite operator relative to the local timezone\n   *\n   * @example\n   * When locale is set to a CEST timezone, `getLocalTimezoneOffset()` returns '+02:00'\n   * and `getLocalTimezoneOffset(true)` returns '-02:00'\n   */\n  protected getLocalTimezoneOffset(invert?: boolean): string {\n    const offset = new Date().getTimezoneOffset() * -1;\n    const hours = Math.abs(Math.floor(offset / 60))\n      .toString()\n      .padStart(2, '0');\n    const minutes = (offset % 60).toString().padStart(2, '0');\n    const sign = offset >= 0 ? (invert ? `-` : `+`) : invert ? `+` : `-`;\n    return `${sign}${hours}:${minutes}`;\n  }\n\n  /**\n   * Format date string into a format compatable with the browser's native `<input type=\"datetime-local\">` HTML element.\n   * @param dateString: date string to convert\n   * @param offset: offset to append to date string\n   *\n   * @example\n   * With UTC-0 local offset, `formatDateStringWithTimezone('2010-01-01T00:00+0000', '+00:00')` returns `'2010-01-01T00:00+00:00'`.\n   */\n  protected formatDateStringWithTimezone(\n    dateString: string,\n    offset: string\n  ): string {\n    return new Date(dateString.replace('+0000', offset))\n      .toISOString()\n      .substring(0, 16);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  Validator,\n} from '@angular/forms';\nimport { DateTimePickerFormatterService } from './date-time-picker-formatter.service';\n\n/**\n * This component serves the browser's native `<input type=\"datetime-local\">` HTML element\n * in whilst projecting the value in the standard date format with regards to timezone offsets.\n */\n@Component({\n  selector: 'cx-date-time-picker',\n  templateUrl: './date-time-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DateTimePickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DateTimePickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class DateTimePickerComponent\n  implements ControlValueAccessor, Validator {\n  value: string;\n  nativeValue: string = null;\n\n  /**\n   * Reference to input element of type 'datetime-local'.\n   */\n  @ViewChild('inputElement', { static: false, read: ElementRef })\n  input: ElementRef;\n\n  /**\n   * Minimum value allowed for input element.\n   */\n  @Input()\n  min?: string;\n\n  /**\n   * Maximum value allowed for input element.\n   */\n  @Input()\n  max?: string;\n\n  /**\n   * Whether to use `required` validator.\n   */\n  @Input()\n  required?: boolean;\n\n  /**\n   * Condition to display as invalid.\n   */\n  @Input()\n  invalid?: boolean;\n\n  constructor(protected dateFormatterService: DateTimePickerFormatterService) {}\n\n  /**\n   * Handler method for input interactions.\n   * @param event: Input event.\n   */\n  onInput(event) {\n    this.value = this.dateFormatterService.toModel(event.target.value);\n    this.nativeValue = event.target.value;\n    this.onChange(this.value);\n  }\n\n  /**\n   * Handler method for when the value is modified.\n   * @param event: Change event.\n   */\n  onChange(_event: any) {}\n\n  /**\n   * Handler method for when the element is interacted with.\n   */\n  onTouched() {}\n\n  /**\n   * Register the `onChange()` handler method.\n   */\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Register the `onTouched()` handler method.\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Set the value of the input element.\n   * @param value: Date-like string to be set\n   */\n  writeValue(value: string): void {\n    if (value) {\n      this.value = value;\n      this.nativeValue = this.dateFormatterService.toNative(value);\n    }\n  }\n\n  /**\n   * Get the minimum value allowed for the input.\n   */\n  getMin(): string {\n    return this.dateFormatterService.toNative(this.min);\n  }\n\n  /**\n   * Get the maximum value allowed for the input.\n   */\n  getMax(): string {\n    return this.dateFormatterService.toNative(this.max);\n  }\n\n  /**\n   * Returns failing validators if input value is invalid\n   */\n  validate(): { [key: string]: any } {\n    if (this.input && !this.input.nativeElement.validity.valid) {\n      const validity = this.input.nativeElement.validity;\n      const validators: { [key: string]: boolean } = {};\n      if (validity.rangeOverflow) {\n        validators.cxDateMax = true;\n      }\n      if (validity.rangeUnderflow) {\n        validators.cxDateMin = true;\n      }\n      return validators;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DateTimePickerComponent],\n  exports: [DateTimePickerComponent],\n})\nexport class DateTimePickerModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n/**\n * This component renders form errors.\n */\n@Component({\n  selector: 'cx-form-errors',\n  templateUrl: './form-errors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormErrorsComponent {\n  _control: FormControl;\n  errors$: Observable<string[]>;\n\n  @Input()\n  translationParams: { [key: string]: string };\n\n  @Input()\n  set control(control: FormControl) {\n    this._control = control;\n\n    this.errors$ = control?.statusChanges.pipe(\n      startWith({}),\n      map(() => control.errors || {}),\n      map((errors) =>\n        Object.entries(errors)\n          .filter((error) => error[1])\n          .map((error) => error[0])\n      )\n    );\n  }\n\n  get control(): FormControl {\n    return this._control;\n  }\n\n  @HostBinding('class.control-invalid') get invalid() {\n    return this.control?.invalid;\n  }\n  @HostBinding('class.control-dirty') get dirty() {\n    return this.control?.dirty;\n  }\n  @HostBinding('class.control-touched') get touched() {\n    return this.control?.touched;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormErrorsComponent } from './form-errors.component';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [FormErrorsComponent],\n  exports: [FormErrorsComponent],\n})\nexport class FormErrorsModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Params, Router } from '@angular/router';\n\n// private\ninterface RouteParts {\n  /** Path in the Angular-like array format */\n  path?: string[];\n\n  /** Query params */\n  queryParams?: Params;\n\n  /** Hash fragment */\n  fragment?: string;\n}\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent implements OnChanges {\n  constructor(protected router: Router) {}\n\n  /**\n   * Pattern matching string starting with `http://` or `https://`.\n   */\n  private readonly PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\n\n  /**\n   * Used to split url into 2 parts:\n   * 1. the path\n   * 2. query params + hash fragment\n   */\n  private readonly URL_SPLIT = /(^[^#?]*)(.*)/;\n\n  /**\n   * Parsed parts of the @Input `url`, when it's a local URL.\n   * It should not be used when the `url` is external.\n   * @see `url`\n   */\n  private routeParts: RouteParts = {};\n\n  @Input() url: string | any[];\n  @Input() target: string;\n  @Input() class: string;\n  @Input() id: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  /**\n   * Returns true when the @Input `url` is a string starting with `http://` or `https://`.\n   */\n  isExternalUrl(): boolean {\n    return typeof this.url === 'string' && this.PROTOCOL_REGEX.test(this.url);\n  }\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['url']) {\n      this.setUrlParts(changes['url'].currentValue);\n    }\n  }\n\n  /**\n   * The part with the path of the local url.\n   */\n  get routerUrl(): any[] {\n    return this.routeParts.path;\n  }\n\n  /**\n   * The part with the query params of the local url.\n   */\n  get queryParams(): Params {\n    return this.routeParts.queryParams;\n  }\n\n  /**\n   * The part with the hash fragment of the local url.\n   */\n  get fragment(): string {\n    return this.routeParts.fragment;\n  }\n\n  /**\n   * Parses the given url and sets the property `urlParts` accordingly.\n   */\n  private setUrlParts(url: string | any[]) {\n    if (typeof url === 'string') {\n      url = this.getAbsoluteUrl(url); // string links in CMS sometimes don't have the leading slash, so fix it here\n      this.routeParts = this.splitUrl(url as string);\n    } else {\n      this.routeParts = { path: url };\n    }\n  }\n\n  /**\n   * Parses the given string into 3 parts:\n   * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\n   * - query params (as an object)\n   * - hash fragment (string)\n   */\n  private splitUrl(url: string = ''): RouteParts {\n    const { queryParams, fragment } = this.router.parseUrl(url);\n    const [, path] = url.match(this.URL_SPLIT);\n\n    // wrap path in an array, to have the Angular-like path format\n    return { path: [path], queryParams, fragment };\n  }\n\n  /**\n   * Prepends a leading slash to the given URL string, in case it doesn't have it.\n   */\n  private getAbsoluteUrl(url: string): string {\n    return url.startsWith('/') ? url : '/' + url;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n/**\n * Provides a UI to manage the count of the quantity, typically by using\n * increase and decrease functionality. The item counter expects an input `FormControl`\n * so that the state of the control can be managed outside of this component.\n */\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  // do not use OnPush change detection strategy as we would not\n  // get updates of other form control state (disabled). We want to have a\n  // disabled state in order to ensure that the control cannot be used while\n  // the cart is updated.\n})\nexport class ItemCounterComponent implements OnInit, OnDestroy {\n  /**\n   * Holds the value of the counter, the state of the `FormControl`\n   * can be managed outside of the item counter.\n   */\n  @Input() control: FormControl;\n\n  /**\n   * This can be used in case an item has a minmum order quantity.\n   * @default 1\n   */\n  @Input() min = 1;\n\n  /**\n   * This can be used in case an item has a maximum order quantity.\n   */\n  @Input() max: number;\n\n  /**\n   * The step is used to increment the count. It is supposed to be a\n   * positive integer or float.\n   * @default 1\n   */\n  @Input() step = 1;\n\n  /**\n   * Indicates that the input can be manually set to zero,\n   * despite the fact that the input controls will be limited to\n   * the minimum. The zero value can be used to remove an item.\n   */\n  @Input() allowZero = false;\n\n  /**\n   * In readonly mode the item counter will only be shown as a label,\n   * the form controls are not rendered.\n   * Please not that readonly is different from the `disabled` form state.\n   * @default false\n   */\n  @HostBinding('class.readonly') @Input() readonly = false;\n\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\n\n  /**\n   * Subscription responsible for auto-correcting control's value when it's invalid.\n   */\n  private sub: Subscription;\n\n  @HostListener('click') handleClick() {\n    this.input.nativeElement.focus();\n  }\n\n  ngOnInit() {\n    this.sub = this.control.valueChanges\n      .pipe(startWith(this.control.value))\n      .subscribe((value) =>\n        this.control.setValue(this.getValidCount(value), { emitEvent: false })\n      );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  increment() {\n    // it's too early to use the `stepUp` and `stepDown` API...\n    // let's wait for FF: https://caniuse.com/#search=stepUp\n    this.control.setValue(this.control.value + this.step);\n    this.control.markAsDirty();\n  }\n\n  decrement() {\n    this.control.setValue(this.control.value - this.step);\n    this.control.markAsDirty();\n  }\n\n  /**\n   * Validate that the given value is in between\n   * the `min` and `max` value. If the value is out\n   * of  the min/max range, it will be altered.\n   * If `allowZero` is set to true, the 0 value is ignored.\n   *\n   */\n  private getValidCount(value: number) {\n    if (value < this.min && !(value === 0 && this.allowZero)) {\n      value = this.min;\n    }\n    if (this.max && value > this.max) {\n      value = this.max;\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ItemCounterComponent } from './item-counter.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { PaginationConfig } from './pagination.config';\n\nexport const defaultPaginationConfig: PaginationConfig = {\n  pagination: {\n    addStart: true,\n    addEnd: true,\n  },\n};\n","import { PaginationOptions } from '../pagination.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PaginationConfig {\n  pagination?: PaginationOptions;\n}\n","/**\n * Represents a page item for a pagination system. This is used\n * to store the model of each page.\n */\nexport interface PaginationItem {\n  label?: string;\n  type?: PaginationItemType;\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\n  number?: number;\n}\n\n/**\n * The item type is used to add semantic structure to the\n * PaginationItem, so that the UI understands the usage.\n */\nexport enum PaginationItemType {\n  GAP = 'gap',\n  FIRST = 'first',\n  LAST = 'last',\n  PREVIOUS = 'previous',\n  NEXT = 'next',\n  START = 'start',\n  END = 'end',\n  PAGE = 'page',\n}\n\nexport interface PaginationOptions {\n  /**\n   * The range of direct accessible pages in the pagination.\n   *\n   * `« 4 (5) 6 »`\n   *\n   * Defaults to 3.\n   */\n  rangeCount?: number;\n\n  /** Adds a link to skip to the start of the pages, defaults to false. */\n  addStart?: boolean;\n  /** A link to skip to the end of the pages, defaults to false. */\n  addEnd?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addPrevious?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addNext?: boolean;\n\n  navigationPosition?: PaginationNavigationPosition;\n\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\n  addFirst?: boolean;\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\n  addLast?: boolean;\n\n  /**\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\n   *\n   * `1 ...  4 (5) 6 ... 18`\n   *\n   * Defaults to false.\n   */\n  addDots?: boolean;\n\n  /**\n   * If the page dots only represents a single page, we rather add the page\n   * as this would take the same amount of space. Some UX might want to use\n   * the dots for consistency reasons, which why this option is configurable.\n   *\n   * This typically happens on the 4th page (in case the range is 3):\n   * Instead of having:\n   *\n   *  `1 ...  3 (4) 5`\n   *\n   * we'd have\n   *\n   * `1 2 3 (4) 5`.\n   *\n   * Defaults to false.\n   */\n  substituteDotsForSingularPage?: boolean;\n\n  /** Custom label for the start link, defaults to `«`. */\n  startLabel?: string;\n  /** Custom label for the previous link, defaults to `‹`. */\n  previousLabel?: string;\n  /** Custom label for the next link, defaults to `›`. */\n  nextLabel?: string;\n  /** Custom label for the end link, defaults to `»`. */\n  endLabel?: string;\n  /** Custom label for the dots, defaults to `...`. */\n  dotsLabel?: string;\n}\n\nexport enum PaginationNavigationPosition {\n  ASIDE = 'aside',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","import { Injectable } from '@angular/core';\nimport { PaginationConfig } from './config/pagination.config';\nimport {\n  PaginationItem,\n  PaginationItemType,\n  PaginationNavigationPosition,\n  PaginationOptions,\n} from './pagination.model';\n\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\n  rangeCount: 3,\n  dotsLabel: '...',\n  startLabel: '«',\n  previousLabel: '‹',\n  nextLabel: '›',\n  endLabel: '»',\n};\n\n/**\n * Builds a pagination structures based on a pageCount and current page number.\n * There are various {@link PaginationConfig} options which can be used to configure\n * the behavior of the build. Alternatively, CSS can be used to further customize\n * the pagination.\n *\n * Examples:\n * The full blown pagination items contain the follow elements:\n *\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\n *\n * This includes pagination items to the following pages:\n * - start page\n * - previous page\n * - first page\n * - page range\n * - last page\n * - next page\n * - end page\n *\n * All of those links are configurable, including the size of the page range.\n * The current page will always be centered in the page range to provide direct access\n * to the previous and next page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaginationBuilder {\n  constructor(protected paginationConfig: PaginationConfig) {}\n\n  /**\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\n   * to build out the full pagination. There are various {@link PaginationConfig} options\n   * which can be used to configure the behavior of the build. Alternatively, CSS\n   * can be used to further specialize visibility of the pagination.\n   *\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   * @returns An array of `PaginationItem`\n   */\n  paginate(pageCount: number, current: number): PaginationItem[] {\n    const pages: PaginationItem[] = [];\n    if (!pageCount || pageCount < 2) {\n      return pages;\n    }\n    this.addPages(pages, pageCount, current);\n    this.addDots(pages, pageCount);\n    this.addFirstLast(pages, pageCount);\n    this.addNavigation(pages, pageCount, current);\n\n    return pages;\n  }\n\n  /**\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\n   * The current page is always centered to provide direct access to the previous and next page.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   */\n  protected addPages(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const start = this.getStartOfRange(pageCount, current);\n    const max = Math.min(this.config.rangeCount, pageCount);\n    Array.from(Array(max)).forEach((_, i) => {\n      pages.push({\n        number: i + start,\n        label: String(i + start + 1),\n        type: PaginationItemType.PAGE,\n      });\n    });\n  }\n\n  /**\n   * Adds dots before and after the given pages, if configured (defaults to true).\n   * If the dots only represent a single page, the page number is added instead of\n   * the dots, unless the configuration requires dots always.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   */\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\n    if (!this.config.addDots) {\n      return;\n    }\n\n    const addFirstGap = () => {\n      const firstItemNumber = pages[0].number;\n      const gapNumber = this.config.addFirst ? 1 : 0;\n      if (firstItemNumber > gapNumber) {\n        const isGap =\n          !this.config.substituteDotsForSingularPage ||\n          firstItemNumber !== gapNumber + 1;\n        const isSubstituted =\n          this.config.addFirst &&\n          this.config.substituteDotsForSingularPage &&\n          gapNumber === 0;\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstituted\n          ? PaginationItemType.FIRST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\n              type,\n            },\n            isGap ? null : { number: gapNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    const addLastGap = () => {\n      const nextPageNumber = pages[pages.length - 1].number + 1;\n      const last = pageCount - (this.config.addLast ? 2 : 1);\n      if (nextPageNumber <= last) {\n        const isSubstituted =\n          this.config.addLast &&\n          this.config.substituteDotsForSingularPage &&\n          nextPageNumber === last;\n        const isGap =\n          nextPageNumber <\n          pageCount -\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\n            (this.config.addLast ? 1 : 0);\n\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstituted\n          ? PaginationItemType.LAST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\n              type,\n            },\n            isGap ? null : { number: nextPageNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    pages.unshift(...addFirstGap());\n    pages.push(...addLastGap());\n  }\n\n  /**\n   * Add links to the first and last page, if configured to do so.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   *\n   */\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\n    if (this.config.addFirst && pages[0].number !== 0) {\n      pages.unshift({\n        number: 0,\n        label: '1',\n        type: PaginationItemType.FIRST,\n      });\n    }\n    if (\n      this.config.addLast &&\n      pages[pages.length - 1].number !== pageCount - 1\n    ) {\n      pages.push({\n        number: pageCount - 1,\n        label: String(pageCount),\n        type: PaginationItemType.LAST,\n      });\n    }\n  }\n\n  /**\n   * Add links to the start, previous, next and last page, if configured to do so.\n   * The order of the links can be configured by using the {@link PaginationConfig},\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\n   * The `PaginationNavigationPosition` allows for 3 flavours:\n   *\n   * - by default the pagination starts with start and previous and ends with the next and end links\n   * - BEFORE – all navigation links are added in the front of the pagination list\n   * - AFTER – all navigation links are pushed to the end of the pagination list\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   *\n   */\n  protected addNavigation(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const before = this.getBeforeLinks(current);\n    const after = this.getAfterLinks(pageCount, current);\n    const pos = this.config.navigationPosition;\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\n      pages.unshift(...before);\n      pages.push(...after);\n    } else {\n      if (pos === PaginationNavigationPosition.BEFORE) {\n        pages.unshift(...before, ...after);\n      }\n      if (pos === PaginationNavigationPosition.AFTER) {\n        pages.push(...before, ...after);\n      }\n    }\n  }\n\n  /**\n   * Returns the start and previous links, if applicable.\n   */\n  protected getBeforeLinks(current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addStart) {\n      const start = () => {\n        return Object.assign(\n          {\n            label: this.config.startLabel,\n            type: PaginationItemType.START,\n          },\n          current > 0 ? { number: 0 } : null\n        );\n      };\n      list.push(start());\n    }\n    if (this.config.addPrevious) {\n      const previous = () => {\n        return Object.assign(\n          {\n            label: this.config.previousLabel,\n            type: PaginationItemType.PREVIOUS,\n          },\n          current > 0 ? { number: current - 1 } : null\n        );\n      };\n      list.push(previous());\n    }\n    return list;\n  }\n\n  /**\n   * Returns the next and end links, if applicable.\n   */\n  protected getAfterLinks(\n    pageCount: number,\n    current: number\n  ): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addNext) {\n      const next = () => {\n        return Object.assign(\n          {\n            label: this.config.nextLabel,\n            type: PaginationItemType.NEXT,\n          },\n          current < pageCount - 1 ? { number: current + 1 } : null\n        );\n      };\n      list.push(next());\n    }\n    if (this.config.addEnd) {\n      const end = () => {\n        return Object.assign(\n          {\n            label: this.config.endLabel,\n            type: PaginationItemType.END,\n          },\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\n        );\n      };\n      list.push(end());\n    }\n\n    return list;\n  }\n  /**\n   * Resolves the first page of the range we need to build.\n   * This is the page that is leading up to the range of the\n   * current page.\n   *\n   * @param pageCount The total number of pages.\n   * @param current The current page number, 0-index based.\n   */\n  protected getStartOfRange(pageCount: number, current: number): number {\n    const count = this.config.rangeCount - 1;\n    // the least number of pages before and after the current\n    const delta = Math.round(count / 2);\n\n    // ensure that we start with at least the first page\n    const minStart = Math.max(0, current - delta);\n    // ensures that we start with at least 1 and do not pass the last range\n    const maxStart = Math.max(0, pageCount - count - 1);\n\n    // ensure that we get at least a full range at the end\n    return Math.min(maxStart, minStart);\n  }\n\n  /**\n   * Returns the pagination configuration. The configuration is driven by the\n   * (default) application configuration.\n   *\n   * The default application is limited to adding the start and end link:\n   * ```ts\n   *   addStart: true,\n   *   addEnd: true\n   * ```\n   *\n   * The application configuration is however merged into the following static configuration:\n   * ```ts\n   * {\n   *   rangeCount: 3,\n   *   dotsLabel: '...',\n   *   startLabel: '«',\n   *   previousLabel: '‹',\n   *   nextLabel: '›',\n   *   endLabel: '»'\n   * }\n   * ```\n   */\n  protected get config(): PaginationOptions {\n    return Object.assign(\n      FALLBACK_PAGINATION_OPTIONS,\n      this.paginationConfig.pagination\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PaginationModel } from '@spartacus/core';\nimport { PaginationBuilder } from './pagination.builder';\nimport { PaginationItem, PaginationItemType } from './pagination.model';\n\n/**\n * The `PaginationComponent` is a generic component that is used for\n * all lists in Spartacus that require pagination. The component supports\n * all common features, which can be configured or hidden by CSS.\n */\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\n  @Input() pageRoute: string;\n\n  /** The (optional) query parameter which is added to the page route.  */\n  @Input() queryParam: string;\n\n  /**\n   * Whenever there's a default page specified, the routing logic\n   * will omit the page number in routeLink or parameters.\n   */\n  @Input() defaultPage;\n\n  private _pagination: PaginationModel;\n  get pagination(): PaginationModel {\n    return this._pagination;\n  }\n  @Input() set pagination(value: PaginationModel) {\n    this._pagination = value;\n    this.render(value);\n  }\n\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  pages: PaginationItem[] = [];\n\n  constructor(\n    private paginationBuilder: PaginationBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  protected render(pagination: PaginationModel): void {\n    if (!pagination) {\n      return;\n    }\n    this.pages = this.paginationBuilder.paginate(\n      pagination.totalPages,\n      pagination.currentPage\n    );\n  }\n\n  /**\n   * Indicates whether the given item is the current item.\n   *\n   * @param item PaginationItem\n   * @returns boolean\n   */\n  isCurrent(item: PaginationItem): boolean {\n    return (\n      item.type === PaginationItemType.PAGE &&\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  /**\n   * Indicates whether the pagination item is inactive. This is used\n   * to disabled a link or set the tabindex to `-1`.\n   *\n   * Defaults to true\n   *\n   * @param item PaginationItem\n   * @returns returns -1 in case of a disabled\n   */\n  isInactive(item: PaginationItem): boolean {\n    return (\n      !item.hasOwnProperty('number') ||\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  getQueryParams(item: PaginationItem): Params {\n    const queryParams = Object.assign(\n      {},\n      this.activatedRoute.snapshot.queryParams\n    );\n    if (\n      this.queryParam &&\n      item.number < this.pagination.totalPages &&\n      !this.isCurrent(item)\n    ) {\n      queryParams[this.queryParam] = item.number;\n    }\n    // omit the page number from the query parameters in case it's the default\n    // to clean up the experience and avoid unnecessary polluting of the URL\n    if (queryParams[this.queryParam] === this.defaultPage) {\n      delete queryParams[this.queryParam];\n    }\n    return queryParams;\n  }\n\n  pageChange(page: PaginationItem): void {\n    this.viewPageEvent.emit(page.number);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultPaginationConfig } from './config/index';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class PaginationModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { PaginationComponent, PaginationModule } from './pagination/index';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IconModule,\n    PaginationModule,\n  ],\n  declarations: [SortingComponent],\n  exports: [SortingComponent, PaginationComponent],\n})\nexport class ListNavigationModule {}\n","import { MediaFormatSize } from './media.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n/**\n * Provides configuration specific to Media, such as images. This is used to optimize\n * rendering of the media, SEO and performance.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class MediaConfig {\n  /**\n   * Media _format_ configuration holds the size of the media's assigned to\n   * a format.\n   */\n  mediaFormats?: {\n    /**\n     * Represents the media format code, that is the key to distinguish different\n     * media in a container.\n     */\n    [format: string]: MediaFormatSize;\n  };\n}\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalOptions } from './modal-options';\nimport { ModalRef } from './modal-ref';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n    this.handleModalRemoveEvents(activeModal);\n\n    return activeModal;\n  }\n\n  protected handleModalRemoveEvents(modal: ModalRef): void {\n    modal.result.finally(() => {\n      this.modals = this.modals.filter((m) => m !== modal);\n    });\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Address,\n  CostCenter,\n  DeliveryMode,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Card } from '../card/card.component';\n\n@Component({\n  selector: 'cx-order-overview',\n  templateUrl: './order-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderOverviewComponent {\n  order: any;\n\n  @Input('order')\n  set setOrder(order: any) {\n    this.order = order;\n  }\n\n  constructor(protected translation: TranslationService) {}\n\n  getReplenishmentCodeCardContent(orderCode: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.replenishmentNumber')\n      .pipe(\n        filter(() => Boolean(orderCode)),\n        map((textTitle) => ({\n          title: textTitle,\n          text: [orderCode],\n        }))\n      );\n  }\n\n  getReplenishmentActiveCardContent(active: boolean): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutOrderConfirmation.status'),\n      this.translation.translate('checkoutOrderConfirmation.active'),\n      this.translation.translate('checkoutOrderConfirmation.cancelled'),\n    ]).pipe(\n      map(([textTitle, textActive, textCancelled]) => ({\n        title: textTitle,\n        text: [active ? textActive : textCancelled],\n      }))\n    );\n  }\n\n  getReplenishmentStartOnCardContent(isoDate: string): Observable<Card> {\n    return this.translation.translate('checkoutReview.startOn').pipe(\n      filter(() => Boolean(isoDate)),\n      map((textTitle) => {\n        const date = this.getDate(new Date(isoDate));\n\n        return {\n          title: textTitle,\n          text: [date],\n        };\n      })\n    );\n  }\n\n  getReplenishmentFrequencyCardContent(frequency: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.frequency')\n      .pipe(\n        filter(() => Boolean(frequency)),\n        map((textTitle) => ({\n          title: textTitle,\n          text: [frequency],\n        }))\n      );\n  }\n\n  getReplenishmentNextDateCardContent(isoDate: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.nextOrderDate')\n      .pipe(\n        filter(() => Boolean(isoDate)),\n        map((textTitle) => {\n          const date = this.getDate(new Date(isoDate));\n\n          return {\n            title: textTitle,\n            text: [date],\n          };\n        })\n      );\n  }\n\n  getOrderCodeCardContent(orderCode: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.orderNumber')\n      .pipe(\n        filter(() => Boolean(orderCode)),\n        map((textTitle) => ({\n          title: textTitle,\n          text: [orderCode],\n        }))\n      );\n  }\n\n  getOrderCurrentDateCardContent(isoDate?: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.placedOn')\n      .pipe(\n        map((textTitle) => {\n          let date: string;\n\n          if (Boolean(isoDate)) {\n            date = this.getDate(new Date(isoDate));\n          } else {\n            date = this.getDate(new Date());\n          }\n\n          return {\n            title: textTitle,\n            text: [date],\n          };\n        })\n      );\n  }\n\n  getOrderStatusCardContent(status: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutOrderConfirmation.status'),\n      this.translation.translate('orderDetails.statusDisplay', {\n        context: status,\n      }),\n    ]).pipe(\n      map(([textTitle, textStatus]) => ({\n        title: textTitle,\n        text: [textStatus],\n      }))\n    );\n  }\n\n  getPurchaseOrderNumber(poNumber: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutReview.poNumber'),\n      this.translation.translate('checkoutPO.noPoNumber'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => ({\n        title: textTitle,\n        text: [poNumber ? poNumber : noneTextTitle],\n      }))\n    );\n  }\n\n  getMethodOfPaymentCardContent(\n    hasPaymentInfo: PaymentDetails\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutProgress.methodOfPayment'),\n      this.translation.translate('paymentTypes.paymentType_ACCOUNT'),\n      this.translation.translate('paymentTypes.paymentType_CARD'),\n    ]).pipe(\n      map(([textTitle, textAccount, textCard]) => ({\n        title: textTitle,\n        text: [Boolean(hasPaymentInfo) ? textCard : textAccount],\n      }))\n    );\n  }\n\n  getCostCenterCardContent(costCenter: CostCenter): Observable<Card> {\n    return this.translation.translate('checkoutPO.costCenter').pipe(\n      filter(() => Boolean(costCenter)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: costCenter?.name,\n        text: ['(' + costCenter?.unit?.name + ')'],\n      }))\n    );\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      filter(() => Boolean(deliveryAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [deliveryAddress.formattedAddress, deliveryAddress.country.name],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      filter(() => Boolean(deliveryMode)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [\n          deliveryMode.description,\n          deliveryMode.deliveryCost?.formattedValue\n            ? deliveryMode.deliveryCost?.formattedValue\n            : '',\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: Boolean(payment) ? payment.expiryMonth : '',\n        year: Boolean(payment) ? payment.expiryYear : '',\n      }),\n    ]).pipe(\n      filter(() => Boolean(payment)),\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('paymentForm.billingAddress').pipe(\n      filter(() => Boolean(billingAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [billingAddress.formattedAddress, billingAddress.country.name],\n      }))\n    );\n  }\n\n  private getDate(givenDate: Date): string {\n    const date = givenDate.toDateString().split(' ');\n\n    const month = date[1];\n    const day = date[2];\n    const year = date[3];\n\n    return month + ' ' + day + ' ' + year;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../card/card.module';\nimport { OrderOverviewComponent } from './order-overview.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, CardModule],\n  declarations: [OrderOverviewComponent],\n  exports: [OrderOverviewComponent],\n})\nexport class OrderOverviewModule {}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n\n@Component({\n  selector: 'cx-replenishment-order-cancellation-dialog',\n  templateUrl: './replenishment-order-cancellation-dialog.component.html',\n})\nexport class ReplenishmentOrderCancellationDialogComponent\n  implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  replenishmentOrderCode: string;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'button',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    // Close on click outside the dialog window\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected userReplenishmentOrderService: UserReplenishmentOrderService,\n    protected globalMessageService: GlobalMessageService,\n    protected launchDialogService: LaunchDialogService,\n    protected el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      combineLatest([\n        this.userReplenishmentOrderService\n          .getReplenishmentOrderDetails()\n          .pipe(startWith(null)),\n        this.launchDialogService.data$,\n      ]).subscribe(([replenishmentOrder, code]) => {\n        this.replenishmentOrderCode =\n          code || replenishmentOrder.replenishmentOrderCode;\n      })\n    );\n\n    this.subscription.add(\n      this.userReplenishmentOrderService\n        .getCancelReplenishmentOrderSuccess()\n        .subscribe((value) => this.onSuccess(value))\n    );\n  }\n\n  onSuccess(value: boolean): void {\n    if (value) {\n      this.launchDialogService.closeDialog(\n        'Successffully cancelled replenishment'\n      );\n\n      this.globalMessageService.add(\n        {\n          key: 'orderDetails.cancelReplenishment.cancelSuccess',\n          params: {\n            replenishmentOrderCode: this.replenishmentOrderCode,\n          },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n    this.userReplenishmentOrderService.clearCancelReplenishmentOrderProcessState();\n  }\n\n  close(reason: string): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  cancelReplenishment(): void {\n    this.userReplenishmentOrderService.cancelReplenishmentOrder(\n      this.replenishmentOrderCode\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ReplenishmentOrderCancellationDialogComponent } from './replenishment-order-cancellation-dialog.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, KeyboardFocusModule],\n  declarations: [ReplenishmentOrderCancellationDialogComponent],\n  entryComponents: [ReplenishmentOrderCancellationDialogComponent],\n  exports: [ReplenishmentOrderCancellationDialogComponent],\n})\nexport class ReplenishmentOrderCancellationDialogModule {}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Guard that can be used in split-view based child routes. This guard\n * delays the guard to be removed with 300ms, so that any css transition can be\n * finished before the DOM is destroyed.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SplitViewDeactivateGuard implements CanDeactivate<boolean> {\n  canDeactivate(): Observable<boolean> {\n    // TODO: this might cause an issue with e2e\n    return timer(300).pipe(map(() => true));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { SplitViewState } from './split/split-view.model';\n\n/**\n * Supposed to be injected in the split view component, so that the split view state\n * is maintained for a single split view.\n */\n@Injectable()\nexport class SplitViewService {\n  /**\n   * Newly added views are hidden by default, unless it is the first view of the split view.\n   * The default hide mode can be overridden.\n   */\n  defaultHideMode = true;\n\n  protected splitViewCount = 1;\n\n  protected _views$: BehaviorSubject<any[]> = new BehaviorSubject([]);\n\n  /**\n   * Adds a view to the list of views. The view is initialized with the `SplitViewState`\n   * state. If no state is provided, the state is created with the hidden property. The hidden\n   * property is provided by the `defaultHideMode`, unless it's the first view (position: 0).\n   */\n  add(position: number, initialState?: SplitViewState) {\n    const state: SplitViewState = {\n      ...{ hidden: position === 0 ? false : this.defaultHideMode },\n      ...initialState,\n    };\n    if (!this.views[position]) {\n      this.views[position] = state;\n      this.updateState(position, state.hidden);\n      this._views$.next(this.views);\n    }\n  }\n\n  /**\n   * The split view is based on a number of views that can be used next to each other.\n   * When the number changes (i.e. if the screen goes from wide to small), the visibility state\n   * of the views should be updated.\n   */\n  updateSplitView(splitViewCount: number) {\n    if (splitViewCount !== this.splitViewCount) {\n      this.splitViewCount = splitViewCount;\n      this.updateState();\n    }\n  }\n\n  /**\n   * Returns an observable with the active view number. The active view number\n   * represents the last visible view.\n   */\n  getActiveView(): Observable<number> {\n    return this._views$.pipe(\n      map((views) => this.getActive(views)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns an observable with the SplitViewState for the given view position.\n   */\n  getViewState(position: number): Observable<SplitViewState> {\n    return this._views$.pipe(\n      map((views) => views[position]),\n      // we must filter here, since outlet driven views will destroyed the view\n      filter((view) => Boolean(view))\n    );\n  }\n\n  /**\n   * Removes a view from the list of views.\n   *\n   * Removing a view is different from hiding a view. Removing a view is typically done\n   * when a component is destroyed.\n   *\n   * When the view is removed, the SplitViewState is updated to reflect that new organization\n   * of views.\n   */\n  remove(position: number) {\n    const activePosition = this.getActive(this.views);\n    this._views$.next(this.views.splice(0, position));\n    if (activePosition >= position) {\n      this.updateState(position);\n    }\n  }\n\n  /**\n   * Returns the next view position. This is useful for views that do not want to be bothered\n   * with controlling view numbers.\n   */\n  get nextPosition(): number {\n    return this.views.length || 0;\n  }\n\n  /**\n   * Toggles the visibility of the views based on the given view position. If the view\n   * is already visible, we close the view and active the former view. Unless the hide flag\n   * is used, to force the view.\n   *\n   * The view state of other views in the split view are updated as well.\n   *\n   * @param position The zero-based position number of the view.\n   * @param forceHide The (optional) hide state for the view position.\n   */\n  toggle(position: number, forceHide?: boolean) {\n    // add the view if it hasn't been added before.\n    if (!this.views[position]) {\n      this.add(position, { hidden: forceHide ?? false });\n    }\n\n    // If the position is already visible, we move to a previous position. Only if the hide\n    // state is forced, we keep the current position.\n    if (\n      this.views[position] &&\n      forceHide === undefined &&\n      !this.views[position].hidden\n    ) {\n      position--;\n    }\n\n    this.updateState(position, forceHide === true);\n  }\n\n  /**\n   * Updates the hidden state of all the views.\n   */\n  protected updateState(position?: number, hide?: boolean) {\n    const views = [...this.views];\n    if (hide !== undefined && views[position]) {\n      views[position].hidden = hide;\n    }\n    let lastVisible =\n      views.length - [...views].reverse().findIndex((view) => !view.hidden) - 1;\n\n    if (lastVisible === views.length) {\n      if (position) {\n        // When there's only 1 view (mobile), we might not find any active\n        // if the user navigates back.\n        lastVisible = position - 1;\n      } else {\n        lastVisible = views.length - 1;\n      }\n    }\n\n    views.forEach((view, pos) => {\n      if (view && pos !== position) {\n        // hide other views that are outside the split view\n        view.hidden =\n          pos > lastVisible || pos < lastVisible - (this.splitViewCount - 1);\n      }\n    });\n\n    this._views$.next(views);\n  }\n\n  /**\n   * Returns the active view count for the list of views.\n   */\n  protected getActive(views: SplitViewState[]): number {\n    // we reverse the list to find the last visible view\n    const l = [...views]\n      .reverse()\n      .findIndex((view: SplitViewState) => !view.hidden);\n    const last = l === -1 ? 0 : views.length - l - 1;\n    return last;\n  }\n\n  /**\n   * Utility method that resolves all views from the subject.\n   */\n  protected get views(): SplitViewState[] {\n    return this._views$.value;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The split-view component supports an unlimited number of nested views. The component\n * is a host to those view components and doesn't add any restrictions to it's content;\n * content is projected as-is.\n *\n * ```html\n * <cx-split-view>\n *   <cx-view></cx-view>\n *   <cx-view></cx-view>\n *   <any-wrapper>\n *     <cx-view></cx-view>\n *   </any-wrapper>\n * </cx-split-view>\n * ```\n *\n * The split view component is only concerned with tracking the underlying _visible_\n * view components, so that the `lastVisibleView` can be updated accordingly. The actual\n * visibility of views is controlled by CSS. To allow for maximum flexibility, the CSS\n * implementation is using CSS variables. The `lastVisibleView` is bind to the\n * `--cx-active-view` on the host, so that all descendants views will inherit the\n * property conveniently.\n */\n@Component({\n  selector: 'cx-split-view',\n  templateUrl: './split-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [SplitViewService],\n})\nexport class SplitViewComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  /**\n   * Sets the default hide mode for views. This mode is useful in case views are dynamically being created,\n   * for example when they are created by router components.\n   *\n   * The mode defaults to true, unless this is the first view; the first view is never hidden.\n   */\n  @Input()\n  set hideMode(mode: boolean) {\n    this.splitService.defaultHideMode = mode;\n  }\n\n  /**\n   * Indicates the last visible view in the range of views that is visible. This\n   * is bind to a css variable `--cx-active-view` so that the experience\n   * can be fully controlled by css.\n   */\n  @HostBinding('style.--cx-active-view')\n  @HostBinding('attr.active-view')\n  lastVisibleView = 1;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected breakpointService: BreakpointService,\n    protected elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.splitService\n        .getActiveView()\n        .subscribe(\n          (lastVisible: number) => (this.lastVisibleView = lastVisible + 1)\n        )\n    );\n    this.subscription.add(\n      this.breakpointService.breakpoint$.subscribe(() => {\n        this.splitService.updateSplitView(this.splitViewCount);\n      })\n    );\n  }\n\n  /**\n   * Returns the maximum number of views per split-view. The number is based on the\n   * CSS custom property `--cx-max-views`.\n   */\n  protected get splitViewCount(): number {\n    return Number(\n      getComputedStyle(this.elementRef.nativeElement).getPropertyValue(\n        '--cx-max-views'\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { delayWhen } from 'rxjs/operators';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The view component is part of the `SplitViewComponent`. The view\n * contains the navigable content that should be split up. It maintains\n * a view position and allows to show or hide the view.\n *\n * The ViewComponent interacts with the `SplitViewService` for handing over the\n * view state, so that the overarching `SplitViewComponent` can manage the\n * overall experience.\n */\n@Component({\n  selector: 'cx-view',\n  templateUrl: './view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewComponent implements OnInit, OnDestroy {\n  protected _hidden;\n\n  @Input()\n  @HostBinding('attr.position')\n  @HostBinding('style.--cx-view-position')\n  position: string;\n\n  /**\n   * The disappeared flag is added to the\n   */\n  @HostBinding('attr.disappeared') disappeared = true;\n\n  /**\n   * The hidden input is used to set the initial visible state of the view.\n   * The hidden state defaults to false.\n   *\n   * The hidden input supports 2-way binding, see `hiddenChange` property.\n   */\n  @Input()\n  set hidden(hidden: boolean) {\n    this._hidden = hidden;\n    this.splitService.toggle(this.viewPosition, hidden);\n  }\n\n  /**\n   * An update of the view visibility is emitted to the hiddenChange output.\n   */\n  @Output()\n  hiddenChange = new EventEmitter();\n\n  protected subscription: Subscription;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected elementRef: ElementRef,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    const hidden = this._hidden ? { hidden: this._hidden } : {};\n    this.splitService.add(this.viewPosition, hidden);\n\n    this.subscription = this.splitService\n      .getViewState(this.viewPosition)\n      // delay the disappeared state, so that the (CSS driven) animation has time to finish\n      .pipe(delayWhen((view) => timer(view.hidden ? this.duration * 1.25 : 0)))\n      .subscribe((view) => {\n        this.hiddenChange.emit(view.hidden);\n        this._hidden = view.hidden;\n\n        this.disappeared = view.hidden;\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Toggles the visibility of the view.\n   *\n   * An optional force flag can be used to explicitly show or hide view component.\n   */\n  toggle(force?: boolean) {\n    this.splitService.toggle(this.viewPosition, force);\n  }\n\n  /**\n   * Returns the position for the view.\n   *\n   * The position is either taken from the input `position` or generated by the `SplitService`.\n   */\n  protected get viewPosition(): number {\n    if (!(Number(this.position) >= 0)) {\n      this.position = this.splitService.nextPosition.toString();\n    }\n    return Number(this.position);\n  }\n\n  /**\n   * Returns the duration in milliseconds. The duration is based on the CSS custom property\n   * `--cx-transition-duration`. Defaults to 300 milliseconds.\n   */\n  protected get duration(): number {\n    const duration: string = getComputedStyle(this.elementRef.nativeElement)\n      .getPropertyValue('--cx-transition-duration')\n      .trim();\n\n    if (duration.indexOf('ms') > -1) {\n      return Number(duration.split('ms')[0]);\n    } else if (duration.indexOf('s') > -1) {\n      return Number(duration.split('s')[0]) * 1000;\n    } else {\n      return 300;\n    }\n  }\n\n  /**\n   * The view is removed from the `SplitService` so that the view no longer\n   * plays a role in the overall split view.\n   */\n  ngOnDestroy() {\n    this.splitService.remove(this.viewPosition);\n    this.subscription?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SplitViewComponent } from './split/split-view.component';\nimport { ViewComponent } from './view/view.component';\n\n/**\n * The split-view component supports an unlimited number of nested views. Nested views are rendered\n * next to each other. The views can be rendered next to each other, but the max number of visible\n * views can be limisted as well. This is configurable in the CSS layer, so that the max number of views\n * per split-view can be different for each component.\n *\n * The basic structure of the split-view component is shown below:\n *\n *\n * ```\n * <cx-split-view>\n * </cx-split-view>\n * ```\n *\n * The UX pattern used for the split-view is driven by an initial view, which gets splitted into\n * more views as soon as the user starts interacting with the initial and subsequantial views.\n * The views can be driven by routes, which means that you can navigate through the splitted views\n * by using the browser history as well as share or bookmark splitted views.\n *\n * The UI is implemented in the style layer, with only a few generic style rules. Most of the split\n * view style is driven by CSS properties, so that alternative split-view styles can be introduced\n * per page or component.\n *\n * The max number of views per split-view on mobile is limited to 1 by default, where as on tablet\n * (and higher) it is set to 2. Spartacus has a pretty narrow layout, which is why 2 is maximum,\n * but customers could alter the layout to bring in more views in the same split-view at the time.\n *\n */\n\n@NgModule({\n  declarations: [SplitViewComponent, ViewComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [SplitViewComponent, ViewComponent],\n})\nexport class SplitViewModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n/**\n * Configuration options for the Qualtrics integration, which allows you to\n * specify the qualtrics project and deployment script.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class QualtricsConfig {\n  /**\n   * Holds the qualtrics integration options.\n   */\n  qualtrics?: {\n    /**\n     * Deployment script, loaded from a resource, to integrate the deployment of the qualtrics project.\n     * You would typically store the file in the local assets folder.\n     *\n     * Defaults to `assets/qualtricsIntegration.js`\n     */\n    scriptSource?: string;\n  };\n}\n","import {\n  Injectable,\n  isDevMode,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { fromEvent, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\n\nexport const QUALTRICS_EVENT_NAME = 'qsi_js_loaded';\n\n/**\n * Service to integration Qualtrics.\n *\n * The integration observes the Qualtrics API, and when available, it runs the QSI API\n * to let Qualtrics evaluate the application.\n *\n * The service supports an additional _hook_ (`isDataLoaded()`) that can be used to load application\n * data before pulling the QSI API. This is beneficial in a single page application when additional\n * data is required before the Qualtrics _creatives_ run.\n *\n * This service also supports the creation of the Qualtrics deployment script. This is optional, as\n * the script can be added in alternatives ways.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class QualtricsLoaderService {\n  /**\n   * Reference to the QSI API.\n   */\n  protected qsiApi: any;\n\n  /**\n   * QSI load event that happens when the QSI JS file is loaded.\n   */\n  private qsiLoaded$: Observable<any> = this.winRef?.nativeWindow\n    ? fromEvent(this.winRef.nativeWindow, QUALTRICS_EVENT_NAME)\n    : of();\n\n  /**\n   * Emits the Qualtrics Site Intercept (QSI) JavaScript API whenever available.\n   *\n   * The API is emitted when the JavaScript resource holding this API is fully loaded.\n   * The API is also stored locally in the service, in case it's required later on.\n   */\n  protected qsi$: Observable<any> = this.qsiLoaded$.pipe(\n    switchMap(() => this.isDataLoaded()),\n    map(() => this.winRef?.nativeWindow['QSI']),\n    filter((api) => Boolean(api)),\n    tap((qsi) => (this.qsiApi = qsi))\n  );\n\n  constructor(\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2\n  ) {\n    this.initialize();\n  }\n\n  /**\n   * Starts observing the Qualtrics integration. The integration is based on a\n   * Qualtrics specific event (`qsi_js_loaded`). As soon as this events happens,\n   * we run the API.\n   */\n  protected initialize() {\n    this.qsi$.subscribe(() => this.run());\n  }\n\n  /**\n   * Evaluates the Qualtrics project code for the application.\n   *\n   * In order to reload the evaluation in Qualtrics, the API requires to unload the API before\n   * running it again. We don't do this by default, but offer a flag to conditionally unload the API.\n   */\n  protected run(reload = false): void {\n    if (!this.qsiApi?.API) {\n      if (isDevMode()) {\n        console.log('The QSI api is not available');\n      }\n      return;\n    }\n\n    if (reload) {\n      // Removes any currently displaying creatives\n      this.qsiApi.API.unload();\n    }\n\n    // Starts the intercept code evaluation right after loading the Site Intercept\n    // code for any defined intercepts or creatives\n    this.qsiApi.API.load().done(this.qsiApi.API.run());\n  }\n\n  /**\n   * Adds the deployment script to the DOM.\n   *\n   * The script will not be added twice if it was loaded before. In that case, we use\n   * the Qualtrics API directly to _unload_ and _run_ the project.\n   */\n  addScript(scriptSource: string): void {\n    if (this.hasScript(scriptSource)) {\n      this.run(true);\n    } else {\n      const script: HTMLScriptElement = this.renderer.createElement('script');\n      script.type = 'text/javascript';\n      script.defer = true;\n      script.src = scriptSource;\n      this.renderer.appendChild(this.winRef.document.body, script);\n    }\n  }\n\n  /**\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data.\n   * You can observe any data in this method.\n   *\n   * Defaults to true.\n   */\n  protected isDataLoaded(): Observable<boolean> {\n    return of(true);\n  }\n\n  /**\n   * Indicates if the script is already added to the DOM.\n   */\n  protected hasScript(source?: string): boolean {\n    return !!this.winRef.document.querySelector(`script[src=\"${source}\"]`);\n  }\n\n  protected get renderer(): Renderer2 {\n    return this.rendererFactory.createRenderer(null, null);\n  }\n}\n","import { Component, isDevMode } from '@angular/core';\nimport { QualtricsConfig } from './config/qualtrics-config';\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\n/**\n * Adds the Qualtrics deployment script whenever the component is loaded. The\n * deployment script is loaded from the global configuration (`qualtrics.scriptSource`).\n */\n@Component({\n  selector: 'cx-qualtrics',\n  template: ``,\n})\nexport class QualtricsComponent {\n  constructor(\n    protected qualtricsLoader: QualtricsLoaderService,\n    protected config: QualtricsConfig\n  ) {\n    if (this.config.qualtrics?.scriptSource) {\n      this.qualtricsLoader.addScript(this.config.qualtrics.scriptSource);\n    } else if (isDevMode()) {\n      console.warn(\n        `We're unable to add the Qualtrics deployment code as there is no script source defined in config.qualtrics.scriptSource.`\n      );\n    }\n  }\n}\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\nimport { QualtricsComponent } from './qualtrics.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [QualtricsComponent],\n  entryComponents: [QualtricsComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        QualtricsComponent: {\n          component: QualtricsComponent,\n        },\n      },\n    }),\n    provideDefaultConfig(defaultQualtricsConfig),\n  ],\n})\nexport class QualtricsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap((items) =>\n        this.getContext(context).pipe(\n          switchMap((ctx) => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map((ctx) => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe((service) => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map((ctx: string) => (ctx ? this.getInjectedService(ctx) : undefined)),\n      filter((s) => !!s)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map((data) => data?.context),\n        map((ctx) => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ContextServiceMap,\n  provideDefaultConfig,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextComponentService,\n  ],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent implements OnInit {\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interation is not provided.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = false;\n\n  /**\n   * The rating will be used to render some colorful stars in the UI.\n   */\n  @Input() rating: number;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  // tslint:disable-next-line:no-output-native\n  @Output() change = new EventEmitter<number>();\n\n  private initialRate = 0;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.setRate(this.rating, true);\n  }\n\n  setRate(value: number, force?: boolean): void {\n    if (!this.disabled || force) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'style',\n        `--star-fill:${value || this.initialRate};`\n      );\n    }\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n\n  setRateOnEvent(event: any, rating: number) {\n    if (event.code === 'Space') {\n      event.preventDefault();\n      this.setRate(rating);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport { TableHeaderOutletContext } from '../table.model';\n\n@Component({\n  template: `{{ value }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableDataCellComponent {\n  @HostBinding('class.content-wrapper') cls = true;\n\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  get value(): string {\n    return this.model[this.field];\n  }\n\n  protected get model(): any {\n    return this.outlet?.context;\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport {\n  TableFieldOptions,\n  TableHeader,\n  TableHeaderOutletContext,\n} from '../table.model';\n\n@Component({\n  template: `{{ header || (localizedHeader | cxTranslate) }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableHeaderCellComponent {\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  /**\n   * Returns the static label for the given field, if available.\n   */\n  get header(): string {\n    if (typeof this.fieldOptions?.label === 'string') {\n      return <string>this.fieldOptions.label;\n    }\n  }\n\n  /**\n   * Returns the localized label for the given field.\n   *\n   * The localized label is either driven by the configured `label.i18nKey`\n   * or concatenated by the table `type` and field `key`:\n   *\n   * `[tableType].[fieldKey]`\n   *\n   * The localized header can be translated with the `cxTranslate` pipe or `TranslationService`.\n   */\n  get localizedHeader(): string {\n    return (\n      (this.fieldOptions?.label as TableHeader)?.i18nKey ||\n      `${this.i18nRoot}.${this.field}`\n    );\n  }\n\n  protected get fieldOptions(): TableFieldOptions {\n    return this.outlet?.context._options?.cells?.[this.field];\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n\n  protected get type(): string {\n    return this.outlet?.context?._type;\n  }\n\n  protected get i18nRoot(): string {\n    return this.outlet?.context?._i18nRoot;\n  }\n}\n","import { TableDataCellComponent } from '../table-data-cell/table-data-cell.component';\nimport { TableHeaderCellComponent } from '../table-header-cell/table-header-cell.component';\nimport { TableConfig } from './table.config';\n\nexport const defaultTableConfig: TableConfig = {\n  tableOptions: {\n    headerComponent: TableHeaderCellComponent,\n    dataComponent: TableDataCellComponent,\n  },\n};\n","import { Injectable, Type } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { BREAKPOINT } from '../../../../layout/config/layout-config';\nimport { TableStructureConfiguration } from '../table.model';\n\n/**\n * The `TableConfig` provides a table configurations for specific table types. You can define\n * an all-screen table structure as well as a breakpoint specific table structure. The various\n * table structures are merged from small to large screen configurations, depending on the users\n * screen size.\n *\n * The `table.type` is used as a key to distinguish the various table configurations in the application.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class TableConfig {\n  table?: {\n    [tableType: string]: ResponsiveTableConfiguration;\n  };\n  tableOptions?: {\n    /**\n     * Global component to render table header _content_ (`<th>...</th>`). A specific component\n     * can be configured alternatively per table or table field.\n     */\n    headerComponent?: Type<any>;\n\n    /**\n     * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n     * field can be configured alternatively.\n     *\n     * If no component is available, the table content will render as-is.\n     */\n    dataComponent?: Type<any>;\n  };\n}\n\n/**\n * Helper configuration to introduce breakpoint specific table configuration.\n */\nexport interface ResponsiveTableConfiguration\n  extends TableStructureConfiguration {\n  /** The table configurations for all screens */\n  [BREAKPOINT.xl]?: TableStructureConfiguration;\n  /** The table configurations for large screens and smaller */\n  [BREAKPOINT.lg]?: TableStructureConfiguration;\n  /** The table configurations for medium screens and smaller */\n  [BREAKPOINT.md]?: TableStructureConfiguration;\n  /** The table configurations for small screens and smaller */\n  [BREAKPOINT.sm]?: TableStructureConfiguration;\n  /** The table configurations for extra small screens */\n  [BREAKPOINT.xs]?: TableStructureConfiguration;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TableDataCellComponent } from './table-data-cell.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableDataCellComponent],\n})\nexport class TableDataCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { TableHeaderCellComponent } from './table-header-cell.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [TableHeaderCellComponent],\n})\nexport class TableHeaderCellModule {}\n","import { ComponentFactoryResolver, Injectable, Type } from '@angular/core';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { TableConfig } from './config/table.config';\nimport {\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableOptions,\n  TableStructure,\n} from './table.model';\n\n/**\n * The table renderer service adds a component for each table cells (th and td)\n * based on a fine grained configuration. Each table type can configure both global\n * components for headers and cells as well as individual components for field\n * specific cells.\n *\n * The components are added to the outlet slots for the corresponding cells. The table\n * structure and data is added to the outlet context.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableRendererService {\n  // keep a list of outletRefs to avoid recreation\n  protected outletRefs = new Map();\n\n  constructor(\n    protected outletService: OutletService,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Adds the configured table component for the header and data.\n   */\n  add(structure: TableStructure): void {\n    structure?.cells?.forEach((field) => {\n      const thRenderer = this.getHeaderRenderer(structure, field);\n      if (thRenderer) {\n        const ref = this.getHeaderOutletRef(structure.type, field);\n        this.render(ref, thRenderer);\n      }\n      const tdRenderer = this.getDataRenderer(structure, field);\n      if (tdRenderer) {\n        const ref = this.getDataOutletRef(structure.type, field);\n        this.render(ref, tdRenderer);\n      }\n    });\n  }\n\n  protected render(outletRef: string, renderer: Type<any>) {\n    if (this.outletRefs.has(outletRef)) {\n      return;\n    }\n    this.outletRefs.set(outletRef, true);\n    const template = this.componentFactoryResolver.resolveComponentFactory(\n      renderer\n    );\n    this.outletService.add(outletRef, <any>template);\n  }\n\n  /**\n   * Returns the header render component for the given field.\n   */\n  protected getHeaderRenderer(\n    structure: TableStructure,\n    field: string\n  ): Type<any> {\n    return (\n      structure.options?.cells?.[field]?.headerComponent ||\n      structure.options?.headerComponent ||\n      this.config.tableOptions?.headerComponent\n    );\n  }\n\n  /**\n   * Returns the data render component for the given field.\n   */\n  protected getDataRenderer(\n    structure: TableStructure,\n    field: string\n  ): Type<any> {\n    return (\n      structure.options?.cells?.[field]?.dataComponent ||\n      structure.options?.dataComponent ||\n      this.config.tableOptions?.dataComponent\n    );\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   *\n   * The outlet reference is generated as:\n   * `table.[tableType].header.[field]`\n   */\n  getHeaderOutletRef(type: string, field: string): string {\n    return `table.${type}.header.${field}`;\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(\n    type: string,\n    options: TableOptions,\n    i18nRoot: string,\n    field: string\n  ): TableHeaderOutletContext {\n    return {\n      _type: type,\n      _options: options,\n      _field: field,\n      _i18nRoot: i18nRoot,\n    };\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   *\n   * The field is generated as:\n   * `table.[tableType].data.[tableField]`\n   */\n  getDataOutletRef(type: string, field: string): string {\n    return `table.${type}.data.${field}`;\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(\n    type: string,\n    options: TableOptions,\n    i18nRoot: string,\n    field: string,\n    data: any\n  ): TableDataOutletContext {\n    return {\n      ...data,\n      _type: type,\n      _options: options,\n      _field: field,\n      _i18nRoot: i18nRoot,\n    };\n  }\n}\n","import { Type } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n/**\n * Contains the table data and structure for the `TableComponent`.\n */\nexport interface Table<T = any> {\n  /**\n   * The table structure provides details about the headers of the table.\n   */\n  structure: TableStructure;\n\n  /**\n   * The data that is listed in the table component.\n   */\n  data: T[];\n\n  /**\n   * The pagination component is used to paginate through the data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The sort options for the table.\n   */\n  sorts?: any[];\n}\n\nexport interface TableStructureConfiguration {\n  /**\n   * Provide the bare structure of the table.\n   */\n  cells?: string[];\n\n  /**\n   * Global table structure options.\n   */\n  options?: TableOptions;\n}\n\nexport interface TableOptions {\n  /**\n   * Default pagination for the table that is used for the initial load of the table data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The layout for the table component can be used for horizontal, vertical and vertical stacked\n   * table layouts.\n   */\n  layout?: TableLayout;\n\n  /**\n   * Global component to render table header _content_ (`<th>...</th>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table component will render a static label or use the\n   * configured i18n label.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table content will render as-is.\n   */\n  dataComponent?: Type<any>;\n\n  // field specific options\n  cells?: {\n    [fieldKey: string]: TableFieldOptions;\n  };\n}\n\n/**\n * Layout orientation for the table configuration.\n */\nexport enum TableLayout {\n  /**\n   * Renders the table vertically, with a heading on top of the table.\n   *\n   * Vertical layout is most common and the default layout.\n   */\n  VERTICAL = 1,\n\n  /**\n   * Stacks items in a tables by generating a `tbody` for each item.\n   */\n  VERTICAL_STACKED,\n\n  /**\n   * Horizontal oriented table layout renders the table headers in the first column of the table.\n   */\n  HORIZONTAL,\n}\n\nexport interface TableFieldOptions {\n  /**\n   * Optional label to add static or localized headers. If the label is not present, the\n   * field key is mapped to a i18n property.\n   */\n  label?: string | TableHeader;\n\n  /**\n   * Indicates wether the cell is linkable.\n   *\n   * If the cells is linkable, an anchor link can be generated in the table data element.\n   */\n  linkable?: boolean;\n\n  /**\n   * Component to render table header _content_ (`<th>...</th>`) for the table field.\n   *\n   * If no component is configured, the global table component for the header will be used\n   * instead.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Component to render table data _content_ (`<td>...</td>`) for the table field.\n   *\n   * If no component is configured, the global table component for the cell data will be used\n   * instead.\n   */\n  dataComponent?: Type<any>;\n}\n\n/**\n * The TableStructure holds the header structure of the table.\n */\nexport interface TableStructure extends TableStructureConfiguration {\n  /**\n   * The table type is a mandatory property. The type is used to identify the table\n   * configuration and is used to generate a unique outlet reference.\n   */\n  type: string;\n}\n\n/**\n * Provides the core table structure, typically being used to render table columns.\n */\nexport interface TableHeader {\n  /**\n   * The header key is used to:\n   * - generate a unique class on each table row\n   * - generate a template for each table header cell and data cell\n   * - translate the key using the translate module\n   *   (fallback in case there is no label available)\n   */\n  i18nKey?: string;\n\n  // deprecated\n  sortCode?: string;\n}\n\nexport interface TableHeaderOutletContext {\n  _type: string;\n  _field: string;\n  _options?: TableOptions;\n  /**\n   * The i18nRoot is used to build localized table headers. The i18nRoot\n   * is used as a prefix for the `_field`. Table header labels wil use the\n   * following locales:\n   *\n   * `[i18nRoot].[_field]`\n   */\n  _i18nRoot?: string;\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface TableDataOutletContext extends TableHeaderOutletContext {\n  [property: string]: any;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  isDevMode,\n  Output,\n} from '@angular/core';\nimport { TableRendererService } from './table-renderer.service';\nimport {\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableLayout,\n  TableStructure,\n} from './table.model';\n\n/**\n * The table component provides a generic table DOM structure, with 3 layout types:\n * horizontal, vertical and _stacked vertical_ layout. The layout is driven by the\n * table structure.\n *\n * The implementation is fairly \"dumb\" and only renders string based content for TH\n * and TD elements. The actual cell rendering is delegated to a (configurable) cell\n * component. Additionally, each cell is registered as an outlet, so that customizations\n * can be done by both outlet templates and components.\n *\n * The outlet references are concatenated from the table `type` and header `key`. The\n * following snippet shows an outlet generated for a table header, for the table type\n * \"cost-center\" with a header key \"name\":\n *\n * ```\n * <th>\n *   <template cxOutlet=\"table.cost-center.header.name\">\n *   </template>\n * </th>\n * ```\n *\n * Similarly, the data cells (`<td>`) are generated with the outlet template reference\n * `table.cost-center.data.name`.\n */\n@Component({\n  selector: 'cx-table',\n  templateUrl: './table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent<T> {\n  @HostBinding('attr.__cx-table-type') tableType: string;\n  @HostBinding('class.horizontal') horizontalLayout: boolean;\n  @HostBinding('class.vertical') verticalLayout: boolean;\n  @HostBinding('class.vertical-stacked') verticalStackedLayout: boolean;\n\n  private _structure: TableStructure;\n  @Input() set structure(structure: TableStructure) {\n    this._structure = structure;\n    this.init();\n  }\n  get structure(): TableStructure {\n    return this._structure;\n  }\n\n  @Input() data: T[];\n\n  /**\n   * The i18nRoot is passed into the table cell context, so that\n   * cell components can concatenate the i18n root and label.\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * Provides a mechanism to compare a matching value for each item.\n   *\n   * The `property` refers to the dataset.value property, and the value tot the\n   * matching property value.\n   */\n  @Input() currentItem: { value: any; property: string };\n\n  @Output() launch = new EventEmitter();\n\n  constructor(protected rendererService: TableRendererService) {}\n\n  init() {\n    this.verticalLayout = !this.layout || this.layout === TableLayout.VERTICAL;\n    this.verticalStackedLayout = this.layout === TableLayout.VERTICAL_STACKED;\n    this.horizontalLayout = this.layout === TableLayout.HORIZONTAL;\n\n    this.rendererService.add(this.structure);\n\n    this.addTableDebugInfo();\n  }\n\n  launchItem(item: any): void {\n    this.launch.emit(item);\n  }\n\n  /**\n   * Indicates whether the given item is the current item.\n   *\n   * The current item is driven by the `currentItem`, that holds a\n   * property and value to compare.\n   */\n  isCurrentItem(item: any): boolean {\n    if (!this.currentItem || !this.currentItem.value) {\n      return false;\n    }\n    return this.currentItem?.value === item?.[this.currentItem?.property];\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   */\n  getHeaderOutletRef(field: string): string {\n    return this.rendererService.getHeaderOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(field: string): TableHeaderOutletContext {\n    return this.rendererService.getHeaderOutletContext(\n      this.type,\n      this.options,\n      this.i18nRoot,\n      field\n    );\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   */\n  getDataOutletRef(field: string): string {\n    return this.rendererService.getDataOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(field: string, data: any): TableDataOutletContext {\n    return this.rendererService.getDataOutletContext(\n      this.type,\n      this.options,\n      this.i18nRoot,\n      field,\n      data\n    );\n  }\n\n  trackData(_i: number, item: any): any {\n    return JSON.stringify(item);\n  }\n\n  /**\n   * Generates the table type into the UI in devMode, so that developers\n   * can easily get the notion of the table type.\n   */\n  protected addTableDebugInfo() {\n    if (isDevMode() && this.type) {\n      this.tableType = this.type;\n    }\n  }\n\n  /**\n   * Helper method to return the deeply nested orientation configuration.\n   */\n  private get layout() {\n    return this.structure?.options?.layout;\n  }\n\n  /**\n   * Helper method to return the deeply nested type.\n   */\n  private get type() {\n    return this.structure?.type;\n  }\n\n  private get options() {\n    return this.structure?.options;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { defaultTableConfig } from './config/default-table.config';\nimport { TableDataCellModule } from './table-data-cell/table-data-cell.module';\nimport { TableHeaderCellModule } from './table-header-cell/table-header-cell.module';\nimport { TableComponent } from './table.component';\n\n/**\n * The TableModule provides a table component that is driven by (responsible) configuration.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    OutletModule,\n    TableHeaderCellModule,\n    TableDataCellModule,\n  ],\n  declarations: [TableComponent],\n  exports: [TableComponent],\n  providers: [provideConfig(defaultTableConfig)],\n})\nexport class TableModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport {\n  ResponsiveTableConfiguration,\n  TableConfig,\n} from './config/table.config';\nimport { TableStructure, TableStructureConfiguration } from './table.model';\n\n/**\n * Responsive table service.\n *\n * The `TableService` is used to build a `TableStructure` by configuration. The configuration\n * allows for breakpoint specific configuration, so that the table can differentiate for\n * various screen sizes.\n *\n * While there are some global options, the configuration is mainly driven by the table _type_.\n *\n * If there is no table configuration for the given type found, a table header structure\n * is generated based on the actual data (if available) or randomly by generating 5 random headers.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableService {\n  constructor(\n    protected breakpointService: BreakpointService,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Builds the table structure.\n   *\n   * @param tableType The table type is used  to find the specific table configuration.\n   * @param defaultStructure (optional) Default table structure that contains fallback options. More specific options are merged with the default structure.\n   * @param data$ (optional) The actual data can be passed in to generate the table structure based on actual data.\n   */\n  buildStructure(\n    tableType: string,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): Observable<TableStructure> {\n    if (this.hasTableConfig(tableType)) {\n      return this.buildStructureFromConfig(tableType, defaultStructure);\n    } else {\n      return this.buildRandomStructure(tableType);\n    }\n  }\n\n  /**\n   * Returns the table structure by configuration. The configuration can be\n   * breakpoint-driven, which means that an alternative header structure can\n   * be created per screen size.\n   *\n   * The breakpoint is resolved by teh `BreakpointService`.\n   */\n  protected buildStructureFromConfig(\n    type: string,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): Observable<TableStructure> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => ({\n        ...this.getTableConfig(type, breakpoint, defaultStructure),\n        type,\n      }))\n    );\n  }\n\n  /**\n   * Finds all applicable table configuration for the given type and breakpoint.\n   * The default table configuration is merged with all relevant breakpoint\n   * configurations.\n   *\n   * This allows to have some default configurations that apply to all screens, and\n   * add configuration options for some screens.\n   */\n  protected getTableConfig(\n    type: string,\n    breakpoint: BREAKPOINT,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): TableStructureConfiguration {\n    if (!this.config.table?.[type]) {\n      return null;\n    }\n\n    const relevant = this.findRelevantBreakpoints(breakpoint);\n\n    const closestBreakpoint = [...relevant]\n      .reverse()\n      .find((br) => !!this.config.table[type][br]?.cells);\n    const cells =\n      this.config.table[type][closestBreakpoint]?.cells ||\n      this.config.table[type].cells ||\n      defaultStructure?.cells;\n\n    // add all default table configurations\n    let options = {\n      ...defaultStructure?.options,\n      ...this.config.table[type].options,\n    };\n\n    // We merge all table options for smaller breakpoints into the global\n    // options, so we inherit options.\n    relevant.forEach((br) => {\n      options = {\n        ...options,\n        ...defaultStructure?.[br]?.options,\n        ...this.config.table[type]?.[br]?.options,\n      };\n    });\n\n    return { cells, options };\n  }\n\n  /**\n   * Generates the table structure by the help of the first data row.\n   */\n  protected buildStructureFromData(\n    type: string,\n    data$: Observable<any>\n  ): Observable<TableStructure> {\n    this.logWarning(\n      `No table configuration found to render table with type \"${type}\". The table header for \"${type}\" is generated by the help of the first data item`\n    );\n    return data$.pipe(\n      map((data: any[]) => {\n        const cells = Object.keys(data?.[0]).map((key) => key);\n        return { type, cells } as TableStructure;\n      })\n    );\n  }\n\n  /**\n   * As a last resort, the table structure is randomly created. The random structure\n   * contains 5 headers, so that some of the unknown data is visualized.\n   */\n  protected buildRandomStructure(type: string): Observable<TableStructure> {\n    this.logWarning(\n      `No data available for \"${type}\", a random structure is generated (with hidden table headers).`\n    );\n    return of({\n      type,\n      cells: ['unknown', 'unknown', 'unknown', 'unknown', 'unknown'],\n    });\n  }\n\n  /**\n   * Finds all the breakpoints can contribute to the table configuration, from small\n   * to current.\n   *\n   * For example, if the current breakpoint is `MD`, this returns `[XS, SM, MD]`.\n   */\n  protected findRelevantBreakpoints(breakpoint: BREAKPOINT): BREAKPOINT[] {\n    const current = this.breakpointService.breakpoints.indexOf(breakpoint);\n    return this.breakpointService.breakpoints.slice(0, current + 1);\n  }\n\n  /**\n   * Indicates if the there is a configuration for the table available.\n   */\n  protected hasTableConfig(tableType: string): boolean {\n    return !!this.config.table?.[tableType];\n  }\n\n  /**\n   * Logs a message in the console to increase developer experience.\n   *\n   * The message is only logged in dev mode.\n   */\n  private logWarning(message) {\n    if (isDevMode()) {\n      console.warn(message);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ViewConfig {\n  view?: {\n    /**\n     * Configurations related to the view of the application\n     */\n    infiniteScroll?: {\n      active?: boolean;\n      productLimit?: number;\n      showMoreButton?: boolean;\n    };\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({})\nexport class ViewConfigModule {\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\n    return {\n      ngModule: ViewConfigModule,\n      providers: [\n        provideDefaultConfig({\n          view: {},\n        }),\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService\n  ) {\n    this.orderCode$ = this.routingService.getRouterState().pipe(\n      map((routingData) => routingData.state.params.orderCode),\n      distinctUntilChanged()\n    );\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap((orderCode) => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CheckoutService,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PromotionService {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected checkoutService: CheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  getOrderPromotions(\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.getOrderPromotionsFromCart();\n      case PromotionLocation.Checkout:\n        return this.getOrderPromotionsFromCheckout();\n      case PromotionLocation.Order:\n        return this.getOrderPromotionsFromOrder();\n      default:\n        return of([]);\n    }\n  }\n\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\n    return this.activeCartService\n      .getActive()\n      .pipe(map((cart) => this.getOrderPromotionsFromCartHelper(cart)));\n  }\n\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\n    const potentialPromotions = [];\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\n\n    const appliedPromotions = [];\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\n\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\n    return this.checkoutService\n      .getOrderDetails()\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\n    return this.orderDetailsService\n      .getOrderDetails()\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\n    const appliedOrderPromotions = [];\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\n\n    return appliedOrderPromotions;\n  }\n\n  getProductPromotionForEntry(\n    item: OrderEntry,\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.activeCartService\n          .getActive()\n          .pipe(\n            map((cart) =>\n              this.getProductPromotion(\n                item,\n                cart.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Checkout:\n        return this.checkoutService\n          .getOrderDetails()\n          .pipe(\n            map((order) =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Order:\n        return this.orderDetailsService\n          .getOrderDetails()\n          .pipe(\n            map((order) =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n    }\n  }\n\n  private getProductPromotion(\n    item: OrderEntry,\n    promotions: PromotionResult[]\n  ): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    if (promotions && promotions.length > 0) {\n      for (const promotion of promotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumedEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumedEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { AbstractControl, FormGroup, ValidationErrors } from '@angular/forms';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\n\nexport class CustomFormValidators {\n  /**\n   * Checks control's value with predefined email regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email && (!email.length || email.match(EMAIL_PATTERN))\n      ? null\n      : { cxInvalidEmail: true };\n  }\n\n  /**\n   * Checks control's value with predefined password regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n\n    return password && (!password.length || password.match(PASSWORD_PATTERN))\n      ? null\n      : { cxInvalidPassword: true };\n  }\n\n  /**\n   * Checks if control's value is between 1 and 5\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\n   * @memberof CustomFormValidators\n   */\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\n    const rating = control.value as number;\n\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\n  }\n\n  /**\n   * Checks if two password controls match\n   *\n   * NOTE: Use it as a form validator and pass password control names as parameters\n   *\n   * @static\n   * @param {string} password First password control name\n   * @param {string} passwordConfirmation Second password control name\n   * @returns Uses 'cxPasswordsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordsMustMatch(\n    password: string,\n    passwordConfirmation: string\n  ): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        password,\n        passwordConfirmation,\n        'cxPasswordsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if two email controls match\n   *\n   * NOTE: Use it as a form validator and pass email control names as parameters\n   *\n   * @static\n   * @param {string} email First email control name\n   * @param {string} emailConfirmation Second email control name\n   * @returns Uses 'cxEmailsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        email,\n        emailConfirmation,\n        'cxEmailsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if control's value is euqal or greater than 0\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxNegativeAmount' validator error\n   * @memberof CustomFormValidators\n   */\n  static mustBePositive(control: AbstractControl): ValidationErrors | null {\n    const amount = control.value as number;\n\n    return amount >= 0 ? null : { cxNegativeAmount: true };\n  }\n\n  /**\n   * Checks if control's value does not contain any special characters\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxContainsSpecialCharacters' validator error\n   * @memberof CustomFormValidators\n   */\n  static noSpecialCharacters(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const forbiddenChars = ['/'];\n    const str = String(control.value);\n    const containsSpecialChars = forbiddenChars.some((char) =>\n      str.includes(char)\n    );\n\n    return !containsSpecialChars ? null : { cxContainsSpecialCharacters: true };\n  }\n}\n\n/**\n * Generic function for validators, which checks if two passed controls match.\n *\n * @param formGroup\n * @param firstControlName First control to check\n * @param secondControlName Second control to check\n * @param errorName Error which will be returned by validator\n */\nexport function controlsMustMatch(\n  formGroup: FormGroup,\n  firstControlName: string,\n  secondControlName: string,\n  errorName: string\n): void {\n  const firstControl = formGroup.controls[firstControlName];\n  const secondControl = formGroup.controls[secondControlName];\n\n  if (secondControl.errors && !secondControl.errors[errorName]) {\n    return;\n  }\n\n  secondControl.setErrors(\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\n  );\n}\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import {\n  Injectable,\n  InjectFlags,\n  Injector,\n  NgModuleRef,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  CMSComponentConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  ConfigChunk,\n  ConfigInitializerService,\n  deepMerge,\n  DefaultConfigChunk,\n  FeatureModuleConfig,\n  LazyModulesService,\n} from '@spartacus/core';\nimport { defer, forkJoin, merge, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\ninterface FeatureInstance extends FeatureModuleConfig {\n  moduleRef?: NgModuleRef<any>;\n  dependencyModuleRefs?: NgModuleRef<any>[];\n  componentsMappings?: CMSComponentConfig;\n}\n\n/**\n * Service responsible for resolving cms config based feature modules.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureModulesService implements OnDestroy {\n  // feature modules configuration\n  private featureModulesConfig?: {\n    [featureName: string]: FeatureModuleConfig;\n  };\n\n  // maps componentType to feature\n  private componentFeatureMap: Map<string, string> = new Map();\n\n  /*\n   * Contains either FeatureInstance or FeatureInstance resolver for not yet\n   * resolved feature modules\n   */\n  private features: Map<string, Observable<FeatureInstance>> = new Map();\n\n  constructor(\n    protected configInitializer: ConfigInitializerService,\n    protected lazyModules: LazyModulesService\n  ) {\n    this.initFeatureMap();\n  }\n\n  private async initFeatureMap(): Promise<void> {\n    const config: CmsConfig = await this.configInitializer.getStableConfig(\n      'featureModules'\n    );\n\n    this.featureModulesConfig = config.featureModules ?? {};\n\n    for (const [featureName, featureConfig] of Object.entries(\n      this.featureModulesConfig\n    )) {\n      if (featureConfig?.module && featureConfig?.cmsComponents?.length) {\n        for (const component of featureConfig.cmsComponents) {\n          this.componentFeatureMap.set(component, featureName);\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if there is feature module configuration that covers specified\n   * component type\n   */\n  hasFeatureFor(componentType: string): boolean {\n    return this.componentFeatureMap.has(componentType);\n  }\n\n  /**\n   * Return full CmsComponent mapping defined in feature module\n   */\n  getCmsMapping(componentType: string): Observable<CmsComponentMapping> {\n    const feature = this.componentFeatureMap.get(componentType);\n\n    return this.resolveFeature(feature).pipe(\n      map(\n        (featureInstance) => featureInstance.componentsMappings[componentType]\n      )\n    );\n  }\n\n  /**\n   * Get all injectors for feature and its dependencies\n   *\n   * As it's a synchronous method, it works only for already resolved features,\n   * returning undefined otherwise\n   */\n  getInjectors(componentType: string): Injector[] | undefined {\n    const feature = this.componentFeatureMap.get(componentType);\n    let injectors;\n\n    // we are returning injectors only for already resolved features\n    this.features\n      .get(feature)\n      ?.subscribe((featureInstance) => {\n        injectors = [\n          // feature module injector\n          featureInstance.moduleRef.injector,\n          // injectors from dependency modules\n          ...featureInstance.dependencyModuleRefs.map(\n            (moduleRef) => moduleRef.injector\n          ),\n        ];\n      })\n      .unsubscribe();\n    return injectors;\n  }\n\n  /**\n   * Resolve feature based on feature name, if feature was not yet resolved\n   *\n   * It will first resolve all module dependencies if defined\n   */\n  private resolveFeature(featureName: string): Observable<FeatureInstance> {\n    return defer(() => {\n      if (!this.features.has(featureName)) {\n        const featureConfig = this.featureModulesConfig[featureName];\n\n        if (!featureConfig?.module) {\n          throw new Error(\n            'No module defined for Feature Module ' + featureName\n          );\n        }\n\n        // resolve dependencies first (if any)\n        const depsResolve = featureConfig.dependencies?.length\n          ? forkJoin(\n              featureConfig.dependencies.map((depModuleFunc) =>\n                this.lazyModules.resolveDependencyModuleInstance(depModuleFunc)\n              )\n            )\n          : of(undefined);\n\n        this.features.set(\n          featureName,\n          depsResolve.pipe(\n            switchMap((deps) =>\n              this.resolveFeatureModule(featureConfig, deps, featureName)\n            ),\n            shareReplay()\n          )\n        );\n      }\n\n      return this.features.get(featureName);\n    });\n  }\n\n  /**\n   * Initialize feature module by returning feature instance\n   */\n  private resolveFeatureModule(\n    featureConfig: FeatureModuleConfig,\n    dependencyModuleRefs: NgModuleRef<any>[] = [],\n    feature: string\n  ): Observable<FeatureInstance> {\n    return this.lazyModules\n      .resolveModuleInstance(featureConfig?.module, feature)\n      .pipe(\n        map((moduleRef) => {\n          const featureInstance: FeatureInstance = {\n            ...featureConfig,\n            moduleRef,\n            dependencyModuleRefs,\n            componentsMappings: {},\n          };\n\n          // resolve configuration for feature module\n          const resolvedConfiguration = this.resolveFeatureConfiguration(\n            moduleRef.injector\n          );\n\n          // extract cms components configuration from feature config\n          for (const componentType of featureInstance.cmsComponents) {\n            featureInstance.componentsMappings[componentType] =\n              resolvedConfiguration.cmsComponents[componentType];\n          }\n          return featureInstance;\n        })\n      );\n  }\n\n  /**\n   * Returns configuration provided in feature module\n   */\n  private resolveFeatureConfiguration(featureInjector: Injector): CmsConfig {\n    // get config chunks from feature lib\n    const featureConfigChunks = featureInjector.get<any[]>(\n      ConfigChunk,\n      [],\n      InjectFlags.Self\n    );\n    // get default config chunks from feature lib\n    const featureDefaultConfigChunks = featureInjector.get<any[]>(\n      DefaultConfigChunk,\n      [],\n      InjectFlags.Self\n    );\n\n    return deepMerge(\n      {},\n      ...(featureDefaultConfigChunks ?? []),\n      ...(featureConfigChunks ?? [])\n    ) as CmsConfig;\n  }\n\n  ngOnDestroy(): void {\n    // clean up all initialized features\n    merge(...Array.from(this.features.values())).subscribe((featureInstance) =>\n      featureInstance.moduleRef?.destroy()\n    );\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  CmsComponentChildRoutesConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  deepMerge,\n  DeferLoadingStrategy,\n} from '@spartacus/core';\nimport { defer, forkJoin, Observable, of } from 'rxjs';\nimport { mapTo, share, tap } from 'rxjs/operators';\nimport { FeatureModulesService } from './feature-modules.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsComponentsService {\n  private missingComponents: string[] = [];\n  private mappings: { [componentType: string]: CmsComponentMapping } = {};\n\n  // contains\n  private mappingResolvers: Map<\n    string,\n    Observable<CmsComponentMapping>\n  > = new Map();\n\n  /**\n   * @deprecated since 2.1\n   * constructor(config: CmsConfig, platformId: Object);\n   */\n  constructor(\n    protected config: CmsConfig,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected featureModules?: FeatureModulesService\n  ) {}\n\n  /**\n   * Should be called to make sure all component mappings are determined,\n   * especially lazy loaded ones.\n   *\n   * It's recommended way to make sure all other methods of CmsComponentService\n   * will be able to work synchronously for asked component types and avoid risk\n   * of potential errors that could be thrown otherwise.\n   */\n  determineMappings(componentTypes: string[]): Observable<string[]> {\n    return defer(() => {\n      // we use defer, to be sure the logic below used to compose final observable\n      // will be executed at subscription time (with up to date state at the time,\n      // when it will be needed)\n      const featureResolvers = [];\n\n      for (const componentType of componentTypes) {\n        if (!this.mappings[componentType]) {\n          const staticConfig = this.config.cmsComponents[componentType];\n\n          // check if this component type is managed by feature module\n          if (this.featureModules.hasFeatureFor(componentType)) {\n            featureResolvers.push(\n              // we delegate populating this.mappings to feature resolver\n              this.getFeatureMappingResolver(componentType, staticConfig)\n            );\n          } else {\n            // simply use only static config\n            this.mappings[componentType] = staticConfig;\n          }\n        }\n      }\n\n      if (featureResolvers.length) {\n        return forkJoin(featureResolvers).pipe(mapTo(componentTypes));\n      } else {\n        return of(componentTypes);\n      }\n    });\n  }\n\n  private getFeatureMappingResolver(\n    componentType: string,\n    staticConfig?: CmsComponentMapping\n  ): Observable<CmsComponentMapping> {\n    if (!this.mappingResolvers.has(componentType)) {\n      const mappingResolver$ = this.featureModules\n        .getCmsMapping(componentType)\n        .pipe(\n          tap((featureComponentMapping) => {\n            // We treat cms mapping configuration from a feature as a default,\n            // that can be overridden by app/static configuration\n            this.mappings[componentType] = deepMerge(\n              {},\n              featureComponentMapping,\n              staticConfig\n            );\n            this.mappingResolvers.delete(componentType);\n          }),\n          share()\n        );\n      this.mappingResolvers.set(componentType, mappingResolver$);\n    }\n    return this.mappingResolvers.get(componentType);\n  }\n\n  getInjectors(componentType: string): Injector[] {\n    return (\n      (this.featureModules.hasFeatureFor(componentType) &&\n        this.featureModules.getInjectors(componentType)) ??\n      []\n    );\n  }\n\n  /**\n   * Return collection of component mapping configuration for specified list of\n   * component types.\n   *\n   * If component mapping can't be determined synchronously, for example, lazy\n   * loaded one, it will throw an error.\n   *\n   * To make sure component mapping is available, determineMappings()\n   * should be called and completed first.\n   */\n  getMapping(componentType: string): CmsComponentMapping {\n    const componentConfig =\n      this.mappings[componentType] ??\n      this.config.cmsComponents?.[componentType];\n\n    if (!componentConfig) {\n      if (!this.missingComponents.includes(componentType)) {\n        this.missingComponents.push(componentType);\n        console.warn(\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n\n    return componentConfig;\n  }\n\n  /**\n   * Checks, if component should be rendered as some components\n   * could be disabled for server side renderings\n   */\n  shouldRender(componentType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\n  }\n\n  /**\n   * Return DeferLoadingStrategy for component type.\n   */\n  getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\n    return this.config.cmsComponents?.[componentType]?.deferLoading;\n  }\n\n  /**\n   * Get cms driven child routes for components\n   */\n  getChildRoutes(componentTypes: string[]): CmsComponentChildRoutesConfig {\n    const configs = [];\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        configs.push(this.getMapping(componentType)?.childRoutes ?? []);\n      }\n    }\n\n    return this.standardizeChildRoutes(configs);\n  }\n\n  /**\n   * Standardizes the format of `childRoutes` config.\n   *\n   * Some `childRoutes` configs are simple arrays of Routes (without the notion of the parent route).\n   * But some configs can be an object with children routes and their parent defined in separate property.\n   */\n  protected standardizeChildRoutes(\n    childRoutesConfigs: (Route[] | CmsComponentChildRoutesConfig)[]\n  ): CmsComponentChildRoutesConfig {\n    const result: CmsComponentChildRoutesConfig = { children: [] };\n\n    (childRoutesConfigs || []).forEach((config) => {\n      if (Array.isArray(config)) {\n        result.children.push(...config);\n      } else {\n        result.children.push(...(config.children || []));\n        if (config.parent) {\n          result.parent = config.parent;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Get cms driven guards for components\n   */\n  getGuards(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  /**\n   * Get i18n keys associated with components\n   */\n  getI18nKeys(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n}\n","import {\n  AbstractType,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  Type,\n} from '@angular/core';\n\nconst NOT_FOUND_SYMBOL = {};\n\n/**\n * CombinedInjector is able to combine more than one injector together in a way\n * that main injector is supported by complementary injectors.\n *\n * Should be used as a parent injector for components, when we want to have access\n * to both providers from component hierarchical injectors and providers from any\n * number of additional injectors (lazy loaded modules for example).\n */\nexport class CombinedInjector implements Injector {\n  /**\n   * @param mainInjector Component hierarchical injector\n   * @param complementaryInjectors Additional injector that will be taken into an account when resolving dependencies\n   */\n  constructor(\n    private mainInjector: Injector,\n    private complementaryInjectors: Injector[]\n  ) {}\n\n  get<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags\n  ): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token, notFoundValue?: any, flags?: InjectFlags): any {\n    // tslint:disable-next-line:no-bitwise\n    if (flags & InjectFlags.Self) {\n      if (notFoundValue !== undefined) {\n        return notFoundValue;\n      }\n      throw new Error(\n        \"CombinedInjector should be used as a parent injector / doesn't support self dependencies\"\n      );\n    }\n\n    for (const injector of [\n      this.mainInjector,\n      ...this.complementaryInjectors,\n    ]) {\n      // First we are resolving providers provided at Self level in all injectors,\n      // starting with main injector and going through complementary ones...\n      const service = injector.get(token, NOT_FOUND_SYMBOL, InjectFlags.Self);\n      if (service !== NOT_FOUND_SYMBOL) {\n        return service;\n      }\n    }\n    // ...and then fallback to main injector passing the flag\n    return this.mainInjector.get(token, notFoundValue, flags);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { CmsComponentData } from '../../model/cms-component-data';\nimport { CmsComponent, CmsService } from '@spartacus/core';\nimport { CmsComponentsService } from '../../../services/cms-components.service';\nimport { CombinedInjector } from '../../../../shared/utils/combined-injector';\n\n/**\n * Used to prepare injector for CMS components.\n *\n * Injector will take into account configured providers and provides CmsComponentData\n * for specified component's uid\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsInjectorService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  private getCmsData<T extends CmsComponent>(\n    uid: string,\n    parentInjector?: Injector\n  ): CmsComponentData<T> {\n    return {\n      uid: uid,\n      data$: (parentInjector ?? this.injector)\n        .get(CmsService)\n        .getComponentData<T>(uid),\n    };\n  }\n\n  public getInjector(\n    type: string,\n    uid: string,\n    parentInjector?: Injector\n  ): Injector {\n    const configProviders =\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\n\n    const complementaryInjectors = this.cmsComponentsService.getInjectors(type);\n\n    if (complementaryInjectors?.length) {\n      parentInjector = new CombinedInjector(\n        parentInjector ?? this.injector,\n        complementaryInjectors\n      );\n    }\n\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useValue: this.getCmsData(uid),\n        },\n        ...configProviders,\n      ],\n      parent: parentInjector ?? this.injector,\n    });\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * ComponentHandler implementations can be used for instantiating and launching\n * different types of CMS mapped components\n */\nexport abstract class ComponentHandler implements Applicable {\n  /**\n   * Returns component resource - an observable stream used to launch and dispose\n   * component.\n   *\n   * Instantiate and launch component by subscribing to launcher.\n   * Successful component launch will be followed by emission of ElementRef\n   * (and in case of native Angular component, also ComponentRef).\n   * Unsubscribing from the launcher will remove and tear down the component.\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  abstract launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\n\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\n  abstract getPriority?(): Priority;\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  Injector,\n  isDevMode,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from '../handlers/component-handler';\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Responsible for obtaining component handler for specified component mapping\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentHandlerService {\n  constructor(\n    @Optional()\n    @Inject(ComponentHandler)\n    protected handlers: ComponentHandler[]\n  ) {}\n\n  protected invalidMappings = new Set<CmsComponentMapping>();\n\n  /**\n   * Get best matching component handler\n   *\n   * @param componentMapping\n   */\n  protected resolve(componentMapping: CmsComponentMapping): ComponentHandler {\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\n\n    if (isDevMode() && !handler) {\n      if (!this.invalidMappings.has(componentMapping)) {\n        this.invalidMappings.add(componentMapping);\n        console.warn(\n          \"Can't resolve handler for component mapping: \",\n          componentMapping\n        );\n      }\n    }\n\n    return handler;\n  }\n\n  /**\n   * Get launcher for specified component mapping\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  getLauncher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return this.resolve(componentMapping)?.launcher(\n      componentMapping,\n      viewContainerRef,\n      elementInjector\n    );\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ContentSlotComponentData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nimport { CmsInjectorService } from './services/cms-injector.service';\nimport { ComponentHandlerService } from './services/component-handler.service';\n\n/**\n * Directive used to facilitate instantiation of CMS driven dynamic components\n */\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n\n  /**\n   * @deprecated since 2.0\n   *\n   * This property in unsafe, i.e.\n   * - cmpRef can be set later because of lazy loading or deferred loading\n   * - cmpRef can be not set at all if for example, web components are used as cms components\n   */\n  cmpRef?: ComponentRef<any>;\n\n  private launcherResource?: Subscription;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected componentHandler: ComponentHandlerService,\n    protected cmsInjector: CmsInjectorService\n  ) {}\n\n  ngOnInit() {\n    this.cmsComponentsService\n      .determineMappings([this.cxComponentWrapper.flexType])\n      .subscribe(() => {\n        if (\n          this.cmsComponentsService.shouldRender(\n            this.cxComponentWrapper.flexType\n          )\n        ) {\n          this.launchComponent();\n        }\n      });\n  }\n\n  private launchComponent() {\n    const componentMapping = this.cmsComponentsService.getMapping(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (!componentMapping) {\n      return;\n    }\n\n    this.launcherResource = this.componentHandler\n      .getLauncher(\n        componentMapping,\n        this.vcr,\n        this.cmsInjector.getInjector(\n          this.cxComponentWrapper.flexType,\n          this.cxComponentWrapper.uid,\n          this.injector\n        )\n      )\n      ?.subscribe(({ elementRef, componentRef }) => {\n        this.cmpRef = componentRef;\n        this.decorate(elementRef);\n        this.injector.get(ChangeDetectorRef).markForCheck();\n      });\n  }\n\n  private decorate(elementRef: ElementRef): void {\n    this.dynamicAttributeService.addDynamicAttributes(\n      elementRef.nativeElement,\n      this.renderer,\n      { componentData: this.cxComponentWrapper }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.launcherResource) {\n      this.launcherResource.unsubscribe();\n    }\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from './component-handler';\nimport { Observable } from 'rxjs';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * Default component handler used for dynamically launching cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DefaultComponentHandler implements ComponentHandler {\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return typeof componentMapping.component === 'function';\n  }\n\n  getPriority(): Priority {\n    return Priority.FALLBACK;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return new Observable<{\n      elementRef: ElementRef;\n      componentRef?: ComponentRef<any>;\n    }>((subscriber) => {\n      let componentRef: ComponentRef<any>;\n\n      const injector = elementInjector ?? viewContainerRef.injector;\n\n      const dispose = () => {\n        if (componentRef) {\n          componentRef.destroy();\n        }\n      };\n\n      const factory = this.getComponentFactory(\n        injector,\n        componentMapping.component\n      );\n\n      if (factory) {\n        componentRef = viewContainerRef.createComponent(\n          factory,\n          undefined,\n          injector\n        );\n        subscriber.next({ elementRef: componentRef.location, componentRef });\n      }\n\n      return dispose;\n    });\n  }\n\n  protected getComponentFactory(injector: Injector, component: any): any {\n    if (!component) {\n      return null;\n    }\n    const factory = injector\n      .get(ComponentFactoryResolver)\n      .resolveComponentFactory(component);\n\n    return factory;\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\nimport { from, Observable } from 'rxjs';\nimport { DefaultComponentHandler } from './default-component.handler';\nimport { switchMap } from 'rxjs/operators';\nimport { ComponentHandler } from './component-handler';\n\n/**\n * Lazy component handler used for launching lazy loaded cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyComponentHandler implements ComponentHandler {\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\n\n  /**\n   * We want to mach dynamic import signature () => import('')\n   */\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return (\n      typeof componentMapping.component === 'function' &&\n      this.isNotClass(componentMapping.component)\n    );\n  }\n\n  private isNotClass(symbol: any): boolean {\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\n    return signature.startsWith('function()') || signature.startsWith('()=>');\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return from(componentMapping.component()).pipe(\n      switchMap((component) =>\n        this.defaultHandler.launcher(\n          { ...componentMapping, component },\n          viewContainerRef,\n          elementInjector\n        )\n      )\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\nimport { ComponentHandler } from './handlers/component-handler';\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: ComponentHandler,\n      useExisting: DefaultComponentHandler,\n      multi: true,\n    },\n    {\n      provide: ComponentHandler,\n      useExisting: LazyComponentHandler,\n      multi: true,\n    },\n  ],\n  declarations: [ComponentWrapperDirective],\n  exports: [ComponentWrapperDirective],\n})\nexport class PageComponentModule {}\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/index';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n/**\n * The AsmEnablerService is used to enable ASM for those scenario's\n * where it's actually used. This service is added to avoid any polution\n * of the UI and runtime performance for the ordinary production user.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmEnablerService {\n  constructor(\n    protected location: Location,\n    protected winRef: WindowRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  /**\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\n   * existence of a URL parameter or previous usage given by local storage.\n   */\n  load(): void {\n    if (this.isEnabled()) {\n      this.addUi();\n    }\n  }\n\n  /**\n   * Indicates whether the ASM module is enabled.\n   */\n  isEnabled(): boolean {\n    if (this.isLaunched() && !this.isUsedBefore()) {\n      if (this.winRef.localStorage) {\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\n      }\n    }\n    return this.isLaunched() || this.isUsedBefore();\n  }\n\n  /**\n   * Indicates whether ASM is launched through the URL,\n   * using the asm flag in the URL.\n   */\n  protected isLaunched(): boolean {\n    const params = this.location.path().split('?')[1];\n    return params && params.split('&').includes('asm=true');\n  }\n\n  /**\n   * Evaluates local storage where we persist the usage of ASM.\n   */\n  protected isUsedBefore(): boolean {\n    return (\n      this.winRef.localStorage &&\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\n    );\n  }\n\n  /**\n   * Adds the ASM UI by using the `cx-storefront` outlet.\n   */\n  protected addUi(): void {\n    this.launchDialogService.launch(LAUNCH_CALLER.ASM);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { PageComponentModule } from '../../cms-structure/page/component/page-component.module';\nimport { AsmEnablerService } from './services/asm-enabler.service';\n\n/**\n * The ASM loader module takes care of loading the ASM UI\n * only in case there's a reason to do so.\n */\n@NgModule({\n  imports: [CommonModule, PageComponentModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: asmFactory,\n      deps: [AsmEnablerService],\n      multi: true,\n    },\n  ],\n})\nexport class AsmLoaderModule {}\n\n/**\n *\n * We do not like to block the UI, which is why we delgate loading of ASM\n * to a real component; the router and state aren't available in an optimized\n * way during the APP_INITIALIZER.\n */\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\n  const isReady = () => {\n    asmEnablerService.load();\n  };\n  return isReady;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmComponentService {\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected routingService: RoutingService,\n    protected winRef: WindowRef\n  ) {}\n\n  logoutCustomerSupportAgentAndCustomer(): void {\n    this.authService\n      .getUserToken()\n      .pipe(take(1))\n      .subscribe((token) => {\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\n          this.logoutCustomer();\n        }\n        this.asmAuthService.logoutCustomerSupportAgent();\n      });\n  }\n\n  logoutCustomer(): void {\n    this.authService.logout();\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\n    return this.authService\n      .getUserToken()\n      .pipe(\n        mergeMap((userToken) =>\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\n        )\n      );\n  }\n\n  /**\n   * We're currently only removing the persisted storage in the browser\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\n   * optimsiations we could think of:\n   * - drop the `asm` parameter from the URL, in case it's still there\n   * - remove the generated UI from the DOM (outlets currently do not support this)\n   */\n  unload() {\n    if (this.winRef.localStorage) {\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\n    }\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AsmAuthService,\n  AsmService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  User,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-main-ui',\n  templateUrl: './asm-main-ui.component.html',\n  styleUrls: ['./asm-main-ui.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmMainUiComponent implements OnInit {\n  csAgentToken$: Observable<UserToken>;\n  csAgentTokenLoading$: Observable<boolean>;\n  customer$: Observable<User>;\n  isCollapsed$: Observable<boolean>;\n\n  @HostBinding('class.hidden') disabled = false;\n\n  private startingCustomerSession = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected userService: UserService,\n    protected asmComponentService: AsmComponentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    protected asmService: AsmService\n  ) {}\n\n  ngOnInit(): void {\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\n    this.customer$ = this.authService.getUserToken().pipe(\n      switchMap((token) => {\n        if (token && !!token.access_token) {\n          this.handleCustomerSessionStartRedirection(token);\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n    this.isCollapsed$ = this.asmService\n      .getAsmUiState()\n      .pipe(map((uiState) => uiState.collapsed));\n  }\n\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\n    if (\n      this.startingCustomerSession &&\n      this.asmAuthService.isCustomerEmulationToken(token)\n    ) {\n      this.startingCustomerSession = false;\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n      this.routingService.go('/');\n    }\n  }\n\n  loginCustomerSupportAgent({\n    userId,\n    password,\n  }: {\n    userId: string;\n    password: string;\n  }): void {\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\n  }\n\n  logout(): void {\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n  }\n\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\n    this.asmAuthService\n      .getCustomerSupportAgentToken()\n      .pipe(take(1))\n      .subscribe((customerSupportAgentToken) =>\n        this.asmAuthService.startCustomerEmulationSession(\n          customerSupportAgentToken,\n          customerId\n        )\n      )\n      .unsubscribe();\n    this.startingCustomerSession = true;\n  }\n\n  hideUi(): void {\n    this.disabled = true;\n    this.asmComponentService.unload();\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-session-timer',\n  templateUrl: './asm-session-timer.component.html',\n  styleUrls: ['./asm-session-timer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private interval: any;\n  private maxStartDelayInSeconds = 60000;\n  timeLeft: number;\n\n  constructor(\n    private config: AsmConfig,\n    private asmComponentService: AsmComponentService,\n    private authService: AuthService,\n    private routingService: RoutingService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.timeLeft = this.getTimerStartDelayInSeconds();\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        clearInterval(this.interval);\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n      }\n      this.changeDetectorRef.markForCheck();\n    }, 1000);\n\n    this.resetOnNavigate();\n    this.resetOnCustomerSessionChange();\n  }\n\n  private resetOnNavigate(): void {\n    this.subscriptions.add(\n      this.routingService.isNavigating().subscribe((isNavigating) => {\n        if (isNavigating) {\n          this.resetTimer();\n        }\n      })\n    );\n  }\n\n  private resetOnCustomerSessionChange(): void {\n    this.subscriptions.add(\n      this.authService\n        .getOccUserId()\n        .pipe(distinctUntilChanged())\n        .subscribe(() => this.resetTimer())\n    );\n  }\n\n  resetTimer(): void {\n    if (this.timeLeft > 0) {\n      this.timeLeft = this.getTimerStartDelayInSeconds();\n    }\n  }\n\n  private getTimerStartDelayInSeconds(): number {\n    if (\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\n      this.maxStartDelayInSeconds\n    ) {\n      return this.maxStartDelayInSeconds;\n    } else {\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AsmService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-asm-toggle-ui',\n  templateUrl: './asm-toggle-ui.component.html',\n  styleUrls: ['./asm-toggle-ui.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmToggleUiComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  isCollapsed: boolean;\n\n  constructor(protected asmService: AsmService) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.asmService.getAsmUiState().subscribe((uiState) => {\n        this.isCollapsed = uiState.collapsed;\n      })\n    );\n  }\n\n  toggleUi(): void {\n    this.asmService.updateAsmUiState({ collapsed: !this.isCollapsed });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'cx-csagent-login-form',\n  templateUrl: './csagent-login-form.component.html',\n  styleUrls: ['./csagent-login-form.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CSAgentLoginFormComponent implements OnInit {\n  csAgentLoginForm: FormGroup;\n\n  @Input()\n  csAgentTokenLoading = false;\n\n  @Output()\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.csAgentLoginForm = this.fb.group({\n      userId: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.csAgentLoginForm.valid) {\n      this.submitEvent.emit({\n        userId: this.csAgentLoginForm.get('userId').value,\n        password: this.csAgentLoginForm.get('password').value,\n      });\n    } else {\n      this.csAgentLoginForm.markAllAsTouched();\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { User, UserService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-customer-emulation',\n  templateUrl: './customer-emulation.component.html',\n  styleUrls: ['./customer-emulation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\n  customer: User;\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  constructor(\n    protected asmComponentService: AsmComponentService,\n    protected userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.userService.get().subscribe((user) => (this.customer = user))\n    );\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\n  }\n\n  logoutCustomer() {\n    this.asmComponentService.logoutCustomer();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AsmConfig,\n  AsmService,\n  CustomerSearchPage,\n  User,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-customer-selection',\n  templateUrl: './customer-selection.component.html',\n  styleUrls: ['./customer-selection.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    '(document:click)': 'onDocumentClick($event)',\n  },\n})\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\n  customerSelectionForm: FormGroup;\n  private subscription = new Subscription();\n  searchResultsLoading$: Observable<boolean>;\n  searchResults: Observable<CustomerSearchPage>;\n  selectedCustomer: User;\n\n  @Output()\n  submitEvent = new EventEmitter<{ customerId: string }>();\n\n  @ViewChild('resultList') resultList: ElementRef;\n  @ViewChild('searchTerm') searchTerm: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private asmService: AsmService,\n    private config: AsmConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.customerSelectionForm = this.fb.group({\n      searchTerm: ['', Validators.required],\n    });\n    this.asmService.customerSearchReset();\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\n    this.searchResults = this.asmService.getCustomerSearchResults();\n\n    this.subscription.add(\n      this.customerSelectionForm.controls.searchTerm.valueChanges\n        .pipe(debounceTime(300))\n        .subscribe((searchTermValue) => {\n          this.handleSearchTerm(searchTermValue);\n        })\n    );\n  }\n\n  private handleSearchTerm(searchTermValue: string) {\n    if (\n      Boolean(this.selectedCustomer) &&\n      searchTermValue !== this.selectedCustomer.name\n    ) {\n      this.selectedCustomer = undefined;\n    }\n    if (Boolean(this.selectedCustomer)) {\n      return;\n    }\n    this.asmService.customerSearchReset();\n    if (searchTermValue.trim().length >= 3) {\n      this.asmService.customerSearch({\n        query: searchTermValue,\n        pageSize: this.config.asm.customerSearch.maxResults,\n      });\n    }\n  }\n\n  selectCustomerFromList(customer: User) {\n    this.selectedCustomer = customer;\n    this.customerSelectionForm.controls.searchTerm.setValue(\n      this.selectedCustomer.name\n    );\n    this.asmService.customerSearchReset();\n  }\n\n  onSubmit(): void {\n    if (this.customerSelectionForm.valid && Boolean(this.selectedCustomer)) {\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\n    } else {\n      this.customerSelectionForm.markAllAsTouched();\n    }\n  }\n\n  onDocumentClick(event) {\n    if (Boolean(this.resultList)) {\n      if (\n        this.resultList.nativeElement.contains(event.target) ||\n        this.searchTerm.nativeElement.contains(event.target)\n      ) {\n        return;\n      } else {\n        this.asmService.customerSearchReset();\n      }\n    }\n  }\n\n  closeResults() {\n    this.asmService.customerSearchReset();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.asmService.customerSearchReset();\n  }\n}\n","import { LayoutConfig } from '../../layout/config/layout-config';\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\n\nexport const defaultAsmLayoutConfig: LayoutConfig = {\n  launch: {\n    ASM: {\n      outlet: 'cx-storefront',\n      component: AsmMainUiComponent,\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AsmModule as AsmCoreModule,\n  I18nModule,\n  provideConfig,\n} from '@spartacus/core';\nimport { FormErrorsModule } from '../../shared/index';\nimport { AsmLoaderModule } from './asm-loader.module';\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\nimport { AsmToggleUiComponent } from './asm-toggle-ui/asm-toggle-ui.component';\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\nimport { defaultAsmLayoutConfig } from './default-asm-layout.config';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    AsmCoreModule.forRoot(),\n    AsmLoaderModule,\n    FormErrorsModule,\n  ],\n  declarations: [\n    AsmMainUiComponent,\n    CSAgentLoginFormComponent,\n    CustomerSelectionComponent,\n    AsmSessionTimerComponent,\n    FormatTimerPipe,\n    CustomerEmulationComponent,\n    AsmToggleUiComponent,\n  ],\n  providers: [provideConfig(defaultAsmLayoutConfig)],\n  entryComponents: [AsmMainUiComponent],\n})\nexport class AsmModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductScope,\n  ProductService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\n\n  /**\n   * Will emit current product or null, if there is no current product (i.e. we are not on PDP)\n   *\n   * @param scopes\n   */\n  getProduct(\n    scopes?: (ProductScope | string)[] | ProductScope | string\n  ): Observable<Product | null> {\n    return this.routingService.getRouterState().pipe(\n      map((state) => state.state.params['productCode']),\n      switchMap((productCode: string) => {\n        return productCode\n          ? this.productService.get(\n              productCode,\n              scopes || this.DEFAULT_PRODUCT_SCOPE\n            )\n          : of(null);\n      }),\n      filter((x) => x !== undefined),\n      distinctUntilChanged()\n    );\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  Cart,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  startWith,\n  switchMap,\n  switchMapTo,\n  tap,\n} from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n  addedEntryWasMerged$: Observable<boolean>;\n  /**\n   * @deprecated since 3.0, set numberOfEntriesBeforeAdd instead\n   */\n  increment: boolean;\n  numberOfEntriesBeforeAdd: number;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  quantity = 0;\n  modalIsOpen = false;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = new FormGroup({});\n\n  private quantityControl$: Observable<FormControl>;\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: ActiveCartService,\n    protected promotionService: PromotionService\n  ) {}\n  /**\n   * Returns an observable formControl with the quantity of the cartEntry,\n   * but also updates the entry in case of a changed value.\n   * The quantity can be set to zero in order to remove the entry.\n   */\n  getQuantityControl(): Observable<FormControl> {\n    if (!this.quantityControl$) {\n      this.quantityControl$ = this.entry$.pipe(\n        filter((e) => !!e),\n        map((entry) => this.getFormControl(entry)),\n        switchMap(() =>\n          this.form.valueChanges.pipe(\n            // tslint:disable-next-line:deprecation\n            startWith(null),\n            tap((valueChange) => {\n              if (valueChange) {\n                this.cartService.updateEntry(\n                  valueChange.entryNumber,\n                  valueChange.quantity\n                );\n                if (valueChange.quantity === 0) {\n                  this.dismissModal('Removed');\n                }\n              } else {\n                this.form.markAsPristine();\n              }\n            })\n          )\n        ),\n        map(() => <FormControl>this.form.get('quantity'))\n      );\n    }\n    return this.quantityControl$;\n  }\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n    this.addedEntryWasMerged$ = this.loaded$.pipe(\n      filter((loaded) => loaded),\n      switchMapTo(this.cartService.getEntries()),\n      map((entries) => entries.length === this.numberOfEntriesBeforeAdd)\n    );\n  }\n\n  private getFormControl(entry: OrderEntry): FormControl {\n    if (!this.form.get('quantity')) {\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\n      this.form.addControl('quantity', quantity);\n\n      const entryNumber = new FormControl(entry.entryNumber);\n      this.form.addControl('entryNumber', entryNumber);\n    }\n    return <FormControl>this.form.get('quantity');\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActiveCartService, Product } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  /**\n   * As long as we do not support #5026, we require product input, as we need\n   *  a reference to the product model to fetch the stock data.\n   */\n  @Input() product: Product;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock = false;\n  quantity = 1;\n  protected numberOfEntriesBeforeAdd = 0;\n\n  subscription: Subscription;\n\n  addToCartForm = new FormGroup({\n    quantity: new FormControl(1),\n  });\n\n  constructor(\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    private cd: ChangeDetectorRef,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.product) {\n      this.productCode = this.product.code;\n      this.setStockInfo(this.product);\n      this.cd.markForCheck();\n    } else if (this.productCode) {\n      // force hasStock and quantity for the time being, as we do not have more info:\n      this.quantity = 1;\n      this.hasStock = true;\n      this.cd.markForCheck();\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(Boolean))\n        .subscribe((product: Product) => {\n          this.productCode = product.code;\n          this.setStockInfo(product);\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  private setStockInfo(product: Product): void {\n    this.quantity = 1;\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n    if (this.hasStock && product.stock.stockLevel) {\n      this.maxQuantity = product.stock.stockLevel;\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    const quantity = this.addToCartForm.get('quantity').value;\n    if (!this.productCode || quantity <= 0) {\n      return;\n    }\n    this.activeCartService\n      .getEntries()\n      .pipe(take(1))\n      .subscribe((entries) => {\n        this.numberOfEntriesBeforeAdd = entries.length;\n        this.openModal();\n        this.activeCartService.addEntry(this.productCode, quantity);\n      });\n  }\n\n  private openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    // Display last entry for new product code. This always corresponds to\n    // our new item, independently of whether merging occured or not\n    modalInstance.entry$ = this.activeCartService.getLastEntry(\n      this.productCode\n    );\n    modalInstance.cart$ = this.activeCartService.getActive();\n    modalInstance.loaded$ = this.activeCartService.isStable();\n    modalInstance.quantity = this.quantity;\n    modalInstance.numberOfEntriesBeforeAdd = this.numberOfEntriesBeforeAdd;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Voucher, CartVoucherService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-applied-coupons',\n  templateUrl: './applied-coupons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppliedCouponsComponent {\n  @Input()\n  vouchers: Voucher[];\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isReadOnly = false;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(private cartVoucherService: CartVoucherService) {}\n\n  public get sortedVouchers(): Voucher[] {\n    this.vouchers = this.vouchers || [];\n    return this.vouchers.slice().sort((a, b) => {\n      return a.code.localeCompare(b.code);\n    });\n  }\n\n  removeVoucher(voucherId: string) {\n    this.cartVoucherService.removeVoucher(voucherId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ActiveCartService,\n  Cart,\n  CartVoucherService,\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-coupon',\n  templateUrl: './cart-coupon.component.html',\n})\nexport class CartCouponComponent implements OnInit, OnDestroy {\n  MAX_CUSTOMER_COUPON_PAGE = 100;\n  couponForm: FormGroup;\n  cartIsLoading$: Observable<boolean>;\n  cart$: Observable<Cart>;\n  cartId: string;\n  applicableCoupons: CustomerCoupon[];\n\n  private ignoreCloseEvent = false;\n\n  private subscription = new Subscription();\n\n  couponBoxIsActive = false;\n\n  constructor(\n    protected cartVoucherService: CartVoucherService,\n    protected formBuilder: FormBuilder,\n    protected customerCouponService: CustomerCouponService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.customerCouponService) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n    }\n\n    this.cart$ = combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.getActiveCartId(),\n      this.customerCouponService.getCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      ),\n    ]).pipe(\n      tap(\n        ([cart, activeCardId, customerCoupons]: [\n          Cart,\n          string,\n          CustomerCouponSearchResult\n        ]) => {\n          this.cartId = activeCardId;\n          this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\n        }\n      ),\n      map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\n    );\n\n    this.cartIsLoading$ = this.activeCartService\n      .isStable()\n      .pipe(map((loaded) => !loaded));\n\n    this.cartVoucherService.resetAddVoucherProcessingState();\n\n    this.couponForm = this.formBuilder.group({\n      couponCode: ['', [Validators.required]],\n    });\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService\n        .getAddVoucherResultSuccess()\n        .subscribe((success) => {\n          this.onSuccess(success);\n        })\n    );\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService.getAddVoucherResultError().subscribe((error) => {\n        this.onError(error);\n      })\n    );\n  }\n\n  protected onError(error: boolean) {\n    if (error) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  onSuccess(success: boolean) {\n    if (success) {\n      this.couponForm.reset();\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  protected getApplicableCustomerCoupons(\n    cart: Cart,\n    coupons: CustomerCoupon[]\n  ): void {\n    this.applicableCoupons = coupons || [];\n    if (cart.appliedVouchers) {\n      cart.appliedVouchers.forEach((appliedVoucher) => {\n        this.applicableCoupons = this.applicableCoupons.filter(\n          (coupon) => coupon.couponId !== appliedVoucher.code\n        );\n      });\n    }\n  }\n\n  applyVoucher(): void {\n    if (this.couponForm.valid) {\n      this.cartVoucherService.addVoucher(\n        this.couponForm.value.couponCode,\n        this.cartId\n      );\n    } else {\n      this.couponForm.markAllAsTouched();\n    }\n  }\n\n  applyCustomerCoupon(couponId: string): void {\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\n    this.couponBoxIsActive = false;\n  }\n\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.couponBoxIsActive = false;\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.cartVoucherService.resetAddVoucherProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\nimport { CartCouponComponent } from './cart-coupon.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\n  exports: [CartCouponComponent, AppliedCouponsComponent],\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    I18nModule,\n    IconModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartApplyCouponComponent: {\n          component: CartCouponComponent,\n        },\n      },\n    }),\n  ],\n\n  entryComponents: [CartCouponComponent],\n})\nexport class CartCouponModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  ConsignmentEntry,\n  PromotionLocation,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport {\n  CartItemComponentOptions,\n  Item,\n} from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemListComponent {\n  @Input() readonly = false;\n\n  @Input() hasHeader = true;\n\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  private _items: Item[] = [];\n  form: FormGroup;\n\n  @Input('items')\n  // TODO: currently we're getting a new array of items if the cart changes.\n  // pretty annoying as it forces a repaint on the screen,\n  // which is noticable in the UI.\n  set items(items: Item[]) {\n    this.resolveItems(items);\n    this.createForm();\n  }\n  get items(): Item[] {\n    return this._items;\n  }\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  @Input('cartIsLoading') set setLoading(value: boolean) {\n    if (!this.readonly) {\n      // Whenver the cart is loading, we disable the complete form\n      // to avoid any user interaction with the cart.\n      value\n        ? this.form.disable({ emitEvent: false })\n        : this.form.enable({ emitEvent: false });\n    }\n  }\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  /**\n   * The items we're getting form the input do not have a consistent model.\n   * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\n   */\n  private resolveItems(items: Item[]): void {\n    if (!items) {\n      this._items = [];\n      return;\n    }\n\n    if (items.every((item) => item.hasOwnProperty('orderEntry'))) {\n      this._items = items.map((consignmentEntry) => {\n        const entry = Object.assign(\n          {},\n          (consignmentEntry as ConsignmentEntry).orderEntry\n        );\n        entry.quantity = consignmentEntry.quantity;\n        return entry;\n      });\n    } else {\n      this._items = items;\n    }\n  }\n\n  private createForm(): void {\n    this.form = new FormGroup({});\n    this._items.forEach((item) => {\n      const controlName = this.getControlName(item);\n      const group = new FormGroup({\n        entryNumber: new FormControl(item.entryNumber),\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\n      });\n      if (!item.updateable || this.readonly) {\n        group.disable();\n      }\n      this.form.addControl(controlName, group);\n    });\n  }\n\n  protected getControlName(item: Item): string {\n    return item.entryNumber.toString();\n  }\n\n  removeEntry(item: Item): void {\n    if (this.selectiveCartService && this.options.isSaveForLater) {\n      this.selectiveCartService.removeEntry(item);\n    } else {\n      this.activeCartService.removeEntry(item);\n    }\n    delete this.form.controls[this.getControlName(item)];\n  }\n\n  getControl(item: Item): Observable<FormGroup> {\n    return this.form.get(this.getControlName(item)).valueChanges.pipe(\n      // tslint:disable-next-line:deprecation\n      startWith(null),\n      map((value) => {\n        if (value && this.selectiveCartService && this.options.isSaveForLater) {\n          this.selectiveCartService.updateEntry(\n            value.entryNumber,\n            value.quantity\n          );\n        } else if (value) {\n          this.activeCartService.updateEntry(value.entryNumber, value.quantity);\n        }\n      }),\n      map(() => <FormGroup>this.form.get(this.getControlName(item)))\n    );\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { PromotionLocation, PromotionResult } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\nexport interface Item {\n  entryNumber?: number;\n  product?: any;\n  quantity?: any;\n  basePrice?: any;\n  totalPrice?: any;\n  updateable?: boolean;\n}\n\nexport interface CartItemComponentOptions {\n  isSaveForLater?: boolean;\n  optionalBtn?: any;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n})\nexport class CartItemComponent implements OnInit {\n  @Input() compact = false;\n  @Input() item: Item;\n  @Input() readonly = false;\n  @Input() quantityControl: FormControl;\n\n  @Output() view = new EventEmitter<any>();\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  // TODO: evaluate whether this is generic enough\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  appliedProductPromotions$: Observable<PromotionResult[]>;\n\n  constructor(protected promotionService: PromotionService) {}\n\n  ngOnInit() {\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\n      this.item,\n      this.promotionLocation\n    );\n  }\n\n  isProductOutOfStock(product: any) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  removeItem() {\n    this.quantityControl.setValue(0);\n    this.quantityControl.markAsDirty();\n  }\n\n  viewItem() {\n    this.view.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CartCouponModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CartSharedModule,\n    RouterModule,\n    SpinnerModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  AuthService,\n  Cart,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n  RoutingService,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  loggedIn = false;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n  promotions$: Observable<PromotionResult[]>;\n  selectiveCartEnabled: boolean;\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected promotionService: PromotionService,\n    protected selectiveCartService: SelectiveCartService,\n    protected authService: AuthService,\n    protected routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\n\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n\n    this.selectiveCartEnabled = this.selectiveCartService.isEnabled();\n\n    this.cartLoaded$ = combineLatest([\n      this.activeCartService.isStable(),\n      this.selectiveCartEnabled\n        ? this.selectiveCartService.getLoaded()\n        : of(false),\n      this.authService.isUserLoggedIn(),\n    ]).pipe(\n      tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\n      map(([cartLoaded, sflLoaded, loggedIn]) =>\n        loggedIn && this.selectiveCartEnabled\n          ? cartLoaded && sflLoaded\n          : cartLoaded\n      )\n    );\n\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  saveForLater(item: Item) {\n    if (this.loggedIn) {\n      this.activeCartService.removeEntry(item);\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\n    } else {\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartDetailsComponent } from './cart-details.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    CartCouponModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n  entryComponents: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { ActiveCartService, Cart, RoutingService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.isStable(),\n    ]).pipe(\n      filter(([_, loaded]) => loaded),\n      map(([cart]) => {\n        if (this.isEmpty(cart)) {\n          this.routingService.go({ cxRoute: 'home' });\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActiveCartService, Cart, SelectiveCartService } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      return combineLatest([\n        slots$,\n        this.activeCartService.getActive(),\n        this.selectiveCartService.isEnabled()\n          ? this.selectiveCartService.getCart()\n          : of({} as Cart),\n        this.activeCartService.getLoading(),\n      ]).pipe(\n        map(([slots, cart, selectiveCart, loadingCart]) => {\n          const exclude = (arr, args) =>\n            arr.filter((item) => args.every((arg) => arg !== item));\n          return Object.keys(cart).length === 0 && loadingCart\n            ? exclude(slots, [\n                'TopContent',\n                'CenterRightContentSlot',\n                'EmptyCartMiddleContent',\n              ])\n            : cart.totalItems\n            ? exclude(slots, ['EmptyCartMiddleContent'])\n            : selectiveCart.totalItems\n            ? exclude(slots, [\n                'EmptyCartMiddleContent',\n                'CenterRightContentSlot',\n              ])\n            : exclude(slots, ['TopContent', 'CenterRightContentSlot']);\n        })\n      );\n    }\n    return slots$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n\n  constructor(protected activeCartService: ActiveCartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartTotalsComponent } from './cart-totals.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    CartSharedModule,\n    I18nModule,\n    CartCouponModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n  entryComponents: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\n    startWith({ deliveryItemsQuantity: 0 }),\n    map((cart) => cart.deliveryItemsQuantity || 0)\n  );\n\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\n    filter((cart) => !!cart.totalPrice),\n    map((cart) => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected activeCartService: ActiveCartService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [MiniCartComponent],\n  exports: [MiniCartComponent],\n  entryComponents: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AuthService,\n  OrderEntry,\n  Product,\n  WishListService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CurrentProductService } from '../../product/current-product.service';\n\n@Component({\n  selector: 'cx-add-to-wishlist',\n  templateUrl: './add-to-wish-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToWishListComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\n    filter((product) => Boolean(product)),\n    tap((product) => this.setStockInfo(product))\n  );\n\n  wishListEntries$: Observable<\n    OrderEntry[]\n  > = this.wishListService.getWishList().pipe(\n    filter((wishlist) => Boolean(wishlist)),\n    map((wishList) => wishList.entries)\n  );\n\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  hasStock = false;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected wishListService: WishListService,\n    protected currentProductService: CurrentProductService,\n    protected authService: AuthService\n  ) {}\n\n  add(product: Product): void {\n    this.wishListService.addEntry(product.code);\n  }\n\n  remove(entry: OrderEntry): void {\n    this.wishListService.removeEntry(entry);\n  }\n\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\n    const item = entries.find((entry) => entry.product.code === product.code);\n    return item;\n  }\n\n  private setStockInfo(product: Product): void {\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { AddToWishListComponent } from './add-to-wish-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AddToWishListComponent: {\n          component: AddToWishListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToWishListComponent],\n  entryComponents: [AddToWishListComponent],\n  exports: [AddToWishListComponent],\n})\nexport class AddToWishListModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CmsParagraphComponent,\n  CmsService,\n  OrderEntry,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-save-for-later',\n  templateUrl: './save-for-later.component.html',\n})\nexport class SaveForLaterComponent implements OnInit {\n  saveForLater$: Observable<Cart>;\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  data$: Observable<CmsParagraphComponent>;\n  isCartEmpty$: Observable<boolean>;\n\n  constructor(\n    protected cmsService: CmsService,\n    protected cartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isCartEmpty$ = this.cartService\n      .getActive()\n      .pipe(map((cart) => !(cart && cart.totalItems && cart.totalItems > 0)));\n    this.saveForLater$ = this.selectiveCartService.getCart();\n    this.entries$ = this.selectiveCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n    this.cartLoaded$ = combineLatest([\n      this.cartService.isStable(),\n      this.selectiveCartService.getLoaded(),\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\n    this.data$ = this.cmsService.getComponentData(\n      'EmptyCartParagraphComponent'\n    );\n  }\n\n  moveToCart(item: Item) {\n    this.selectiveCartService.removeEntry(item);\n    this.cartService.addEntry(item.product.code, item.quantity);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  FeaturesConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { SaveForLaterComponent } from './save-for-later.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        SaveForLaterComponent: {\n          component: SaveForLaterComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SaveForLaterComponent],\n  exports: [SaveForLaterComponent],\n  entryComponents: [SaveForLaterComponent],\n})\nexport class SaveForLaterModule {}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n  PAYMENT_TYPE = 'paymentType',\n}\n\nexport const checkoutShippingSteps = [\n  CheckoutStepType.SHIPPING_ADDRESS,\n  CheckoutStepType.DELIVERY_MODE,\n];\n\nexport const checkoutPaymentSteps = [\n  CheckoutStepType.PAYMENT_DETAILS,\n  CheckoutStepType.PAYMENT_TYPE,\n  CheckoutStepType.SHIPPING_ADDRESS,\n];\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n  disabled?: boolean;\n}\n","import { CheckoutStep } from '../model/checkout-step.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\nexport enum DeliveryModePreferences {\n  FREE = 'FREE',\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CheckoutConfig {\n  checkout?: {\n    /**\n     * Set checkout steps as ordered array of pages.\n     */\n    steps?: Array<CheckoutStep>;\n    /**\n     * Allow for express checkout when default shipping method and payment method are available.\n     */\n    express?: boolean;\n    /**\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\n     */\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\n    /**\n     * Allow for guest checkout.\n     */\n    guest?: boolean;\n  };\n}\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { DeliveryMode } from '@spartacus/core';\nimport {\n  CheckoutConfig,\n  DeliveryModePreferences,\n} from '../config/checkout-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  private express: boolean = this.checkoutConfig.checkout.express;\n  private guest: boolean = this.checkoutConfig.checkout.guest;\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\n\n  constructor(private checkoutConfig: CheckoutConfig) {}\n\n  protected compareDeliveryCost(\n    deliveryMode1: DeliveryMode,\n    deliveryMode2: DeliveryMode\n  ): number {\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\n      return 1;\n    } else if (\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\n    ) {\n      return -1;\n    }\n    return 0;\n  }\n\n  protected findMatchingDeliveryMode(\n    deliveryModes: DeliveryMode[],\n    index = 0\n  ): string {\n    switch (this.defaultDeliveryMode[index]) {\n      case DeliveryModePreferences.FREE:\n        if (deliveryModes[0].deliveryCost.value === 0) {\n          return deliveryModes[0].code;\n        }\n        break;\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\n        const leastExpensiveFound = deliveryModes.find(\n          (deliveryMode) => deliveryMode.deliveryCost.value !== 0\n        );\n        if (leastExpensiveFound) {\n          return leastExpensiveFound.code;\n        }\n        break;\n      case DeliveryModePreferences.MOST_EXPENSIVE:\n        return deliveryModes[deliveryModes.length - 1].code;\n      default:\n        const codeFound = deliveryModes.find(\n          (deliveryMode) =>\n            deliveryMode.code === this.defaultDeliveryMode[index]\n        );\n        if (codeFound) {\n          return codeFound.code;\n        }\n    }\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\n    return lastMode\n      ? deliveryModes[0].code\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\n  }\n\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\n    deliveryModes.sort(this.compareDeliveryCost);\n    return this.findMatchingDeliveryMode(deliveryModes);\n  }\n\n  isExpressCheckout(): boolean {\n    return this.express;\n  }\n\n  isGuestCheckout(): boolean {\n    return this.guest;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthRedirectService,\n  AuthService,\n  RoutingService,\n  User,\n  UserToken,\n  UserService,\n  B2BUser,\n  GlobalMessageService,\n  GlobalMessageType,\n  B2BUserGroup,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activeCartService: ActiveCartService,\n    protected userService: UserService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.authService.getUserToken(),\n      this.activeCartService.getAssignedUser(),\n      this.userService.get(),\n    ]).pipe(\n      map(([token, cartUser, user]: [UserToken, User, User | B2BUser]) => {\n        if (!token.access_token) {\n          if (this.activeCartService.isGuestCart()) {\n            return Boolean(cartUser);\n          }\n          if (this.checkoutConfigService.isGuestCheckout()) {\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\n          } else {\n            this.routingService.go({ cxRoute: 'login' });\n          }\n          this.authRedirectService.reportAuthGuard();\n        } else if ('roles' in user) {\n          const roles = (<B2BUser>user).roles;\n          if (roles.includes(B2BUserGroup.B2B_CUSTOMER_GROUP)) {\n            return true;\n          } else {\n            this.globalMessageService.add(\n              { key: 'checkout.invalid.accountType' },\n              GlobalMessageType.MSG_TYPE_WARNING\n            );\n            return false;\n          }\n        }\n        return !!token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RoutingConfigService, RoutingService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../config/checkout-config';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepService {\n  // initial enabled steps\n  allSteps: CheckoutStep[];\n\n  readonly steps$: BehaviorSubject<CheckoutStep[]> = new BehaviorSubject<\n    CheckoutStep[]\n  >(undefined);\n\n  readonly activeStepIndex$: Observable<\n    number\n  > = this.routingService.getRouterState().pipe(\n    switchMap((router) => {\n      const activeStepUrl = router.state.context.id;\n      return this.steps$.pipe(\n        map((steps) => {\n          let activeIndex;\n          steps.forEach((step, index) => {\n            const routeUrl = `/${\n              this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n            }`;\n            if (routeUrl === activeStepUrl) {\n              activeIndex = index;\n            }\n          });\n          return activeIndex;\n        })\n      );\n    })\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected checkoutConfig: CheckoutConfig,\n    protected routingConfigService: RoutingConfigService\n  ) {\n    this.resetSteps();\n  }\n\n  back(activatedRoute: ActivatedRoute): void {\n    const previousUrl = this.getPreviousCheckoutStepUrl(activatedRoute);\n    this.routingService.go(previousUrl === null ? 'cart' : previousUrl);\n  }\n\n  next(activatedRoute: ActivatedRoute): void {\n    const nextUrl = this.getNextCheckoutStepUrl(activatedRoute);\n    this.routingService.go(nextUrl);\n  }\n\n  goToStepWithIndex(stepIndex: number): void {\n    this.routingService.go(\n      this.getStepUrlFromStepRoute(this.allSteps[stepIndex].routeName)\n    );\n  }\n\n  getBackBntText(activatedRoute: ActivatedRoute): string {\n    if (this.getPreviousCheckoutStepUrl(activatedRoute) === null) {\n      return 'checkout.backToCart';\n    }\n    return 'common.back';\n  }\n\n  resetSteps(): void {\n    this.allSteps = this.checkoutConfig.checkout.steps\n      .filter((step) => !step.disabled)\n      .map((x) => Object.assign({}, x));\n    this.steps$.next(this.allSteps);\n  }\n\n  disableEnableStep(\n    currentStepType: CheckoutStepType,\n    disabled: boolean\n  ): void {\n    const currentStep = this.allSteps.find((step) =>\n      step.type.includes(currentStepType)\n    );\n    if (currentStep && currentStep.disabled !== disabled) {\n      currentStep.disabled = disabled;\n      this.steps$.next(this.allSteps.filter((step) => !step.disabled));\n    }\n  }\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.allSteps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\n    return this.getCheckoutStep(currentStepType).routeName;\n  }\n\n  getFirstCheckoutStepRoute(): string {\n    return this.allSteps[0].routeName;\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex + i] &&\n        this.allSteps[stepIndex + i].disabled\n      ) {\n        i++;\n      }\n      const nextStep = this.allSteps[stepIndex + i];\n      if (nextStep) {\n        return this.getStepUrlFromStepRoute(nextStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex - i] &&\n        this.allSteps[stepIndex - i].disabled\n      ) {\n        i++;\n      }\n      const previousStep = this.allSteps[stepIndex - i];\n      if (previousStep) {\n        return this.getStepUrlFromStepRoute(previousStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    const stepIndex = this.allSteps.findIndex(\n      (step) =>\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n    );\n    return stepIndex === -1 ? null : stepIndex;\n  }\n\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string): string {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.allSteps.findIndex((step: CheckoutStep) =>\n          step[key].includes(value)\n        )\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  OCC_USER_ID_ANONYMOUS,\n  PaymentDetails,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.cartId$ = this.activeCartService.getActive().pipe(\n      map((cartData) => {\n        if (\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\n          this.activeCartService.isGuestCart()\n        ) {\n          return cartData.guid;\n        }\n        return cartData.code;\n      }),\n      filter((cartId) => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap((cartId) => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile((loaded) => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, of, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\n\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n  UserPaymentService,\n  PaymentDetails,\n  DeliveryMode,\n  CheckoutPaymentService,\n  StateUtils,\n} from '@spartacus/core';\nimport { CheckoutConfigService } from './checkout-config.service';\nimport { CheckoutDetailsService } from './checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExpressCheckoutService {\n  private shippingAddressSet$: Observable<boolean>;\n  private deliveryModeSet$: Observable<boolean>;\n  private paymentMethodSet$: Observable<boolean>;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected checkoutConfigService: CheckoutConfigService\n  ) {\n    this.setShippingAddress();\n    this.setDeliveryMode();\n    this.setPaymentMethod();\n  }\n\n  protected setShippingAddress() {\n    this.shippingAddressSet$ = combineLatest([\n      this.userAddressService.getAddresses(),\n      this.userAddressService.getAddressesLoadedSuccess(),\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!addressesLoadedSuccess) {\n            this.userAddressService.loadAddresses();\n          }\n        }\n      ),\n      filter(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => addressesLoadedSuccess\n      ),\n      switchMap(\n        ([addresses, , setDeliveryAddressProcess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          const defaultAddress =\n            addresses.find((address) => address.defaultAddress) || addresses[0];\n          if (defaultAddress && Object.keys(defaultAddress).length) {\n            if (\n              !(\n                setDeliveryAddressProcess.success ||\n                setDeliveryAddressProcess.error ||\n                setDeliveryAddressProcess.loading\n              )\n            ) {\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\n            }\n            return of(setDeliveryAddressProcess).pipe(\n              filter(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    (setDeliveryAddressProcessState.success ||\n                      setDeliveryAddressProcessState.error) &&\n                    !setDeliveryAddressProcessState.loading\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setDeliveryAddressProcessState.success) {\n                    return this.checkoutDetailsService.getDeliveryAddress();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setPaymentMethod() {\n    this.paymentMethodSet$ = combineLatest([\n      this.userPaymentService.getPaymentMethods(),\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, paymentMethodsLoadedSuccess]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!paymentMethodsLoadedSuccess) {\n            this.userPaymentService.loadPaymentMethods();\n          }\n        }\n      ),\n      filter(\n        ([, success]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => success\n      ),\n      switchMap(\n        ([payments, , setPaymentDetailsProcess]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          const defaultPayment =\n            payments.find((address) => address.defaultPayment) || payments[0];\n          if (defaultPayment && Object.keys(defaultPayment).length) {\n            if (\n              !(\n                setPaymentDetailsProcess.success ||\n                setPaymentDetailsProcess.error ||\n                setPaymentDetailsProcess.loading\n              )\n            ) {\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\n            }\n            return of(setPaymentDetailsProcess).pipe(\n              filter(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    (setPaymentDetailsProcessState.success ||\n                      setPaymentDetailsProcessState.error) &&\n                    !setPaymentDetailsProcessState.loading\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setPaymentDetailsProcessState.success) {\n                    return this.checkoutDetailsService.getPaymentDetails();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setDeliveryMode() {\n    this.deliveryModeSet$ = combineLatest([\n      this.shippingAddressSet$,\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\n    ]).pipe(\n      debounceTime(0),\n      switchMap(\n        ([\n          addressSet,\n          supportedDeliveryModes,\n          setDeliveryModeStatusFlag,\n          loadSupportedDeliveryModeStatus,\n        ]: [\n          boolean,\n          DeliveryMode[],\n          StateUtils.LoaderState<void>,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (addressSet) {\n            return of([\n              supportedDeliveryModes,\n              setDeliveryModeStatusFlag,\n              loadSupportedDeliveryModeStatus,\n            ]).pipe(\n              filter(\n                ([, , supportedDeliveryModeStatus]: [\n                  DeliveryMode[],\n                  StateUtils.LoaderState<void>,\n                  StateUtils.LoaderState<void>\n                ]) => supportedDeliveryModeStatus.success\n              ),\n              switchMap(\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\n                  DeliveryMode[],\n                  StateUtils.LoaderState<void>,\n                  StateUtils.LoaderState<void>\n                ]) => {\n                  if (Boolean(deliveryModes.length)) {\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\n                      deliveryModes\n                    );\n                    return of([\n                      preferredDeliveryMode,\n                      setDeliveryModeStatus,\n                    ]).pipe(\n                      tap(\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          if (\n                            deliveryMode &&\n                            !(\n                              deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error ||\n                              deliveryModeLoadingStatus.loading\n                            )\n                          ) {\n                            this.checkoutDeliveryService.setDeliveryMode(\n                              deliveryMode\n                            );\n                          }\n                        }\n                      ),\n                      filter(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          return (\n                            (deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error) &&\n                            !deliveryModeLoadingStatus.loading\n                          );\n                        }\n                      ),\n                      switchMap(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          if (deliveryModeLoadingStatus.success) {\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\n                          }\n                          return of(false);\n                        }\n                      ),\n                      map((data) => Boolean(data))\n                    );\n                  }\n                  return of(false);\n                }\n              )\n            );\n          } else {\n            return of(false);\n          }\n        }\n      )\n    );\n  }\n\n  protected resetCheckoutProcesses() {\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\n  }\n\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\n    this.resetCheckoutProcesses();\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\n      map(([deliveryModeSet, paymentMethodSet]) =>\n        Boolean(deliveryModeSet && paymentMethodSet)\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  private readonly firstStep$: Observable<UrlTree>;\n\n  constructor(\n    protected router: Router,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected checkoutStepService: CheckoutStepService,\n    protected expressCheckoutService: ExpressCheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.firstStep$ = of(\n      this.router.parseUrl(\n        this.routingConfigService.getRouteConfig(\n          this.checkoutStepService.getFirstCheckoutStepRoute()\n        ).paths[0]\n      )\n    );\n  }\n\n  canActivate(): Observable<boolean | UrlTree> {\n    if (\n      this.checkoutConfigService.isExpressCheckout() &&\n      !this.activeCartService.isGuestCart()\n    ) {\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\n        switchMap((expressCheckoutPossible: boolean) => {\n          return expressCheckoutPossible\n            ? of(\n                this.router.parseUrl(\n                  this.routingConfigService.getRouteConfig(\n                    this.checkoutStepService.getCheckoutStepRoute(\n                      CheckoutStepType.REVIEW_ORDER\n                    )\n                  ).paths[0]\n                )\n              )\n            : this.firstStep$;\n        })\n      );\n    }\n    return this.firstStep$;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrchestratorComponent],\n  entryComponents: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected activeCartService: ActiveCartService) {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [CommonModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  entryComponents: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileBottomComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> = this.checkoutStepService\n    .steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<\n    number\n  > = this.checkoutStepService.activeStepIndex$.pipe(\n    tap((index) => (this.activeStepIndex = index))\n  );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport {\n  CheckoutCostCenterService,\n  PaymentTypeService,\n  RoutingConfigService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepsSetGuard implements CanActivate {\n  constructor(\n    protected paymentTypeService: PaymentTypeService,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutCostCenterService: CheckoutCostCenterService,\n    protected router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    _: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    let currentIndex = -1;\n    const currentRouteUrl = '/' + route.url.join('/');\n\n    // check whether the previous step is set\n    return combineLatest([\n      this.checkoutStepService.steps$,\n      this.paymentTypeService.isAccountPayment(),\n    ]).pipe(\n      tap(([, isAccount]) => {\n        this.checkoutStepService.disableEnableStep(\n          CheckoutStepType.PAYMENT_DETAILS,\n          isAccount\n        );\n      }),\n      take(1),\n      switchMap(([steps, isAccount]) => {\n        currentIndex = steps.findIndex((step) => {\n          const stepRouteUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          return stepRouteUrl === currentRouteUrl;\n        });\n        // get current step\n        let currentStep: CheckoutStep;\n        if (currentIndex >= 0) {\n          currentStep = steps[currentIndex];\n        }\n        if (Boolean(currentStep)) {\n          return this.isStepSet(steps[currentIndex - 1], isAccount);\n        } else {\n          if (isDevMode()) {\n            console.warn(\n              `Missing step with route '${currentRouteUrl}' in checkout configuration or this step is disabled.`\n            );\n          }\n          return of(this.getUrl('checkout'));\n        }\n      })\n    );\n  }\n\n  protected isStepSet(\n    step: CheckoutStep,\n    isAccountPayment\n  ): Observable<boolean | UrlTree> {\n    if (step && !step.disabled) {\n      switch (step.type[0]) {\n        case CheckoutStepType.PAYMENT_TYPE: {\n          return this.isPaymentTypeSet(step);\n        }\n        case CheckoutStepType.SHIPPING_ADDRESS: {\n          return this.isShippingAddressAndCostCenterSet(step, isAccountPayment);\n        }\n        case CheckoutStepType.DELIVERY_MODE: {\n          return this.isDeliveryModeSet(step);\n        }\n        case CheckoutStepType.PAYMENT_DETAILS: {\n          return this.isPaymentDetailsSet(step);\n        }\n        case CheckoutStepType.REVIEW_ORDER: {\n          break;\n        }\n      }\n    }\n    return of(true);\n  }\n\n  protected isPaymentTypeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.paymentTypeService.getSelectedPaymentType().pipe(\n      map((paymentType: string) => {\n        if (Boolean(paymentType)) {\n          return true;\n        } else {\n          return this.getUrl(step.routeName);\n        }\n      })\n    );\n  }\n\n  protected isShippingAddressAndCostCenterSet(\n    step: CheckoutStep,\n    isAccountPayment: boolean\n  ): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.checkoutDetailsService.getDeliveryAddress(),\n      this.checkoutCostCenterService.getCostCenter(),\n    ]).pipe(\n      map(([deliveryAddress, costCenter]) => {\n        if (isAccountPayment) {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            Boolean(costCenter)\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        } else {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            costCenter === undefined\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        }\n      })\n    );\n  }\n\n  protected isDeliveryModeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length ? true : this.getUrl(step.routeName)\n        )\n      );\n  }\n\n  protected isPaymentDetailsSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map((paymentDetails) =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.getUrl(step.routeName)\n        )\n      );\n  }\n\n  private getUrl(routeName: string): UrlTree {\n    return this.router.parseUrl(\n      this.routingConfigService.getRouteConfig(routeName).paths[0]\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\nimport { CheckoutStepsSetGuard } from '../../../guards/checkout-steps-set.guard';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  entryComponents: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  private _steps$: BehaviorSubject<CheckoutStep[]> = this.checkoutStepService\n    .steps$;\n\n  constructor(\n    protected checkoutStepService: CheckoutStepService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  cart$: Observable<Cart>;\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<\n    number\n  > = this.checkoutStepService.activeStepIndex$.pipe(\n    tap((index) => (this.activeStepIndex = index))\n  );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n\n  ngOnInit(): void {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\nimport { CheckoutStepsSetGuard } from '../../../guards/checkout-steps-set.guard';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  entryComponents: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStep } from '../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> = this.checkoutStepService\n    .steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<\n    number\n  > = this.checkoutStepService.activeStepIndex$.pipe(\n    tap((index) => (this.activeStepIndex = index))\n  );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n\n  getTabIndex(stepIndex: number): number {\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\n  }\n\n  isActive(index: number): boolean {\n    return index === this.activeStepIndex;\n  }\n\n  isDisabled(index: number): boolean {\n    return index > this.activeStepIndex;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cxMultiLine',\n})\nexport class MultiLinePipe implements PipeTransform {\n  transform(value: string): string {\n    const lastIndex = value.lastIndexOf(' ');\n\n    if (lastIndex === -1) return value;\n\n    return (\n      value.substring(0, lastIndex) +\n      '<br />' +\n      value.substring(lastIndex, value.length).trim()\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../../guards/checkout-steps-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\nimport { MultiLinePipe } from './multiline-titles.pipe';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  declarations: [CheckoutProgressComponent, MultiLinePipe],\n  entryComponents: [CheckoutProgressComponent],\n  exports: [CheckoutProgressComponent],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutProgressModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotCheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authService.getUserToken().pipe(\n      map((token) => {\n        if (token.access_token) {\n          this.routingService.go({ cxRoute: 'home' });\n        } else if (this.activeCartService.isGuestCart()) {\n          this.routingService.go({ cxRoute: 'cart' });\n          return false;\n        }\n        return !token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutStepService: CheckoutStepService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutStepService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    if (checkoutStep && checkoutStep.disabled) {\n      return of(true);\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentDetailsSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutStepService: CheckoutStepService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutStepService.getCheckoutStep(\n      CheckoutStepType.PAYMENT_DETAILS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map((paymentDetails) =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutStepService: CheckoutStepService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutStepService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    if (checkoutStep && checkoutStep.disabled) {\n      return of(true);\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CheckoutCostCenterService,\n  CostCenter,\n  PaymentTypeService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cost-center',\n  templateUrl: 'cost-center.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CostCenterComponent {\n  costCenterId: string;\n\n  constructor(\n    protected userCostCenterService: UserCostCenterService,\n    protected checkoutCostCenterService: CheckoutCostCenterService,\n    protected paymentTypeService: PaymentTypeService\n  ) {}\n\n  get isAccountPayment$(): Observable<boolean> {\n    return this.paymentTypeService.isAccountPayment();\n  }\n\n  get costCenters$(): Observable<CostCenter[]> {\n    return this.userCostCenterService.getActiveCostCenters().pipe(\n      withLatestFrom(this.checkoutCostCenterService.getCostCenter()),\n      filter(([costCenters]) => Boolean(costCenters)),\n      tap(([costCenters, cartCostCenter]) => {\n        if (!Boolean(cartCostCenter)) {\n          this.setCostCenter(costCenters[0].code);\n        } else {\n          this.costCenterId = cartCostCenter;\n        }\n      }),\n      map(([costCenters]) => costCenters)\n    );\n  }\n\n  setCostCenter(selectCostCenter: string): void {\n    this.costCenterId = selectCostCenter;\n    this.checkoutCostCenterService.setCostCenter(this.costCenterId);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart';\nimport { CheckoutAuthGuard } from '../../guards';\nimport { CostCenterComponent } from './cost-center.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutCostCenterComponent: {\n          component: CostCenterComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CostCenterComponent],\n  entryComponents: [CostCenterComponent],\n})\nexport class CostCenterModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CheckoutDeliveryService, DeliveryMode } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, takeWhile, withLatestFrom } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  currentDeliveryModeId: string;\n  continueButtonPressed = false;\n  private allowRedirect = false;\n\n  backBtnText = this.checkoutStepService.getBackBntText(this.activatedRoute);\n\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutConfigService: CheckoutConfigService,\n    protected checkoutStepService: CheckoutStepService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\n\n    // Reload delivery modes on error\n    this.checkoutDeliveryService\n      .getLoadSupportedDeliveryModeProcess()\n      .pipe(takeWhile((state) => state?.success === false))\n      .subscribe((state) => {\n        if (state.error && !state.loading) {\n          this.checkoutDeliveryService.loadSupportedDeliveryModes();\n        }\n      });\n\n    this.deliveryModeSub = this.supportedDeliveryModes$\n      .pipe(\n        withLatestFrom(\n          this.checkoutDeliveryService\n            .getSelectedDeliveryMode()\n            .pipe(\n              map((deliveryMode: DeliveryMode) =>\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\n              )\n            )\n        )\n      )\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\n        if (!code && deliveryModes && deliveryModes.length) {\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\n            deliveryModes\n          );\n        }\n        if (\n          this.allowRedirect &&\n          !!code &&\n          code === this.currentDeliveryModeId\n        ) {\n          this.checkoutStepService.next(this.activatedRoute);\n        }\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n          if (code !== this.currentDeliveryModeId) {\n            this.checkoutDeliveryService.setDeliveryMode(code);\n          }\n        }\n        this.currentDeliveryModeId = code;\n      });\n  }\n\n  changeMode(code: string): void {\n    if (code !== this.currentDeliveryModeId) {\n      this.checkoutDeliveryService.setDeliveryMode(code);\n      this.currentDeliveryModeId = code;\n    }\n  }\n\n  next(): void {\n    this.allowRedirect = true;\n    this.continueButtonPressed = true;\n\n    if (this.mode.valid && this.mode.value) {\n      if (!this.currentDeliveryModeId) {\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\n      }\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\n    }\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  entryComponents: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  StateUtils,\n  UserAddressService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n  months: string[] = [];\n  years: number[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  loading$: Observable<StateUtils.LoaderState<void>>;\n  sameAsShippingAddress = true;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  showSameAsShippingAddressCheckbox$: Observable<boolean>;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  paymentForm: FormGroup = this.fb.group({\n    cardType: this.fb.group({\n      code: [null, Validators.required],\n    }),\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    expiryMonth: [null, Validators.required],\n    expiryYear: [null, Validators.required],\n    cvn: ['', Validators.required],\n    defaultPayment: [false],\n  });\n\n  billingAddressForm: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected modalService: ModalService,\n    protected userAddressService: UserAddressService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap((countries) => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap((cardTypes) => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\n\n    this.showSameAsShippingAddressCheckbox$ = combineLatest([\n      this.countries$,\n      this.shippingAddress$,\n    ]).pipe(\n      map(([countries, address]) => {\n        return (\n          address?.country &&\n          !!countries.filter(\n            (country: Country): boolean =>\n              country.isocode === address.country.isocode\n          ).length\n        );\n      }),\n      tap((shouldShowCheckbox) => {\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.next();\n        } else if (results.decision === 'REJECT') {\n          this.globalMessageService.add(\n            { key: 'addressForm.invalidAddress' },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions) => {\n        const regionControl = this.billingAddressForm.get(\n          'region.isocodeShort'\n        );\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n\n    for (let i = 0; i < 10; i++) {\n      this.years.push(year + i);\n    }\n\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push(`0${j}`);\n      } else {\n        this.months.push(j.toString());\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.paymentForm.value.defaultPayment = !this.paymentForm.value\n      .defaultPayment;\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    };\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.checkoutDeliveryService.verifyAddress(this.billingAddressForm.value);\n    }\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddressForm.get('country.isocode').setValue(country.isocode);\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  next(): void {\n    if (this.paymentForm.valid) {\n      if (this.sameAsShippingAddress) {\n        this.setPaymentDetails.emit({\n          paymentDetails: this.paymentForm.value,\n          billingAddress: null,\n        });\n      } else {\n        if (this.billingAddressForm.valid) {\n          this.setPaymentDetails.emit({\n            paymentDetails: this.paymentForm.value,\n            billingAddress: this.billingAddressForm.value,\n          });\n        } else {\n          this.billingAddressForm.markAllAsTouched();\n        }\n      }\n    } else {\n      this.paymentForm.markAllAsTouched();\n\n      if (!this.sameAsShippingAddress) {\n        this.billingAddressForm.markAllAsTouched();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { PaymentFormComponent } from './payment-form.component';\nimport { FormErrorsModule } from '../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  declarations: [PaymentFormComponent],\n  entryComponents: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\n  selectedMethod$: Observable<PaymentDetails>;\n  isGuestCheckout = false;\n  newPaymentFormManuallyOpened = false;\n\n  backBtnText = this.checkoutStepService.getBackBntText(this.activatedRoute);\n\n  protected shouldRedirect: boolean;\n  protected deliveryAddress: Address;\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  ngOnInit() {\n    this.shouldRedirect = false;\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n\n    if (!this.activeCartService.isGuestCart()) {\n      this.userPaymentService.loadPaymentMethods();\n    } else {\n      this.isGuestCheckout = true;\n    }\n\n    this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .pipe(take(1))\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n\n    this.selectedMethod$ = this.checkoutPaymentService.getPaymentDetails().pipe(\n      tap((paymentInfo) => {\n        if (paymentInfo && !!Object.keys(paymentInfo).length) {\n          if (paymentInfo['hasError']) {\n            Object.keys(paymentInfo).forEach((key) => {\n              if (key.startsWith('InvalidField')) {\n                this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\n              }\n            });\n            this.checkoutService.clearCheckoutStep(3);\n          } else if (this.shouldRedirect) {\n            this.next();\n          }\n        }\n      })\n    );\n\n    this.cards$ = combineLatest([\n      this.existingPaymentMethods$.pipe(\n        switchMap((methods) => {\n          return !methods?.length\n            ? of([])\n            : combineLatest(\n                methods.map((method) =>\n                  combineLatest([\n                    of(method),\n                    this.translation.translate('paymentCard.expires', {\n                      month: method.expiryMonth,\n                      year: method.expiryYear,\n                    }),\n                  ]).pipe(\n                    map(([payment, translation]) => ({\n                      payment,\n                      expiryTranslation: translation,\n                    }))\n                  )\n                )\n              );\n        })\n      ),\n      this.selectedMethod$,\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          paymentMethods,\n          selectedMethod,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          if (\n            paymentMethods.length &&\n            (!selectedMethod || Object.keys(selectedMethod).length === 0)\n          ) {\n            const defaultPaymentMethod = paymentMethods.find(\n              (paymentMethod) => paymentMethod.payment.defaultPayment\n            );\n            if (defaultPaymentMethod) {\n              selectedMethod = defaultPaymentMethod.payment;\n              this.checkoutPaymentService.setPaymentDetails(selectedMethod);\n            }\n          }\n          return paymentMethods.map((payment) => ({\n            content: this.createCard(\n              payment.payment,\n              {\n                textExpires: payment.expiryTranslation,\n                textUseThisPayment,\n                textDefaultPaymentMethod,\n                textSelected,\n              },\n              selectedMethod\n            ),\n            paymentMethod: payment.payment,\n          }));\n        }\n      )\n    );\n  }\n\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\n    this.checkoutPaymentService.setPaymentDetails(paymentDetails);\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n  }): void {\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress || this.deliveryAddress;\n    this.checkoutPaymentService.createPaymentDetails(details);\n    this.shouldRedirect = true;\n  }\n\n  ngOnDestroy(): void {\n    this.checkoutPaymentService.paymentProcessSuccess();\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n\n  protected sendPaymentMethodFailGlobalMessage(field: string) {\n    this.globalMessageService.add(\n      {\n        key: 'paymentMethods.invalidField',\n        params: { field },\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  protected createCard(\n    paymentDetails: PaymentDetails,\n    cardLabels: {\n      textDefaultPaymentMethod: string;\n      textExpires: string;\n      textUseThisPayment: string;\n      textSelected: string;\n    },\n    selected: PaymentDetails\n  ): Card {\n    return {\n      title: paymentDetails.defaultPayment\n        ? cardLabels.textDefaultPaymentMethod\n        : '',\n      textBold: paymentDetails.accountHolderName,\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\n      img: this.getCardIcon(paymentDetails.cardType.code),\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\n      header:\n        selected?.id === paymentDetails.id\n          ? cardLabels.textSelected\n          : undefined,\n    };\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard and others here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodComponent],\n  entryComponents: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  B2BPaymentTypeEnum,\n  PaymentType,\n  PaymentTypeService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\nimport { CheckoutStepType } from '../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-payment-type',\n  templateUrl: './payment-type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentTypeComponent {\n  @ViewChild('poNumber', { static: false })\n  private _poNumberInput: ElementRef;\n\n  typeSelected: string;\n  cartPoNumber: string;\n\n  paymentTypes$: Observable<\n    PaymentType[]\n  > = this.paymentTypeService.getPaymentTypes();\n\n  typeSelected$: Observable<\n    string\n  > = this.paymentTypeService.getSelectedPaymentType().pipe(\n    filter((selected) => selected !== undefined),\n    distinctUntilChanged(),\n    tap((selected) => {\n      this.typeSelected = selected;\n      this.checkoutStepService.resetSteps();\n      this.checkoutStepService.disableEnableStep(\n        CheckoutStepType.PAYMENT_DETAILS,\n        selected === B2BPaymentTypeEnum.ACCOUNT_PAYMENT\n      );\n    })\n  );\n\n  cartPoNumber$: Observable<\n    string\n  > = this.paymentTypeService.getPoNumber().pipe(\n    filter((po) => po !== undefined),\n    tap((po) => {\n      return (this.cartPoNumber = po);\n    })\n  );\n\n  constructor(\n    protected paymentTypeService: PaymentTypeService,\n    protected checkoutStepService: CheckoutStepService,\n    protected activatedRoute: ActivatedRoute\n  ) {}\n\n  changeType(code: string): void {\n    this.paymentTypeService.setPaymentType(code);\n    this.typeSelected = code;\n  }\n\n  next(): void {\n    // set po number to cart\n    const poNumInput = this._poNumberInput.nativeElement.value;\n    if (this.typeSelected && poNumInput !== this.cartPoNumber) {\n      this.paymentTypeService.setPaymentType(this.typeSelected, poNumInput);\n    }\n\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentTypeComponent } from './payment-type.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentType: {\n          component: PaymentTypeComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentTypeComponent],\n  entryComponents: [PaymentTypeComponent],\n  exports: [PaymentTypeComponent],\n})\nexport class PaymentTypeModule {}\n","import { LayoutConfig } from '../../../../layout/config/layout-config';\nimport { DIALOG_TYPE } from '../../../../layout/launch-dialog/index';\nimport { SpinnerComponent } from '../../../../shared/components/spinner/spinner.component';\n\nexport const defaultPlaceOrderSpinnerLayoutConfig: LayoutConfig = {\n  launch: {\n    PLACE_ORDER_SPINNER: {\n      inline: true,\n      component: SpinnerComponent,\n      dialogType: DIALOG_TYPE.POPOVER_CENTER_BACKDROP,\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  DaysOfWeek,\n  recurrencePeriod,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutReplenishmentFormService {\n  /**\n   * Default form data\n   */\n  readonly defaultFormData: ScheduleReplenishmentForm = {\n    daysOfWeek: [DaysOfWeek.MONDAY],\n    nthDayOfMonth: '1',\n    numberOfDays: '14',\n    numberOfWeeks: '1',\n    recurrencePeriod: recurrencePeriod.DAILY,\n    replenishmentStartDate: new Date().toISOString(),\n  };\n\n  private scheduleReplenishmentFormData$: BehaviorSubject<\n    ScheduleReplenishmentForm\n  > = new BehaviorSubject<ScheduleReplenishmentForm>(this.defaultFormData);\n\n  constructor() {}\n\n  getScheduleReplenishmentFormData(): Observable<ScheduleReplenishmentForm> {\n    return this.scheduleReplenishmentFormData$.asObservable();\n  }\n\n  setScheduleReplenishmentFormData(formData: ScheduleReplenishmentForm): void {\n    this.scheduleReplenishmentFormData$.next(formData);\n  }\n\n  resetScheduleReplenishmentFormData(): void {\n    this.scheduleReplenishmentFormData$.next(this.defaultFormData);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  CheckoutService,\n  ORDER_TYPE,\n  recurrencePeriod,\n  RoutingService,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  LaunchDialogService,\n  LAUNCH_CALLER,\n} from '../../../../layout/launch-dialog/index';\nimport { CheckoutReplenishmentFormService } from '../../services/checkout-replenishment-form-service';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  private subscription: Subscription = new Subscription();\n\n  currentOrderType: ORDER_TYPE;\n  scheduleReplenishmentFormData: ScheduleReplenishmentForm;\n  placedOrder: void | Observable<ComponentRef<any>>;\n\n  daysOfWeekNotChecked$ = new BehaviorSubject<boolean>(false);\n\n  checkoutSubmitForm: FormGroup = this.fb.group({\n    termsAndConditions: [false, Validators.requiredTrue],\n  });\n\n  get termsAndConditionInvalid(): Boolean {\n    return this.checkoutSubmitForm.invalid;\n  }\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected checkoutReplenishmentFormService: CheckoutReplenishmentFormService,\n    protected routingService: RoutingService,\n    protected launchDialogService: LaunchDialogService,\n    protected fb: FormBuilder,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  submitForm(): void {\n    if (this.checkoutSubmitForm.valid && Boolean(this.currentOrderType)) {\n      switch (this.currentOrderType) {\n        case ORDER_TYPE.PLACE_ORDER: {\n          this.checkoutService.placeOrder(this.checkoutSubmitForm.valid);\n          break;\n        }\n\n        case ORDER_TYPE.SCHEDULE_REPLENISHMENT_ORDER: {\n          this.checkoutService.scheduleReplenishmentOrder(\n            this.scheduleReplenishmentFormData,\n            this.checkoutSubmitForm.valid\n          );\n          break;\n        }\n      }\n    } else {\n      this.checkoutSubmitForm.markAllAsTouched();\n    }\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      combineLatest([\n        this.checkoutService.getPlaceOrderLoading(),\n        this.checkoutService.getPlaceOrderSuccess(),\n        this.checkoutService.getPlaceOrderError(),\n      ]).subscribe(([orderLoading, orderSuccess, orderError]) => {\n        if (orderLoading) {\n          this.placedOrder = this.launchDialogService.launch(\n            LAUNCH_CALLER.PLACE_ORDER_SPINNER,\n            this.vcr\n          );\n        }\n\n        if (orderError) {\n          if (this.placedOrder) {\n            this.placedOrder\n              .subscribe((component) => {\n                this.launchDialogService.clear(\n                  LAUNCH_CALLER.PLACE_ORDER_SPINNER\n                );\n                component.destroy();\n              })\n              .unsubscribe();\n            this.checkoutService.clearPlaceOrderState();\n          }\n        }\n\n        if (orderSuccess) {\n          this.onSuccess(orderSuccess);\n        }\n      })\n    );\n\n    this.subscription.add(\n      this.checkoutService\n        .getCurrentOrderType()\n        .subscribe((orderType) => (this.currentOrderType = orderType))\n    );\n\n    this.subscription.add(\n      this.checkoutReplenishmentFormService\n        .getScheduleReplenishmentFormData()\n        .subscribe((data) => {\n          this.scheduleReplenishmentFormData = data;\n\n          this.daysOfWeekNotChecked$.next(\n            data.daysOfWeek.length === 0 &&\n              data.recurrencePeriod === recurrencePeriod.WEEKLY\n          );\n        })\n    );\n  }\n\n  onSuccess(data: boolean): void {\n    if (data) {\n      switch (this.currentOrderType) {\n        case ORDER_TYPE.PLACE_ORDER: {\n          this.routingService.go({ cxRoute: 'orderConfirmation' });\n          break;\n        }\n\n        case ORDER_TYPE.SCHEDULE_REPLENISHMENT_ORDER: {\n          this.routingService.go({ cxRoute: 'replenishmentConfirmation' });\n          break;\n        }\n      }\n      this.checkoutReplenishmentFormService.resetScheduleReplenishmentFormData();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.launchDialogService.clear(LAUNCH_CALLER.PLACE_ORDER_SPINNER);\n    this.checkoutService.clearPlaceOrderState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { defaultPlaceOrderSpinnerLayoutConfig } from './default-place-order-spinner-layout.config';\nimport { PlaceOrderComponent } from './place-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    provideConfig(defaultPlaceOrderSpinnerLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  entryComponents: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  ActiveCartService,\n  Address,\n  Cart,\n  CheckoutCostCenterService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CostCenter,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  PaymentTypeService,\n  PromotionLocation,\n  PromotionResult,\n  TranslationService,\n  UserAddressService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\nimport {\n  checkoutPaymentSteps,\n  checkoutShippingSteps,\n  CheckoutStep,\n} from '../../model/checkout-step.model';\nimport { CheckoutStepType } from '../../model/index';\nimport { CheckoutStepService } from '../../services/index';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent {\n  iconTypes = ICON_TYPE;\n  checkoutStepType = CheckoutStepType;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected userAddressService: UserAddressService,\n    protected activeCartService: ActiveCartService,\n    protected translation: TranslationService,\n    protected checkoutStepService: CheckoutStepService,\n    protected promotionService: PromotionService,\n    protected paymentTypeService: PaymentTypeService,\n    protected checkoutCostCenterService: CheckoutCostCenterService,\n    protected userCostCenterService: UserCostCenterService\n  ) {}\n\n  get cart$(): Observable<Cart> {\n    return this.activeCartService.getActive();\n  }\n\n  get entries$(): Observable<OrderEntry[]> {\n    return this.activeCartService.getEntries();\n  }\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this.checkoutStepService.steps$;\n  }\n\n  get deliveryAddress$(): Observable<Address> {\n    return this.checkoutDeliveryService.getDeliveryAddress();\n  }\n\n  get deliveryMode$(): Observable<DeliveryMode> {\n    return this.checkoutDeliveryService.getSelectedDeliveryMode().pipe(\n      tap((selected: DeliveryMode) => {\n        if (selected === null) {\n          this.checkoutDeliveryService.loadSupportedDeliveryModes();\n        }\n      })\n    );\n  }\n\n  get paymentDetails$(): Observable<PaymentDetails> {\n    return this.checkoutPaymentService.getPaymentDetails();\n  }\n\n  get orderPromotions$(): Observable<PromotionResult[]> {\n    return this.promotionService.getOrderPromotions(this.promotionLocation);\n  }\n\n  get countryName$(): Observable<string> {\n    return this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address?.country?.isocode)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  get poNumber$(): Observable<string> {\n    return this.paymentTypeService.getPoNumber();\n  }\n\n  get paymentType$(): Observable<string> {\n    return this.paymentTypeService.getSelectedPaymentType();\n  }\n\n  get isAccountPayment$(): Observable<boolean> {\n    return this.paymentTypeService.isAccountPayment();\n  }\n\n  get costCenter$(): Observable<CostCenter> {\n    return this.userCostCenterService.getActiveCostCenters().pipe(\n      filter((costCenters) => Boolean(costCenters)),\n      switchMap((costCenters) => {\n        return this.checkoutCostCenterService.getCostCenter().pipe(\n          map((code) => {\n            return costCenters.find((cc) => cc.code === code);\n          })\n        );\n      })\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress?.country?.isocode;\n        }\n\n        let region = '';\n        if (\n          deliveryAddress &&\n          deliveryAddress.region &&\n          deliveryAddress.region.isocode\n        ) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getCostCenterCard(costCenter: CostCenter): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutPO.costCenter'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: costCenter?.name,\n          text: ['(' + costCenter?.unit.name + ')'],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [\n            deliveryMode.description,\n            deliveryMode.deliveryCost?.formattedValue\n              ? deliveryMode.deliveryCost?.formattedValue\n              : '',\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n      this.translation.translate('paymentForm.billingAddress'),\n    ]).pipe(\n      map(([textTitle, textExpires, billingAddress]) => {\n        const region = paymentDetails.billingAddress?.region?.isocode\n          ? paymentDetails.billingAddress?.region?.isocode + ', '\n          : '';\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n          paragraphs: [\n            {\n              title: billingAddress + ':',\n              text: [\n                paymentDetails.billingAddress?.firstName +\n                  ' ' +\n                  paymentDetails.billingAddress?.lastName,\n                paymentDetails.billingAddress?.line1,\n                paymentDetails.billingAddress?.town +\n                  ', ' +\n                  region +\n                  paymentDetails.billingAddress?.country?.isocode,\n                paymentDetails.billingAddress?.postalCode,\n              ],\n            },\n          ],\n        };\n      })\n    );\n  }\n\n  getPoNumberCard(poNumber: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutReview.poNumber'),\n      this.translation.translate('checkoutPO.noPoNumber'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => {\n        return {\n          title: textTitle,\n          textBold: poNumber ? poNumber : noneTextTitle,\n        };\n      })\n    );\n  }\n\n  getPaymentTypeCard(paymentType: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutProgress.methodOfPayment'),\n      this.translation.translate('paymentTypes.paymentType', {\n        context: paymentType,\n      }),\n    ]).pipe(\n      map(([textTitle, paymentTypeTranslation]) => {\n        return {\n          title: textTitle,\n          textBold: paymentTypeTranslation,\n        };\n      })\n    );\n  }\n\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\n    const step = this.checkoutStepService.getCheckoutStep(stepType);\n    return step && step.routeName;\n  }\n\n  shippingSteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) => checkoutShippingSteps.includes(step.type[0]));\n  }\n\n  paymentSteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) => checkoutPaymentSteps.includes(step.type[0]));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PromotionsModule } from '../promotions/promotions.module';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard and others here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  entryComponents: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  CheckoutService,\n  DaysOfWeek,\n  ORDER_TYPE,\n  recurrencePeriod,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\nimport { CheckoutReplenishmentFormService } from '../../services/checkout-replenishment-form-service';\n\n@Component({\n  selector: 'cx-schedule-replenishment-order',\n  templateUrl: './schedule-replenishment-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScheduleReplenishmentOrderComponent implements OnInit, OnDestroy {\n  private subscription: Subscription = new Subscription();\n\n  iconTypes = ICON_TYPE;\n  orderTypes = ORDER_TYPE;\n  daysOfWeek = Object.keys(DaysOfWeek).map((key) => DaysOfWeek[key]);\n  recurrencePeriodType = Object.keys(recurrencePeriod).map(\n    (key) => recurrencePeriod[key]\n  );\n\n  selectedOrderType$: Observable<\n    ORDER_TYPE\n  > = this.checkoutService.getCurrentOrderType();\n\n  isMonthly: Boolean = false;\n  isWeekly: Boolean = false;\n  currentDaysOfWeek: DaysOfWeek[] = [];\n  numberOfDays: string[];\n  numberOfWeeks: string[];\n  currentDate: string;\n  scheduleReplenishmentFormData: ScheduleReplenishmentForm;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected checkoutReplenishmentFormService: CheckoutReplenishmentFormService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.checkoutReplenishmentFormService\n        .getScheduleReplenishmentFormData()\n        .subscribe((data) => {\n          this.scheduleReplenishmentFormData = data;\n        })\n    );\n\n    this.initConfig();\n  }\n\n  changeOrderType(orderType: ORDER_TYPE): void {\n    this.checkoutService.setOrderType(orderType);\n  }\n\n  changeNumberOfDays(nDays: string): void {\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      numberOfDays: nDays,\n    });\n  }\n\n  changeNumberOfWeeks(nWeeks: string): void {\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      numberOfWeeks: nWeeks,\n    });\n  }\n\n  changeRecurrencePeriodType(type: string): void {\n    this.isWeekly = type === recurrencePeriod.WEEKLY;\n    this.isMonthly = type === recurrencePeriod.MONTHLY;\n\n    this.numberOfDays = this.isMonthly\n      ? this.createNumberStringArray(31)\n      : this.createNumberStringArray(30);\n\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      recurrencePeriod: type,\n    });\n  }\n\n  changeDayOfTheMonth(dayOfMonth: string): void {\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      nthDayOfMonth: dayOfMonth,\n    });\n  }\n\n  changeReplenishmentStartDate(date: string): void {\n    if (Boolean(date)) {\n      this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n        ...this.scheduleReplenishmentFormData,\n        replenishmentStartDate: date,\n      });\n    }\n  }\n\n  changeRepeatDays(day: DaysOfWeek, isChecked: boolean): void {\n    if (isChecked) {\n      this.currentDaysOfWeek = [...this.currentDaysOfWeek];\n\n      this.currentDaysOfWeek.push(day);\n\n      this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n        ...this.scheduleReplenishmentFormData,\n        daysOfWeek: this.currentDaysOfWeek,\n      });\n    } else {\n      const foundDay = this.currentDaysOfWeek.find((data) => day === data);\n\n      if (!foundDay) return;\n\n      const index = this.currentDaysOfWeek.indexOf(foundDay);\n      this.currentDaysOfWeek.splice(index, 1);\n\n      this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n        ...this.scheduleReplenishmentFormData,\n        daysOfWeek: this.currentDaysOfWeek,\n      });\n    }\n  }\n\n  hasDaysOfWeekChecked(day: DaysOfWeek): boolean {\n    return this.currentDaysOfWeek.includes(day);\n  }\n\n  currentISODate(date: string): string {\n    return date.split('T')[0];\n  }\n\n  private initConfig(): void {\n    this.isMonthly =\n      this.scheduleReplenishmentFormData.recurrencePeriod ===\n      recurrencePeriod.MONTHLY;\n\n    this.isWeekly =\n      this.scheduleReplenishmentFormData.recurrencePeriod ===\n      recurrencePeriod.WEEKLY;\n\n    this.currentDaysOfWeek = [...this.scheduleReplenishmentFormData.daysOfWeek];\n\n    this.numberOfDays = this.isMonthly\n      ? this.createNumberStringArray(31)\n      : this.createNumberStringArray(30);\n\n    this.numberOfWeeks = this.createNumberStringArray(12);\n\n    this.currentDate = this.scheduleReplenishmentFormData.replenishmentStartDate;\n  }\n\n  private createNumberStringArray(n: number): string[] {\n    return Array(n)\n      .fill(0)\n      .map((_, y) => (y + 1).toString());\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { ScheduleReplenishmentOrderComponent } from './schedule-replenishment-order.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, I18nModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutScheduleReplenishmentOrder: {\n          component: ScheduleReplenishmentOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ScheduleReplenishmentOrderComponent],\n  entryComponents: [ScheduleReplenishmentOrderComponent],\n  exports: [ScheduleReplenishmentOrderComponent],\n})\nexport class ScheduleReplenishmentOrderModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CheckoutDeliveryService,\n  Country,\n  ErrorModel,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  addresses$: Observable<Address[]>;\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField = true;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  regionsSub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  addressForm: FormGroup = this.fb.group({\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n    defaultAddress: [false],\n  });\n\n  constructor(\n    protected fb: FormBuilder,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    protected modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries: Country[]) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.userService.getTitles().pipe(\n      map((titles) => {\n        titles.sort(sortTitles);\n        const noneTitle = { code: '', name: 'Title' };\n        return [noneTitle, ...titles];\n      })\n    );\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions: Region[]) => {\n        const regionControl = this.addressForm.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.submitAddress.emit(this.addressForm.value);\n        } else if (results.decision === 'REJECT') {\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n          if (\n            results.errors.errors.some(\n              (error: ErrorModel) => error.subject === 'titleCode'\n            )\n          ) {\n            this.globalMessageService.add(\n              { key: 'addressForm.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          } else {\n            this.globalMessageService.add(\n              { key: 'addressForm.invalidAddress' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\n      this.addressForm.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n\n    this.addresses$ = this.userAddressService.getAddresses();\n  }\n\n  countrySelected(country: Country): void {\n    this.addressForm['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.addressForm['controls'].region['controls'].isocode.setValue(\n      region.isocode\n    );\n  }\n\n  toggleDefaultAddress(): void {\n    this.addressForm['controls'].defaultAddress.setValue(\n      this.addressForm.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.addressForm.valid) {\n      if (this.addressForm.get('region').value.isocode) {\n        this.regionsSub = this.regions$.pipe(take(1)).subscribe((regions) => {\n          const obj = regions.find(\n            (region) =>\n              region.isocode ===\n              this.addressForm.controls['region'].value.isocode\n          );\n          Object.assign(this.addressForm.value.region, {\n            isocodeShort: obj.isocodeShort,\n          });\n        });\n      }\n\n      if (this.addressForm.dirty) {\n        this.checkoutDeliveryService.verifyAddress(this.addressForm.value);\n      } else {\n        // address form value not changed\n        // ignore duplicate address\n        this.submitAddress.emit(undefined);\n      }\n    } else {\n      this.addressForm.markAllAsTouched();\n    }\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.addressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then((address) => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.addressForm.value.titleCode,\n                phone: this.addressForm.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.addressForm.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.checkoutDeliveryService.clearAddressVerificationResults();\n\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n\n    if (this.regionsSub) {\n      this.regionsSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport { FormErrorsModule } from '../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  entryComponents: [SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\n})\nexport class AddressFormModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutCostCenterService,\n  CheckoutDeliveryService,\n  PaymentTypeService,\n  TranslationService,\n  UserAddressService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit {\n  addressFormOpened = false;\n  forceLoader = false; // this helps with smoother steps transition\n  selectedAddress: Address;\n  doneAutoSelect = false;\n  isAccountPayment = false;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService,\n    protected paymentTypeService?: PaymentTypeService,\n    protected userCostCenterService?: UserCostCenterService,\n    protected checkoutCostCenterService?: CheckoutCostCenterService\n  ) {}\n\n  get isGuestCheckout(): boolean {\n    return this.activeCartService.isGuestCart();\n  }\n\n  get backBtnText(): string {\n    return this.checkoutStepService.getBackBntText(this.activatedRoute);\n  }\n\n  get isLoading$(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  get selectedAddress$(): Observable<Address> {\n    return this.checkoutDeliveryService.getDeliveryAddress().pipe(\n      tap((address) => {\n        if (\n          address &&\n          (this.selectedAddress === undefined ||\n            this.selectedAddress.id !== address.id)\n        ) {\n          this.selectedAddress = address;\n          if (this.forceLoader) {\n            this.next();\n          }\n        }\n      })\n    );\n  }\n\n  get cards$(): Observable<CardWithAddress[]> {\n    return combineLatest([\n      this.getSupportedAddresses(),\n      this.selectedAddress$,\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      tap(([addresses, selected]) =>\n        this.selectDefaultAddress(addresses, selected)\n      ),\n      map(([addresses, selected, textDefault, textShipTo, textSelected]) =>\n        (<any>addresses).map((address) => ({\n          address,\n          card: this.getCardContent(\n            address,\n            selected,\n            textDefault,\n            textShipTo,\n            textSelected\n          ),\n        }))\n      )\n    );\n  }\n\n  getSupportedAddresses(): Observable<Address[]> {\n    if (this.isAccountPayment) {\n      return this.checkoutCostCenterService.getCostCenter().pipe(\n        distinctUntilChanged(),\n        switchMap((selected) => {\n          this.doneAutoSelect = false;\n          return this.userCostCenterService.getCostCenterAddresses(selected);\n        })\n      );\n    }\n    return this.userAddressService.getAddresses();\n  }\n\n  selectDefaultAddress(addresses: Address[], selected: Address) {\n    if (\n      !this.doneAutoSelect &&\n      addresses &&\n      addresses.length &&\n      (!selected || Object.keys(selected).length === 0)\n    ) {\n      if (this.isAccountPayment) {\n        if (addresses.length === 1) {\n          this.selectAddress(addresses[0]);\n        }\n      } else {\n        selected = addresses.find((address) => address.defaultAddress);\n        if (selected) {\n          this.selectAddress(selected);\n        }\n      }\n      this.doneAutoSelect = true;\n    }\n  }\n\n  ngOnInit(): void {\n    if (\n      this.paymentTypeService &&\n      this.userCostCenterService &&\n      this.checkoutCostCenterService\n    ) {\n      this.paymentTypeService\n        .isAccountPayment()\n        .pipe(take(1))\n        .subscribe((isAccount) => (this.isAccountPayment = isAccount));\n    }\n\n    if (!this.isGuestCheckout && !this.isAccountPayment) {\n      this.userAddressService.loadAddresses();\n    }\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    };\n  }\n\n  selectAddress(address: Address): void {\n    this.checkoutDeliveryService.setDeliveryAddress(address);\n  }\n\n  addAddress(address: Address): void {\n    this.forceLoader = true;\n    this.checkoutDeliveryService.createAndSetAddress(address);\n  }\n\n  showNewAddressForm(): void {\n    this.addressFormOpened = true;\n  }\n\n  hideNewAddressForm(goPrevious: boolean = false): void {\n    this.addressFormOpened = false;\n    if (goPrevious) {\n      this.back();\n    }\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  entryComponents: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { CostCenterModule } from './components/cost-center/cost-center.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PaymentTypeModule } from './components/payment-type/payment-type.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ScheduleReplenishmentOrderModule } from './components/schedule-replenishment-order/schedule-replenishment-order.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    PaymentTypeModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    ScheduleReplenishmentOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n    CostCenterModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SkipLinkConfig {\n  skipLinks?: SkipLink[];\n}\n\nexport abstract class SkipLink {\n  key: string;\n  i18nKey: string;\n  target?: HTMLElement;\n  position?: SkipLinkScrollPosition;\n}\n\nexport enum SkipLinkScrollPosition {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkipLinkService {\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\n\n  constructor(\n    protected config: SkipLinkConfig,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  getSkipLinks(): Observable<SkipLink[]> {\n    return this.skipLinks$;\n  }\n\n  add(key: string, target: HTMLElement): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      const existing: SkipLink[] = this.skipLinks$.value;\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\n        target,\n        i18nKey: found.i18nKey,\n        position: found.position,\n        key,\n      });\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  remove(key: string): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      let existing: SkipLink[] = this.skipLinks$.value;\n      existing = existing.filter((skipLink) => skipLink.key !== key);\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  scrollToTarget(skipLink: SkipLink): void {\n    const target =\n      skipLink.target instanceof HTMLElement\n        ? skipLink.target\n        : (skipLink.target as Element).parentElement;\n\n    // focus first focusable element in the\n    const firstFocusable =\n      this.keyboardFocusService.findFirstFocusable(target) || target;\n\n    // we force a tabindex if not available, to ensure we can focus into the element\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\n    if (!hasTabindex) {\n      firstFocusable.setAttribute('tabindex', '-1');\n    }\n\n    firstFocusable.focus();\n\n    // drop the tmp tabindex\n    if (!hasTabindex) {\n      firstFocusable.removeAttribute('tabindex');\n    }\n  }\n\n  protected getSkipLinkIndexInArray(key: string): number {\n    let index: number = this.config.skipLinks.findIndex(\n      (skipLink) => skipLink.key === key\n    );\n\n    while (index > 0) {\n      index--;\n      const previous: SkipLink = this.config.skipLinks[index];\n      if (previous) {\n        const existing: SkipLink[] = this.skipLinks$.value;\n        const found: number = existing.findIndex(\n          (skipLink) => skipLink.key === previous.key\n        );\n        if (found > -1) {\n          return found + 1;\n        }\n      }\n    }\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SkipLink } from '../config/skip-link.config';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Component({\n  selector: 'cx-skip-link',\n  templateUrl: './skip-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkipLinkComponent {\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\n\n  constructor(private skipLinkService: SkipLinkService) {}\n\n  scrollToTarget(skipLink: SkipLink): void {\n    this.skipLinkService.scrollToTarget(skipLink);\n  }\n}\n","import { SkipLinkConfig } from './skip-link.config';\n\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\n  skipLinks: [\n    {\n      key: 'cx-header',\n      i18nKey: 'skipLink.labels.header',\n    },\n    {\n      key: 'cx-main',\n      i18nKey: 'skipLink.labels.main',\n    },\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\n  ],\n};\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Directive({\n  selector: '[cxSkipLink]',\n})\nexport class SkipLinkDirective implements OnInit, OnDestroy {\n  @Input() cxSkipLink: string;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected skipLinkService: SkipLinkService\n  ) {}\n\n  ngOnInit(): void {\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.skipLinkService.remove(this.cxSkipLink);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\nimport {\n  ConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\nimport { SkipLinkComponent } from './component/skip-link.component';\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\nimport { SkipLinkDirective } from './directive/skip-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(defaultSkipLinkConfig),\n    KeyboardFocusModule,\n  ],\n  declarations: [SkipLinkComponent, SkipLinkDirective],\n  exports: [SkipLinkDirective],\n  entryComponents: [SkipLinkComponent],\n\n  providers: [\n    provideDefaultConfig(defaultSkipLinkConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: skipLinkFactory,\n      deps: [ComponentFactoryResolver, OutletService],\n      multi: true,\n    },\n  ],\n})\nexport class SkipLinkModule {}\n\n/**\n * Adds the skip link component before the cx-storefront.\n */\nexport function skipLinkFactory(\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService\n) {\n  const isReady = () => {\n    const factory = componentFactoryResolver.resolveComponentFactory(\n      SkipLinkComponent\n    );\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\n  };\n  return isReady;\n}\n","import { LayoutConfig } from './layout-config';\n\nexport const defaultLayoutConfig: LayoutConfig = {\n  breakpoints: {\n    xs: 576,\n    sm: 768,\n    md: 992,\n    lg: 1200,\n    xl: {\n      min: 1200,\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { Direction } from './direction.model';\n\n/**\n * The direction config provides an easy way to configure \"ltr\" versus \"rtl\" direction\n * for the storefront. The direction can be configured to detect the direction by language.\n *\n * The following configuration detects rtl languages by isoCode for Arabic and Hebrew:\n *\n * ```typescript\n * direction: {\n *   detect: true,\n *   default: DirectionMode.LTR,\n *   rtlLanguages: ['ar', 'he']\n * }\n * ```\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class DirectionConfig {\n  direction?: Direction;\n}\n","import { DirectionConfig } from './direction.config';\nimport { DirectionMode } from './direction.model';\n\nexport const defaultDirectionConfig: DirectionConfig = {\n  direction: {\n    detect: true,\n    default: DirectionMode.LTR,\n    // we're not polluting the system with all defaults for ltr, but add 2 common used\n    // languages (hebrew and arabic) to easily demo directionality\n    // see https://meta.wikimedia.org/wiki/Template:List_of_language_names_ordered_by_code\n    rtlLanguages: ['he', 'ar'],\n  },\n};\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  ConfigInitializerService,\n  LanguageService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { DirectionConfig } from './config/direction.config';\nimport { Direction, DirectionMode } from './config/direction.model';\n\n/**\n * The `DirectionService` can be used to add the direction to the overall storefront or individual elements.\n * By default, the direction is added to the `html` element (i.e. `<html dir=\"ltr\">`). The API of this service\n * does however provide methods to add direction to individual elements if needed.\n *\n * The direction is configurable and allows for language driven direction configuration.\n *\n * To react to the active language, the service subscribes to the active language in the initialize method. This\n * is called from an APP_INITIALIZER method and should only happen once.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DirectionService implements OnDestroy {\n  protected config: Direction;\n  protected startsDetecting = false;\n\n  protected subscription = new Subscription();\n\n  constructor(\n    protected configInit: ConfigInitializerService,\n    protected languageService: LanguageService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Initializes the layout direction for the storefront.\n   */\n  initialize(): Promise<void> {\n    return this.configInit\n      .getStableConfig('direction')\n      .then((config: DirectionConfig) => {\n        this.config = config?.direction;\n        if (this.config?.detect) {\n          this.detect();\n        } else {\n          this.setDirection(\n            this.winRef.document.documentElement,\n            this.config?.default\n          );\n        }\n      });\n  }\n\n  /**\n   * Observes the _active_ language and set the required direction for the given language.\n   * The method is guarded to ensure that the active language is observed only once.\n   */\n  protected detect() {\n    if (this.startsDetecting) {\n      return;\n    }\n    this.subscription.add(\n      this.languageService\n        .getActive()\n        .subscribe((isoCode: string) =>\n          this.setDirection(\n            this.winRef.document.documentElement,\n            this.getDirection(isoCode)\n          )\n        )\n    );\n    this.startsDetecting = true;\n  }\n\n  /**\n   * Sets the direction attribute for the given element. If the direction is undefined, the `dir`\n   * attribute is removed.\n   */\n  setDirection(el: HTMLElement, direction: DirectionMode): void {\n    if (direction) {\n      el.setAttribute('dir', direction);\n    } else {\n      el.removeAttribute('dir');\n    }\n  }\n\n  /**\n   * Gets the `DirectionMode` for the given language isoCode. The language isoCode is compared\n   * to the configured list of languages(`direction.rtlLanguages` vs `direction.ltrLanguages`).\n   *\n   * If no language is given, or no language mapping could be found, we fallback to the default\n   * `direction.mode`.\n   */\n  getDirection(language?: string): DirectionMode {\n    if (language && this.config?.rtlLanguages?.includes(language)) {\n      return DirectionMode.RTL;\n    }\n    if (language && this.config?.ltrLanguages?.includes(language)) {\n      return DirectionMode.LTR;\n    }\n    return this.config?.default;\n  }\n\n  ngOnDestroy(): void {\n    // Cleans up the subscription, to avoid memory leaks in SSR.\n    this.subscription.unsubscribe();\n  }\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FeatureConfigService, provideDefaultConfig } from '@spartacus/core';\nimport { defaultDirectionConfig } from './config/default-direction.config';\nimport { DirectionService } from './direction.service';\n\nexport function initHtmlDirAttribute(\n  directionService: DirectionService,\n  featureConfigService: FeatureConfigService\n) {\n  const result = () => {\n    if (featureConfigService.isLevel('2.1')) {\n      return directionService.initialize();\n    }\n  };\n  return result;\n}\n\n/**\n * Provides a configuration and APP_INITIALIZER to add the correct (language drive) html direction.\n */\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: initHtmlDirAttribute,\n      deps: [DirectionService, FeatureConfigService],\n    },\n    provideDefaultConfig(defaultDirectionConfig),\n  ],\n})\nexport class DirectionModule {}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter((event) => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  exports: [HamburgerMenuComponent],\n  entryComponents: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","import { NgModule } from '@angular/core';\nimport { provideConfig } from '@spartacus/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { defaultLayoutConfig } from './config/default-layout.config';\nimport { DirectionModule } from './direction/direction.module';\nimport { LaunchDialogModule } from './launch-dialog/index';\n\n@NgModule({\n  imports: [OutletRefModule, LaunchDialogModule.forRoot(), DirectionModule],\n  providers: [provideConfig(defaultLayoutConfig)],\n  exports: [OutletRefModule],\n})\nexport class LayoutModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { CmsComponentsService } from '../../services/cms-components.service';\n\n/**\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\n *\n * The Page slot host element will be supplemented with css classes so that the layout\n * can be fully controlled by customers:\n * - The page slot _position_ is added as a css class by default.\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\n */\n@Component({\n  selector: 'cx-page-slot,[cx-page-slot]',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent implements OnInit, OnDestroy {\n  /**\n   * The position represents the unique key for a page slot on a single page, but can\n   * be reused cross pages.\n   *\n   * The position is used to find the CMS components for the page slot. It is also\n   * added as an additional CSS class so that layout can be applied.\n   */\n  @Input() set position(value: string) {\n    this.position$.next(value);\n  }\n  get position(): string {\n    return this.position$.value;\n  }\n\n  /**\n   * Maintains css classes introduced by the host and adds additional classes.\n   */\n  @Input() @HostBinding() class: string;\n\n  /**\n   * Indicates that the page slot is the last page slot above the fold.\n   */\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\n\n  /**\n   * Indicates that the components of the page slot haven't been loaded as long\n   * as the isPending state is true.\n   */\n  @HostBinding('class.cx-pending') isPending = true;\n\n  /**\n   * Indicates that the page slot doesn't contain any components. This is no\n   * longer used in spartacus, but kept for backwards compatibility.\n   */\n  @HostBinding('class.has-components') @Input() hasComponents = false;\n\n  protected position$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  components: ContentSlotComponentData[];\n\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap((position) => this.cmsService.getContentSlot(position)),\n    distinctUntilChanged(this.isDistinct)\n  );\n\n  /** Observes the components for the given page slot. */\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\n    map((slot) => slot?.components ?? [])\n  );\n\n  protected subscription: Subscription = new Subscription();\n\n  /** Keeps track of the pending components that must be loaded for the page slot */\n  private pendingComponentCount = 0;\n\n  /** Tracks the last used position, in case the page slot is used dynamically */\n  private lastPosition: string;\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected elementRef: ElementRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\n        this.components = value?.components || [];\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  protected decorate(slot: ContentSlotData): void {\n    let cls = this.class || '';\n\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\n      cls = cls.replace(this.lastPosition, '');\n    }\n    if (this.position$.value) {\n      cls += ` ${this.position$.value}`;\n      this.lastPosition = this.position$.value;\n    }\n\n    // host bindings\n    this.pending = slot?.components?.length || 0;\n    this.hasComponents = slot?.components?.length > 0;\n    if (cls && cls !== this.class) {\n      this.class = cls;\n    }\n\n    this.addSmartEditSlotClass(slot);\n  }\n\n  /**\n   * Sets the pending count for the page slot components. Once all pending components are\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\n   */\n  protected set pending(count: number) {\n    this.pendingComponentCount = count;\n    this.isPending = this.pendingComponentCount > 0;\n  }\n\n  protected get pending(): number {\n    return this.pendingComponentCount;\n  }\n\n  /*\n   * Is triggered when a component is added to the view. This is used to\n   * update the pending count\n   */\n  isLoaded(loadState: boolean) {\n    if (loadState) {\n      this.pending--;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * The `DeferLoadingStrategy` indicates whether the component should be\n   * rendered instantly or whether it should be deferred.\n   */\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\n    const deferLoading = this.cmsComponentsService.getDeferLoadingStrategy(\n      componentType\n    );\n    return { deferLoading };\n  }\n\n  protected isDistinct(old: ContentSlotData, current: ContentSlotData) {\n    return (\n      current.components &&\n      old.components?.length === current.components.length &&\n      !old.components.find(\n        (el, index) => el.uid !== current.components[index].uid\n      )\n    );\n  }\n\n  private addSmartEditSlotClass(slot: ContentSlotData): void {\n    if (slot) {\n      this.dynamicAttributeService.addDynamicAttributes(\n        this.elementRef.nativeElement,\n        this.renderer,\n        { slotData: slot }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  providers: [],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {}\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // Prints warn messages for missing layout configs.\n  // The warnings are only printed once per config\n  // to not pollute the console log.\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged((a, b) => {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n\n  /**\n   * Returns an observable with the last page slot above-the-fold\n   * for the given pageTemplate / breakpoint.\n   *\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\n   */\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => {\n        if (!this.config.layoutSlots) {\n          // no layout config available\n          return null;\n        }\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\n        const config = this.getResponsiveSlotConfig(\n          <LayoutSlotConfig>pageTemplateConfig,\n          'pageFold',\n          breakpoint\n        );\n        return config ? config.pageFold : null;\n      })\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      const pageSlots = Object.keys(page.slots);\n      return config.slots.filter((slot) => pageSlots.includes(slot));\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter((page) => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuration\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!layoutSlotConfig || !breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.slice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // tslint:disable-next-line: no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly templateName$: Observable<string> = this.pageLayoutService\n    .templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap((section) => (section ? of(section) : this.templateName$))\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap((section) => this.pageLayoutService.getSlots(section))\n  );\n\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\n    switchMap((templateName) =>\n      this.pageLayoutService.getPageFoldSlot(templateName)\n    ),\n    distinctUntilChanged()\n  );\n\n  constructor(protected pageLayoutService: PageLayoutService) {}\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PageLayoutService } from './page-layout.service';\n\n/**\n * Directive that Adds a style class to the host element based on the cms page\n * template. The CMS page template is driven by the CMS structure, which is configurable\n * in the backend.\n *\n * The style class is added to the host element of the directive. The host element is resolved\n * from the `elementRef`, or, in case the directive is used in an `ng-template`, by the\n * `TemplateRef`.\n *\n * An example of the usage is given below:\n *\n * ```html\n * <cx-storefront class=\"LandingPageTemplate\">\n *   <ng-template cxPageTemplateStyle>...</ng-template>\n * <cx-storefront>\n * ```\n *\n * The style class can also be provided by an input:\n *\n * ```html\n * <ng-template [cxPageTemplateStyle]=\"pageTemplateName\">\n * ```\n *\n */\n@Directive({\n  selector: '[cxPageTemplateStyle]',\n})\nexport class PageTemplateDirective implements OnInit, OnDestroy {\n  /**\n   * Indicates whether this component is driven by an input template or should\n   * observe the CMS driven page layout template.\n   */\n  protected useTemplateFromInput: boolean;\n\n  /**\n   * Adds a style class to the host element based on the cms page template, unless\n   * the class is given as an input.\n   *\n   * The host element is either the actual host, or the parent element in case this\n   * is used inside an `ng-template`.\n   */\n  @Input('cxPageTemplateStyle') set setTemplate(template: string) {\n    if (template && template !== '') {\n      this.useTemplateFromInput = true;\n      this.addStyleClass(template);\n    } else if (this.useTemplateFromInput) {\n      // we only clear the template if it has been provided by the input before\n      this.clear();\n    }\n  }\n\n  // Maintains the page template subscription\n  protected subscription: Subscription = new Subscription();\n\n  /**\n   * Holds the current page template, so we can remove previous page templates\n   * from the element classList.\n   */\n  protected currentTemplate: string;\n\n  constructor(\n    protected pageLayoutService: PageLayoutService,\n    protected elementRef: ElementRef,\n    @Optional() protected templateRef: TemplateRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.useTemplateFromInput) {\n      this.subscription.add(\n        this.pageLayoutService.templateName$.subscribe((template) =>\n          this.addStyleClass(template)\n        )\n      );\n    }\n  }\n\n  /**\n   * Adds the page template as a style class to the given element. If any\n   * page template was added before, we clean it up.\n   *\n   * We'll not use hostBinding for the style class, as it will potential drop\n   * an existing class name on the host. This is why we need to work with\n   * the lower level change detection api.\n   */\n  protected addStyleClass(template: string, el?: HTMLElement): void {\n    this.clear(el);\n    if (template) {\n      this.currentTemplate = template;\n      (el ?? this.host).classList.add(this.currentTemplate);\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Cleans up the class host binding, if a template class was assigned before.\n   */\n  protected clear(el?: HTMLElement) {\n    if (this.currentTemplate) {\n      (el ?? this.host).classList?.remove(this.currentTemplate);\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Returns the host element (`HTMLElement`).\n   *\n   * If the directive is used on an `ng-template`, we take the parent element,\n   * to ensure that we're not ending up with a comment.\n   */\n  protected get host(): HTMLElement {\n    return !!this.templateRef\n      ? this.templateRef.elementRef.nativeElement.parentElement\n      : this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageTemplateDirective } from './page-template.directive';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent, PageTemplateDirective],\n  exports: [PageLayoutComponent, PageTemplateDirective],\n})\nexport class PageLayoutModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddToHomeScreenService {\n  protected deferredEvent: any;\n\n  protected canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    protected config: PWAModuleConfig,\n    protected globalMessageService: GlobalMessageService,\n    protected winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        (event) => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit, Directive } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ServiceWorkerModule.register('/ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultPWAModuleConfig),\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { LanguageService, WindowRef } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n) {\n  const result = () => {\n    languageService.getActive().subscribe((lang) => {\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\n    });\n  };\n  return result;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService implements OnDestroy {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  private subscription: Subscription;\n\n  init() {\n    this.subscription = this.pageMetaService\n      .getMeta()\n      .pipe(filter(Boolean))\n      .subscribe((meta: PageMeta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\n  }\n\n  protected set title(title: string) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string) {\n    this.addTag({ name: 'description', content: value });\n  }\n\n  protected set image(imageUrl: string) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[]) {\n    if (value) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  protected addTag(meta: MetaDefinition) {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { SchemaBuilder } from './builders/schema.interface';\nimport { SCHEMA_BUILDER } from './builders/tokens';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StructuredDataFactory implements OnDestroy {\n  constructor(\n    private scriptBuilder: JsonLdScriptFactory,\n    @Optional()\n    @Inject(SCHEMA_BUILDER)\n    private builders: SchemaBuilder[]\n  ) {}\n\n  private subscription: Subscription;\n\n  build() {\n    this.subscription = this.collectSchemas().subscribe((schema: {}[]) => {\n      this.scriptBuilder.build(schema);\n    });\n  }\n\n  private collectSchemas(): Observable<any[]> {\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\n      return of();\n    }\n    return combineLatest(\n      this.builders.map((builder) => builder.build())\n    ).pipe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  FocusConfig,\n  KeyboardFocusService,\n} from '../a11y/keyboard-focus/index';\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  // required by esc focus\n  @HostBinding('tabindex') tabindex = '0';\n\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\n\n  private keyboardFocusConfig: FocusConfig = {\n    focusOnEscape: true,\n    focusOnDoubleEscape: true,\n  };\n\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    this.keyboardFocusService.handleEscape(\n      this.elementRef.nativeElement,\n      this.keyboardFocusConfig,\n      event\n    );\n  }\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe((val) => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: MouseEvent) {\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FeaturesConfigModule } from '@spartacus/core';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\nimport { AnonymousConsentsDialogModule } from '../../shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module';\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\nimport { StorefrontComponent } from './storefront.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageSlotModule,\n    AnonymousConsentsDialogModule,\n    FeaturesConfigModule,\n\n    SkipLinkModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class MainModule {}\n","import { Injectable, Injector } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map((guardClass) => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected translation: TranslationService,\n    protected translationChunk: TranslationChunkService\n  ) {}\n\n  loadForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  CmsComponentChildRoutesConfig,\n  CmsRoute,\n  deepMerge,\n  PageContext,\n  PageType,\n} from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsComponentsService } from './cms-components.service';\n\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\n@Injectable({ providedIn: 'root' })\nexport class CmsRoutesImplService {\n  constructor(\n    private router: Router,\n    private cmsComponentsService: CmsComponentsService\n  ) {}\n\n  private cmsRouteExists(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean {\n    if (this.cmsRouteExists(currentPageLabel)) {\n      return true;\n    }\n\n    const childRoutesConfig = this.cmsComponentsService.getChildRoutes(\n      componentTypes\n    );\n\n    if (childRoutesConfig?.children?.length) {\n      if (\n        this.updateRouting(pageContext, currentPageLabel, childRoutesConfig)\n      ) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(\n    pageContext: PageContext,\n    pageLabel: string,\n    childRoutesConfig: CmsComponentChildRoutesConfig\n  ): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageLabel.startsWith('/') &&\n      pageLabel.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageLabel.substr(1),\n        component: PageLayoutComponent,\n        children: childRoutesConfig.children,\n        data: deepMerge({}, childRoutesConfig?.parent?.data ?? {}, {\n          cxCmsRouteContext: {\n            type: pageContext.type,\n            id: pageLabel,\n          },\n        }),\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PageContext } from '@spartacus/core';\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\n\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\n// After #7070, this class should be replaced with a real implementation.\n@Injectable({\n  providedIn: 'root',\n  useExisting: CmsRoutesImplService,\n})\nexport abstract class CmsRoutesService {\n  abstract handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  Page,\n  PageContext,\n  PageType,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CmsComponentsService } from '../services/cms-components.service';\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n/**\n * Helper service for `CmsPageGuard`\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuardService {\n  constructor(\n    protected semanticPathService: SemanticPathService,\n    protected cmsService: CmsService,\n    protected cmsRoutes: CmsRoutesService,\n    protected cmsI18n: CmsI18nService,\n    protected cmsGuards: CmsGuardsService,\n    protected cmsComponentsService: CmsComponentsService\n  ) {}\n\n  /**\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\n   *\n   * Based on `cmsComponents` config for the components in the page:\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\n   * - If all components' guards emitted true, then the route can be activated\n   * - Then we trigger loading of configured i18n chunks in parallel\n   * - And we register the configured children routes of cms components\n   *\n   * @param pageContext current cms page context\n   * @param pageData cms page data\n   * @param route activated route snapshot\n   * @param state router state snapshot\n   *\n   * @returns boolean observable - whether the route can be activated\n   */\n  canActivatePage(\n    pageContext: PageContext,\n    pageData: Page,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      take(1),\n      switchMap((componentTypes) =>\n        this.cmsComponentsService.determineMappings(componentTypes)\n      ),\n      switchMap((componentTypes) =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url,\n            pageLabel\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  /**\n   * Activates the \"NOT FOUND\" cms page.\n   *\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\n   */\n  canActivateNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\n      switchMap((notFoundPage) => {\n        if (notFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap((notFoundIndex) => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n            }),\n            switchMap((notFoundIndex) =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter((index) => index === notFoundIndex)\n              )\n            ),\n            switchMap(() =>\n              this.canActivatePage(pageContext, notFoundPage, route, state)\n            )\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  ProtectedRoutesGuard,\n  RouteLoadStrategy,\n  RoutingConfigService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\nimport { CmsPageGuardService } from './cms-page-guard.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected cmsService: CmsService,\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\n    protected service: CmsPageGuardService,\n    protected routingConfig: RoutingConfigService\n  ) {}\n\n  /**\n   * Tries to load the CMS page data for the anticipated route and returns:\n   * - `true` - if it can be activated\n   * - `false` - if it cannot be activated\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\n   *\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\n   * based on their configuration (`cmsComponents` config).\n   *\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\n   */\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.protectedRoutesGuard.canActivate(route).pipe(\n      switchMap((canActivate) =>\n        canActivate\n          ? this.routingService.getNextPageContext().pipe(\n              switchMap((pageContext) =>\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\n                  first(),\n                  switchMap((pageData) =>\n                    pageData\n                      ? this.service.canActivatePage(\n                          pageContext,\n                          pageData,\n                          route,\n                          state\n                        )\n                      : this.service.canActivateNotFoundPage(\n                          pageContext,\n                          route,\n                          state\n                        )\n                  )\n                )\n              )\n            )\n          : of(false)\n      )\n    );\n  }\n\n  /**\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\n   */\n  private shouldReload(): boolean {\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\n  }\n}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector) {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: { paths: ['login'], protected: false },\n  register: { paths: ['login/register'], protected: false },\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\n  resetPassword: { paths: ['login/pw/change'], protected: false },\n  logout: { paths: ['logout'] },\n  checkoutLogin: { paths: ['checkout-login'] },\n\n  checkout: { paths: ['checkout'] },\n  checkoutPaymentType: { paths: ['checkout/payment-type'] },\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\n  orderConfirmation: { paths: ['order-confirmation'] },\n  replenishmentConfirmation: { paths: ['replenishment/confirmation'] },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  orders: {\n    paths: ['my-account/orders'],\n  },\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderGuest: {\n    paths: ['guest/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturn: {\n    paths: ['my-account/order/return/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturnConfirmation: {\n    paths: ['my-account/order/return/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancel: {\n    paths: ['my-account/order/cancel/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancelConfirmation: {\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  returnRequestDetails: {\n    paths: ['my-account/return-request/:returnCode'],\n    paramsMapping: { returnCode: 'rma' },\n  },\n  coupons: { paths: ['my-account/coupons'] },\n  couponClaim: {\n    paths: ['my-account/coupon/claim/:couponCode'],\n    paramsMapping: { couponCode: 'code' },\n  },\n  replenishmentOrders: {\n    paths: ['my-account/my-replenishments'],\n  },\n  replenishmentDetails: {\n    paths: ['my-account/my-replenishment/:replenishmentOrderCode'],\n    paramsMapping: { replenishmentOrderCode: 'replenishmentOrderCode' },\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function getSuffixUrlMatcher({\n  marker,\n  paramName,\n  precedingParamName,\n}: {\n  marker: string;\n  paramName: string;\n  precedingParamName?: string;\n}) {\n  precedingParamName = precedingParamName || 'param';\n  const matcher = function suffixUrlMatcher(\n    segments: UrlSegment[]\n  ): UrlMatchResult | null {\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n    if (markerIndex === -1 || isMarkerLastSegment) {\n      return null;\n    }\n\n    const paramIndex = markerIndex + 1;\n    const posParams: { [name: string]: UrlSegment } = {\n      [paramName]: segments[paramIndex],\n    };\n\n    for (let i = 0; i < markerIndex; i++) {\n      posParams[`${precedingParamName}${i}`] = segments[i];\n    }\n\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\n  };\n\n  if (isDevMode()) {\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\n  }\n\n  return matcher;\n}\n\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { Injectable } from '@angular/core';\nimport { PageMeta, PageMetaService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaBuilder } from '../schema.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\n  constructor(protected pageMetaService: PageMetaService) {}\n\n  build(): Observable<any> {\n    return this.pageMetaService\n      .getMeta()\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\n  }\n\n  protected collect(pageMeta: PageMeta): any {\n    if (!pageMeta?.breadcrumbs) {\n      return;\n    }\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@id': crumb.link,\n          name: crumb.label,\n        },\n      };\n    });\n\n    if (pageMeta.title) {\n      crumbs.push({\n        '@type': 'ListItem',\n        position: crumbs.length + 1,\n        item: {\n          '@id': pageMeta.title,\n          name: pageMeta.title,\n        },\n      });\n    }\n\n    return {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: crumbs,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product reviews, see https://schema.org/Review.\n * The data includes the aggregated product rating and the individual reviews.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\n  constructor(private reviewService: ProductReviewService) {}\n\n  build(product: Product): Observable<any> {\n    return this.reviewService.getByProductCode(product.code).pipe(\n      filter(Boolean),\n      map((reviews: Review[]) => {\n        return {\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\n          review: reviews.map((review) => this.buildReviews(review)),\n        };\n      })\n    );\n  }\n\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\n    const aggregated: any = {\n      '@type': 'AggregateRating',\n    };\n    if (product.averageRating) {\n      aggregated.ratingValue = product.averageRating;\n    }\n    if (reviews) {\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\n    }\n    return aggregated;\n  }\n\n  private buildReviews(review: Review) {\n    const reviewSchema: any = {\n      '@type': 'review',\n    };\n\n    if (review.principal && review.principal.name) {\n      reviewSchema.author = review.principal.name;\n    }\n    if (review.date) {\n      const date = new Date(review.date);\n      reviewSchema.datePublished = `${date.getFullYear()}-${\n        date.getMonth() + 1\n      }-${date.getDate()}`;\n    }\n    if (review.headline) {\n      reviewSchema.name = review.headline;\n    }\n    if (review.comment) {\n      reviewSchema.description = review.comment;\n    }\n    if (review.rating) {\n      reviewSchema.reviewRating = {\n        '@type': 'Rating',\n        ratingValue: review.rating.toString(),\n      };\n    }\n\n    return reviewSchema;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\n\n/**\n * Adds the minimal structured data for the product, see https://schema.org/product.\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\n * using the `JSONLD_PRODUCT_BUILDER` token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSchemaBuilder implements SchemaBuilder {\n  constructor(\n    private currentProduct: CurrentProductService,\n    @Optional()\n    @Inject(JSONLD_PRODUCT_BUILDER)\n    protected builders: JsonLdBuilder<Product>[]\n  ) {}\n\n  build(): Observable<any> {\n    return this.currentProduct.getProduct().pipe(\n      switchMap((product: Product) => {\n        if (product) {\n          return combineLatest(this.collect(product)).pipe(\n            map((res: {}[]) => Object.assign({}, ...res))\n          );\n        }\n        return of({});\n      })\n    );\n  }\n\n  protected collect(product: Product): Observable<any>[] {\n    if (!product || !product.code) {\n      return [];\n    }\n    const builders = this.builders\n      ? this.builders.map((builder) => builder.build(product))\n      : [];\n    return [\n      of({\n        '@context': 'http://schema.org',\n        '@type': 'Product',\n      }),\n      ...builders,\n    ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<\n    Observable<ContentSlotComponentData>[]\n  > = this.componentData$.pipe(\n    map((data) => data.banners.trim().split(' ')),\n    map((codes) => codes.map((code) => this.cmsService.getComponentData(code)))\n  );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\n  providers: [\n    provideDefaultConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n  ],\n  declarations: [BannerCarouselComponent],\n  entryComponents: [BannerCarouselComponent],\n  exports: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  entryComponents: [BannerComponent],\n  exports: [BannerComponent],\n})\nexport class BannerModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n  entryComponents: [LinkComponent],\n})\nexport class LinkModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParagraphComponent } from './paragraph.component';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n  entryComponents: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  CmsService,\n  CMSTabParagraphContainer,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, take, switchMap } from 'rxjs/operators';\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  activeTabNum = 0;\n\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\n    ComponentWrapperDirective\n  >;\n\n  tabTitleParams: Observable<any>[] = [];\n\n  subscription: Subscription;\n\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService,\n    winRef?: WindowRef,\n    // tslint:disable-next-line:unified-signatures\n    breakpointService?: BreakpointService\n  );\n  /**\n   * @deprecated since 2.1\n   */\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService,\n    winRef?: WindowRef\n  );\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    protected cmsService: CmsService,\n    protected winRef?: WindowRef,\n    protected breakpointService?: BreakpointService\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    distinctUntilChanged((x, y) => x?.components === y?.components),\n    switchMap((data) =>\n      combineLatest(\n        (data?.components ?? '').split(' ').map((component) =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map((tab) => {\n              if (!tab) {\n                return undefined;\n              }\n\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n\n              return {\n                ...tab,\n                title: `${data.uid}.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number, event?: MouseEvent): void {\n    this.breakpointService\n      ?.isDown(BREAKPOINT.sm)\n      .pipe(take(1))\n      .subscribe((res) => {\n        if (res) {\n          this.activeTabNum = this.activeTabNum === tabNum ? -1 : tabNum;\n          if (event && event?.target) {\n            const target = event.target as HTMLElement;\n            const parentNode = target.parentNode as HTMLElement;\n            this.winRef?.nativeWindow?.scrollTo(0, parentNode.offsetTop);\n          }\n        } else {\n          this.activeTabNum = tabNum;\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.activeTabNum =\n      this.winRef?.nativeWindow?.history?.state?.activeTab ?? this.activeTabNum;\n  }\n\n  ngAfterViewInit(): void {\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\n    // In this case, the title parameters are directly pulled from them.\n    // If the sub cms components data does not exist, it should should be loaded first.\n    // In this case, listen to the changes to wait for them to be created.\n    if (this.children.length > 0) {\n      this.getTitleParams(this.children);\n    } else {\n      this.subscription = this.children.changes.subscribe(\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\n          this.getTitleParams(tabComps)\n      );\n    }\n  }\n\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\n    children.forEach((comp) => {\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\n      } else {\n        this.tabTitleParams.push(null);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [TabParagraphContainerComponent],\n  entryComponents: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressBookComponentService {\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  TranslationService,\n  UserAddressService,\n  CheckoutDeliveryService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { AddressBookComponentService } from './address-book.component.service';\nimport { Card } from '../../../shared/components/card';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  cards$: Observable<Card[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n  editCard: string;\n\n  constructor(\n    public service: AddressBookComponentService,\n    protected translation: TranslationService,\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n\n  getCardContent(address: Address) {\n    return combineLatest([\n      this.translation.translate('addressCard.default'),\n      this.translation.translate('addressCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('common.edit'),\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\n    ]).pipe(\n      map(\n        ([\n          defaultText,\n          setAsDefaultText,\n          textDelete,\n          textEdit,\n          textVerifyDeleteMsg,\n        ]) => {\n          let region = '';\n\n          if (address.region && address.region.isocode) {\n            region = address.region.isocode + ', ';\n          }\n\n          const actions: { name: string; event: string }[] = [];\n          if (!address.defaultAddress) {\n            actions.push({ name: setAsDefaultText, event: 'default' });\n          }\n          actions.push({ name: textEdit, event: 'edit' });\n          actions.push({ name: textDelete, event: 'delete' });\n\n          return {\n            textBold: address.firstName + ' ' + address.lastName,\n            text: [\n              address.line1,\n              address.line2,\n              address.town + ', ' + region + address.country.isocode,\n              address.postalCode,\n              address.phone,\n            ],\n            actions: actions,\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\n            deleteMsg: textVerifyDeleteMsg,\n          };\n        }\n      )\n    );\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  deleteAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  setEdit(addressId: string): void {\n    if (this.editCard !== addressId) {\n      this.editCard = addressId;\n    } else {\n      this.deleteAddress(addressId);\n    }\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent],\n  exports: [AddressBookComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          providers: [\n            {\n              provide: AddressBookComponentService,\n              useClass: AddressBookComponentService,\n              deps: [UserAddressService],\n            },\n          ],\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    UserAddressService,\n  ],\n  entryComponents: [AddressBookComponent],\n})\nexport class AddressBookModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-close-account-modal',\n  templateUrl: './close-account-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private subscription = new Subscription();\n  userToken$: Observable<UserToken>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    protected modalService: ModalService,\n    private userService: UserService,\n    private authService: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private routingService: RoutingService,\n    private translationService: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.userToken$ = this.authService.getUserToken();\n    this.userService.resetRemoveUserProcessState();\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultError()\n        .subscribe((error) => this.onError(error))\n    );\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedSuccessfully')\n        .pipe(first())\n        .subscribe((text) => {\n          this.globalMessageService.add(\n            text,\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        });\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onError(error: boolean): void {\n    if (error) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedFailure')\n        .pipe(first())\n        .subscribe((text) => {\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\n        });\n    }\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  closeAccount() {\n    this.userService.remove();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CloseAccountComponent: {\n          component: CloseAccountComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\n})\nexport class CloseAccountModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.forgotPasswordForm = this.fb.group({\n      userEmail: [\n        '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n    });\n  }\n\n  requestForgotPasswordEmail() {\n    if (this.forgotPasswordForm.valid) {\n      this.userService.requestForgotPasswordEmail(\n        this.forgotPasswordForm.value.userEmail\n      );\n      this.routingService.go({ cxRoute: 'login' });\n    } else {\n      this.forgotPasswordForm.markAllAsTouched();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ForgotPasswordComponent],\n  exports: [ForgotPasswordComponent],\n  entryComponents: [ForgotPasswordComponent],\n})\nexport class ForgotPasswordModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'cx-amend-order-actions',\n  templateUrl: './amend-order-actions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmendOrderActionsComponent {\n  @Input() orderCode: string;\n  @Input() amendOrderForm: FormGroup;\n  @Input() backRoute: string;\n  @Input() forwardRoute: string;\n\n  @HostBinding('class') styles = 'row';\n\n  constructor(protected routingService: RoutingService) {}\n\n  continue(event: Event): void {\n    if (this.amendOrderForm.valid) {\n      this.routingService.go({\n        cxRoute: this.forwardRoute,\n        params: { code: this.orderCode },\n      });\n    } else {\n      this.amendOrderForm.markAllAsTouched();\n      event.stopPropagation();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Order, OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { AmendOrderType } from './amend-order.model';\n\nfunction ValidateQuantityToCancel(control: FormControl) {\n  if (!control.value) {\n    return null;\n  }\n  const quantity = Object.values(control.value).reduce(\n    (acc: number, val: number) => acc + val,\n    0\n  );\n  return quantity > 0 ? null : { cxNoSelectedItemToCancel: true };\n}\n\n@Injectable()\nexport abstract class OrderAmendService {\n  protected amendType: AmendOrderType;\n  protected form: FormGroup;\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  /**\n   * Returns entries for the given order.\n   */\n  abstract getEntries(): Observable<OrderEntry[]>;\n\n  /**\n   * Returns entries with an amended quantity.\n   */\n  getAmendedEntries(): Observable<OrderEntry[]> {\n    return this.getForm().pipe(\n      switchMap((form) => {\n        return this.getEntries().pipe(\n          map((entries) =>\n            entries.filter(\n              (entry) => this.getFormControl(form, entry).value > 0\n            )\n          )\n        );\n      })\n    );\n  }\n\n  /**\n   * Submits the amended order.\n   */\n  abstract save(): void;\n\n  getOrder(): Observable<Order> {\n    return this.orderDetailsService.getOrderDetails();\n  }\n\n  /**\n   * returns the form with form data at runtime\n   */\n  getForm(): Observable<FormGroup> {\n    return this.getOrder().pipe(\n      tap((order) => {\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\n          this.buildForm(order);\n        }\n      }),\n      map(() => this.form)\n    );\n  }\n\n  private buildForm(order: Order): void {\n    this.form = new FormGroup({});\n    this.form.addControl('orderCode', new FormControl(order.code));\n\n    const entryGroup = new FormGroup(\n      {},\n      { validators: [ValidateQuantityToCancel] }\n    );\n    this.form.addControl('entries', entryGroup);\n\n    (order.entries || []).forEach((entry) => {\n      const key = entry.entryNumber.toString();\n      entryGroup.addControl(\n        key,\n        new FormControl(0, {\n          validators: [\n            Validators.min(0),\n            Validators.max(this.getMaxAmendQuantity(entry)),\n          ],\n        })\n      );\n    });\n  }\n\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\n  }\n\n  /**\n   * As discussed, this calculation is moved to SPA side.\n   * The calculation and validation should be in backend facade layer.\n   */\n  getAmendedPrice(entry: OrderEntry): Price {\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\n    const amendedPrice = Object.assign({}, entry.basePrice);\n    amendedPrice.value =\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\n\n    amendedPrice.formattedValue = formatCurrency(\n      amendedPrice.value,\n      // TODO: user current language\n      'en',\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\n      amendedPrice.currencyIso\n    );\n\n    return amendedPrice;\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return (\n      (this.isCancellation()\n        ? entry.cancellableQuantity\n        : entry.returnableQuantity) || entry.quantity\n    );\n  }\n\n  isCancellation() {\n    return this.amendType === AmendOrderType.CANCEL;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Component({\n  selector: 'cx-amend-order-items',\n  templateUrl: './amend-order-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrReturnItemsComponent {\n  @Input() entries: OrderEntry[];\n  @Input() isConfirmation = false;\n\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\n    const control = <FormControl>(\n      form.get('entries').get(entry.entryNumber.toString())\n    );\n    return control;\n  }\n\n  setAll(form: FormGroup): void {\n    this.entries.forEach((entry) =>\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\n    );\n  }\n\n  getItemPrice(entry: OrderEntry): Price {\n    return this.orderAmendService.getAmendedPrice(entry);\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return this.orderAmendService.getMaxAmendQuantity(entry);\n  }\n\n  isCancellation() {\n    return this.orderAmendService.isCancellation();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  ItemCounterModule,\n  MediaModule,\n} from '../../../../../shared/index';\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  declarations: [CancelOrReturnItemsComponent],\n  exports: [CancelOrReturnItemsComponent],\n  entryComponents: [CancelOrReturnItemsComponent],\n})\nexport class AmendOrderItemsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order-confirmation',\n  templateUrl: './cancel-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup) {\n    if (form.valid) {\n      this.orderAmendService.save();\n    } else {\n      form.markAllAsTouched();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  RoutingService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationService extends OrderAmendService {\n  amendType = AmendOrderType.CANCEL;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected userOrderService: UserOrderService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n  /**\n   * Return cancellable order entries.\n   */\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order?.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.userOrderService.cancelOrder(orderCode, {\n      cancellationRequestEntryInputs: inputs,\n    });\n\n    this.userOrderService\n      .getCancelOrderSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave(orderCode));\n  }\n\n  private afterSave(orderCode: string): void {\n    this.userOrderService.resetCancelOrderProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\n        params: { orderCode },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routing.go({\n      cxRoute: 'orders',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderCancellationService } from './order-cancellation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderCancellationService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancelConfirmation',\n        },\n      },\n    ]),\n    ReactiveFormsModule,\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderConfirmationComponent: {\n          component: CancelOrderConfirmationComponent,\n          guards: [AuthGuard, OrderCancellationGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderConfirmationComponent],\n  exports: [CancelOrderConfirmationComponent],\n  entryComponents: [CancelOrderConfirmationComponent],\n})\nexport class CancelOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order',\n  templateUrl: './cancel-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderComponent {\n  orderCode: string;\n\n  form$: Observable<FormGroup> = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport {\n  CmsPageGuard,\n  PageLayoutComponent,\n} from '../../../../../../cms-structure/index';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderComponent } from './cancel-order.component';\nimport { FormErrorsModule } from '../../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancel',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderComponent: {\n          component: CancelOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderComponent],\n  exports: [CancelOrderComponent],\n  entryComponents: [CancelOrderComponent],\n})\nexport class CancelOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  OrderReturnRequestService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnService extends OrderAmendService {\n  amendType = AmendOrderType.RETURN;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.returnableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.returnRequestService.createOrderReturnRequest({\n      orderCode,\n      returnRequestEntryInputs: inputs,\n    });\n\n    this.returnRequestService\n      .getReturnRequestSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave());\n  }\n\n  private afterSave(): void {\n    this.returnRequestService\n      .getOrderReturnRequest()\n      .pipe(first((r) => !!r))\n      .subscribe((returnRequest) => {\n        const rma = returnRequest.rma;\n        this.globalMessageService.add(\n          {\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\n            params: { rma },\n          },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n        this.routing.go({\n          cxRoute: 'returnRequestDetails',\n          params: { rma },\n        });\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderReturnService } from './order-return.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderReturnService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order-confirmation',\n  templateUrl: './return-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnGuard } from '../order-return.guard';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturnConfirmation',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderConfirmationComponent: {\n          component: ReturnOrderConfirmationComponent,\n          guards: [AuthGuard, OrderReturnGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderConfirmationComponent],\n  exports: [ReturnOrderConfirmationComponent],\n  entryComponents: [ReturnOrderConfirmationComponent],\n})\nexport class ReturnOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order',\n  templateUrl: './return-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderComponent {\n  orderCode: string;\n\n  form$: Observable<FormGroup> = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderComponent } from './return-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturn',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderComponent: {\n          component: ReturnOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderComponent],\n  exports: [ReturnOrderComponent],\n  entryComponents: [ReturnOrderComponent],\n})\nexport class ReturnOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<any> = this.orderDetailsService.getOrderDetails();\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-approval-details',\n  templateUrl: './order-detail-approval-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderDetailApprovalDetailsComponent {\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\nimport { OrderDetailsService } from '../order-details.service';\nimport {\n  cancelledValues,\n  completedValues,\n} from './order-consigned-entries/order-consigned-entries.model';\n\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected promotionService: PromotionService\n  ) {}\n\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n  order$: Observable<any> = this.orderDetailsService.getOrderDetails();\n  orderPromotions$: Observable<PromotionResult[]>;\n  others$: Observable<Consignment[]>;\n  completed$: Observable<Consignment[]>;\n  cancel$: Observable<Consignment[]>;\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\n    this.completed$ = this.getExactStatus(completedValues);\n    this.cancel$ = this.getExactStatus(cancelledValues);\n  }\n\n  private getExactStatus(\n    consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter((consignment) =>\n            consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n\n  private getOtherStatus(\n    ...consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(\n            (consignment) => !consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-consigned-entries',\n  templateUrl: './order-consigned-entries.component.html',\n})\nexport class OrderConsignedEntriesComponent {\n  @Input() consignments: Consignment[];\n  @Input() order: Order;\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach((element) => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<any>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<any>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport {\n  CardModule,\n  OrderOverviewModule,\n  SpinnerModule,\n} from '../../../../shared/index';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\nimport { OrderDetailApprovalDetailsComponent } from './order-detail-approval-details/order-detail-approval-details.component';\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\n\nconst moduleComponents = [\n  OrderDetailActionsComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n  OrderDetailApprovalDetailsComponent,\n  TrackingEventsComponent,\n  ConsignmentTrackingComponent,\n  OrderConsignedEntriesComponent,\n];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    PromotionsModule,\n    OrderOverviewModule,\n    UrlModule,\n    SpinnerModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\n      },\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        AccountOrderDetailsActionsComponent: {\n          component: OrderDetailActionsComponent,\n        },\n        AccountOrderDetailsApprovalDetailsComponent: {\n          component: OrderDetailApprovalDetailsComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n      features: {\n        consignmentTracking: '1.2',\n      },\n    }),\n    OrderDetailsService,\n  ],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport {\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderHistoryComponent implements OnDestroy {\n  constructor(\n    protected routing: RoutingService,\n    protected userOrderService: UserOrderService,\n    protected translation: TranslationService,\n    protected userReplenishmentOrderService: UserReplenishmentOrderService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  orders$: Observable<\n    OrderHistoryList\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\n    tap((orders: OrderHistoryList) => {\n      if (orders.pagination) {\n        this.sortType = orders.pagination.sort;\n      }\n    })\n  );\n\n  hasReplenishmentOrder$: Observable<\n    boolean\n  > = this.userReplenishmentOrderService\n    .getReplenishmentOrderDetails()\n    .pipe(map((order) => order && Object.keys(order).length !== 0));\n\n  isLoaded$: Observable<\n    boolean\n  > = this.userOrderService.getOrderHistoryListLoaded();\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\n    map((order) => order.pagination.totalResults),\n    filter((totalResults) => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { OrderHistoryComponent } from './order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orders' },\n      },\n    ]),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  entryComponents: [OrderHistoryComponent],\n})\nexport class OrderHistoryModule {}\n","import { LayoutConfig } from '../../../../layout/config/layout-config';\nimport { DIALOG_TYPE } from '../../../../layout/launch-dialog/index';\nimport { ReplenishmentOrderCancellationDialogComponent } from '../../../../shared/components/replenishment-order-cancellation-dialog/replenishment-order-cancellation-dialog.component';\n\nexport const defaultReplenishmentOrderCancellationLayoutConfig: LayoutConfig = {\n  launch: {\n    REPLENISHMENT_ORDER: {\n      inline: true,\n      component: ReplenishmentOrderCancellationDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","import { ElementRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport {\n  LaunchDialogService,\n  LAUNCH_CALLER,\n} from '../../../../../layout/launch-dialog/index';\n\n@Injectable({ providedIn: 'root' })\nexport class ReplenishmentOrderCancellationLaunchDialogService {\n  constructor(protected launchDialogService: LaunchDialogService) {}\n\n  openDialog(\n    openElement?: ElementRef,\n    vcr?: ViewContainerRef,\n    data?: any\n  ): Observable<any> | undefined {\n    const component = this.launchDialogService.launch(\n      LAUNCH_CALLER.REPLENISHMENT_ORDER,\n      vcr,\n      data\n    );\n\n    if (component) {\n      return combineLatest([\n        component,\n        this.launchDialogService.dialogClose,\n      ]).pipe(\n        filter(([, close]) => close && close !== undefined),\n        tap(([comp]) => {\n          openElement?.nativeElement.focus();\n          this.launchDialogService.clear(LAUNCH_CALLER.REPLENISHMENT_ORDER);\n          comp.destroy();\n        }),\n        map(([comp]) => comp)\n      );\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ReplenishmentOrder,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { ReplenishmentOrderCancellationLaunchDialogService } from './replenishment-order-cancellation-launch-dialog.service';\n\n@Component({\n  selector: 'cx-replenishment-order-cancellation',\n  templateUrl: './replenishment-order-cancellation.component.html',\n})\nexport class ReplenishmentOrderCancellationComponent implements OnDestroy {\n  @ViewChild('element') element: ElementRef;\n\n  private subscription = new Subscription();\n\n  replenishmentOrder$: Observable<\n    ReplenishmentOrder\n  > = this.userReplenishmentOrderService.getReplenishmentOrderDetails();\n\n  constructor(\n    protected userReplenishmentOrderService: UserReplenishmentOrderService,\n    protected replenishmentOrderCancellationLaunchDialogService: ReplenishmentOrderCancellationLaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  openDialog() {\n    const dialog = this.replenishmentOrderCancellationLaunchDialogService.openDialog(\n      this.element,\n      this.vcr\n    );\n\n    if (dialog) {\n      this.subscription.add(dialog.pipe(take(1)).subscribe());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.userReplenishmentOrderService.clearReplenishmentOrderDetails();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ReplenishmentOrder,\n  RoutingService,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReplenishmentOrderDetailsService {\n  protected replenishmentOrderCode$ = this.routingService.getRouterState().pipe(\n    map((routingData) => routingData.state.params.replenishmentOrderCode),\n    distinctUntilChanged()\n  );\n\n  protected replenishmentOrderLoad$ = this.replenishmentOrderCode$.pipe(\n    tap((replenishmentOrderCode: string) => {\n      if (Boolean(replenishmentOrderCode)) {\n        this.userReplenishmentOrderService.loadReplenishmentOrderDetails(\n          replenishmentOrderCode\n        );\n      } else {\n        this.userReplenishmentOrderService.clearReplenishmentOrderDetails();\n      }\n    }),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected userReplenishmentOrderService: UserReplenishmentOrderService\n  ) {}\n\n  getOrderDetails(): Observable<ReplenishmentOrder> {\n    return this.replenishmentOrderLoad$.pipe(\n      switchMap((_) =>\n        this.userReplenishmentOrderService.getReplenishmentOrderDetails()\n      )\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport {\n  CardModule,\n  ListNavigationModule,\n  ReplenishmentOrderCancellationDialogModule,\n  SpinnerModule,\n} from '../../../../shared/index';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\nimport { OrderDetailItemsComponent } from '../order-details/order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from '../order-details/order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from '../order-details/order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { OrderHistoryComponent } from '../order-history/order-history.component';\nimport { defaultReplenishmentOrderCancellationLayoutConfig } from './default-replenishment-order-cancellation-layout.config';\nimport { ReplenishmentOrderCancellationComponent } from './replenishment-order-cancellation/replenishment-order-cancellation.component';\nimport { ReplenishmentOrderDetailsService } from './replenishment-order-details.service';\n\nconst moduleComponents = [ReplenishmentOrderCancellationComponent];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    PromotionsModule,\n    UrlModule,\n    ReplenishmentOrderCancellationDialogModule,\n    SpinnerModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'replenishmentDetails' },\n      },\n    ]),\n  ],\n  providers: [\n    provideConfig(defaultReplenishmentOrderCancellationLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReplenishmentDetailItemsComponent: {\n          component: OrderDetailItemsComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: ReplenishmentOrderDetailsService,\n            },\n          ],\n        },\n        ReplenishmentDetailTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: ReplenishmentOrderDetailsService,\n            },\n          ],\n        },\n        ReplenishmentDetailShippingComponent: {\n          component: OrderDetailShippingComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: ReplenishmentOrderDetailsService,\n            },\n          ],\n        },\n        ReplenishmentDetailActionsComponent: {\n          component: ReplenishmentOrderCancellationComponent,\n        },\n        ReplenishmentDetailOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class ReplenishmentOrderDetailsModule {}\n","import {\n  Component,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ReplenishmentOrder,\n  ReplenishmentOrderList,\n  RoutingService,\n  TranslationService,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { ReplenishmentOrderCancellationLaunchDialogService } from '../replenishment-order-details/replenishment-order-cancellation/replenishment-order-cancellation-launch-dialog.service';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-replenishment-order-history',\n  templateUrl: './replenishment-order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReplenishmentOrderHistoryComponent implements OnDestroy {\n  @ViewChild('element') element: ElementRef;\n\n  private subscription = new Subscription();\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  replenishmentOrders$: Observable<\n    ReplenishmentOrderList\n  > = this.userReplenishmentOrderService\n    .getReplenishmentOrderHistoryList(this.PAGE_SIZE)\n    .pipe(\n      tap((replenishmentOrders: ReplenishmentOrderList) => {\n        if (replenishmentOrders.pagination) {\n          this.sortType = replenishmentOrders.pagination.sort;\n        }\n      })\n    );\n\n  isLoaded$: Observable<\n    boolean\n  > = this.userReplenishmentOrderService.getReplenishmentOrderHistoryListSuccess();\n\n  constructor(\n    protected routing: RoutingService,\n    protected userReplenishmentOrderService: UserReplenishmentOrderService,\n    protected replenishmentOrderCancellationLaunchDialogService: ReplenishmentOrderCancellationLaunchDialogService,\n    protected translation: TranslationService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReplenishmentOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReplenishmentOrders(event);\n  }\n\n  goToOrderDetail(order: ReplenishmentOrder): void {\n    this.routing.go({\n      cxRoute: 'replenishmentDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{\n    byDate: string;\n    byReplenishmentNumber: string;\n    byNextOrderDate: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.replenishmentNumber'),\n      this.translation.translate('sorting.nextOrderDate'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber, textbyNextOrderDate]) => {\n        return {\n          byDate: textByDate,\n          byReplenishmentNumber: textByOrderNumber,\n          byNextOrderDate: textbyNextOrderDate,\n        };\n      })\n    );\n  }\n\n  openDialog(event: Event, replenishmentOrderCode: string): void {\n    const dialog = this.replenishmentOrderCancellationLaunchDialogService.openDialog(\n      this.element,\n      this.vcr,\n      replenishmentOrderCode\n    );\n\n    if (dialog) {\n      this.subscription.add(dialog.pipe(take(1)).subscribe());\n    }\n    event.stopPropagation();\n  }\n\n  private fetchReplenishmentOrders(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.userReplenishmentOrderService.loadReplenishmentOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.userReplenishmentOrderService.clearReplenishmentOrderList();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\n\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ReplenishmentOrderHistoryComponent } from './replenishment-order-history.component';\nimport { defaultReplenishmentOrderCancellationLayoutConfig } from '../replenishment-order-details/default-replenishment-order-cancellation-layout.config';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'replenishmentOrders' },\n      },\n    ]),\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideConfig(defaultReplenishmentOrderCancellationLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountReplenishmentHistoryComponent: {\n          component: ReplenishmentOrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ReplenishmentOrderHistoryComponent],\n  exports: [ReplenishmentOrderHistoryComponent],\n  entryComponents: [ReplenishmentOrderHistoryComponent],\n})\nexport class ReplenishmentOrderHistoryModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-overview',\n  templateUrl: './return-request-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  rma: string;\n  subscription: Subscription;\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService\n    .getReturnRequest()\n    .pipe(tap((returnRequest) => (this.rma = returnRequest.rma)));\n\n  isCancelling$ = this.returnRequestService.isCancelling$;\n\n  ngOnInit(): void {\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\n      (success) => {\n        if (success) {\n          this.returnRequestService.cancelSuccess(this.rma);\n        }\n      }\n    );\n  }\n\n  cancelReturn(returnRequestCode: string): void {\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\n  }\n\n  back(): void {\n    this.returnRequestService.backToList();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { MediaModule } from '../../../../shared/index';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\n\nconst components = [\n  ReturnRequestOverviewComponent,\n  ReturnRequestItemsComponent,\n  ReturnRequestTotalsComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'returnRequestDetails' },\n      },\n    ]),\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    MediaModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnRequestOverviewComponent: {\n          component: ReturnRequestOverviewComponent,\n        },\n        ReturnRequestItemsComponent: {\n          component: ReturnRequestItemsComponent,\n        },\n        ReturnRequestTotalsComponent: {\n          component: ReturnRequestTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [...components],\n  exports: [...components],\n  entryComponents: [...components],\n})\nexport class ReturnRequestDetailModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  ReturnRequestList,\n  OrderReturnRequestService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { tap, map, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-return-request-list',\n  templateUrl: './order-return-request-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderReturnRequestListComponent implements OnDestroy {\n  constructor(\n    private returnRequestService: OrderReturnRequestService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  returnRequests$: Observable<\n    ReturnRequestList\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\n    tap((requestList: ReturnRequestList) => {\n      if (requestList.pagination) {\n        this.sortType = requestList.pagination.sort;\n      }\n    })\n  );\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\n    map((returnRequests) => returnRequests.pagination.totalResults),\n    filter((totalResults) => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.returnRequestService.clearOrderReturnRequestList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReturnRequests(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReturnRequests(event);\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.rma'),\n    ]).pipe(\n      map(([textByDate, textByRma]) => {\n        return {\n          byDate: textByDate,\n          byRMA: textByRma,\n        };\n      })\n    );\n  }\n\n  private fetchReturnRequests(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.returnRequestService.loadOrderReturnRequestList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderReturnRequestListComponent: {\n          component: OrderReturnRequestListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [OrderReturnRequestListComponent],\n  exports: [OrderReturnRequestListComponent],\n  entryComponents: [OrderReturnRequestListComponent],\n})\nexport class ReturnRequestListModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReplenishmentOrderDetailsModule } from './replenishment-order-details/replenishment-order-details.module';\nimport { ReplenishmentOrderHistoryModule } from './replenishment-order-history/replenishment-order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    ReplenishmentOrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReplenishmentOrderHistoryModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  iconTypes = ICON_TYPE;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap((paymentDetails) => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n    cardType,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n            img: this.getCardIcon(cardType.code),\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n\n  getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n  entryComponents: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n})\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\n  token: string;\n  subscription = new Subscription();\n\n  resetPasswordForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      repassword: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'repassword'\n      ),\n    }\n  );\n\n  constructor(\n    private fb: FormBuilder,\n    private routingService: RoutingService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.routingService\n        .getRouterState()\n        .subscribe((state) => (this.token = state.state.queryParams['token']))\n    );\n\n    this.subscription.add(\n      this.userService.isPasswordReset().subscribe((reset) => {\n        if (reset) {\n          this.routingService.go({ cxRoute: 'login' });\n        }\n      })\n    );\n  }\n\n  resetPassword() {\n    if (this.resetPasswordForm.valid) {\n      const password = this.resetPasswordForm.get('password').value;\n      this.userService.resetPassword(this.token, password);\n    } else {\n      this.resetPasswordForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ResetPasswordComponent: {\n          component: ResetPasswordFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ResetPasswordFormComponent],\n  exports: [ResetPasswordFormComponent],\n  entryComponents: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-update-email-form',\n  templateUrl: './update-email-form.component.html',\n})\nexport class UpdateEmailFormComponent {\n  @Output()\n  saveEmail = new EventEmitter<{\n    newUid: string;\n    password: string;\n  }>();\n\n  @Output()\n  cancelEmail = new EventEmitter<void>();\n\n  updateEmailForm: FormGroup = this.fb.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      confirmEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch('email', 'confirmEmail'),\n    }\n  );\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit(): void {\n    if (this.updateEmailForm.valid) {\n      const newUid = this.updateEmailForm.get('confirmEmail').value;\n      const password = this.updateEmailForm.get('password').value;\n\n      this.saveEmail.emit({ newUid, password });\n    } else {\n      this.updateEmailForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelEmail.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-email',\n  templateUrl: './update-email.component.html',\n})\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\n  constructor(\n    private routingService: RoutingService,\n    private globalMessageService: GlobalMessageService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  private subscription = new Subscription();\n  private newUid: string;\n  isLoading$: Observable<boolean>;\n\n  ngOnInit() {\n    this.userService.resetUpdateEmailResultState();\n    this.subscription.add(\n      this.userService\n        .getUpdateEmailResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\n    this.newUid = newUid;\n    this.userService.updateEmail(password, newUid);\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        {\n          key: 'updateEmailForm.emailUpdateSuccess',\n          params: { newUid: this.newUid },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.authService.logout();\n      this.routingService.go({ cxRoute: 'login' }, null, {\n        state: {\n          newUid: this.newUid,\n        },\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetUpdateEmailResultState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\nimport { UpdateEmailComponent } from './update-email.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          component: UpdateEmailComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\n  entryComponents: [UpdateEmailComponent],\n})\nexport class UpdateEmailModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-update-password-form',\n  templateUrl: './update-password-form.component.html',\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n  updatePasswordForm: FormGroup;\n\n  @Output()\n  submitted = new EventEmitter<{ oldPassword: string; newPassword: string }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.updatePasswordForm = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, CustomFormValidators.passwordValidator],\n        ],\n        newPasswordConfirm: ['', [Validators.required]],\n      },\n      {\n        validators: CustomFormValidators.passwordsMustMatch(\n          'newPassword',\n          'newPasswordConfirm'\n        ),\n      }\n    );\n  }\n\n  onSubmit(): void {\n    if (this.updatePasswordForm.valid) {\n      this.submitted.emit({\n        oldPassword: this.updatePasswordForm.value.oldPassword,\n        newPassword: this.updatePasswordForm.value.newPassword,\n      });\n    } else {\n      this.updatePasswordForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-password',\n  templateUrl: './update-password.component.html',\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.resetUpdatePasswordProcessState();\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\n    this.subscription.add(\n      this.userService\n        .getUpdatePasswordResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({\n    oldPassword,\n    newPassword,\n  }: {\n    oldPassword: string;\n    newPassword: string;\n  }): void {\n    this.userService.updatePassword(oldPassword, newPassword);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    this.userService.resetUpdatePasswordProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          component: UpdatePasswordComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  entryComponents: [UpdatePasswordComponent],\n})\nexport class UpdatePasswordModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title, User } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n})\nexport class UpdateProfileFormComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Input()\n  titles: Title[];\n\n  @Output()\n  submitted = new EventEmitter<{ userUpdates: User }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  updateProfileForm: FormGroup = this.fb.group({\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    if (this.user) {\n      this.updateProfileForm.patchValue(this.user);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.updateProfileForm.valid) {\n      this.submitted.emit({\n        userUpdates: { ...this.updateProfileForm.value },\n      });\n    } else {\n      this.updateProfileForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-profile',\n  templateUrl: './update-profile.component.html',\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  titles$: Observable<Title[]>;\n  user$: Observable<User>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    // reset the previous form processing state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n\n    this.user$ = this.userService.get();\n    this.titles$ = this.userService.getTitles();\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\n\n    this.subscription.add(\n      this.userService\n        .getUpdatePersonalDetailsResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updateProfileForm.profileUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\n    this.userService.updatePersonalDetails(userUpdates);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    // clean up the state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\nimport { UpdateProfileComponent } from './update-profile.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          component: UpdateProfileComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\n  entryComponents: [UpdateProfileComponent],\n})\nexport class UpdateProfileModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CustomerCoupon,\n  RoutingService,\n  TranslationService,\n} from '@spartacus/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyCouponsComponentService {\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  protected readonly RELEVANCE = ':relevance';\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected translation: TranslationService\n  ) {}\n\n  launchSearchPage(coupon: CustomerCoupon): void {\n    this.routingService.go(\n      {\n        cxRoute: 'search',\n        params: { query: this.buildSearchParam(coupon) },\n      },\n      { couponcode: coupon.couponId }\n    );\n  }\n\n  private buildSearchParam(coupon: CustomerCoupon): string {\n    return coupon.allProductsApplicable\n      ? this.RELEVANCE\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\n  }\n\n  getSortLabels(): Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('myCoupons.startDateAsc'),\n      this.translation.translate('myCoupons.startDateDesc'),\n      this.translation.translate('myCoupons.endDateAsc'),\n      this.translation.translate('myCoupons.endDateDesc'),\n    ]).pipe(\n      map(\n        ([\n          textByStartDateAsc,\n          textByStartDateDesc,\n          textByEndDateAsc,\n          textByEndDateDesc,\n        ]) => {\n          return {\n            byStartDateAsc: textByStartDateAsc,\n            byStartDateDesc: textByStartDateDesc,\n            byEndDateAsc: textByEndDateAsc,\n            byEndDateDesc: textByEndDateDesc,\n          };\n        }\n      )\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n  PaginationModel,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { MyCouponsComponentService } from './my-coupons.component.service';\n\n@Component({\n  selector: 'cx-my-coupons',\n  templateUrl: './my-coupons.component.html',\n})\nexport class MyCouponsComponent implements OnInit, OnDestroy {\n  couponResult$: Observable<CustomerCouponSearchResult>;\n  couponsLoading$: Observable<boolean>;\n  couponSubscriptionLoading$: Observable<boolean>;\n\n  iconTypes = ICON_TYPE;\n\n  private subscriptions = new Subscription();\n\n  private PAGE_SIZE = 10;\n  private sortMapping = {\n    byStartDateAsc: 'startDate:asc',\n    byStartDateDesc: 'startDate:desc',\n    byEndDateAsc: 'endDate:asc',\n    byEndDateDesc: 'endDate:desc',\n  };\n  sort = 'byStartDateAsc';\n\n  sortOptions = [\n    {\n      code: 'byStartDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byStartDateDesc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateDesc',\n      selected: false,\n    },\n  ];\n\n  pagination: PaginationModel;\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.couponResult$ = this.couponService\n      .getCustomerCoupons(this.PAGE_SIZE)\n      .pipe(\n        tap(\n          (coupons) =>\n            (this.pagination = {\n              currentPage: coupons.pagination.page,\n              pageSize: coupons.pagination.count,\n              totalPages: coupons.pagination.totalPages,\n              totalResults: coupons.pagination.totalCount,\n              sort: this.sort,\n            })\n        )\n      );\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\n    this.couponSubscriptionLoading$ = combineLatest([\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\n    ]).pipe(\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\n    );\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\n\n    this.subscriptions\n      .add(\n        this.couponService\n          .getSubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      )\n      .add(\n        this.couponService\n          .getUnsubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      );\n  }\n\n  private subscriptionFail(error: boolean) {\n    if (error) {\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    }\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      this.pagination.currentPage,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  notificationChange({\n    couponId,\n    notification,\n  }: {\n    couponId: string;\n    notification: boolean;\n  }): void {\n    if (notification) {\n      this.couponService.subscribeCustomerCoupon(couponId);\n    } else {\n      this.couponService.unsubscribeCustomerCoupon(couponId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { CustomerCoupon } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-coupon-dialog',\n  templateUrl: './coupon-dialog.component.html',\n})\nexport class CouponDialogComponent {\n  iconTypes = ICON_TYPE;\n  coupon: CustomerCoupon;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  constructor(protected modalService: ModalService) {}\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  RoutingService,\n  CustomerCouponService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './coupon-claim.component.html',\n  selector: 'cx-coupon-claim',\n})\nexport class CouponClaimComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected routingService: RoutingService,\n    protected messageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService\n      .getRouterState()\n      .subscribe((k) => {\n        const couponCode = k.state.params.couponCode;\n        if (couponCode) {\n          this.couponService.claimCustomerCoupon(couponCode);\n          this.subscription = this.couponService\n            .getClaimCustomerCouponResultSuccess()\n            .subscribe((success) => {\n              if (success) {\n                this.messageService.add(\n                  { key: 'myCoupons.claimCustomerCoupon' },\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\n                );\n              }\n              this.routingService.go({ cxRoute: 'coupons' });\n            });\n        } else {\n          this.routingService.go({ cxRoute: 'notFound' });\n        }\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyCouponsComponent } from './my-coupons.component';\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\n\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { IconModule } from '../../misc/icon/icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    IconModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'couponClaim' },\n      },\n    ]),\n  ],\n  declarations: [\n    MyCouponsComponent,\n    CouponCardComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyCouponsComponent: {\n          component: MyCouponsComponent,\n          guards: [AuthGuard],\n        },\n        CouponClaimComponent: {\n          component: CouponClaimComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyCouponsComponent, CouponClaimComponent],\n  entryComponents: [\n    MyCouponsComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n})\nexport class MyCouponsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  NotificationPreference,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-notification-preference',\n  templateUrl: './notification-preference.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPreferenceComponent implements OnInit {\n  preferences$: Observable<NotificationPreference[]>;\n  isLoading$: Observable<boolean>;\n\n  protected preferences: NotificationPreference[] = [];\n\n  constructor(\n    private notificationPreferenceService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.notificationPreferenceService.resetNotificationPreferences();\n    this.preferences$ = this.notificationPreferenceService\n      .getPreferences()\n      .pipe(tap((preferences) => (this.preferences = preferences)));\n    this.notificationPreferenceService.loadPreferences();\n\n    this.isLoading$ = combineLatest([\n      this.notificationPreferenceService.getPreferencesLoading(),\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\n    ]).pipe(\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\n    );\n  }\n\n  updatePreference(preference: NotificationPreference) {\n    const updatedPreferences = [];\n    this.preferences.forEach((p) => {\n      if (p.channel === preference.channel) {\n        updatedPreferences.push({\n          ...p,\n          enabled: !p.enabled,\n        });\n      } else {\n        updatedPreferences.push(p);\n      }\n    });\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { NotificationPreferenceComponent } from './notification-preference.component';\n\n@NgModule({\n  declarations: [NotificationPreferenceComponent],\n  imports: [CommonModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NotificationPreferenceComponent: {\n          component: NotificationPreferenceComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [NotificationPreferenceComponent],\n  entryComponents: [NotificationPreferenceComponent],\n})\nexport class NotificationPreferenceModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  PaginationModel,\n  Product,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n  ProductScope,\n  ProductService,\n  TranslationService,\n  UserInterestsService,\n} from '@spartacus/core';\nimport { map, tap } from 'rxjs/operators';\n\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\n  results?: (ProductInterestEntryRelation & {\n    product$?: Observable<Product>;\n  })[];\n}\n\n@Component({\n  selector: 'cx-my-interests',\n  templateUrl: './my-interests.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyInterestsComponent implements OnInit, OnDestroy {\n  private DEFAULT_PAGE_SIZE = 10;\n  private sortMapping = {\n    byNameAsc: 'name:asc',\n    byNameDesc: 'name:desc',\n  };\n\n  sort = 'byNameAsc';\n  sortOptions = [\n    {\n      code: 'byNameAsc',\n      selected: false,\n    },\n    {\n      code: 'byNameDesc',\n      selected: false,\n    },\n  ];\n  pagination: PaginationModel;\n\n  interests$: Observable<ProductInterestSearchResultUI>;\n  isRemoveDisabled$: Observable<boolean>;\n  getInterestsloading$: Observable<boolean>;\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\n\n  constructor(\n    private productInterestService: UserInterestsService,\n    private translationService: TranslationService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.interests$ = this.productInterestService\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\n      .pipe(\n        tap(\n          (interests) =>\n            (this.pagination = {\n              currentPage: interests.pagination.page,\n              pageSize: interests.pagination.count,\n              totalPages: interests.pagination.totalPages,\n              totalResults: interests.pagination.totalCount,\n              sort: 'byNameAsc',\n            })\n        ),\n        map((interest) => ({\n          ...interest,\n          results: interest.results\n            ? interest.results.map((result) => ({\n                ...result,\n                product$: this.getProduct(result),\n              }))\n            : interest.results,\n        }))\n      );\n\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\n    this.isRemoveDisabled$ = combineLatest([\n      this.getInterestsloading$,\n      this.productInterestService.getRemoveProdutInterestLoading(),\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\n\n    this.sortLabels = this.getSortLabels();\n  }\n\n  private getSortLabels(): Observable<{\n    byNameAsc: string;\n    byNameDesc: string;\n  }> {\n    return combineLatest([\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\n    ]).pipe(\n      map(([asc, desc]) => {\n        return {\n          byNameAsc: asc,\n          byNameDesc: desc,\n        };\n      })\n    );\n  }\n\n  private getProduct(\n    interest: ProductInterestEntryRelation\n  ): Observable<Product> {\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\n  }\n\n  removeInterest(\n    relation: ProductInterestEntryRelation & {\n      product$?: Observable<Product>;\n    }\n  ): void {\n    this.productInterestService.removeProdutInterest({\n      product: relation.product,\n      productInterestEntry: relation.productInterestEntry,\n    });\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      0,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.productInterestService.clearProductInterests();\n    this.productInterestService.resetRemoveInterestState();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { MyInterestsComponent } from './my-interests.component';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\n\n@NgModule({\n  declarations: [MyInterestsComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    RouterModule,\n    ListNavigationModule,\n    I18nModule,\n    UrlModule,\n    MediaModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyInterestsComponent: {\n          component: MyInterestsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyInterestsComponent],\n  entryComponents: [MyInterestsComponent],\n})\nexport class MyInterestsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMeta,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent implements OnInit {\n  title$: Observable<string>;\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n    this.setCrumbs();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(Boolean),\n      map((meta: PageMeta) => meta.heading || meta.title)\n    );\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  CmsPageTitleModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, CmsPageTitleModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BreadcrumbComponent],\n  exports: [BreadcrumbComponent],\n  entryComponents: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return data\n          ? {\n              title: data.name,\n              children: [nav],\n            }\n          : undefined;\n      })\n    );\n  }\n\n  /**\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n   * This function will load the navigation underlying entries and childs if they haven't been\n   * loaded so far.\n   */\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter((data) => !!data),\n      switchMap((data) => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap((items) => {\n            if (items === undefined) {\n              this.loadNavigationEntryItems(navigation, true);\n            } else {\n              // we should check whether the existing node items are what expected\n              const expectedItems = [];\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\n              const existingItems = Object.keys(items).map(\n                (key) => items[key].uid\n              );\n              const missingItems = expectedItems.filter(\n                (it) => !existingItems.includes(it.id)\n              );\n              if (missingItems.length > 0) {\n                this.cmsService.loadNavigationItems(\n                  navigation.uid,\n                  missingItems\n                );\n              }\n            }\n          }),\n          filter(Boolean),\n          map((items) => this.populateNavigationNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private loadNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ): void {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach((entry) => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      nodeData.children.forEach((child) =>\n        this.loadNavigationEntryItems(child, false, itemsList)\n      );\n    }\n\n    if (root) {\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for the view\n   * @param nodeData\n   * @param items\n   */\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    if (nodeData.title) {\n      // the node title will be populated by the first entry (if any)\n      // if there's no nodeData.title available\n      node.title = nodeData.title;\n    }\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.populateLink(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      const children = nodeData.children\n        .map((child) => this.populateNavigationNode(child, items))\n        .filter(Boolean);\n      if (children.length > 0) {\n        node.children = children;\n      }\n    }\n\n    // return null in case there are no children\n    return Object.keys(node).length === 0 ? null : node;\n  }\n\n  /**\n   * The node link is driven by the first entry.\n   */\n  private populateLink(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (item && entry.itemType === 'CMSLinkComponent') {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n      const url = this.getLink(item);\n      // only populate the node link if we have a visible node\n      if (node.title && url) {\n        node.url = url;\n        // the backend provide boolean value for the target\n        // in case the link should be opened in a new window\n        node.target = !!item.target ? '_blank' : '';\n      }\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category),\n   * also taking into account content pages (contentPageLabelOrId)\n   * and product pages (productCode)\n   */\n  protected getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.contentPageLabelOrId) {\n      return item.contentPageLabelOrId;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    } else if (item.productCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'product',\n        params: {\n          code: item.productCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navigation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event) => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  toggleOpen(event: UIEvent): void {\n    if (event.type === 'keydown') {\n      event.preventDefault();\n    }\n    const node = <HTMLElement>event.currentTarget;\n    if (this.openNodes.includes(node)) {\n      if (event.type === 'keydown') {\n        this.back();\n      } else {\n        this.openNodes = this.openNodes.filter((n) => n !== node);\n        this.renderer.removeClass(node, 'is-open');\n      }\n    } else {\n      this.openNodes.push(node);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    if (this.openNodes[this.openNodes.length - 1]) {\n      this.renderer.removeClass(\n        this.openNodes[this.openNodes.length - 1],\n        'is-open'\n      );\n      this.openNodes.pop();\n      this.updateClasses();\n    }\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getTotalDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\n      );\n    } else {\n      return depth;\n    }\n  }\n\n  getColumnCount(length: number): number {\n    return Math.round(length / (this.wrapAfter || length));\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\n      target.parentElement.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\n    const body = <HTMLElement>node.closest('body');\n    if (wrapper) {\n      this.renderer.removeStyle(wrapper, 'margin-left');\n      if (\n        wrapper.offsetLeft + wrapper.offsetWidth >\n        body.offsetLeft + body.offsetWidth\n      ) {\n        this.renderer.setStyle(\n          wrapper,\n          'margin-left',\n          `${node.offsetWidth - wrapper.offsetWidth}px`\n        );\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter((node) => node.tagName === 'NAV')\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  entryComponents: [NavigationComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, NavigationModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  entryComponents: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [FooterNavigationComponent],\n  entryComponents: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap((results) =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  /**\n   * For search results model, it returns true when:\n   * * there is any product OR\n   * * the is any search suggestion OR\n   * * there is a message.\n   *\n   * Otherwise it returns false.\n   */\n  protected hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  /**\n   * Emits product search results in case when the config property `displayProducts` is true.\n   * Otherwise it emits an empty object.\n   */\n  protected getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  protected getProductSuggestions(\n    config: SearchBoxConfig\n  ): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map((res) => res.map((suggestion) => suggestion.value)),\n        switchMap((suggestions) => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map((match) => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * Whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  protected getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap((productResult) => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  /**\n   * Emits a 'no match' message, in case the product search results and search suggestions are empty.\n   * Otherwise it emits null.\n   */\n  protected getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          suggestions &&\n          suggestions.length === 0\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent {\n  config: SearchBoxConfig;\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n\n  /**\n   * The component data is optional, so that this component\n   * can be reused without CMS integration.\n   */\n\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\n    protected winRef: WindowRef\n  ) {}\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    tap((c) => (this.config = c)),\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\n  );\n\n  /**\n   * Returns the backend configuration or default configuration for the searchbox.\n   */\n  private get config$(): Observable<SearchBoxConfig> {\n    if (this.componentData) {\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\n        // boolean values, we replace them with boolean values.\n        map((c) => {\n          return {\n            ...c,\n            displayProducts:\n              <any>c?.displayProducts === 'true' || c?.displayProducts === true,\n            displayProductImages:\n              <any>c?.displayProductImages === 'true' ||\n              c?.displayProductImages === true,\n            displaySuggestions:\n              <any>c?.displaySuggestions === 'true' ||\n              c?.displaySuggestions === true,\n          };\n        })\n      );\n    } else {\n      return of(DEFAULT_SEARCHBOX_CONFIG);\n    }\n  }\n\n  /**\n   * Closes the searchbox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchbox to open\n    this.open();\n  }\n\n  /**\n   * Opens the typeahead searchbox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Closes the typehead searchbox.\n   */\n  close(event: UIEvent, force?: boolean): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if ((!this.ignoreCloseEvent && !this.isSearchboxFocused()) || force) {\n        this.blurSearchBox(event);\n      }\n    });\n  }\n\n  protected blurSearchBox(event: UIEvent): void {\n    this.searchBoxComponentService.toggleBodyClass(\n      'searchbox-is-active',\n      false\n    );\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Check if focus is on searchbox or result list elements\n  private isSearchboxFocused(): boolean {\n    return (\n      this.getResultElements().includes(this.getFocusedElement()) ||\n      this.winRef.document.querySelector('input[aria-label=\"search\"]') ===\n        this.getFocusedElement()\n    );\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  // Return result list as HTMLElement array\n  private getResultElements(): HTMLElement[] {\n    return Array.from(\n      this.winRef.document.querySelectorAll('.products > a, .suggestions > a')\n    );\n  }\n\n  // Return focused element as HTMLElement\n  private getFocusedElement(): HTMLElement {\n    return <HTMLElement>this.winRef.document.activeElement;\n  }\n\n  private getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  // Focus on previous item in results list\n  focusPreviousChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  // Focus on next item in results list\n  focusNextChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a single product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    if (!query || query.trim().length === 0) {\n      return;\n    }\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  public clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  entryComponents: [SearchBoxComponent],\n  exports: [SearchBoxComponent],\n})\nexport class SearchBoxModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  CheckoutService,\n  Order,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\n  order$: Observable<Order>;\n  orderPromotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected promotionService: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<any>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, ORDER_TYPE } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy {\n  order$: Observable<any>;\n  isReplenishmentOrderType$: Observable<boolean>;\n\n  isGuestCustomer = false;\n  orderGuid: string;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\n      tap((order) => {\n        this.isGuestCustomer = order.guestCustomer;\n        this.orderGuid = order.guid;\n      })\n    );\n\n    this.isReplenishmentOrderType$ = this.checkoutService\n      .getCurrentOrderType()\n      .pipe(\n        map(\n          (orderType) => ORDER_TYPE.SCHEDULE_REPLENISHMENT_ORDER === orderType\n        )\n      );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-guest-register-form',\n  templateUrl: './guest-register-form.component.html',\n})\nexport class GuestRegisterFormComponent implements OnDestroy {\n  @Input() guid: string;\n  @Input() email: string;\n\n  subscription: Subscription;\n  guestRegisterForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'passwordconf'\n      ),\n    }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected fb: FormBuilder\n  ) {}\n\n  submit() {\n    if (this.guestRegisterForm.valid) {\n      this.userService.registerGuest(\n        this.guid,\n        this.guestRegisterForm.value.password\n      );\n      if (!this.subscription) {\n        this.subscription = this.authService\n          .getUserToken()\n          .subscribe((token) => {\n            if (token.access_token) {\n              this.routingService.go({ cxRoute: 'home' });\n            }\n          });\n      }\n    } else {\n      this.guestRegisterForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutService,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map((orderDetails) => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport {\n  CardModule,\n  FormErrorsModule,\n  OrderOverviewModule,\n} from '../../shared/index';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\n// tslint:disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n  GuestRegisterFormComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n    OrderOverviewModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n  entryComponents: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../shared/components/card/card.module';\nimport { FormErrorsModule } from '../../shared/index';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReplenishmentConfirmationMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        ReplenishmentConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        ReplenishmentConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        ReplenishmentConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class ReplenishmentOrderConfirmationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductReference,\n  ProductReferenceService,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected referenceService: ProductReferenceService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map((product) => this.convertProduct(product))\n    );\n  }\n\n  getProductReferences(\n    code: string,\n    referenceType: string,\n    displayTitle: boolean,\n    displayProductPrices: boolean\n  ): Observable<ProductCarouselItem[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) =>\n        refs.map((ref) =>\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\n        )\n      )\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  Product,\n  ProductScope,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\n\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean)\n  );\n\n  /**\n   * returns an Obervable string for the title.\n   */\n  title$: Observable<string> = this.componentData$.pipe(\n    map((data) => data.title)\n  );\n\n  /**\n   * Obervable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\n    map((data) => data.productCodes.trim().split(' ')),\n    map((codes) =>\n      codes.map((code) => this.productService.get(code, this.PRODUCT_SCOPE))\n    )\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  entryComponents: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  /**\n   * returns an Obervable string for the title\n   */\n  title$ = this.component.data$.pipe(map((d) => d?.title));\n\n  private currentProductCode$: Observable<\n    string\n  > = this.current.getProduct().pipe(\n    filter(Boolean),\n    map((p: Product) => p.code),\n    distinctUntilChanged(),\n    tap(() => this.referenceService.cleanReferences())\n  );\n\n  /**\n   * Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = combineLatest([\n    this.currentProductCode$,\n    this.component.data$,\n  ]).pipe(\n    switchMap(([code, data]) =>\n      this.getProductReferences(code, data?.productReferenceTypes)\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\n    protected current: CurrentProductService,\n    protected referenceService: ProductReferenceService\n  ) {}\n\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product>[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) => refs.map((ref) => of(ref.target)))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  entryComponents: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  private mainMediaContainer = new BehaviorSubject(null);\n\n  private product$: Observable<\n    Product\n  > = this.currentProductService.getProduct().pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap((p: Product) => {\n      this.mainMediaContainer.next(p.images?.PRIMARY ? p.images.PRIMARY : {});\n    })\n  );\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map((p: Product) => this.createThumbs(p))\n  );\n\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\n    map(([, container]) => container)\n  );\n\n  constructor(private currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          (t) =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    CarouselModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductImagesComponent],\n  entryComponents: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\n      .subscribe((reviewsTabLabel) => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through button tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const tabElements: HTMLCollectionOf<HTMLElement> = tabsComponent.getElementsByTagName(\n        'button'\n      );\n\n      // Look through button tab elements until finding tab with label\n      for (const buttonElement of Array.from(tabElements)) {\n        if (buttonElement.innerHTML.includes(label)) {\n          return buttonElement;\n        }\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, StarRatingModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  exports: [ProductIntroComponent],\n  entryComponents: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RouterState,\n  RoutingService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  pluck,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\nimport { ProductListRouteParams, SearchCriteria } from './product-list.model';\n\n/**\n * The `ProductListComponentService` is used to search products. The service is used\n * on the Product Listing Page, for listing products and the facet navigation.\n *\n * The service exposes the product search results based on the category and search\n * route parameters. The route parameters are used to query products by the help of\n * the `ProductSearchService`.\n */\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  /**\n   * @deprecated will be removed in version 3.0 as this is the\n   *   subscription is longer used\n   */\n  protected sub: Subscription;\n\n  // TODO: make it configurable\n  protected defaultPageSize = 10;\n\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router\n  ) {}\n\n  /**\n   * Emits the search results for the current search query.\n   *\n   * The `searchResults$` is _not_ concerned with querying, it only observes the\n   * `productSearchService.getResults()`\n   */\n  protected searchResults$: Observable<\n    ProductSearchPage\n  > = this.productSearchService\n    .getResults()\n    .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\n\n  /**\n   * Observes the route and performs a search on each route change.\n   *\n   * Context changes, such as language and currencies are also taken\n   * into account, so that the search is performed again.\n   */\n  protected searchByRouting$: Observable<\n    ActivatedRouterStateSnapshot\n  > = combineLatest([\n    this.routing.getRouterState().pipe(\n      distinctUntilChanged((x, y) => {\n        // router emits new value also when the anticipated `nextState` changes\n        // but we want to perform search only when current url changes\n        return x.state.url === y.state.url;\n      })\n    ),\n    ...this.siteContext,\n  ]).pipe(\n    map(([routerState, ..._context]) => (routerState as RouterState).state),\n    tap((state: ActivatedRouterStateSnapshot) => {\n      const criteria = this.getCriteriaFromRoute(\n        state.params,\n        state.queryParams\n      );\n      this.search(criteria);\n    })\n  );\n\n  /**\n   * This stream is used for the Product Listing and Product Facets.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\n    this.searchResults$,\n    this.searchByRouting$,\n  ]).pipe(pluck(0), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /**\n   * Expose the `SearchCriteria`. The search criteria are driven by the route parameters.\n   *\n   * This search route configuration is not yet configurable\n   * (see https://github.com/SAP/spartacus/issues/7191).\n   */\n  protected getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  /**\n   * Resolves the search query from the given `ProductListRouteParams`.\n   */\n  protected getQueryFromRouteParams({\n    query,\n    categoryCode,\n    brandCode,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\n    }\n\n    // TODO: drop support for brands as they should be treated\n    // similarly as any category.\n    if (brandCode) {\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\n    }\n  }\n\n  /**\n   * Performs a search based on the given search criteria.\n   *\n   * The search is delegated to the `ProductSearchService`.\n   */\n  protected search(criteria: SearchCriteria): void {\n    const currentPage = criteria.currentPage;\n    const pageSize = criteria.pageSize;\n    const sort = criteria.sortCode;\n\n    this.productSearchService.search(\n      criteria.query,\n      // TODO: consider dropping this complex passing of cleaned object\n      Object.assign(\n        {},\n        currentPage && { currentPage },\n        pageSize && { pageSize },\n        sort && { sort }\n      )\n    );\n  }\n\n  /**\n   * Get items from a given page without using navigation\n   */\n  getPageItems(pageNumber: number): void {\n    this.routing\n      .getRouterState()\n      .subscribe((route) => {\n        const routeCriteria = this.getCriteriaFromRoute(\n          route.state.params,\n          route.state.queryParams\n        );\n        const criteria = {\n          ...routeCriteria,\n          currentPage: pageNumber,\n        };\n        this.search(criteria);\n      })\n      .unsubscribe();\n  }\n\n  /**\n   * Sort the search results by the given sort code.\n   */\n  sort(sortCode: string): void {\n    this.route({ sortCode });\n  }\n\n  /**\n   * Routes to the next product listing page, using the given `queryParams`. The\n   * `queryParams` support sorting, pagination and querying.\n   *\n   * The `queryParams` are delegated to the Angular router `NavigationExtras`.\n   */\n  protected route(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  /**\n   * The site context is used to update the search query in case of a\n   * changing context. The context will typically influence the search data.\n   *\n   * We keep this private for now, as we're likely refactoring this in the next\n   * major version.\n   */\n  private get siteContext(): Observable<string>[] {\n    // TODO: we should refactor this so that custom context will be taken\n    // into account automatically. Ideally, we drop the specific context\n    // from the constructor, and query a ContextService for all contexts.\n\n    return [this.languageService.getActive(), this.currencyService.getActive()];\n  }\n\n  /**\n   * @deprecated will be dropped in version 3.0 as it's no longer in use\n   */\n  setQuery(query: string): void {\n    this.route({ query, currentPage: undefined });\n  }\n\n  /**\n   * @deprecated will be dropped in version 3.0 as it's no longer in use\n   */\n  viewPage(pageNumber: number): void {\n    this.route({ currentPage: pageNumber });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewConfig } from '../../../../shared/config/view-config';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  isInfiniteScroll: boolean;\n\n  model$: Observable<ProductSearchPage> = this.productListComponentService\n    .model$;\n\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService,\n    public scrollConfig: ViewConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$\n        .pipe(take(1))\n        .subscribe((template) => {\n          this.viewMode$.next(\n            template === 'ProductGridPageTemplate'\n              ? ViewModes.Grid\n              : ViewModes.List\n          );\n        })\n    );\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { ViewModes } from '../../product-view/product-view.component';\nimport { Subscription } from 'rxjs';\nimport { ProductListComponentService } from '../product-list-component.service';\nimport { ViewConfig } from '../../../../../shared/config/view-config';\n\n@Component({\n  selector: 'cx-product-scroll',\n  templateUrl: './product-scroll.component.html',\n})\nexport class ProductScrollComponent implements OnDestroy {\n  private subscription = new Subscription();\n\n  @Input('scrollConfig')\n  set setConfig(inputConfig: ViewConfig) {\n    this.setComponentConfigurations(inputConfig);\n  }\n\n  model: ProductSearchPage;\n  @Input('model')\n  set setModel(inputModel: ProductSearchPage) {\n    this.infiniteScrollOperations(inputModel);\n  }\n\n  inputViewMode: ViewModes;\n  @Input('inputViewMode')\n  set setViewMode(inputViewMode: ViewModes) {\n    this.inputViewMode = inputViewMode;\n    //If viewMode is already set (meaning it is not the first load)\n    //Reset the product list\n    if (this.viewMode) {\n      this.resetListOnViewModeChange();\n    } else {\n      //If viewMode is not set (meaning it is the first load)\n      //Set the viewMode\n      this.viewMode = inputViewMode;\n    }\n  }\n\n  viewMode: ViewModes;\n  productLimit: number;\n  maxProducts: number;\n\n  ViewModes = ViewModes;\n  appendProducts = false;\n  resetList = false;\n  isMaxProducts = false;\n  isLastPage = false;\n  isEmpty = false;\n\n  constructor(\n    private productListComponentService: ProductListComponentService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  scrollPage(pageNumber: number): void {\n    this.appendProducts = true;\n    this.ref.markForCheck();\n    this.productListComponentService.getPageItems(pageNumber);\n  }\n\n  loadNextPage(pageNumber: number): void {\n    this.isMaxProducts = false;\n    this.scrollPage(pageNumber);\n  }\n\n  scrollToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\n\n    //Display \"show more\" button every time when button configuration is true\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\n    this.productLimit = isButton ? 1 : configProductLimit;\n  }\n\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\n    if (this.appendProducts) {\n      this.model = {\n        ...inputModel,\n        products: this.model.products.concat(inputModel.products),\n      };\n    } else {\n      this.model = inputModel;\n      this.maxProducts = this.productLimit;\n    }\n    this.setConditions();\n    this.ref.markForCheck();\n  }\n\n  private resetListOnViewModeChange(): void {\n    this.scrollToTop();\n    this.resetList = true;\n    this.productListComponentService.getPageItems(0);\n  }\n\n  //Set booleans after model has been retrieved\n  private setConditions(): void {\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\n\n    this.isLastPage =\n      this.model.pagination.currentPage ===\n      this.model.pagination.totalPages - 1;\n\n    this.isMaxProducts =\n      this.productLimit &&\n      this.productLimit !== 0 &&\n      this.model.products.length >= this.maxProducts;\n\n    //Add the productLimit to the current number of products to determine the next max number of products\n    if (this.isMaxProducts) {\n      this.maxProducts = this.model.products.length + this.productLimit;\n    }\n\n    //Only change viewMode once the new model is set\n    //This prevents flickering issues\n    if (this.viewMode !== this.inputViewMode) {\n      this.viewMode = this.inputViewMode;\n    }\n\n    this.resetList = false;\n    this.appendProducts = false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Breadcrumb, Facet } from '@spartacus/core';\n\n/**\n * UI model that holds the full list of facet and active facets for\n * the product list.\n */\nexport interface FacetList {\n  facets: Facet[];\n  activeFacets?: Breadcrumb[];\n}\n\nexport interface FacetCollapseState {\n  /**\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\n   * Whether the toggle results in an expanded or collapsed state, depends on the\n   * experience, which is controlled in CSS.\n   */\n  toggled?: FacetGroupCollapsedState;\n\n  /**\n   * The top number of facet values that will be visible.\n   */\n  topVisible?: number;\n\n  /**\n   * The max number of facet values which will be visible. This includes\n   * the top visible number.\n   */\n  maxVisible?: number;\n}\n\nexport enum FacetGroupCollapsedState {\n  EXPANDED = 'EXPANDED',\n  COLLAPSED = 'COLLAPSED',\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  Breadcrumb,\n  PageType,\n  ProductSearchPage,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\nimport { ProductListComponentService } from '../../container/product-list-component.service';\nimport { FacetList } from '../facet.model';\n\n/**\n * Provides access to all the facets and active facets for the Product Listing Page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductFacetService {\n  protected readonly routeState$ = this.routing\n    .getRouterState()\n    .pipe(pluck('state'));\n\n  protected readonly searchResult$: Observable<\n    ProductSearchPage\n  > = this.routeState$.pipe(\n    switchMap((state) =>\n      this.productListComponentService.model$.pipe(\n        filter((page) => this.filterForPage(state, page)),\n        map((page) => this.mapResults(state, page))\n      )\n    )\n  );\n\n  constructor(\n    protected routing: RoutingService,\n    protected productListComponentService: ProductListComponentService\n  ) {}\n\n  /**\n   * Observes the facets and active facets for the given page. The facet data\n   * is provided in a `FacetList`.\n   */\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\n    map(\n      (result: ProductSearchPage) =>\n        ({\n          facets: result.facets,\n          activeFacets: result.breadcrumbs,\n        } as FacetList)\n    )\n  );\n\n  /**\n   * Filters the current result by verifying if the result is related to the page.\n   * This is done to avoid a combination of the next page and the current search results.\n   */\n  protected filterForPage(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): boolean {\n    if (state.context.type === PageType.CATEGORY_PAGE) {\n      return (\n        page.currentQuery?.query?.value?.indexOf(\n          `allCategories:${state.context.id}`\n        ) > -1\n      );\n    }\n\n    if (\n      state.context.type === PageType.CONTENT_PAGE &&\n      state.context.id === 'search'\n    ) {\n      return page.currentQuery.query.value.startsWith(`${state.params.query}:`);\n    }\n    return false;\n  }\n\n  private mapResults(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): ProductSearchPage {\n    return {\n      ...page,\n      breadcrumbs: this.filterBreadcrumbs(page.breadcrumbs, state.params),\n    };\n  }\n\n  /**\n   * filter breadcrumbs which are not actively selected\n   * but coming from the route navigation\n   */\n  private filterBreadcrumbs(\n    breadcrumbs: Breadcrumb[],\n    params: Params\n  ): Breadcrumb[] {\n    return breadcrumbs\n      ? breadcrumbs.filter(\n          (breadcrumb) => !this.hasBreadcrumb(breadcrumb, params)\n        )\n      : [];\n  }\n\n  /**\n   * Indicates whether the breadcrumb is related to navigation parameters,\n   * since either the category or brand code should match those codes.\n   */\n  private hasBreadcrumb(breadcrumb: Breadcrumb, params: Params): boolean {\n    return (\n      breadcrumb.facetCode === 'allCategories' &&\n      (breadcrumb.facetValueCode === params.categoryCode ||\n        breadcrumb.facetValueCode === params.brandCode)\n    );\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {\n  FacetCollapseState,\n  FacetGroupCollapsedState,\n  FacetList,\n} from '../facet.model';\nimport { ProductFacetService } from './product-facet.service';\n\n/**\n * Provides access to the facets as well as their UI state. The UI state\n * represents user related changes on the facets, such as expanding or\n * collapsing a facet group or expanding the number of _visible_ facet values.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacetService {\n  /**\n   * An internal map where we keep the UI state of the facets.\n   */\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\n\n  constructor(protected productFacetService: ProductFacetService) {}\n\n  /**\n   * Observes the facets for the given page and configures the initial UI state.\n   *\n   * Facets are configured on each emission so that we keep the facet UI state.\n   * This is mainly done to keep the state during usage of the facet, but also\n   * benefitial when the facets are rebuild while using them.\n   */\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\n    tap((facetList) => {\n      facetList.facets.forEach((facet) => this.initialize(facet));\n    })\n  );\n\n  /**\n   * Returns the observed UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  getState(facet: Facet): Observable<FacetCollapseState> {\n    this.initialize(facet);\n    return this.facetState.get(facet.name);\n  }\n\n  /**\n   * Returns the UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\n  }\n\n  /**\n   * Toggles the facet expanded state. If the expanded state becomes false,\n   * the visible values will decrease to the top values only.\n   *\n   * If the optional value argument is provided the expanded state will be set\n   * to this value, regardless of the current `expanded` state.\n   */\n  toggle(facet: Facet, isExpanded: boolean): void {\n    const state = this.getStateSnapshot(facet);\n\n    const toggledState = {\n      toggled: isExpanded\n        ? FacetGroupCollapsedState.COLLAPSED\n        : FacetGroupCollapsedState.EXPANDED,\n    } as FacetCollapseState;\n\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\n      toggledState.maxVisible = state.topVisible;\n    }\n\n    this.updateState(facet, toggledState);\n  }\n\n  /**\n   * Increases the visible values to the maximum values of the facet.\n   */\n  increaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.values.length });\n  }\n\n  /**\n   * Decreases the visible values to the topValueCount.\n   *\n   * The topValueCount defaults to 6, but can be controlled in\n   * the backend as well.\n   */\n  decreaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.topValueCount });\n  }\n\n  /**\n   * Persists the facet state and initializes the default values for the top\n   * and max visible values.\n   */\n  protected initialize(facet: Facet): void {\n    const topFacets =\n      facet.topValueCount > 0 ? facet.topValueCount : facet.values?.length || 0;\n    if (!this.hasState(facet)) {\n      this.facetState.set(\n        facet.name,\n        new BehaviorSubject({\n          topVisible: topFacets,\n          maxVisible: topFacets,\n        } as FacetCollapseState)\n      );\n    }\n  }\n\n  /**\n   * Updates the state of the facet in the local facet map.\n   */\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\n    const state = { ...this.getStateSnapshot(facet), ...property };\n    this.facetState.get(facet.name).next(state);\n  }\n\n  protected hasState(facet: Facet): boolean {\n    return this.facetState.has(facet.name);\n  }\n\n  getLinkParams(query: string): { [key: string]: string } {\n    return {\n      // to avoid encoding issues with facets that have space (' ') in their name,\n      // we replace the decoded '+' back to empty space ' '.\n      // For more, see https://github.com/SAP/spartacus/issues/7348\n      query: new HttpUrlEncodingCodec().decodeValue(query).replace(/\\+/g, ' '),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Breadcrumb } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FacetList } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n/**\n * Active facets render the applied facet values as a list of focusable buttons\n * which can be used to remove the applied facet value.\n */\n@Component({\n  selector: 'cx-active-facets',\n  templateUrl: './active-facets.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ActiveFacetsComponent {\n  /** Active facets which are applied to the product results. */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  /** Configurable icon which is used for the active facet close button */\n  @Input() closeIcon = ICON_TYPE.CLOSE;\n\n  constructor(protected facetService: FacetService) {}\n\n  getLinkParams(facet: Breadcrumb) {\n    return this.facetService.getLinkParams(facet.removeQuery?.query?.value);\n  }\n\n  /**\n   * The focus key is used to persist the focus on the facet when the DOM is being\n   * recreated. We only apply the focus key for the given _active_ facet when there\n   * the original facets is not available. This happens for non multi-valued facets.\n   *\n   * With this approach, the we keep the focus, either at the facet list or on the\n   * active facets.\n   */\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\n    return facetList.facets?.find((f) =>\n      f.values?.find((val) => val.name === facet.facetValueName)\n    )\n      ? ''\n      : facet.facetValueName;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ActiveFacetsComponent } from './active-facets.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [ActiveFacetsComponent],\n  exports: [ActiveFacetsComponent],\n})\nexport class ActiveFacetsModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\nimport { FacetComponent } from '../facet/facet.component';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet-list',\n  templateUrl: './facet-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetListComponent {\n  private _isDialog: boolean;\n  /**\n   * Indicates that the facet navigation is rendered in dialog.\n   */\n  @Input()\n  set isDialog(value: boolean) {\n    this._isDialog = value;\n    if (value) {\n      this.renderer.addClass(document.body, 'modal-open');\n    }\n  }\n\n  get isDialog(): boolean {\n    return this._isDialog;\n  }\n\n  /** Emits when the list must close */\n  @Output() closeList = new EventEmitter();\n\n  /** The list of all facet and values related to the products in the list */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  iconTypes = ICON_TYPE;\n\n  dialogFocusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    focusOnEscape: true,\n    autofocus: 'cx-facet',\n  };\n\n  @HostListener('click') handleClick() {\n    this.close();\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2\n  ) {}\n\n  /**\n   * Toggles the facet group in case it is not expanded.\n   */\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\n    if (!ref.isExpanded) {\n      this.facetService.toggle(facet, ref.isExpanded);\n    }\n  }\n\n  /**\n   * Indicates that the facet group has been expanded.\n   */\n  isExpanded(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\n      );\n  }\n\n  /**\n   * Indicates that the facet group has been collapsed.\n   */\n  isCollapsed(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\n      );\n  }\n\n  close(event?: boolean): void {\n    this.renderer.removeClass(document.body, 'modal-open');\n    this.closeList.emit(event);\n  }\n\n  block(event?: MouseEvent) {\n    event.stopPropagation();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { Facet, FacetValue } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\nimport { FacetCollapseState } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet',\n  templateUrl: './facet.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetComponent {\n  protected _facet: Facet;\n\n  state$: Observable<FacetCollapseState>;\n\n  /** configurable icon that is used to collapse the facet group  */\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\n\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\n\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\n\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\n\n  @Input()\n  set facet(value: Facet) {\n    this._facet = value;\n    this.isMultiSelect = !!value.multiSelect;\n    this.state$ = this.facetService.getState(value);\n  }\n\n  get facet(): Facet {\n    return this._facet;\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Handles clicking the heading of the facet group, which means toggling\n   * the visibility of the group (collapse / expand) and optionally focusing\n   * the group.\n   */\n  toggleGroup(event: UIEvent) {\n    const host: HTMLElement = this.elementRef.nativeElement;\n    const isLocked = this.keyboardFocus?.isLocked;\n\n    this.facetService.toggle(this.facet, this.isExpanded);\n\n    if (!isLocked || this.isExpanded) {\n      host.focus();\n      // we stop propagating the event as otherwise the focus on the host will trigger\n      // an unlock event from the LockFocus directive.\n      event.stopPropagation();\n    }\n  }\n\n  get isExpanded(): boolean {\n    return this.values.first.nativeElement.offsetParent !== null;\n  }\n\n  openLink(event: KeyboardEvent) {\n    (event.target as HTMLElement).click();\n    event.preventDefault();\n  }\n\n  /**\n   * Increases the number of visible values for the facet. This is delegated\n   * to `facetService.increaseVisibleValues`.\n   */\n  increaseVisibleValues(): void {\n    this.facetService.increaseVisibleValues(this.facet);\n  }\n\n  /**\n   * Decreases the number of visible values for the facet. This is delegated\n   * to `facetService.decreaseVisibleValues`.\n   */\n  decreaseVisibleValues(): void {\n    this.facetService.decreaseVisibleValues(this.facet);\n  }\n\n  getLinkParams(value: FacetValue) {\n    return this.facetService.getLinkParams(value.query?.query.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { FacetComponent } from './facet.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetComponent],\n  exports: [FacetComponent],\n})\nexport class FacetModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { FacetModule } from '../facet/facet.module';\nimport { FacetListComponent } from './facet-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    FacetModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetListComponent],\n  exports: [FacetListComponent],\n})\nexport class FacetListModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent {\n  iconTypes = ICON_TYPE;\n\n  /**\n   * We delay the removal of DOM so that animations can finish playing before the\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\n   * to be focused.\n   */\n  protected CLOSE_DELAY = 300;\n\n  /**\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\n   * on the availability of the trigger element, which is driven by CSS.\n   *\n   * The reference is also used to refocus the trigger after the dialog is closed.\n   */\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\n\n  protected open$ = new BehaviorSubject(false);\n\n  /**\n   * Emits the open state that indicates whether the facet list should be rendered.\n   * This is either done instantly, or after the user triggers this by using the trigger\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\n   * the behaviour. This can differ per breakpoint.\n   *\n   * There's a configurable delay for the closed state, so that the DOM is not removed\n   * before some CSS animations are done.\n   */\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\n    // method represents the actual UI state.\n    observeOn(asapScheduler),\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\n  );\n\n  /**\n   * Emits the active state that indicates whether the facet list is activated. Activation\n   * is related to the css, so that a animation or transition can visualize opening/closing\n   * the list (i.e. dialog).\n   */\n  isActive$ = this.open$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure the active class is\n    //  applied after the DOM is created\n    observeOn(asapScheduler)\n  );\n\n  constructor(protected breakpointService: BreakpointService) {}\n\n  launch() {\n    this.open$.next(true);\n  }\n\n  close() {\n    this.open$.next(false);\n    this.trigger.nativeElement.focus();\n  }\n\n  /**\n   * Indicates that the facet navigation should be open explicitely by a trigger.\n   * This is fully controlled by CSS, where the trigger button can be hidden\n   * (display:none) for certain screen sizes.\n   */\n  get hasTrigger() {\n    return this.trigger.nativeElement.offsetParent !== null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\nimport { FacetListModule } from './facet-list/facet-list.module';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FacetListModule,\n    ActiveFacetsModule,\n    IconModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductFacetNavigationComponent],\n  exports: [ProductFacetNavigationComponent],\n})\nexport class ProductFacetNavigationModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variants',\n  templateUrl: './product-variants.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsComponent implements OnInit {\n  constructor(private currentProductService: CurrentProductService) {}\n\n  variants: BaseOption[] = [];\n  variantType = VariantType;\n  product$: Observable<Product>;\n\n  ngOnInit(): void {\n    this.product$ = this.currentProductService.getProduct().pipe(\n      filter((product) => !!(product && product.baseOptions)),\n      distinctUntilChanged(),\n      tap((product) => {\n        product.baseOptions.forEach((option) => {\n          if (option && option.variantType) {\n            this.variants[option.variantType] = option;\n          }\n        });\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  OccConfig,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  Product,\n  ProductService,\n  ProductScope,\n  RoutingService,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-style-selector',\n  templateUrl: './variant-style-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleSelectorComponent {\n  constructor(\n    private config: OccConfig,\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  variantQualifier = VariantQualifier;\n\n  @Input()\n  variants: BaseOption;\n\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\n    return obj ? obj.value : '';\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\n    return qualifier\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\n      : '';\n  }\n\n  changeStyle(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Product,\n  RoutingService,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  ProductService,\n  ProductScope,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-size-selector',\n  templateUrl: './variant-size-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantSizeSelectorComponent {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeSize(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BaseOption,\n  Product,\n  RoutingService,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-color-selector',\n  templateUrl: './variant-color-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantColorSelectorComponent {\n  constructor(private routingService: RoutingService) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeColor(code: string, name: string): void {\n    if (code) {\n      this.routingService.go({\n        cxRoute: 'product',\n        params: { code, name },\n      });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {\n  OccConfig,\n  VariantOption,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-style-icons',\n  templateUrl: './variant-style-icons.component.html',\n  styleUrls: ['./variant-style-icons.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleIconsComponent implements OnInit {\n  constructor(private config: OccConfig) {}\n\n  @Input()\n  variants: VariantOption[];\n\n  variantNames: { [key: string]: string } = {};\n\n  ngOnInit() {\n    this.variants.forEach((variant) => {\n      this.variantNames[variant.code] = this.getVariantName(\n        variant.variantOptionQualifiers\n      );\n    });\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const thumbnail = variantOptionQualifiers.find(\n      (item) => item.qualifier === VariantQualifier.THUMBNAIL\n    );\n    return thumbnail\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\n      : '';\n  }\n\n  private getVariantName(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const rollupProperty = variantOptionQualifiers.find(\n      (item) => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\n    );\n    const property = rollupProperty\n      ? variantOptionQualifiers.find(\n          (item) => item.qualifier === rollupProperty.value\n        )\n      : null;\n    return property ? property.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, filter, take } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  VariantOption,\n  ProductService,\n  Product,\n  RoutingService,\n  ProductScope,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductVariantGuard implements CanActivate {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.routingService.getRouterState().pipe(\n      map((state) => state.nextState.params.productCode),\n      switchMap((productCode: string) => {\n        // if open pdp from smartedit\n        if (!productCode) {\n          return of(true);\n        }\n\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\n          filter(Boolean),\n          map((product: Product) => {\n            if (!product.purchasable) {\n              const variant = this.findVariant(product.variantOptions);\n              // below call might looks redundant but in fact this data is going to be loaded anyways\n              // we're just calling it earlier and storing\n              this.productService\n                .get(variant.code, ProductScope.LIST)\n                .pipe(filter(Boolean), take(1))\n                .subscribe((_product: Product) => {\n                  this.routingService.go({\n                    cxRoute: 'product',\n                    params: _product,\n                  });\n                });\n              return false;\n            } else {\n              return true;\n            }\n          })\n        );\n      })\n    );\n  }\n\n  findVariant(variants: VariantOption[]): VariantOption {\n    const results: VariantOption[] = variants.filter((variant) => {\n      return variant.stock && variant.stock.stockLevel ? variant : false;\n    });\n    return !results.length && variants.length ? variants[0] : results[0];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ProductVariantsComponent } from './product-variants.component';\nimport { RouterModule } from '@angular/router';\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\nimport { ProductVariantGuard } from './guards/product-variant.guard';\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    VariantStyleSelectorModule,\n    VariantSizeSelectorModule,\n    VariantColorSelectorModule,\n    VariantStyleIconsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductVariantSelectorComponent: {\n          component: ProductVariantsComponent,\n          guards: [ProductVariantGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ProductVariantsComponent],\n  entryComponents: [ProductVariantsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class ProductVariantsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ViewConfig } from '../../../shared/config/view-config';\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { defaultScrollConfig } from '../config/default-scroll-config';\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n    SpinnerModule,\n    InfiniteScrollModule,\n    ViewConfigModule,\n    ProductVariantsModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<ViewConfig>defaultScrollConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        ProductGridComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\n})\nexport class ProductListModule {}\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  entryComponents: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct(\n    ProductScope.ATTRIBUTES\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  entryComponents: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  entryComponents: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\nimport { CustomFormValidators } from '../../../../shared/index';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\n  @ViewChild('writeReviewButton', { static: false })\n  writeReviewButton: ElementRef;\n\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter((p) => !!p),\n    map((p) => p.code),\n    distinctUntilChanged(),\n    switchMap((productCode) =>\n      this.reviewService.getByProductCode(productCode)\n    ),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n\n    this.cd.detectChanges();\n\n    if (this.titleInput && this.titleInput.nativeElement) {\n      this.titleInput.nativeElement.focus();\n    }\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  setRating(rating: number): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product) {\n    if (this.reviewForm.valid) {\n      this.addReview(product);\n    } else {\n      this.reviewForm.markAllAsTouched();\n    }\n  }\n\n  addReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [null, CustomFormValidators.starRatingEmpty],\n      reviewerName: '',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductReviewsComponent } from './product-reviews.component';\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  entryComponents: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-stock-notification-dialog',\n  templateUrl: './stock-notification-dialog.component.html',\n})\nexport class StockNotificationDialogComponent implements OnDestroy {\n  subscribeSuccess$: Observable<boolean>;\n  enabledPrefs: NotificationPreference[] = [];\n\n  constructor(\n    private modalService: ModalService,\n    private interestsService: UserInterestsService\n  ) {}\n\n  close() {\n    this.modalService.dismissActiveModal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribeSuccess$) {\n      this.subscribeSuccess$\n        .subscribe((success) => {\n          if (success) {\n            this.interestsService.resetAddInterestState();\n          }\n        })\n        .unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  UserInterestsService,\n  UserNotificationPreferenceService,\n  AuthService,\n  OCC_USER_ID_ANONYMOUS,\n  NotificationPreference,\n  NotificationType,\n  Product,\n  GlobalMessageService,\n  TranslationService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { map, filter, tap, first } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\n\n@Component({\n  selector: 'cx-stock-notification',\n  templateUrl: './stock-notification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationComponent implements OnInit, OnDestroy {\n  hasProductInterests$: Observable<boolean>;\n  prefsEnabled$: Observable<boolean>;\n  outOfStock$: Observable<boolean>;\n  isRemoveInterestLoading$: Observable<boolean>;\n  anonymous = true;\n\n  private enabledPrefs: NotificationPreference[] = [];\n  private productCode: string;\n  private subscribeSuccess$: Observable<boolean>;\n  private subscriptions = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private currentProductService: CurrentProductService,\n    private globalMessageService: GlobalMessageService,\n    private translationService: TranslationService,\n    private interestsService: UserInterestsService,\n    private modalService: ModalService,\n    private notificationPrefService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.outOfStock$ = combineLatest([\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\n      this.authService.getOccUserId(),\n    ]).pipe(\n      tap(([product, userId]: [Product, String]) => {\n        this.productCode = product.code;\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\n          this.anonymous = false;\n          this.notificationPrefService.loadPreferences();\n          this.interestsService.loadProductInterests(\n            null,\n            null,\n            null,\n            product.code,\n            NotificationType.BACK_IN_STOCK\n          );\n        }\n      }),\n      map(\n        ([product]: [Product, String]) =>\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\n      )\n    );\n\n    this.hasProductInterests$ = this.interestsService\n      .getProductInterests()\n      .pipe(\n        map(\n          (interests) => !!interests.results && interests.results.length === 1\n        )\n      );\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\n    this.prefsEnabled$ = this.notificationPrefService\n      .getEnabledPreferences()\n      .pipe(\n        tap((prefs) => (this.enabledPrefs = prefs)),\n        map((prefs) => prefs.length > 0)\n      );\n\n    this.subscriptions.add(\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\n        if (error) {\n          this.onInterestAddingError();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.interestsService\n        .getRemoveProdutInterestSuccess()\n        .subscribe((success) => {\n          if (success) {\n            this.onInterestRemovingSuccess();\n          }\n        })\n    );\n  }\n\n  subscribe() {\n    this.openDialog();\n    this.interestsService.addProductInterest(\n      this.productCode,\n      NotificationType.BACK_IN_STOCK\n    );\n  }\n\n  unsubscribe() {\n    this.interestsService.removeProdutInterest(\n      {\n        product: {\n          code: this.productCode,\n        },\n        productInterestEntry: [\n          {\n            interestType: NotificationType.BACK_IN_STOCK,\n          },\n        ],\n      },\n      true\n    );\n  }\n\n  private onInterestRemovingSuccess() {\n    this.subscriptions.add(\n      this.translationService\n        .translate('stockNotification.unsubscribeSuccess')\n        .pipe(first())\n        .subscribe((text) =>\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\n        )\n    );\n    this.interestsService.resetRemoveInterestState();\n  }\n\n  private onInterestAddingError() {\n    this.modalService.dismissActiveModal();\n    this.interestsService.resetAddInterestState();\n  }\n\n  private openDialog() {\n    const modalInstance = this.modalService.open(\n      StockNotificationDialogComponent,\n      {\n        centered: true,\n        size: 'lg',\n      }\n    ).componentInstance;\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\n    modalInstance.enabledPrefs = this.enabledPrefs;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.interestsService.clearProductInterests();\n    this.notificationPrefService.clearPreferences();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockNotificationComponent } from './stock-notification.component';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        StockNotificationComponent: {\n          component: StockNotificationComponent,\n        },\n      },\n    }),\n  ],\n  entryComponents: [\n    StockNotificationComponent,\n    StockNotificationDialogComponent,\n  ],\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\n})\nexport class StockNotificationModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StoreFinderService, GeoPoint } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-grid',\n  templateUrl: './store-finder-grid.component.html',\n})\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\n  locations$: any;\n  isLoading$: Observable<boolean>;\n  defaultLocation: GeoPoint;\n  country: string;\n  region: string;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.defaultLocation = {};\n\n    if (this.route.snapshot.params.country) {\n      this.storeFinderService.findStoresAction(\n        '',\n        {\n          pageSize: -1,\n        },\n        undefined,\n        this.route.snapshot.params.country\n      );\n    }\n  }\n\n  ngOnDestroy() {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input, Directive } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\n// tslint:disable:directive-class-suffix\n@Directive()\nexport class AbstractStoreItemComponent {\n  @Input()\n  location;\n\n  constructor(protected storeDataService: StoreDataService) {}\n\n  getDirections(location: any): string {\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\n    const latitude = this.storeDataService.getStoreLatitude(location);\n    const longitude = this.storeDataService.getStoreLongitude(location);\n    return google_map_url + latitude + ',' + longitude;\n  }\n\n  getFormattedStoreAddress(addressParts: string[]): string {\n    return addressParts.filter(Boolean).join(', ');\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-list-item',\n  templateUrl: './store-finder-list-item.component.html',\n})\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\n  @Input()\n  locationIndex: number = null;\n  @Input()\n  listOrderLabel: any;\n  @Input()\n  displayDistance: boolean;\n  @Input()\n  useClickEvent: boolean;\n  @Output()\n  storeItemClick: EventEmitter<number> = new EventEmitter();\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n\n  handleStoreItemClick() {\n    if (this.locationIndex !== null) {\n      this.storeItemClick.emit(this.locationIndex);\n    }\n  }\n\n  onKey(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.handleStoreItemClick();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleMapRendererService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-map',\n  templateUrl: './store-finder-map.component.html',\n})\nexport class StoreFinderMapComponent implements OnChanges {\n  @ViewChild('mapElement', { static: true })\n  mapElement: ElementRef;\n  @Input()\n  locations: any[];\n  @Output()\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\n\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.locations && this.locations) {\n      this.renderMap();\n    }\n  }\n\n  /**\n   * Sets the center of the map to the given location\n   * @param latitude latitude of the new center\n   * @param longitude longitude of the new center\n   */\n  centerMap(latitude: number, longitude: number): void {\n    this.googleMapRendererService.centerMap(latitude, longitude);\n  }\n\n  renderMap(): void {\n    this.googleMapRendererService.renderMap(\n      this.mapElement.nativeElement,\n      this.locations,\n      (markerIndex) => {\n        this.selectStoreItemClickHandle(markerIndex);\n      }\n    );\n  }\n\n  private selectStoreItemClickHandle(markerIndex: number) {\n    this.selectedStoreItem.emit(markerIndex);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-store-finder-list',\n  templateUrl: './store-finder-list.component.html',\n})\nexport class StoreFinderListComponent {\n  @Input()\n  locations: any;\n  @Input()\n  useMylocation: boolean;\n  @ViewChild('storeMap')\n  storeMap: StoreFinderMapComponent;\n\n  selectedStore: PointOfService;\n  selectedStoreIndex: number;\n  isDetailsModeVisible: boolean;\n  storeDetails: PointOfService;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    private storeDataService: StoreDataService,\n    @Inject(DOCUMENT) private document: any\n  ) {\n    this.isDetailsModeVisible = false;\n  }\n\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\n    this.showStoreDetails(location);\n    this.selectedStoreIndex = index;\n    this.selectedStore = location;\n    this.storeMap.centerMap(\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\n    );\n  }\n\n  selectStoreItemList(index: number): void {\n    this.selectedStoreIndex = index;\n    const storeListItem = this.document.getElementById('item-' + index);\n    storeListItem.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n    });\n  }\n\n  showStoreDetails(location: PointOfService) {\n    this.isDetailsModeVisible = true;\n    this.storeDetails = location;\n  }\n\n  hideStoreDetails() {\n    this.isDetailsModeVisible = false;\n    this.selectedStoreIndex = undefined;\n    this.selectedStore = undefined;\n    this.storeMap.renderMap();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {\n  GeoPoint,\n  SearchConfig,\n  StoreFinderSearchQuery,\n  StoreFinderService,\n  StoreFinderConfig,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-search-result',\n  templateUrl: './store-finder-search-result.component.html',\n})\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\n  locations: any;\n  subscription: Subscription;\n  useMyLocation: boolean;\n  countryCode: string = null;\n  searchConfig: SearchConfig = {\n    currentPage: 0,\n  };\n  radius: number;\n  searchQuery: StoreFinderSearchQuery;\n  geolocation: GeoPoint;\n  locations$: Observable<any>;\n  isLoading$: Observable<any>;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    protected config: StoreFinderConfig\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.route.queryParams.subscribe((params) =>\n      this.initialize(params)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  viewPage(pageNumber: number) {\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation,\n      this.radius\n    );\n  }\n\n  private initialize(params: Params) {\n    this.searchQuery = this.parseParameters(params);\n    this.useMyLocation = params && params.useMyLocation ? true : false;\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\n    this.radius = this.config.googleMaps.radius;\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation,\n      this.radius\n    );\n\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\n  }\n\n  private parseParameters(queryParams: {\n    [key: string]: any;\n  }): StoreFinderSearchQuery {\n    let searchQuery: StoreFinderSearchQuery;\n\n    if (queryParams.query) {\n      searchQuery = { queryText: queryParams.query };\n    } else {\n      searchQuery = { queryText: '' };\n    }\n\n    searchQuery.useMyLocation =\n      queryParams.useMyLocation != null &&\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\n\n    return searchQuery;\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  StoreFinderCoreModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\nimport { IconModule } from './../misc/icon/icon.module';\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ListNavigationModule,\n    NgbTabsetModule,\n    SpinnerModule,\n    UrlModule,\n    StoreFinderCoreModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | LayoutConfig>{\n      cmsComponents: {\n        StoreFinderComponent: {\n          component: StoreFinderComponent,\n          childRoutes: [\n            {\n              path: 'find',\n              component: StoreFinderSearchResultComponent,\n            },\n            {\n              path: 'view-all',\n              component: StoreFinderStoresCountComponent,\n            },\n            {\n              path: 'country/:country',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region/:store',\n              component: StoreFinderStoreComponent,\n            },\n            {\n              path: 'country/:country/:store',\n              component: StoreFinderStoreComponent,\n            },\n          ],\n        },\n      },\n      layoutSlots: {\n        StoreFinderPageTemplate: {\n          slots: ['MiddleContent', 'SideContent'],\n        },\n      },\n    }),\n  ],\n  declarations: [\n    StoreFinderSearchComponent,\n    StoreFinderListComponent,\n    StoreFinderMapComponent,\n    StoreFinderListItemComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreDescriptionComponent,\n    ScheduleComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderStoreComponent,\n  ],\n  exports: [\n    ScheduleComponent,\n    StoreFinderComponent,\n    StoreFinderGridComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderListItemComponent,\n    StoreFinderMapComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderSearchComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderListComponent,\n    StoreFinderStoreDescriptionComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderStoreComponent,\n  ],\n  entryComponents: [\n    StoreFinderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreComponent,\n  ],\n})\nexport class StoreFinderModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-checkout-login',\n  templateUrl: './checkout-login.component.html',\n})\nexport class CheckoutLoginComponent implements OnDestroy {\n  checkoutLoginForm: FormGroup = this.formBuilder.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      emailConfirmation: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch(\n        'email',\n        'emailConfirmation'\n      ),\n    }\n  );\n  sub: Subscription;\n\n  constructor(\n    protected formBuilder: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  onSubmit() {\n    if (this.checkoutLoginForm.valid) {\n      const email = this.checkoutLoginForm.get('email').value;\n      this.activeCartService.addEmail(email);\n\n      if (!this.sub) {\n        this.sub = this.activeCartService.getAssignedUser().subscribe(() => {\n          if (this.activeCartService.isGuestCart()) {\n            this.authRedirectService.redirect();\n          }\n        });\n      }\n    } else {\n      this.checkoutLoginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CheckoutLoginComponent } from './checkout-login.component';\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        GuestCheckoutLoginComponent: {\n          component: CheckoutLoginComponent,\n          guards: [NotCheckoutAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutLoginComponent],\n  exports: [CheckoutLoginComponent],\n  entryComponents: [CheckoutLoginComponent],\n})\nexport class CheckoutLoginModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/index';\n\n@Component({\n  selector: 'cx-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  loginForm: FormGroup;\n\n  constructor(\n    protected auth: AuthService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngOnInit(): void {\n    const routeState = this.winRef.nativeWindow?.history?.state;\n    const prefilledEmail = routeState?.['newUid'];\n\n    this.loginForm = this.fb.group({\n      userId: [\n        prefilledEmail?.length ? prefilledEmail : '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n      password: ['', Validators.required],\n    });\n  }\n\n  submitForm(): void {\n    if (this.loginForm.valid) {\n      this.loginUser();\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  protected loginUser(): void {\n    const { userId, password } = this.loginForm.controls;\n    this.auth.authorize(\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\n      password.value\n    );\n\n    if (!this.sub) {\n      this.sub = this.auth.getUserToken().subscribe((data) => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { FormErrorsModule } from '../../../shared/index';\nimport { LoginFormComponent } from './login-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [LoginFormComponent],\n  exports: [LoginFormComponent],\n  entryComponents: [LoginFormComponent],\n})\nexport class LoginFormModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService, User, UserService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(private auth: AuthService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user$ = this.auth.isUserLoggedIn().pipe(\n      switchMap((isUserLoggedIn) => {\n        if (isUserLoggedIn) {\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  ProtectedRoutesService,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/**\n * Guards the _logout_ route.\n *\n * Takes care of routing the user to a logout page (if available) or redirects to\n * the homepage. If the homepage is protected, the user is redirected\n * to the login route instead.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected routing: RoutingService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutes: ProtectedRoutesService\n  ) {}\n\n  canActivate(): Observable<any> {\n    this.logout();\n\n    return this.cms\n      .hasPage({\n        id: this.semanticPathService.get('logout'),\n        type: PageType.CONTENT_PAGE,\n      })\n      .pipe(\n        tap((hasPage) => {\n          if (!hasPage) {\n            this.redirect();\n          }\n        })\n      );\n  }\n\n  /**\n   * Whenever there is no specific \"logout\" page configured in the CMS,\n   * we redirect after the user is logged out.\n   *\n   * The user gets redirected to the homepage, unless the homepage is protected\n   * (in case of a closed shop). We'll redirect to the login page instead.\n   */\n  protected redirect(): void {\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\n    this.routing.go({ cxRoute });\n  }\n\n  /**\n   * Log user out.\n   *\n   * This is delegated to the `AuthService`.\n   */\n  protected logout(): void {\n    this.auth.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  UserService,\n  UserSignUp,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { sortTitles, CustomFormValidators } from '../../../shared/index';\n\n@Component({\n  selector: 'cx-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  titles$: Observable<Title[]>;\n  loading$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  anonymousConsent$: Observable<{\n    consent: AnonymousConsent;\n    template: string;\n  }>;\n\n  registerForm: FormGroup = this.fb.group(\n    {\n      titleCode: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n      newsletter: new FormControl({\n        value: false,\n        disabled: this.isConsentRequired(),\n      }),\n      termsandconditions: [false, Validators.requiredTrue],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'passwordconf'\n      ),\n    }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected router: RoutingService,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig\n  ) {}\n\n  ngOnInit() {\n    this.titles$ = this.userService.getTitles().pipe(\n      map((titles) => {\n        return titles.sort(sortTitles);\n      })\n    );\n\n    this.loading$ = this.userService.getRegisterUserResultLoading();\n    this.registerUserProcessInit();\n\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n    this.subscription.add(\n      this.globalMessageService\n        .get()\n        .pipe(filter((messages) => !!Object.keys(messages).length))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          const messages =\n            globalMessageEntities &&\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\n\n          if (\n            messages &&\n            messages.some((message) => message === 'This field is required.')\n          ) {\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.globalMessageService.add(\n              { key: 'register.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n        })\n    );\n\n    const { registerConsent } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    this.anonymousConsent$ = combineLatest([\n      this.anonymousConsentsService.getConsent(registerConsent),\n      this.anonymousConsentsService.getTemplate(registerConsent),\n    ]).pipe(\n      map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\n        return {\n          consent,\n          template: template ? template.description : '',\n        };\n      })\n    );\n\n    this.subscription.add(\n      this.registerForm.get('newsletter').valueChanges.subscribe(() => {\n        this.toggleAnonymousConsent();\n      })\n    );\n  }\n\n  submitForm(): void {\n    if (this.registerForm.valid) {\n      this.registerUser();\n    } else {\n      this.registerForm.markAllAsTouched();\n    }\n  }\n\n  registerUser(): void {\n    this.userService.register(\n      this.collectDataFromRegisterForm(this.registerForm.value)\n    );\n  }\n\n  titleSelected(title: Title): void {\n    this.registerForm['controls'].titleCode.setValue(title.code);\n  }\n\n  collectDataFromRegisterForm(formData: any): UserSignUp {\n    const { firstName, lastName, email, password, titleCode } = formData;\n\n    return {\n      firstName,\n      lastName,\n      uid: email.toLowerCase(),\n      password,\n      titleCode,\n    };\n  }\n\n  isConsentGiven(consent: AnonymousConsent): boolean {\n    return this.anonymousConsentsService.isConsentGiven(consent);\n  }\n\n  private isConsentRequired(): boolean {\n    const {\n      requiredConsents,\n      registerConsent,\n    } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    if (requiredConsents && registerConsent) {\n      return requiredConsents.includes(registerConsent);\n    }\n\n    return false;\n  }\n\n  private onRegisterUserSuccess(success: boolean): void {\n    if (success) {\n      this.router.go('login');\n      this.globalMessageService.add(\n        { key: 'register.postRegisterMessage' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  toggleAnonymousConsent(): void {\n    const { registerConsent } = this.anonymousConsentsConfig.anonymousConsents;\n\n    if (Boolean(this.registerForm.get('newsletter').value)) {\n      this.anonymousConsentsService.giveConsent(registerConsent);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(registerConsent);\n    }\n  }\n\n  private registerUserProcessInit(): void {\n    this.userService.resetRegisterUserProcessState();\n    this.subscription.add(\n      this.userService.getRegisterUserResultSuccess().subscribe((success) => {\n        this.onRegisterUserSuccess(success);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetRegisterUserProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule, FormErrorsModule } from '../../../shared/index';\nimport { LoginModule } from '../login/login.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          component: RegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [RegisterComponent],\n  exports: [RegisterComponent],\n  entryComponents: [RegisterComponent],\n})\nexport class RegisterComponentModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CheckoutConfigService } from '../../checkout/services/index';\n\n@Component({\n  selector: 'cx-login-register',\n  templateUrl: './login-register.component.html',\n})\nexport class LoginRegisterComponent implements OnInit {\n  loginAsGuest = false;\n\n  constructor(\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    if (this.checkoutConfigService.isGuestCheckout()) {\n      this.loginAsGuest = this.activatedRoute?.snapshot?.queryParams?.[\n        'forced'\n      ];\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CheckoutModule,\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginRegisterComponent } from './login-register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    PageSlotModule,\n    I18nModule,\n    CheckoutModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerRegisterComponent: {\n          component: LoginRegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [LoginRegisterComponent],\n  entryComponents: [LoginRegisterComponent],\n  exports: [LoginRegisterComponent],\n})\nexport class LoginRegisterModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\nimport { LoginRegisterModule } from './login-register/login-register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LoginRegisterModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../shared/index';\nimport { AddToCartModule } from '../cart/index';\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\nimport { WishListComponent } from './components/wish-list/wish-list.component';\n\n@NgModule({\n  imports: [\n    AddToCartModule,\n    CommonModule,\n    I18nModule,\n    MediaModule,\n    RouterModule,\n    StarRatingModule,\n    UrlModule,\n    ItemCounterModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        WishListComponent: {\n          component: WishListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [WishListComponent, WishListItemComponent],\n  entryComponents: [WishListComponent],\n  exports: [WishListComponent, WishListItemComponent],\n})\nexport class WishListModule {}\n","import { NgModule } from '@angular/core';\nimport { HamburgerMenuModule } from '../layout/index';\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\nimport { AsmModule } from './asm/asm.module';\nimport { CartComponentModule } from './cart/cart.module';\nimport { CheckoutComponentModule } from './checkout/checkout.module';\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\nimport {\n  BannerModule,\n  CmsParagraphModule,\n  LinkModule,\n  TabParagraphContainerModule,\n} from './content/index';\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\nimport {\n  AddressBookModule,\n  CloseAccountModule,\n  ConsentManagementModule,\n  ForgotPasswordModule,\n  MyCouponsModule,\n  MyInterestsModule,\n  NotificationPreferenceModule,\n  OrderCancellationModule,\n  OrderDetailsModule,\n  OrderHistoryModule,\n  OrderReturnModule,\n  PaymentMethodsModule,\n  ReplenishmentOrderDetailsModule,\n  ResetPasswordModule,\n  ReturnRequestDetailModule,\n  ReturnRequestListModule,\n  UpdateEmailModule,\n  UpdatePasswordModule,\n  UpdateProfileModule,\n  ReplenishmentOrderHistoryModule,\n} from './myaccount/index';\nimport {\n  BreadcrumbModule,\n  CategoryNavigationModule,\n  FooterNavigationModule,\n  NavigationModule,\n  SearchBoxModule,\n} from './navigation/index';\nimport {\n  OrderConfirmationModule,\n  ReplenishmentOrderConfirmationModule,\n} from './order-confirmation/index';\nimport {\n  ProductCarouselModule,\n  ProductFacetNavigationModule,\n  ProductIntroModule,\n  ProductListModule,\n  ProductReferencesModule,\n  ProductTabsModule,\n  StockNotificationModule,\n} from './product/index';\nimport { ProductImagesModule } from './product/product-images/product-images.module';\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\nimport { StoreFinderModule } from './storefinder/store-finder.module';\nimport { UserComponentModule } from './user/user.module';\nimport { WishListModule } from './wish-list/wish-list.module';\n\n@NgModule({\n  imports: [\n    AnonymousConsentManagementBannerModule,\n    AsmModule,\n    HamburgerMenuModule,\n    CmsParagraphModule,\n    LinkModule,\n    BannerModule,\n    CategoryNavigationModule,\n    NavigationModule,\n    FooterNavigationModule,\n    BreadcrumbModule,\n    SearchBoxModule,\n    SiteContextSelectorModule,\n    QualtricsModule,\n    AddressBookModule,\n    OrderHistoryModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n    ProductListModule,\n    ProductFacetNavigationModule,\n    ProductTabsModule,\n    ProductCarouselModule,\n    ProductReferencesModule,\n    OrderDetailsModule,\n    PaymentMethodsModule,\n    UpdateEmailModule,\n    UpdatePasswordModule,\n    UpdateProfileModule,\n    ConsentManagementModule,\n    CloseAccountModule,\n    CartComponentModule,\n    TabParagraphContainerModule,\n    OrderConfirmationModule,\n    StoreFinderModule,\n    ProductImagesModule,\n    ProductSummaryModule,\n    ProductVariantsModule,\n    ProductIntroModule,\n    CheckoutComponentModule,\n    ForgotPasswordModule,\n    ResetPasswordModule,\n    BannerCarouselModule,\n    UserComponentModule,\n    MyCouponsModule,\n    WishListModule,\n    NotificationPreferenceModule,\n    MyInterestsModule,\n    StockNotificationModule,\n    ReplenishmentOrderHistoryModule,\n    ReplenishmentOrderConfirmationModule,\n    ReplenishmentOrderDetailsModule,\n  ],\n})\nexport class CmsLibModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductDetailsUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPDPMatcher = getSuffixUrlMatcher({\n      marker: 'p',\n      paramName: 'productCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PDP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / p / :productCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_DETAILS_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_DETAILS_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductDetailsUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          product: {\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductListingUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPLPMatcher = getSuffixUrlMatcher({\n      marker: 'c',\n      paramName: 'categoryCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PLP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / c / :categoryCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_LISTING_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_LISTING_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductListingUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          category: {\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { Params } from '@angular/router';\nimport { PageContext } from '@spartacus/core';\n\n/**\n * Indicates that a user visited an arbitrary page.\n */\nexport class PageEvent {\n  context: PageContext;\n  semanticRoute?: string;\n  url: string;\n  params: Params;\n}\n\n/**\n * Indicates that a user visited the home page.\n */\nexport class HomePageEvent extends PageEvent {}\n","import { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a cart page.\n */\nexport class CartPageEvent extends PageEvent {}\n","import { Injectable } from '@angular/core';\nimport { ActionsSubject } from '@ngrx/store';\nimport { createFrom, EventService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { PageEvent } from '../page/page.events';\nimport { CartPageEvent } from './cart-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageEventBuilder {\n  constructor(\n    protected actions: ActionsSubject,\n    protected eventService: EventService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(CartPageEvent, this.buildCartPageEvent());\n  }\n\n  protected buildCartPageEvent(): Observable<CartPageEvent> {\n    return this.eventService.get(PageEvent).pipe(\n      filter((pageEvent) => pageEvent.semanticRoute === 'cart'),\n      map((pageEvent) => createFrom(CartPageEvent, pageEvent))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CartPageEventBuilder } from './cart-page-event.builder';\n\n@NgModule({})\nexport class CartPageEventModule {\n  constructor(_cartPageEventBuilder: CartPageEventBuilder) {}\n}\n","import { Injectable } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { RouterNavigatedAction, ROUTER_NAVIGATED } from '@ngrx/router-store';\nimport { ActionsSubject } from '@ngrx/store';\nimport {\n  ActivatedRouterStateSnapshot,\n  createFrom,\n  EventService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HomePageEvent, PageEvent } from './page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageEventBuilder {\n  constructor(\n    protected actions: ActionsSubject,\n    protected eventService: EventService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(PageEvent, this.buildPageEvent());\n    this.eventService.register(HomePageEvent, this.buildHomePageEvent());\n  }\n\n  protected buildPageEvent(): Observable<PageEvent> {\n    return this.getNavigatedEvent().pipe(\n      map((state) =>\n        createFrom(PageEvent, {\n          context: state.context,\n          semanticRoute: state.semanticRoute,\n          url: state.url,\n          params: state.params,\n        })\n      )\n    );\n  }\n\n  protected buildHomePageEvent(): Observable<HomePageEvent> {\n    return this.buildPageEvent().pipe(\n      filter((pageEvent) => pageEvent.semanticRoute === 'home'),\n      map((pageEvent) => createFrom(HomePageEvent, pageEvent))\n    );\n  }\n\n  private getNavigatedEvent(): Observable<ActivatedRouterStateSnapshot> {\n    return this.actions.pipe(\n      ofType<RouterNavigatedAction<ActivatedRouterStateSnapshot>>(\n        ROUTER_NAVIGATED\n      ),\n      map((event) => event.payload.routerState)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PageEventBuilder } from './page-event.builder';\n\n@NgModule({})\nexport class PageEventModule {\n  constructor(_pageEventBuilder: PageEventBuilder) {}\n}\n","import { Category, Price } from '@spartacus/core';\nimport { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a product details page.\n */\nexport class ProductDetailsPageEvent extends PageEvent {\n  categories?: Category[];\n  code?: string;\n  name?: string;\n  price?: Price;\n}\n\n/**\n * Indicates that a user visited a category page.\n */\nexport class CategoryPageResultsEvent extends PageEvent {\n  categoryCode: string;\n  categoryName?: string;\n  numberOfResults: Number;\n}\n\n/**\n * Indicates that the a user visited the search results page,\n * and that the search results have been retrieved.\n */\nexport class SearchPageResultsEvent extends PageEvent {\n  searchTerm: string;\n  numberOfResults: Number;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  createFrom,\n  EventService,\n  ProductSearchService,\n  ProductService,\n} from '@spartacus/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { filter, map, skip, switchMap, take } from 'rxjs/operators';\nimport { PageEvent } from '../page/page.events';\nimport {\n  CategoryPageResultsEvent,\n  ProductDetailsPageEvent,\n  SearchPageResultsEvent,\n} from './product-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductPageEventBuilder {\n  constructor(\n    protected eventService: EventService,\n    protected productService: ProductService,\n    protected productSearchService: ProductSearchService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(\n      SearchPageResultsEvent,\n      this.buildSearchPageResultsEvent()\n    );\n    this.eventService.register(\n      ProductDetailsPageEvent,\n      this.buildProductDetailsPageEvent()\n    );\n    this.eventService.register(\n      CategoryPageResultsEvent,\n      this.buildCategoryResultsPageEvent()\n    );\n  }\n\n  protected buildProductDetailsPageEvent(): Observable<\n    ProductDetailsPageEvent\n  > {\n    return this.eventService.get(PageEvent).pipe(\n      filter((pageEvent) => pageEvent.semanticRoute === 'product'),\n      switchMap((pageEvent) =>\n        this.productService.get(pageEvent.context.id).pipe(\n          filter((product) => Boolean(product)),\n          take(1),\n          map((product) =>\n            createFrom(ProductDetailsPageEvent, {\n              ...pageEvent,\n              categories: product.categories,\n              code: product.code,\n              name: product.name,\n              price: product.price,\n            })\n          )\n        )\n      )\n    );\n  }\n\n  protected buildCategoryResultsPageEvent(): Observable<\n    CategoryPageResultsEvent\n  > {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(PageEvent).pipe(\n      switchMap((pageEvent) => {\n        if (pageEvent?.semanticRoute !== 'category') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) => ({\n            ...pageEvent,\n            ...{\n              categoryCode: pageEvent?.context?.id,\n              numberOfResults: searchResults?.pagination?.totalResults,\n              categoryName: searchResults.breadcrumbs?.[0].facetValueName,\n            },\n          })),\n          map((categoryPage) =>\n            createFrom(CategoryPageResultsEvent, categoryPage)\n          )\n        );\n      })\n    );\n  }\n\n  protected buildSearchPageResultsEvent(): Observable<SearchPageResultsEvent> {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(PageEvent).pipe(\n      switchMap((pageEvent) => {\n        if (pageEvent?.semanticRoute !== 'search') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) => ({\n            ...pageEvent,\n            ...{\n              searchTerm: searchResults?.freeTextSearch,\n              numberOfResults: searchResults?.pagination?.totalResults,\n            },\n          })),\n          map((searchPage) => createFrom(SearchPageResultsEvent, searchPage))\n        );\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ProductPageEventBuilder } from './product-page-event.builder';\n\n@NgModule({})\nexport class ProductPageEventModule {\n  constructor(_productPageEventBuilder: ProductPageEventBuilder) {}\n}\n","import { MediaConfig } from '../../shared/components/media/media.config';\n\nexport const mediaConfig: MediaConfig = {\n  mediaFormats: {\n    mobile: {\n      width: 400,\n    },\n    tablet: {\n      width: 770,\n    },\n    desktop: {\n      width: 1140,\n    },\n    widescreen: {\n      width: 1400,\n    },\n    // product media\n    cartIcon: {\n      width: 65,\n    },\n    thumbnail: {\n      width: 96,\n    },\n    product: {\n      width: 284,\n    },\n    zoom: {\n      width: 515,\n    },\n  },\n};\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\n/**\n * The layout configuration is used to define the overall layout of the storefront.\n * The configuration includes the following aspects:\n * - breakpoint layout (AKA screen layout)\n * - Page sections slot configuration (i.e. header vs footer)\n * - page template slot configuration (i.e. landing page template vs PDP page template)\n * - deferred loading configuration\n *\n * The page slot configurations is directly related to the data in the backend. If you use the\n * Spartacus sample-data, you will have an aligned setup. However, if you introduce custom page\n * templates and/or slots, you most likely need to further adjust or replace this configuration.\n */\nexport const layoutConfig: LayoutConfig = {\n  // deferredLoading: {\n  //   strategy: DeferLoadingStrategy.DEFER,\n  //   intersectionMargin: '50px',\n  // },\n  layoutSlots: {\n    header: {\n      lg: {\n        slots: [\n          'PreHeader',\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n    },\n    navigation: {\n      lg: { slots: [] },\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      pageFold: 'Section2B',\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      pageFold: 'Section2',\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\n    },\n    ProductGridPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsListSlot',\n        'Section4',\n      ],\n    },\n    SearchResultsGridPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsGridSlot',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      lg: {\n        pageFold: 'UpSelling',\n      },\n      pageFold: 'Summary',\n      slots: [\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n    CheckoutLoginPageTemplate: {\n      slots: ['RightContentSlot'],\n    },\n  },\n};\n\n/**\n * @deprecated the b2cLayoutConfig will be dropped with version 4.0.\n *\n * With Spartacus 3.0 we started to align various layout configurations. Moreover, we move\n * into a pattern where layout configurations are shattered through various (lazy loaded) modules.\n */\nexport const b2cLayoutConfig: LayoutConfig = layoutConfig;\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CartPageEventModule } from './cart/cart-page-event.module';\nimport { PageEventModule } from './page/page-event.module';\nimport { ProductPageEventModule } from './product/product-page-event.module';\n\n@NgModule({\n  imports: [CartPageEventModule, PageEventModule, ProductPageEventModule],\n})\nexport class EventsModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  AnonymousConsentsModule,\n  AuthModule,\n  CartModule,\n  CheckoutModule,\n  CmsModule,\n  ConfigInitializerModule,\n  ConfigModule,\n  ConfigValidatorModule,\n  FeaturesConfigModule,\n  GlobalMessageModule,\n  I18nModule,\n  ProcessModule,\n  ProductModule,\n  provideConfigFromMetaTags,\n  StateModule,\n  UserModule,\n} from '@spartacus/core';\nimport { EventsModule } from '../events/events.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MediaModule } from '../shared/components/media/media.module';\nimport { ViewConfigModule } from '../shared/config/view-config.module';\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\n\n@NgModule({\n  imports: [\n    StateModule.forRoot(),\n    AuthModule.forRoot(),\n    AnonymousConsentsModule.forRoot(),\n    ConfigModule.forRoot(),\n    ConfigInitializerModule.forRoot(),\n    ConfigValidatorModule.forRoot(),\n    RoutingModule.forRoot(),\n    I18nModule.forRoot(),\n    CmsModule.forRoot(),\n    GlobalMessageModule.forRoot(),\n    ProcessModule.forRoot(),\n    CartModule.forRoot(),\n    CheckoutModule.forRoot(),\n    UserModule.forRoot(),\n    ProductModule.forRoot(),\n    ViewConfigModule.forRoot(),\n    FeaturesConfigModule.forRoot('2.0'),\n    LayoutModule,\n    MediaModule.forRoot(),\n    EventsModule,\n  ],\n  exports: [LayoutModule],\n  providers: [...provideConfigFromMetaTags()],\n})\nexport class StorefrontFoundationModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  ExternalRoutesModule,\n  OccModule,\n  PersonalizationModule,\n  provideConfig,\n  SiteContextModule,\n  SmartEditModule,\n} from '@spartacus/core';\nimport { AsmModule } from '../cms-components/asm/asm.module';\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\nimport { MainModule } from '../layout/main/main.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      anchorScrolling: 'enabled',\n      relativeLinkResolution: 'corrected',\n    }),\n\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\n    // since we might have conflicting interceptor logic. See #5461.\n    AsmModule,\n\n    StorefrontFoundationModule,\n    MainModule,\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n\n    SmartEditModule.forRoot(), // should be custom\n    PersonalizationModule.forRoot(), // should be custom\n\n    // opt-in explicitly\n    OccModule.forRoot(),\n    ProductDetailsPageModule,\n    ProductListingPageModule,\n    ExternalRoutesModule.forRoot(),\n  ],\n  exports: [MainModule, StorefrontFoundationModule],\n})\nexport class StorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<StorefrontModule> {\n    return {\n      ngModule: StorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideConfig,\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { layoutConfig, mediaConfig } from './config/index';\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\nimport { StorefrontModule } from './storefront.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    StorefrontModule,\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n  ],\n  providers: [\n    provideDefaultConfig({\n      pwa: {\n        enabled: true,\n        addToHomeScreen: true,\n      },\n    }),\n    provideDefaultConfig(layoutConfig),\n    provideDefaultConfig(mediaConfig),\n    provideDefaultConfigFactory(defaultCmsContentConfig),\n  ],\n  exports: [StorefrontModule],\n})\nexport class B2cStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2cStorefrontModule> {\n    return {\n      ngModule: B2cStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { AbstractControl, FormArray, FormGroup } from '@angular/forms';\n\n/**\n * Utils for Angular forms\n */\nexport namespace FormUtils {\n  /**\n   * Calls the native Angular method `#updateValueAndValidity` for the given from control\n   * and all its descendants (in case when it's `FormGroup` or `FormArray`).\n   *\n   * In particular it's useful for triggering re-emission of observables\n   * `valueChanges` and `statusChanges` for all descendant form controls.\n   *\n   * _Note: Dropping this function may be considered, when it's implemented natively\n   * by Angular. See https://github.com/angular/angular/issues/6170_\n   *\n   * @param control form control\n   * @param options additional options\n   * * `emitEvent`: When true or not given (the default), the `statusChanges` and\n   * `valueChanges` observables emit the latest status and value. When false,\n   * it doesn't trigger observables emission.\n   */\n  export function deepUpdateValueAndValidity(\n    control: AbstractControl,\n    options: { emitEvent?: boolean } = {}\n  ): void {\n    if (control instanceof FormGroup || control instanceof FormArray) {\n      Object.values(control.controls).forEach(\n        (childControl: AbstractControl) => {\n          deepUpdateValueAndValidity(childControl, options);\n        }\n      );\n    }\n\n    control.updateValueAndValidity({\n      onlySelf: true, // avoid calling `#updateValueAndValidity` for all ancestors\n      emitEvent: options.emitEvent,\n    });\n  }\n}\n","/*\n * Public API Surface of storefrontlib\n */\n\nexport * from './cms-components/index';\nexport * from './cms-pages/index';\nexport * from './cms-structure/index';\nexport * from './events/index';\nexport * from './layout/index';\nexport * from './recipes/index';\nexport * from './recipes/storefront.module';\nexport * from './shared/index';\nexport * from './storefront-config';\nexport * from './utils/index';\n\n/** AUGMENTABLE_TYPES_START */\nexport { BREAKPOINT } from './layout/config/layout-config';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {defaultAnonymousConsentLayoutConfig as ɵw} from './cms-components/anonymous-consent-management/default-anonymous-consent-layout.config';\nexport {AsmLoaderModule as ɵx,asmFactory as ɵy} from './cms-components/asm/asm-loader.module';\nexport {AsmMainUiComponent as ɵba} from './cms-components/asm/asm-main-ui/asm-main-ui.component';\nexport {AsmSessionTimerComponent as ɵbe} from './cms-components/asm/asm-session-timer/asm-session-timer.component';\nexport {FormatTimerPipe as ɵbf} from './cms-components/asm/asm-session-timer/format-timer.pipe';\nexport {AsmToggleUiComponent as ɵbh} from './cms-components/asm/asm-toggle-ui/asm-toggle-ui.component';\nexport {CSAgentLoginFormComponent as ɵbc} from './cms-components/asm/csagent-login-form/csagent-login-form.component';\nexport {CustomerEmulationComponent as ɵbg} from './cms-components/asm/customer-emulation/customer-emulation.component';\nexport {CustomerSelectionComponent as ɵbd} from './cms-components/asm/customer-selection/customer-selection.component';\nexport {defaultAsmLayoutConfig as ɵbi} from './cms-components/asm/default-asm-layout.config';\nexport {AsmComponentService as ɵbb} from './cms-components/asm/services/asm-component.service';\nexport {AsmEnablerService as ɵz} from './cms-components/asm/services/asm-enabler.service';\nexport {CartNotEmptyGuard as ɵbt} from './cms-components/cart';\nexport {MultiLinePipe as ɵbl} from './cms-components/checkout/components/checkout-progress/multiline-titles.pipe';\nexport {CostCenterComponent as ɵbr} from './cms-components/checkout/components/cost-center/cost-center.component';\nexport {CostCenterModule as ɵbq} from './cms-components/checkout/components/cost-center/cost-center.module';\nexport {PaymentTypeComponent as ɵbo} from './cms-components/checkout/components/payment-type/payment-type.component';\nexport {PaymentTypeModule as ɵbn} from './cms-components/checkout/components/payment-type/payment-type.module';\nexport {defaultPlaceOrderSpinnerLayoutConfig as ɵbp} from './cms-components/checkout/components/place-order/default-place-order-spinner-layout.config';\nexport {defaultCheckoutConfig as ɵbk} from './cms-components/checkout/config/default-checkout-config';\nexport {CheckoutAuthGuard as ɵbs} from './cms-components/checkout/guards';\nexport {CheckoutStepsSetGuard as ɵbm} from './cms-components/checkout/guards/checkout-steps-set.guard';\nexport {defaultIconConfig as ɵbj} from './cms-components/misc/icon/default-icon.config';\nexport {defaultQualtricsConfig as ɵbu} from './cms-components/misc/qualtrics/config/default-qualtrics-config';\nexport {MyCouponsComponentService as ɵbz} from './cms-components/myaccount/my-coupons/my-coupons.component.service';\nexport {ReturnRequestService as ɵbx} from './cms-components/myaccount/order/return-request-detail/return-request.service';\nexport {LoginRegisterComponent as ɵby} from './cms-components/user/login-register/login-register.component';\nexport {CmsPageGuardService as ɵbv} from './cms-structure/guards/cms-page-guard.service';\nexport {pwaConfigurationFactory as ɵa,pwaFactory as ɵb} from './cms-structure/pwa/pwa.module';\nexport {addCmsRoute as ɵca} from './cms-structure/routing/cms-route/add-cms-route';\nexport {defaultRoutingConfig as ɵcc,defaultStorefrontRoutesConfig as ɵcb} from './cms-structure/routing/default-routing-config';\nexport {htmlLangProvider as ɵcd,setHtmlLangAttribute as ɵce} from './cms-structure/seo/html-lang-provider';\nexport {getStructuredDataFactory as ɵc} from './cms-structure/seo/structured-data/structured-data.module';\nexport {CmsRoutesImplService as ɵbw} from './cms-structure/services/cms-routes-impl.service';\nexport {EventsModule as ɵcg} from './events/events.module';\nexport {AutoFocusDirective as ɵj} from './layout/a11y/keyboard-focus/autofocus/auto-focus.directive';\nexport {AutoFocusService as ɵs} from './layout/a11y/keyboard-focus/autofocus/auto-focus.service';\nexport {BaseFocusDirective as ɵo} from './layout/a11y/keyboard-focus/base/base-focus.directive';\nexport {BaseFocusService as ɵp} from './layout/a11y/keyboard-focus/base/base-focus.service';\nexport {BlockFocusDirective as ɵm} from './layout/a11y/keyboard-focus/block/block-focus.directive';\nexport {EscapeFocusDirective as ɵk} from './layout/a11y/keyboard-focus/escape/escape-focus.directive';\nexport {EscapeFocusService as ɵr} from './layout/a11y/keyboard-focus/escape/escape-focus.service';\nexport {FOCUS_ATTR as ɵd} from './layout/a11y/keyboard-focus/keyboard-focus.model';\nexport {LockFocusDirective as ɵg} from './layout/a11y/keyboard-focus/lock/lock-focus.directive';\nexport {LockFocusService as ɵv} from './layout/a11y/keyboard-focus/lock/lock-focus.service';\nexport {PersistFocusDirective as ɵl} from './layout/a11y/keyboard-focus/persist/persist-focus.directive';\nexport {PersistFocusService as ɵq} from './layout/a11y/keyboard-focus/persist/persist-focus.service';\nexport {TabFocusDirective as ɵi} from './layout/a11y/keyboard-focus/tab/tab-focus.directive';\nexport {TabFocusService as ɵt} from './layout/a11y/keyboard-focus/tab/tab-focus.service';\nexport {TrapFocusDirective as ɵh} from './layout/a11y/keyboard-focus/trap/trap-focus.directive';\nexport {TrapFocusService as ɵu} from './layout/a11y/keyboard-focus/trap/trap-focus.service';\nexport {VisibleFocusDirective as ɵn} from './layout/a11y/keyboard-focus/visible/visible-focus.directive';\nexport {skipLinkFactory as ɵe} from './layout/a11y/skip-link/skip-link.module';\nexport {defaultDirectionConfig as ɵcf} from './layout/direction/config/default-direction.config';\nexport {initHtmlDirAttribute as ɵf} from './layout/direction/direction.module';\nexport {DatePickerFormatterService as ɵch} from './shared/components/date-picker/date-picker-formatter.service';\nexport {DateTimePickerFormatterService as ɵci} from './shared/components/date-time-picker/date-time-picker-formatter.service';"]}