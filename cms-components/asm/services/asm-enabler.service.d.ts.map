{"version":3,"file":"asm-enabler.service.d.ts","sources":["asm-enabler.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Location } from '@angular/common';\nimport { WindowRef } from '@spartacus/core';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n/**\n * The AsmEnablerService is used to enable ASM for those scenario's\n * where it's actually used. This service is added to avoid any polution\n * of the UI and runtime performance for the ordinary production user.\n */\nexport declare class AsmEnablerService {\n    protected location: Location;\n    protected winRef: WindowRef;\n    protected launchDialogService: LaunchDialogService;\n    constructor(location: Location, winRef: WindowRef, launchDialogService: LaunchDialogService);\n    /**\n     * Loads the ASM UI if needed. The ASM UI will be added based on the\n     * existence of a URL parameter or previous usage given by local storage.\n     */\n    load(): void;\n    /**\n     * Indicates whether the ASM module is enabled.\n     */\n    isEnabled(): boolean;\n    /**\n     * Indicates whether ASM is launched through the URL,\n     * using the asm flag in the URL.\n     */\n    protected isLaunched(): boolean;\n    /**\n     * Evaluates local storage where we persist the usage of ASM.\n     */\n    protected isUsedBefore(): boolean;\n    /**\n     * Adds the ASM UI by using the `cx-storefront` outlet.\n     */\n    protected addUi(): void;\n}\n"]}