{"version":3,"file":"cart-item-list.component.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.d.ts"],"sourcesContent":["import { FormGroup } from '@angular/forms';\nimport { CartService, FeatureConfigService, PromotionLocation, PromotionResult, SelectiveCartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CartItemComponentOptions, Item } from '../cart-item/cart-item.component';\nexport declare class CartItemListComponent {\n    protected cartService: CartService;\n    protected selectiveCartService?: SelectiveCartService;\n    private featureConfig?;\n    readonly: boolean;\n    hasHeader: boolean;\n    options: CartItemComponentOptions;\n    private _items;\n    form: FormGroup;\n    set items(items: Item[]);\n    get items(): Item[];\n    potentialProductPromotions: PromotionResult[];\n    promotionLocation: PromotionLocation;\n    set setLoading(value: boolean);\n    constructor(cartService: CartService, selectiveCartService: SelectiveCartService, featureConfig: FeatureConfigService);\n    /**\n     * @deprecated Since 1.5\n     * Add selectiveCartService authService routingService and featureConfig for save for later.\n     * Remove issue: #5958\n     */\n    constructor(cartService: CartService);\n    isSaveForLaterEnabled(): boolean;\n    /**\n     * The items we're getting form the input do not have a consistent model.\n     * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\n     */\n    private resolveItems;\n    private createForm;\n    removeEntry(item: Item): void;\n    getControl(item: Item): Observable<FormGroup>;\n    getPotentialProductPromotionsForItem(item: Item): PromotionResult[];\n    private isConsumedByEntry;\n}\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;"}