{"version":3,"file":"cart-item-list.component.d.ts","sources":["cart-item-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { FormGroup } from '@angular/forms';\nimport { ActiveCartService, OrderEntry, PromotionLocation, SelectiveCartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CartItemComponentOptions } from '../cart-item/cart-item.component';\nexport declare class CartItemListComponent {\n    protected activeCartService: ActiveCartService;\n    protected selectiveCartService: SelectiveCartService;\n    readonly: boolean;\n    hasHeader: boolean;\n    options: CartItemComponentOptions;\n    private _items;\n    form: FormGroup;\n    set items(items: OrderEntry[]);\n    get items(): OrderEntry[];\n    promotionLocation: PromotionLocation;\n    set setLoading(value: boolean);\n    constructor(activeCartService: ActiveCartService, selectiveCartService: SelectiveCartService);\n    /**\n     * The items we're getting form the input do not have a consistent model.\n     * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\n     */\n    private resolveItems;\n    private createForm;\n    protected getControlName(item: OrderEntry): string;\n    removeEntry(item: OrderEntry): void;\n    getControl(item: OrderEntry): Observable<FormGroup>;\n}\n"]}