{"version":3,"file":"add-to-cart.component.d.ts","sources":["add-to-cart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActiveCartService, Product } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { CurrentProductService } from '../../product/current-product.service';\nexport declare class AddToCartComponent implements OnInit, OnDestroy {\n    protected modalService: ModalService;\n    protected currentProductService: CurrentProductService;\n    private cd;\n    protected activeCartService: ActiveCartService;\n    productCode: string;\n    showQuantity: boolean;\n    /**\n     * As long as we do not support #5026, we require product input, as we need\n     *  a reference to the product model to fetch the stock data.\n     */\n    product: Product;\n    maxQuantity: number;\n    modalRef: ModalRef;\n    hasStock: boolean;\n    quantity: number;\n    protected numberOfEntriesBeforeAdd: number;\n    subscription: Subscription;\n    addToCartForm: FormGroup;\n    constructor(modalService: ModalService, currentProductService: CurrentProductService, cd: ChangeDetectorRef, activeCartService: ActiveCartService);\n    ngOnInit(): void;\n    private setStockInfo;\n    updateCount(value: number): void;\n    addToCart(): void;\n    private openModal;\n    ngOnDestroy(): void;\n}\n"]}