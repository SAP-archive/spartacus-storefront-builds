{"version":3,"file":"navigation.service.d.ts","sources":["navigation.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CmsNavigationComponent, CmsService, SemanticPathService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { NavigationNode } from './navigation-node.model';\nexport declare class NavigationService {\n    protected cmsService: CmsService;\n    protected semanticPathService: SemanticPathService;\n    constructor(cmsService: CmsService, semanticPathService: SemanticPathService);\n    createNavigation(data$: Observable<CmsNavigationComponent>): Observable<NavigationNode>;\n    /**\n     * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n     * This function will load the navigation underlying entries and childs if they haven't been\n     * loaded so far.\n     */\n    getNavigationNode(data$: Observable<CmsNavigationComponent>): Observable<NavigationNode>;\n    /**\n     * Loads all navigation entry items' type and id. Dispatch action to load all these items\n     * @param nodeData\n     * @param root\n     * @param itemsList\n     */\n    private loadNavigationEntryItems;\n    /**\n     * Create a new node tree for the view\n     * @param nodeData\n     * @param items\n     */\n    private populateNavigationNode;\n    /**\n     * The node link is driven by the first entry.\n     */\n    private populateLink;\n    /**\n     *\n     * Gets the URL or link to a related item (category),\n     * also taking into account content pages (contentPageLabelOrId)\n     * and product pages (productCode)\n     */\n    protected getLink(item: any): string | string[];\n}\n"]}