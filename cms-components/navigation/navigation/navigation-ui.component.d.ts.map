{"version":3,"file":"navigation-ui.component.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/navigation/navigation/navigation-ui.component.d.ts"],"sourcesContent":["import { ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\nexport declare class NavigationUIComponent implements OnDestroy {\n    private router;\n    private renderer;\n    private elemRef;\n    /**\n     * The navigation node to render.\n     */\n    node: NavigationNode;\n    /**\n     * The number of child nodes that must be wrapped.\n     */\n    wrapAfter: number;\n    allowAlignToRight: boolean;\n    /**\n     * the icon type that will be used for navigation nodes\n     * with children.\n     */\n    iconType: typeof ICON_TYPE;\n    /**\n     * Indicates whether the navigation should support flyout.\n     * If flyout is set to true, the\n     * nested child navitation nodes will only appear on hover or focus.\n     */\n    flyout: boolean;\n    isOpen: boolean;\n    private openNodes;\n    private subscriptions;\n    private resize;\n    onResize(): void;\n    constructor(router: Router, renderer: Renderer2, elemRef: ElementRef);\n    toggleOpen(event: UIEvent): void;\n    back(): void;\n    clear(): void;\n    onMouseEnter(event: MouseEvent): void;\n    getDepth(node: NavigationNode, depth?: number): number;\n    getColumnCount(length: number): number;\n    focusAfterPreviousClicked(event: MouseEvent): Document;\n    ngOnDestroy(): void;\n    private alignWrapperToRightIfStickOut;\n    private alignWrappersToRightIfStickOut;\n    private updateClasses;\n    isTabbable(node: any): any;\n}\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;"}