{"version":3,"file":"search-box.component.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/navigation/search-box/search-box.component.d.ts"],"sourcesContent":["import { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\nexport declare class SearchBoxComponent {\n    protected searchBoxComponentService: SearchBoxComponentService;\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>;\n    protected winRef: WindowRef;\n    config: SearchBoxConfig;\n    /**\n     * Sets the search box input field\n     */\n    set queryText(value: string);\n    iconTypes: typeof ICON_TYPE;\n    /**\n     * In some occasions we need to ignore the close event,\n     * for example when we click inside the search result section.\n     */\n    private ignoreCloseEvent;\n    /**\n     * The component data is optional, so that this component\n     * can be reused without CMS integration.\n     */\n    constructor(searchBoxComponentService: SearchBoxComponentService, componentData: CmsComponentData<CmsSearchBoxComponent>, winRef: WindowRef);\n    results$: Observable<SearchResults>;\n    /**\n     * Returns the backend configuration or default configuration for the searchbox.\n     */\n    private get config$();\n    /**\n     * Closes the searchbox and opens the search result page.\n     */\n    search(query: string): void;\n    /**\n     * Opens the typeahead searchbox\n     */\n    open(): void;\n    /**\n     * Closes the typehead searchbox.\n     */\n    close(event: UIEvent, force?: boolean): void;\n    protected blurSearchBox(event: UIEvent): void;\n    private isSearchboxFocused;\n    /**\n     * Especially in mobile we do not want the search icon\n     * to focus the input again when it's already open.\n     * */\n    avoidReopen(event: UIEvent): void;\n    private getResultElements;\n    private getFocusedElement;\n    private getFocusedIndex;\n    focusPreviousChild(event: any): void;\n    focusNextChild(event: any): void;\n    /**\n     * Opens the PLP with the given query.\n     *\n     * TODO: if there's a single product match, we could open the PDP.\n     */\n    launchSearchResult(event: UIEvent, query: string): void;\n    /**\n     * Disables closing the search result list.\n     */\n    disableClose(): void;\n    /**\n     * Clears the search box input field\n     */\n    clear(el: HTMLInputElement): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;"}