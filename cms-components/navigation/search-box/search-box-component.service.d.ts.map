{"version":3,"file":"search-box-component.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/navigation/search-box/search-box-component.service.d.ts"],"sourcesContent":["import { RoutingService, SearchboxService, TranslationService, WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\nexport declare class SearchBoxComponentService {\n    searchService: SearchboxService;\n    protected routingService: RoutingService;\n    protected translationService: TranslationService;\n    protected winRef: WindowRef;\n    constructor(searchService: SearchboxService, routingService: RoutingService, translationService: TranslationService, winRef: WindowRef);\n    /**\n     * Executes the search for products and suggestions,\n     * unless the configuration is setup to not search for\n     * products or suggestions.\n     */\n    search(query: string, config: SearchBoxConfig): void;\n    /**\n     * Returns an observable with the SearchResults. When there's any\n     * result, the body tag will get a classname, so that specific style\n     * rules can be applied.\n     */\n    getResults(config: SearchBoxConfig): Observable<SearchResults>;\n    /**\n     * Clears the searchbox results, so that old values are\n     * no longer emited upon next search.\n     */\n    clearResults(): void;\n    hasBodyClass(className: string): boolean;\n    toggleBodyClass(className: string, add?: boolean): void;\n    private hasResults;\n    private getProductResults;\n    /**\n     * Loads suggestions from the backend. In case there's no suggestion\n     * available, we try to get an exact match suggestion.\n     */\n    private getProductSuggestions;\n    /**\n     * whenever there is at least 1 product, we simulate\n     * a suggestion to provide easy access to the search result page\n     */\n    private getExactSuggestion;\n    private getSearchMessage;\n    /**\n     * Navigates to the search result page with a given query\n     */\n    launchSearchPage(query: string): void;\n    private fetchTranslation;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;"}