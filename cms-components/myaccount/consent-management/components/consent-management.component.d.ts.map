{"version":3,"file":"consent-management.component.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/myaccount/consent-management/components/consent-management.component.d.ts"],"sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { AnonymousConsentsConfig, AnonymousConsentsService, AuthService, ConsentTemplate, GlobalMessageService, UserConsentService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nexport declare class ConsentManagementComponent implements OnInit, OnDestroy {\n    private userConsentService;\n    private globalMessageService;\n    private anonymousConsentsConfig?;\n    private anonymousConsentsService?;\n    private authService?;\n    private subscriptions;\n    private allConsentsLoading;\n    templateList$: Observable<ConsentTemplate[]>;\n    loading$: Observable<boolean>;\n    requiredConsents: string[];\n    isAnonymousConsentsEnabled: boolean;\n    isLevel13: boolean;\n    constructor(userConsentService: UserConsentService, globalMessageService: GlobalMessageService, anonymousConsentsConfig: AnonymousConsentsConfig, anonymousConsentsService: AnonymousConsentsService, authService: AuthService);\n    /**\n     * @deprecated since version 1.3\n     * Instead, use:\n     ```ts\n     constructor(\n       userConsentService: UserConsentService,\n       globalMessageService: GlobalMessageService,\n       anonymousConsentsConfig : AnonymousConsentsConfig,\n       anonymousConsentsService : AnonymousConsentsService,\n       authService: AuthService,\n     )\n     ```\n     */\n    constructor(userConsentService: UserConsentService, globalMessageService: GlobalMessageService);\n    ngOnInit(): void;\n    private consentListInit;\n    private hideAnonymousConsents;\n    private giveConsentInit;\n    private withdrawConsentInit;\n    private consentsExists;\n    onConsentChange({ given, template, }: {\n        given: boolean;\n        template: ConsentTemplate;\n    }): void;\n    private onConsentGivenSuccess;\n    private onConsentWithdrawnSuccess;\n    rejectAll(templates?: ConsentTemplate[]): void;\n    private setupWithdrawalStream;\n    allowAll(templates?: ConsentTemplate[]): void;\n    private setupGiveStream;\n    private isRequiredConsent;\n    ngOnDestroy(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;"}