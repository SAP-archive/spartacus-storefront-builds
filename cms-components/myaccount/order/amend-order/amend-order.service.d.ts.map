{"version":3,"file":"amend-order.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/myaccount/order/amend-order/amend-order.service.d.ts"],"sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\nimport { Order, OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { AmendOrderType } from './amend-order.model';\nexport declare abstract class OrderAmendService {\n    protected orderDetailsService: OrderDetailsService;\n    protected amendType: AmendOrderType;\n    protected form: FormGroup;\n    constructor(orderDetailsService: OrderDetailsService);\n    /**\n     * Returns entries for the given order.\n     */\n    abstract getEntries(): Observable<OrderEntry[]>;\n    /**\n     * Returns entries with an amended quantity.\n     */\n    getAmendedEntries(): Observable<OrderEntry[]>;\n    /**\n     * Submits the amended order.\n     */\n    abstract save(): void;\n    getOrder(): Observable<Order>;\n    /**\n     * returns the form with form data at runtime\n     */\n    getForm(): Observable<FormGroup>;\n    private buildForm;\n    protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl;\n    /**\n     * As discussed, this calculation is moved to SPA side.\n     * The calculation and validation should be in backend facade layer.\n     */\n    getAmendedPrice(entry: OrderEntry): Price;\n    getMaxAmendQuantity(entry: OrderEntry): number;\n    isCancellation(): boolean;\n}\n"],"names":[],"mappings":"AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;"}