{"version":3,"file":"login.guard.d.ts","sources":["login.guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { AuthConfigService, AuthRedirectService, AuthService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\n/**\n * Guards the _login_ route.\n *\n * Takes care of routing the user to a auth server login page (if implicit or code flow is used).\n * In case of Resource Owner Password Flow just renders the page as normal CMS page.\n */\nexport declare class LoginGuard implements CanActivate {\n    protected authService: AuthService;\n    protected authRedirectService: AuthRedirectService;\n    protected authConfigService: AuthConfigService;\n    protected cmsPageGuard: CmsPageGuard;\n    constructor(authService: AuthService, authRedirectService: AuthRedirectService, authConfigService: AuthConfigService, cmsPageGuard: CmsPageGuard);\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;\n}\n"]}