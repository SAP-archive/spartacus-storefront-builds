{"version":3,"file":"register.component.d.ts","sources":["register.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AnonymousConsent, AnonymousConsentsConfig, AnonymousConsentsService, GlobalMessageService, RoutingService, Title, UserService, UserSignUp } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nexport declare class RegisterComponent implements OnInit, OnDestroy {\n    protected userService: UserService;\n    protected globalMessageService: GlobalMessageService;\n    protected fb: FormBuilder;\n    protected router: RoutingService;\n    protected anonymousConsentsService: AnonymousConsentsService;\n    protected anonymousConsentsConfig: AnonymousConsentsConfig;\n    titles$: Observable<Title[]>;\n    loading$: Observable<boolean>;\n    private subscription;\n    anonymousConsent$: Observable<{\n        consent: AnonymousConsent;\n        template: string;\n    }>;\n    registerForm: FormGroup;\n    constructor(userService: UserService, globalMessageService: GlobalMessageService, fb: FormBuilder, router: RoutingService, anonymousConsentsService: AnonymousConsentsService, anonymousConsentsConfig: AnonymousConsentsConfig);\n    ngOnInit(): void;\n    submitForm(): void;\n    registerUser(): void;\n    titleSelected(title: Title): void;\n    collectDataFromRegisterForm(formData: any): UserSignUp;\n    isConsentGiven(consent: AnonymousConsent): boolean;\n    private isConsentRequired;\n    private onRegisterUserSuccess;\n    toggleAnonymousConsent(): void;\n    private registerUserProcessInit;\n    ngOnDestroy(): void;\n}\n"]}