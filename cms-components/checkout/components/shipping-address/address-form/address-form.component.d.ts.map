{"version":3,"file":"address-form.component.d.ts","sources":["address-form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Address, AddressValidation, CheckoutDeliveryService, Country, GlobalMessageService, Region, Title, UserAddressService, UserService } from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { ModalRef, ModalService } from '../../../../../shared/components/modal/index';\nexport declare class AddressFormComponent implements OnInit, OnDestroy {\n    protected fb: FormBuilder;\n    protected checkoutDeliveryService: CheckoutDeliveryService;\n    protected userService: UserService;\n    protected userAddressService: UserAddressService;\n    protected globalMessageService: GlobalMessageService;\n    protected modalService: ModalService;\n    countries$: Observable<Country[]>;\n    titles$: Observable<Title[]>;\n    regions$: Observable<Region[]>;\n    selectedCountry$: BehaviorSubject<string>;\n    addresses$: Observable<Address[]>;\n    addressData: Address;\n    actionBtnLabel: string;\n    cancelBtnLabel: string;\n    setAsDefaultField: boolean;\n    showTitleCode: boolean;\n    showCancelBtn: boolean;\n    submitAddress: EventEmitter<any>;\n    backToAddress: EventEmitter<any>;\n    addressVerifySub: Subscription;\n    regionsSub: Subscription;\n    suggestedAddressModalRef: ModalRef;\n    addressForm: FormGroup;\n    constructor(fb: FormBuilder, checkoutDeliveryService: CheckoutDeliveryService, userService: UserService, userAddressService: UserAddressService, globalMessageService: GlobalMessageService, modalService: ModalService);\n    ngOnInit(): void;\n    countrySelected(country: Country): void;\n    regionSelected(region: Region): void;\n    toggleDefaultAddress(): void;\n    back(): void;\n    verifyAddress(): void;\n    openSuggestedAddress(results: AddressValidation): void;\n    ngOnDestroy(): void;\n}\n"]}