import { OnDestroy, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { ActiveCartService, Address, CheckoutDeliveryService, CheckoutPaymentService, CheckoutService, GlobalMessageService, PaymentDetails, RoutingService, TranslationService, UserPaymentService } from '@spartacus/core';
import { Observable } from 'rxjs';
import { Card } from '../../../../shared/components/card/card.component';
import { ICON_TYPE } from '../../../misc/icon';
import { CheckoutConfigService } from '../../services/checkout-config.service';
import * as ɵngcc0 from '@angular/core';
export declare class PaymentMethodComponent implements OnInit, OnDestroy {
    protected userPaymentService: UserPaymentService;
    protected checkoutService: CheckoutService;
    protected checkoutDeliveryService: CheckoutDeliveryService;
    protected checkoutPaymentService: CheckoutPaymentService;
    protected globalMessageService: GlobalMessageService;
    protected routingService: RoutingService;
    protected checkoutConfigService: CheckoutConfigService;
    protected activatedRoute: ActivatedRoute;
    protected translation: TranslationService;
    protected activeCartService: ActiveCartService;
    iconTypes: typeof ICON_TYPE;
    existingPaymentMethods$: Observable<PaymentDetails[]>;
    isLoading$: Observable<boolean>;
    cards$: Observable<{
        content: Card;
        paymentMethod: PaymentDetails;
    }[]>;
    selectedMethod$: Observable<PaymentDetails>;
    isGuestCheckout: boolean;
    newPaymentFormManuallyOpened: boolean;
    protected shouldRedirect: boolean;
    protected deliveryAddress: Address;
    protected checkoutStepUrlNext: string;
    protected checkoutStepUrlPrevious: string;
    constructor(userPaymentService: UserPaymentService, checkoutService: CheckoutService, checkoutDeliveryService: CheckoutDeliveryService, checkoutPaymentService: CheckoutPaymentService, globalMessageService: GlobalMessageService, routingService: RoutingService, checkoutConfigService: CheckoutConfigService, activatedRoute: ActivatedRoute, translation: TranslationService, activeCartService: ActiveCartService);
    ngOnInit(): void;
    selectPaymentMethod(paymentDetails: PaymentDetails): void;
    showNewPaymentForm(): void;
    hideNewPaymentForm(): void;
    setPaymentDetails({ paymentDetails, billingAddress, }: {
        paymentDetails: PaymentDetails;
        billingAddress?: Address;
    }): void;
    ngOnDestroy(): void;
    protected getCardIcon(code: string): string;
    protected sendPaymentMethodFailGlobalMessage(field: string): void;
    protected createCard(paymentDetails: PaymentDetails, cardLabels: {
        textDefaultPaymentMethod: string;
        textExpires: string;
        textUseThisPayment: string;
        textSelected: string;
    }, selected: PaymentDetails): Card;
    goNext(): void;
    goPrevious(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PaymentMethodComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PaymentMethodComponent, "cx-payment-method", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1tZXRob2QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBheW1lbnQtbWV0aG9kLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQU9BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBBY3RpdmVDYXJ0U2VydmljZSwgQWRkcmVzcywgQ2hlY2tvdXREZWxpdmVyeVNlcnZpY2UsIENoZWNrb3V0UGF5bWVudFNlcnZpY2UsIENoZWNrb3V0U2VydmljZSwgR2xvYmFsTWVzc2FnZVNlcnZpY2UsIFBheW1lbnREZXRhaWxzLCBSb3V0aW5nU2VydmljZSwgVHJhbnNsYXRpb25TZXJ2aWNlLCBVc2VyUGF5bWVudFNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJy4uLy4uLy4uLy4uL3NoYXJlZC9jb21wb25lbnRzL2NhcmQvY2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSUNPTl9UWVBFIH0gZnJvbSAnLi4vLi4vLi4vbWlzYy9pY29uJztcbmltcG9ydCB7IENoZWNrb3V0Q29uZmlnU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2NoZWNrb3V0LWNvbmZpZy5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBheW1lbnRNZXRob2RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIHVzZXJQYXltZW50U2VydmljZTogVXNlclBheW1lbnRTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBjaGVja291dFNlcnZpY2U6IENoZWNrb3V0U2VydmljZTtcbiAgICBwcm90ZWN0ZWQgY2hlY2tvdXREZWxpdmVyeVNlcnZpY2U6IENoZWNrb3V0RGVsaXZlcnlTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBjaGVja291dFBheW1lbnRTZXJ2aWNlOiBDaGVja291dFBheW1lbnRTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBnbG9iYWxNZXNzYWdlU2VydmljZTogR2xvYmFsTWVzc2FnZVNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgY2hlY2tvdXRDb25maWdTZXJ2aWNlOiBDaGVja291dENvbmZpZ1NlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZTtcbiAgICBwcm90ZWN0ZWQgdHJhbnNsYXRpb246IFRyYW5zbGF0aW9uU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgYWN0aXZlQ2FydFNlcnZpY2U6IEFjdGl2ZUNhcnRTZXJ2aWNlO1xuICAgIGljb25UeXBlczogdHlwZW9mIElDT05fVFlQRTtcbiAgICBleGlzdGluZ1BheW1lbnRNZXRob2RzJDogT2JzZXJ2YWJsZTxQYXltZW50RGV0YWlsc1tdPjtcbiAgICBpc0xvYWRpbmckOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICAgIGNhcmRzJDogT2JzZXJ2YWJsZTx7XG4gICAgICAgIGNvbnRlbnQ6IENhcmQ7XG4gICAgICAgIHBheW1lbnRNZXRob2Q6IFBheW1lbnREZXRhaWxzO1xuICAgIH1bXT47XG4gICAgc2VsZWN0ZWRNZXRob2QkOiBPYnNlcnZhYmxlPFBheW1lbnREZXRhaWxzPjtcbiAgICBpc0d1ZXN0Q2hlY2tvdXQ6IGJvb2xlYW47XG4gICAgbmV3UGF5bWVudEZvcm1NYW51YWxseU9wZW5lZDogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgc2hvdWxkUmVkaXJlY3Q6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIGRlbGl2ZXJ5QWRkcmVzczogQWRkcmVzcztcbiAgICBwcm90ZWN0ZWQgY2hlY2tvdXRTdGVwVXJsTmV4dDogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBjaGVja291dFN0ZXBVcmxQcmV2aW91czogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKHVzZXJQYXltZW50U2VydmljZTogVXNlclBheW1lbnRTZXJ2aWNlLCBjaGVja291dFNlcnZpY2U6IENoZWNrb3V0U2VydmljZSwgY2hlY2tvdXREZWxpdmVyeVNlcnZpY2U6IENoZWNrb3V0RGVsaXZlcnlTZXJ2aWNlLCBjaGVja291dFBheW1lbnRTZXJ2aWNlOiBDaGVja291dFBheW1lbnRTZXJ2aWNlLCBnbG9iYWxNZXNzYWdlU2VydmljZTogR2xvYmFsTWVzc2FnZVNlcnZpY2UsIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZSwgY2hlY2tvdXRDb25maWdTZXJ2aWNlOiBDaGVja291dENvbmZpZ1NlcnZpY2UsIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgdHJhbnNsYXRpb246IFRyYW5zbGF0aW9uU2VydmljZSwgYWN0aXZlQ2FydFNlcnZpY2U6IEFjdGl2ZUNhcnRTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHNlbGVjdFBheW1lbnRNZXRob2QocGF5bWVudERldGFpbHM6IFBheW1lbnREZXRhaWxzKTogdm9pZDtcbiAgICBzaG93TmV3UGF5bWVudEZvcm0oKTogdm9pZDtcbiAgICBoaWRlTmV3UGF5bWVudEZvcm0oKTogdm9pZDtcbiAgICBzZXRQYXltZW50RGV0YWlscyh7IHBheW1lbnREZXRhaWxzLCBiaWxsaW5nQWRkcmVzcywgfToge1xuICAgICAgICBwYXltZW50RGV0YWlsczogUGF5bWVudERldGFpbHM7XG4gICAgICAgIGJpbGxpbmdBZGRyZXNzPzogQWRkcmVzcztcbiAgICB9KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBnZXRDYXJkSWNvbihjb2RlOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIHNlbmRQYXltZW50TWV0aG9kRmFpbEdsb2JhbE1lc3NhZ2UoZmllbGQ6IHN0cmluZyk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNyZWF0ZUNhcmQocGF5bWVudERldGFpbHM6IFBheW1lbnREZXRhaWxzLCBjYXJkTGFiZWxzOiB7XG4gICAgICAgIHRleHREZWZhdWx0UGF5bWVudE1ldGhvZDogc3RyaW5nO1xuICAgICAgICB0ZXh0RXhwaXJlczogc3RyaW5nO1xuICAgICAgICB0ZXh0VXNlVGhpc1BheW1lbnQ6IHN0cmluZztcbiAgICAgICAgdGV4dFNlbGVjdGVkOiBzdHJpbmc7XG4gICAgfSwgc2VsZWN0ZWQ6IFBheW1lbnREZXRhaWxzKTogQ2FyZDtcbiAgICBnb05leHQoKTogdm9pZDtcbiAgICBnb1ByZXZpb3VzKCk6IHZvaWQ7XG59XG4iXX0=