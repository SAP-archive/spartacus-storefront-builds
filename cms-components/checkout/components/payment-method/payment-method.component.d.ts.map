{"version":3,"file":"payment-method.component.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/checkout/components/payment-method/payment-method.component.d.ts"],"sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Address, CartService, CheckoutDeliveryService, CheckoutPaymentService, CheckoutService, GlobalMessageService, PaymentDetails, RoutingService, TranslationService, UserPaymentService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\nexport declare class PaymentMethodComponent implements OnInit, OnDestroy {\n    protected userPaymentService: UserPaymentService;\n    protected checkoutService: CheckoutService;\n    protected checkoutDeliveryService: CheckoutDeliveryService;\n    protected checkoutPaymentService: CheckoutPaymentService;\n    protected globalMessageService: GlobalMessageService;\n    protected routingService: RoutingService;\n    protected checkoutConfigService: CheckoutConfigService;\n    protected activatedRoute: ActivatedRoute;\n    protected translation: TranslationService;\n    protected cartService?: CartService;\n    iconTypes: typeof ICON_TYPE;\n    newPaymentFormManuallyOpened: boolean;\n    existingPaymentMethods$: Observable<PaymentDetails[]>;\n    isLoading$: Observable<boolean>;\n    selectedPayment: PaymentDetails;\n    allowRouting: boolean;\n    isGuestCheckout: boolean;\n    private getPaymentDetailsSub;\n    private deliveryAddress;\n    private checkoutStepUrlNext;\n    private checkoutStepUrlPrevious;\n    constructor(userPaymentService: UserPaymentService, checkoutService: CheckoutService, checkoutDeliveryService: CheckoutDeliveryService, checkoutPaymentService: CheckoutPaymentService, globalMessageService: GlobalMessageService, routingService: RoutingService, checkoutConfigService: CheckoutConfigService, activatedRoute: ActivatedRoute, translation: TranslationService, cartService: CartService);\n    /**\n     * @deprecated since 1.x\n     * NOTE: check issue:#1181 for more info\n     *\n     * TODO(issue:#1181) Deprecated since 1.x\n     */\n    constructor(userPaymentService: UserPaymentService, checkoutService: CheckoutService, checkoutDeliveryService: CheckoutDeliveryService, checkoutPaymentService: CheckoutPaymentService, globalMessageService: GlobalMessageService, routingService: RoutingService, checkoutConfigService: CheckoutConfigService, activatedRoute: ActivatedRoute, translation: TranslationService);\n    ngOnInit(): void;\n    getCardContent(payment: PaymentDetails): Observable<Card>;\n    selectPaymentMethod(paymentDetails: PaymentDetails): void;\n    showNewPaymentForm(): void;\n    hideNewPaymentForm(): void;\n    setPaymentDetails({ paymentDetails, billingAddress, isNewPayment, }: {\n        paymentDetails: PaymentDetails;\n        billingAddress?: Address;\n        isNewPayment?: boolean;\n    }): void;\n    ngOnDestroy(): void;\n    protected getCardIcon(code: string): string;\n    protected sendPaymentMethodFailGlobalMessage(msg: string): void;\n    protected createCard(paymentDetails: any, cardLabels: any): {\n        title: any;\n        textBold: any;\n        text: any[];\n        img: string;\n        actions: {\n            name: any;\n            event: string;\n        }[];\n        header: any;\n    };\n    goNext(): void;\n    goPrevious(): void;\n    /**\n     * @deprecated since version 1.3\n     * This method will no longer be in use. Use goNext() instead.\n     * TODO(issue:#4992) deprecated since 1.3\n     */\n    next(): void;\n    /**\n     * @deprecated since version 1.3\n     * This method will no longer be in use. Use goPrevious() instead.\n     * TODO(issue:#4992) deprecated since 1.3\n     */\n    back(): void;\n    /**\n     * @deprecated since version 1.3\n     * This method will no longer be in use. Use selectPaymentMethod() instead.\n     * TODO(issue:#4992) deprecated since 1.3\n     */\n    paymentMethodSelected(paymentDetails: PaymentDetails): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;"}