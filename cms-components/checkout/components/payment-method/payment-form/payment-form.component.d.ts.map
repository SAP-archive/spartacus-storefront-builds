{"version":3,"file":"payment-form.component.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/checkout/components/payment-method/payment-form/payment-form.component.d.ts"],"sourcesContent":["import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Address, AddressValidation, CardType, CheckoutDeliveryService, CheckoutPaymentService, Country, GlobalMessageService, LoaderState, UserPaymentService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { ModalRef, ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\ndeclare type monthType = {\n    id: number;\n    name: string;\n};\ndeclare type yearType = {\n    id: number;\n    name: number;\n};\nexport declare class PaymentFormComponent implements OnInit, OnDestroy {\n    protected checkoutPaymentService: CheckoutPaymentService;\n    protected checkoutDeliveryService: CheckoutDeliveryService;\n    protected userPaymentService: UserPaymentService;\n    protected globalMessageService: GlobalMessageService;\n    private fb;\n    private modalService;\n    iconTypes: typeof ICON_TYPE;\n    private checkboxSub;\n    private addressVerifySub;\n    suggestedAddressModalRef: ModalRef;\n    months: monthType[];\n    years: yearType[];\n    cardTypes$: Observable<CardType[]>;\n    shippingAddress$: Observable<Address>;\n    countries$: Observable<Country[]>;\n    loading$: Observable<LoaderState<void>>;\n    sameAsShippingAddress: boolean;\n    setAsDefaultField: boolean;\n    paymentMethodsCount: number;\n    goBack: EventEmitter<any>;\n    closeForm: EventEmitter<any>;\n    setPaymentDetails: EventEmitter<any>;\n    payment: FormGroup;\n    billingAddress: FormGroup;\n    constructor(checkoutPaymentService: CheckoutPaymentService, checkoutDeliveryService: CheckoutDeliveryService, userPaymentService: UserPaymentService, globalMessageService: GlobalMessageService, fb: FormBuilder, modalService: ModalService);\n    ngOnInit(): void;\n    expMonthAndYear(): void;\n    toggleDefaultPaymentMethod(): void;\n    paymentSelected(card: CardType): void;\n    monthSelected(month: monthType): void;\n    yearSelected(year: yearType): void;\n    toggleSameAsShippingAddress(): void;\n    isContinueButtonDisabled(): boolean;\n    /**\n     * Check if the shipping address can also be a billing address\n     *\n     * @memberof PaymentFormComponent\n     */\n    showSameAsShippingAddressCheckbox(): Observable<boolean>;\n    getAddressCardContent(address: Address): Card;\n    openSuggestedAddress(results: AddressValidation): void;\n    close(): void;\n    back(): void;\n    verifyAddress(): void;\n    next(): void;\n    ngOnDestroy(): void;\n}\nexport {};\n"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;;"}