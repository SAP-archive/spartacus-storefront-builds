{"version":3,"file":"payment-form.component.d.ts","sources":["payment-form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Address, AddressValidation, CardType, CheckoutDeliveryService, CheckoutPaymentService, Country, GlobalMessageService, Region, StateUtils, UserAddressService, UserPaymentService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { ModalRef, ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nexport declare class PaymentFormComponent implements OnInit, OnDestroy {\n    protected checkoutPaymentService: CheckoutPaymentService;\n    protected checkoutDeliveryService: CheckoutDeliveryService;\n    protected userPaymentService: UserPaymentService;\n    protected globalMessageService: GlobalMessageService;\n    protected fb: FormBuilder;\n    protected modalService: ModalService;\n    protected userAddressService: UserAddressService;\n    iconTypes: typeof ICON_TYPE;\n    private addressVerifySub;\n    suggestedAddressModalRef: ModalRef;\n    months: string[];\n    years: number[];\n    cardTypes$: Observable<CardType[]>;\n    shippingAddress$: Observable<Address>;\n    countries$: Observable<Country[]>;\n    loading$: Observable<StateUtils.LoaderState<void>>;\n    sameAsShippingAddress: boolean;\n    regions$: Observable<Region[]>;\n    selectedCountry$: BehaviorSubject<string>;\n    showSameAsShippingAddressCheckbox$: Observable<boolean>;\n    setAsDefaultField: boolean;\n    paymentMethodsCount: number;\n    goBack: EventEmitter<any>;\n    closeForm: EventEmitter<any>;\n    setPaymentDetails: EventEmitter<any>;\n    paymentForm: FormGroup;\n    billingAddressForm: FormGroup;\n    constructor(checkoutPaymentService: CheckoutPaymentService, checkoutDeliveryService: CheckoutDeliveryService, userPaymentService: UserPaymentService, globalMessageService: GlobalMessageService, fb: FormBuilder, modalService: ModalService, userAddressService: UserAddressService);\n    ngOnInit(): void;\n    expMonthAndYear(): void;\n    toggleDefaultPaymentMethod(): void;\n    toggleSameAsShippingAddress(): void;\n    getAddressCardContent(address: Address): Card;\n    openSuggestedAddress(results: AddressValidation): void;\n    close(): void;\n    back(): void;\n    verifyAddress(): void;\n    countrySelected(country: Country): void;\n    next(): void;\n    ngOnDestroy(): void;\n}\n"]}