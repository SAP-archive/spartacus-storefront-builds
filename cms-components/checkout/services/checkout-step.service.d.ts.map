{"version":3,"file":"checkout-step.service.d.ts","sources":["checkout-step.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ActivatedRoute } from '@angular/router';\nimport { RoutingConfigService, RoutingService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from './checkout-config.service';\nexport declare class CheckoutStepService {\n    protected routingService: RoutingService;\n    protected checkoutConfigService: CheckoutConfigService;\n    protected routingConfigService: RoutingConfigService;\n    allSteps: CheckoutStep[];\n    readonly steps$: BehaviorSubject<CheckoutStep[]>;\n    readonly activeStepIndex$: Observable<number>;\n    constructor(routingService: RoutingService, checkoutConfigService: CheckoutConfigService, routingConfigService: RoutingConfigService);\n    back(activatedRoute: ActivatedRoute): void;\n    next(activatedRoute: ActivatedRoute): void;\n    goToStepWithIndex(stepIndex: number): void;\n    getBackBntText(activatedRoute: ActivatedRoute): string;\n    resetSteps(): void;\n    disableEnableStep(currentStepType: CheckoutStepType, disabled: boolean): void;\n    getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep;\n    getCheckoutStepRoute(currentStepType: CheckoutStepType): string;\n    getFirstCheckoutStepRoute(): string;\n    getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string;\n    getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string;\n    getCurrentStepIndex(activatedRoute: ActivatedRoute): number;\n    private getStepUrlFromActivatedRoute;\n    private getStepUrlFromStepRoute;\n    private getCheckoutStepIndex;\n}\n"]}