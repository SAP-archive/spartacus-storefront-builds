{"version":3,"file":"product-list-component.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-components/product/product-list/container/product-list-component.service.d.ts"],"sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\nimport { CurrencyService, LanguageService, ProductSearchPage, ProductSearchService, RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nexport declare class ProductListComponentService {\n    protected productSearchService: ProductSearchService;\n    protected routing: RoutingService;\n    protected activatedRoute: ActivatedRoute;\n    protected currencyService: CurrencyService;\n    protected languageService: LanguageService;\n    protected router: Router;\n    protected defaultPageSize: number;\n    protected sub: Subscription;\n    protected readonly RELEVANCE_ALLCATEGORIES = \":relevance:allCategories:\";\n    constructor(productSearchService: ProductSearchService, routing: RoutingService, activatedRoute: ActivatedRoute, currencyService: CurrencyService, languageService: LanguageService, router: Router);\n    private searchResults$;\n    private searchByRouting$;\n    /**\n     * This stream should be used only on the Product Listing Page.\n     *\n     * It not only emits search results, but also performs a search on every change\n     * of the route (i.e. route params or query params).\n     *\n     * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n     * so no longer the search is performed on route change.\n     */\n    readonly model$: Observable<ProductSearchPage>;\n    clearSearchResults(): void;\n    private getCriteriaFromRoute;\n    private getQueryFromRouteParams;\n    private search;\n    private getSearchConfig;\n    setQuery(query: string): void;\n    viewPage(pageNumber: number): void;\n    /**\n     * Get items from a given page without using navigation\n     */\n    getPageItems(pageNumber: number): void;\n    sort(sortCode: string): void;\n    private setQueryParams;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;"}