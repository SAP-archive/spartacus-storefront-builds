{"version":3,"file":"product-facet-navigation.component.d.ts","sources":["product-facet-navigation.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\nexport declare class ProductFacetNavigationComponent {\n    protected breakpointService: BreakpointService;\n    iconTypes: typeof ICON_TYPE;\n    /**\n     * We delay the removal of DOM so that animations can finish playing before the\n     * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\n     * to be focused.\n     */\n    protected CLOSE_DELAY: number;\n    /**\n     * Used to open the facet navigation in a dialog. The usage of the dialog depends\n     * on the availability of the trigger element, which is driven by CSS.\n     *\n     * The reference is also used to refocus the trigger after the dialog is closed.\n     */\n    trigger: ElementRef<HTMLElement>;\n    protected open$: BehaviorSubject<boolean>;\n    /**\n     * Emits the open state that indicates whether the facet list should be rendered.\n     * This is either done instantly, or after the user triggers this by using the trigger\n     * button. This driven by the visiibility of the trigger, so that the CSS drives\n     * the behaviour. This can differ per breakpoint.\n     *\n     * There's a configurable delay for the closed state, so that the DOM is not removed\n     * before some CSS animations are done.\n     */\n    isOpen$: Observable<boolean>;\n    /**\n     * Emits the active state that indicates whether the facet list is activated. Activation\n     * is related to the css, so that a animation or transition can visualize opening/closing\n     * the list (i.e. dialog).\n     */\n    isActive$: Observable<boolean>;\n    constructor(breakpointService: BreakpointService);\n    launch(): void;\n    close(): void;\n    /**\n     * Indicates that the facet navigation should be open explicitely by a trigger.\n     * This is fully controlled by CSS, where the trigger button can be hidden\n     * (display:none) for certain screen sizes.\n     */\n    get hasTrigger(): boolean;\n}\n"]}