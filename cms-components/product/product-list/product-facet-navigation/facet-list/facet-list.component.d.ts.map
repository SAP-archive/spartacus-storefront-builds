{"version":3,"file":"facet-list.component.d.ts","sources":["facet-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\nimport { FacetList } from '../facet.model';\nimport { FacetComponent } from '../facet/facet.component';\nimport { FacetService } from '../services/facet.service';\nexport declare class FacetListComponent {\n    protected facetService: FacetService;\n    protected elementRef: ElementRef;\n    protected renderer: Renderer2;\n    private _isDialog;\n    /**\n     * Indicates that the facet navigation is rendered in dialog.\n     */\n    set isDialog(value: boolean);\n    get isDialog(): boolean;\n    /** Emits when the list must close */\n    closeList: EventEmitter<any>;\n    /** The list of all facet and values related to the products in the list */\n    facetList$: Observable<FacetList>;\n    iconTypes: typeof ICON_TYPE;\n    dialogFocusConfig: FocusConfig;\n    handleClick(): void;\n    constructor(facetService: FacetService, elementRef: ElementRef, renderer: Renderer2);\n    /**\n     * Toggles the facet group in case it is not expanded.\n     */\n    expandFacetGroup(facet: Facet, ref: FacetComponent): void;\n    /**\n     * Indicates that the facet group has been expanded.\n     */\n    isExpanded(facet: Facet): Observable<boolean>;\n    /**\n     * Indicates that the facet group has been collapsed.\n     */\n    isCollapsed(facet: Facet): Observable<boolean>;\n    close(event?: boolean): void;\n    block(event?: MouseEvent): void;\n}\n"]}