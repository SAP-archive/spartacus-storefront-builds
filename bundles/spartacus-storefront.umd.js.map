{"version":3,"file":"spartacus-storefront.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng://@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng://@spartacus/storefront/shared/components/modal/modal-ref.ts","ng://@spartacus/storefront/shared/components/modal/modal.service.ts","ng://@spartacus/storefront/shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","ng://@spartacus/storefront/cms-structure/services/cms-components.service.ts","ng://@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng://@spartacus/storefront/cms-structure/page/component/services/cms-injector.service.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/component-handler.ts","ng://@spartacus/storefront/cms-structure/page/component/services/component-handler.service.ts","ng://@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/default-component.handler.ts","ng://@spartacus/storefront/cms-structure/page/component/services/cx-api.service.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/web-component.handler.ts","ng://@spartacus/storefront/cms-structure/page/component/handlers/lazy-component.handler.ts","ng://@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng://@spartacus/storefront/cms-components/asm/asm-constants.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-component.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.model.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/services/select-focus.util.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/service/skip-link.service.ts","ng://@spartacus/storefront/layout/a11y/skip-link/component/skip-link.component.ts","ng://@spartacus/storefront/layout/launch-dialog/config/default-launch-config.ts","ng://@spartacus/storefront/layout/launch-dialog/config/launch-config.ts","ng://@spartacus/storefront/layout/launch-dialog/services/launch-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/launch-dialog.service.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-enabler.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-loader.module.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/format-timer.pipe.ts","ng://@spartacus/storefront/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-emulation/customer-emulation.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-selection/customer-selection.component.ts","ng://@spartacus/storefront/shared/components/card/card.component.ts","ng://@spartacus/storefront/shared/components/card/card.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng://@spartacus/storefront/layout/config/layout-config.ts","ng://@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng://@spartacus/storefront/shared/components/media/media.service.ts","ng://@spartacus/storefront/shared/components/media/media.component.ts","ng://@spartacus/storefront/shared/components/media/media.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/config/default-pagination.config.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/config/pagination.config.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.model.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.builder.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng://@spartacus/storefront/shared/components/media/media.config.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.component.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng://@spartacus/storefront/shared/components/form/form-errors/form-errors.component.ts","ng://@spartacus/storefront/shared/components/form/form-errors/form-errors.module.ts","ng://@spartacus/storefront/shared/config/view-config.ts","ng://@spartacus/storefront/shared/config/view-config.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng://@spartacus/storefront/shared/services/promotion/promotion.service.ts","ng://@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng://@spartacus/storefront/shared/utils/forms/title-utils.ts","ng://@spartacus/storefront/cms-components/asm/asm.module.ts","ng://@spartacus/storefront/cms-components/product/current-product.service.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/base/base-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/block/block-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/focus.directive.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/keyboard-focus.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng://@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.component.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.module.ts","ng://@spartacus/storefront/cms-components/cart/cart.module.ts","ng://@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng://@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-config.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-auth.guard.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng://@spartacus/storefront/cms-components/checkout/services/express-checkout.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-details-loaded.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng://@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/not-checkout-auth.guard.ts","ng://@spartacus/storefront/layout/a11y/keyboard-focus/index.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/default-skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/directive/skip-link.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng://@spartacus/storefront/layout/a11y/skip-link/skip-link.module.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng://@spartacus/storefront/layout/launch-dialog/services/inline-render.strategy.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng://@spartacus/storefront/layout/loading/intersection.service.ts","ng://@spartacus/storefront/layout/loading/defer-loader.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-renderer.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng://@spartacus/storefront/layout/launch-dialog/services/outlet-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/services/routing-render.strategy.ts","ng://@spartacus/storefront/layout/launch-dialog/launch-dialog.module.ts","ng://@spartacus/storefront/layout/layout.module.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng://@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng://@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng://@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld-script.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld.directive.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/tokens.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.module.ts","ng://@spartacus/storefront/cms-structure/seo/seo.module.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng://@spartacus/storefront/shared/components/anonymous-consents/anonymous-consents.module.ts","ng://@spartacus/storefront/layout/main/storefront.component.ts","ng://@spartacus/storefront/layout/main/main.module.ts","ng://@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes-impl.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page-guard.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng://@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng://@spartacus/storefront/cms-structure/routing/routing.module.ts","ng://@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.component.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.module.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng://@spartacus/storefront/cms-components/content/link/link.component.ts","ng://@spartacus/storefront/cms-components/content/link/link.module.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.module.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.component.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.module.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng://@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng://@spartacus/storefront/cms-components/product/config/default-scroll-config.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet.model.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/guards/product-variant.guard.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.module.ts","ng://@spartacus/storefront/cms-components/storefinder/components/schedule-component/schedule.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder/store-finder.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","ng://@spartacus/storefront/cms-components/storefinder/store-finder.module.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.component.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.module.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng://@spartacus/storefront/cms-components/user/login/login.component.ts","ng://@spartacus/storefront/cms-components/user/login/login.module.ts","ng://@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng://@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng://@spartacus/storefront/cms-components/user/register/register.component.ts","ng://@spartacus/storefront/cms-components/user/register/register.module.ts","ng://@spartacus/storefront/cms-components/user/user.module.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list/wish-list.component.ts","ng://@spartacus/storefront/cms-components/wish-list/wish-list.module.ts","ng://@spartacus/storefront/cms-components/cms-lib.module.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng://@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng://@spartacus/storefront/recipes/config/default-media.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng://@spartacus/storefront/recipes/storefront-foundation.module.ts","ng://@spartacus/storefront/recipes/storefront.module.ts","ng://@spartacus/storefront/recipes/b2c-storefront.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\nexport enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n  HEART = 'HEART',\n  EMPTY_HEART = 'EMPTY_HEART',\n  FILTER = 'FILTER',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class IconConfig {\n  icon?: IconOptions;\n}\n\nexport interface IconOptions {\n  /**\n   * Each icon type can be configured with a so-called symbol. The symbol will\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n   * a font based icon. The following configuration would map to a fontawesome\n   * icon:\n   *\n   * icon: {\n   *   symbols: {\n   *     CART: 'fas fa-shopping-cart'\n   *   }\n   * }\n   */\n  symbols?: {\n    [ICON_TYPE: string]: string;\n  };\n\n  /**\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n   * is used for the SVG xlink reference.\n   */\n  resources?: IconConfigResource[];\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: (ICON_TYPE | string)[];\n}\n\n/**\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\n * The resources will be automitacally loaded in case they're required for the `ICON_TYPE`.\n */\nexport enum IconResourceType {\n  /**\n   * An svg based icon requires an SVG resource that must be loaded,\n   * this is typically a sprite svg file.\n   */\n  SVG = 'svg',\n\n  /**\n   * A font based ICON might require an additional CSS file to be loaded.\n   */\n  LINK = 'link',\n  /**\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\n   */\n  TEXT = 'text',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n      HEART: 'fas fa-heart',\n      EMPTY_HEART: 'far fa-heart',\n      FILTER: 'fas fa-filter',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconOptions,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(\n    protected winRef: WindowRef,\n    protected iconConfig: IconConfig,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  /**\n   * Returns an html fragment which can be added to the DOM in a safe way.\n   */\n  getHtml(type: ICON_TYPE | string): SafeHtml {\n    if (this.isResourceType(type, IconResourceType.SVG)) {\n      return this.sanitizer.bypassSecurityTrustHtml(\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\n      );\n    }\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\n    }\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Indicates whether the given `ICON_TYPE` is configured for\n   * the given `IconResourceType`.\n   */\n  private isResourceType(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): boolean {\n    return (\n      this.config.resources &&\n      !!this.config.resources.find(\n        (res) =>\n          res.types && res.type === resourceType && res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config a[[s been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  private getSvgPath(iconType: ICON_TYPE | string): string {\n    const svgResource = this.config.resources.find(\n      (res) =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE | string): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (\n      resource &&\n      resource.url &&\n      !this.loadedResources.includes(resource.url)\n    ) {\n      this.loadedResources.push(resource.url);\n      const head = this.winRef.document.getElementsByTagName('head')[0];\n      const link = this.winRef.document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = 'text/css';\n      link.href = resource.url;\n      head.appendChild(link);\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.resources) {\n      return;\n    }\n\n    let resource = this.config.resources.find(\n      (res) =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.resources.find(\n        (res) => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  getSymbol(iconType: ICON_TYPE | string) {\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\n      return this.config.symbols[iconType];\n    }\n  }\n\n  private get config(): IconOptions {\n    return this.iconConfig.icon;\n  }\n}\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE } from './icon.model';\n\n/**\n *\n * The icon component can be added in different ways:\n *\n * With the component selector:\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\n *\n * With the attribute selector:\n * `<span cxIcon=\"STAR\"></span>`\n *\n * Additionally, content can be projected to the icon:\n *\n * `<button cxIcon=\"HAPPY\">happy label</button>`\n *\n * The above button would become (based on a TEXT resource type):\n * `<button>😊happy label</button>`\n *\n * While the content is projected, the icon itself doesn't require an\n * additional DOM node which is an advantage over the component selector.\n */\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set cxIcon(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set type(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * the icon provides an html fragment that is used to add SVG or text based icons.\n   */\n  icon: SafeHtml;\n\n  /**\n   * Maintains the applied style classes so we can remove them when the\n   * icon type changes at run time.\n   */\n  protected styleClasses: string[];\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected renderer: Renderer2\n  ) {}\n\n  protected setIcon(type: ICON_TYPE): void {\n    if (!type || <string>type === '') {\n      return;\n    }\n    this.icon = this.iconLoader.getHtml(type);\n    this.addStyleClasses(type);\n    this.iconLoader.addLinkResource(type);\n  }\n\n  /**\n   * Adds the style classes and the link resource (if available).\n   */\n  protected addStyleClasses(type: ICON_TYPE): void {\n    this.renderer.addClass(this.host, 'cx-icon');\n\n    if (this.styleClasses) {\n      this.styleClasses.forEach((cls) =>\n        this.renderer.removeClass(this.host, cls)\n      );\n    }\n\n    this.styleClasses = this.iconLoader.getStyleClasses(type).split(' ');\n\n    this.styleClasses.forEach((cls) => {\n      if (cls !== '') {\n        this.renderer.addClass(this.host, cls);\n      }\n    });\n  }\n\n  protected get host() {\n    return this.elementRef.nativeElement;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  providers: [provideDefaultConfig(fontawesomeIconConfig)],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../modal/index';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog',\n  templateUrl: './anonymous-consent-dialog.component.html',\n})\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  showLegalDescription = true;\n  iconTypes = ICON_TYPE;\n  requiredConsents: string[] = [];\n\n  loading$: Observable<boolean>;\n  templates$: Observable<ConsentTemplate[]>;\n  consents$: Observable<AnonymousConsent[]>;\n\n  constructor(\n    private config: AnonymousConsentsConfig,\n    private modalService: ModalService,\n    private anonymousConsentsService: AnonymousConsentsService\n  ) {\n    if (Boolean(this.config.anonymousConsents)) {\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.templates$ = this.anonymousConsentsService.getTemplates();\n    this.consents$ = this.anonymousConsentsService.getConsents();\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n\n  rejectAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.withdrawConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.closeModal('rejectAll');\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                (consent && consent.consentState == null) ||\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.giveConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.closeModal('allowAll');\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.config.anonymousConsents) &&\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\n    );\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.anonymousConsentsService.giveConsent(template.id);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(template.id);\n    }\n  }\n\n  getCorrespondingConsent(\n    template: ConsentTemplate,\n    consents: AnonymousConsent[] = []\n  ): AnonymousConsent {\n    for (const consent of consents) {\n      if (template.id === consent.templateCode) {\n        return consent;\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { AnonymousConsentsService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AnonymousConsentDialogComponent } from '../../../shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-management-banner',\n  templateUrl: './anonymous-consent-management-banner.component.html',\n})\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\n  private subscriptions = new Subscription();\n\n  bannerVisible$: Observable<\n    boolean\n  > = this.anonymousConsentsService.isBannerVisible();\n\n  constructor(\n    private modalService: ModalService,\n    private anonymousConsentsService: AnonymousConsentsService\n  ) {}\n\n  viewDetails(): void {\n    this.hideBanner();\n    this.modalService.open(AnonymousConsentDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      this.anonymousConsentsService\n        .giveAllConsents()\n        .pipe(tap(() => this.hideBanner()))\n        .subscribe()\n    );\n  }\n\n  hideBanner(): void {\n    this.anonymousConsentsService.toggleBannerDismissed(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AnonymousConsentDialogComponent } from '../../../shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-open-dialog',\n  templateUrl: './anonymous-consent-open-dialog.component.html',\n})\nexport class AnonymousConsentOpenDialogComponent {\n  constructor(protected modalService: ModalService) {}\n\n  openDialog(): void {\n    this.modalService.open(AnonymousConsentDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  DeferLoadingStrategy,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, FeaturesConfigModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AnonymousConsentManagementBannerComponent: {\n          component: AnonymousConsentManagementBannerComponent,\n          deferLoading: DeferLoadingStrategy.INSTANT,\n        },\n        AnonymousConsentOpenDialogComponent: {\n          component: AnonymousConsentOpenDialogComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  exports: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  entryComponents: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n})\nexport class AnonymousConsentManagementBannerModule {}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport {\n  CmsComponentMapping,\n  CmsConfig,\n  DeferLoadingStrategy,\n} from '@spartacus/core';\nimport { Route } from '@angular/router';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsComponentsService {\n  private missingComponents: string[] = [];\n\n  constructor(\n    protected config: CmsConfig,\n    @Inject(PLATFORM_ID) protected platformId: Object\n  ) {}\n\n  /**\n   * Should be called to make sure all component mappings are determined,\n   * especially lazy loaded ones.\n   *\n   * It's recommended way to make sure all other methods of CmsComponentService\n   * will be able to work synchronously for asked component types and avoid risk\n   * of potential errors that could be thrown otherwise.\n   */\n  determineMappings(componentTypes: string[]): Observable<string[]> {\n    return of(componentTypes);\n  }\n\n  /**\n   * Return collection of component mapping configuration for specified list of\n   * component types.\n   *\n   * If component mapping can't be determined synchronously, for example, lazy\n   * loaded one, it will throw an error.\n   *\n   * To make sure component mapping is available, determineMappings()\n   * should be called and completed first.\n   */\n  getMapping(componentType: string): CmsComponentMapping {\n    const componentConfig = this.config.cmsComponents?.[componentType];\n\n    if (!componentConfig) {\n      if (!this.missingComponents.includes(componentType)) {\n        this.missingComponents.push(componentType);\n        console.warn(\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n\n    return componentConfig;\n  }\n\n  /**\n   * Checks, if component should be rendered as some components\n   * could be disabled for server side renderings\n   */\n  shouldRender(componentType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\n  }\n\n  /**\n   * Return DeferLoadingStrategy for component type.\n   */\n  getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\n    return this.config.cmsComponents?.[componentType]?.deferLoading;\n  }\n\n  /**\n   * Get cms driven child routes for components\n   */\n  getChildRoutes(componentTypes: string[]): Route[] {\n    const routes = [];\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        routes.push(...(this.getMapping(componentType)?.childRoutes ?? []));\n      }\n    }\n    return routes;\n  }\n\n  /**\n   * Get cms driven guards for components\n   */\n  getGuards(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  /**\n   * Get i18n keys associated with components\n   */\n  getI18nKeys(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { CmsComponentData } from '../../model';\nimport { CmsComponent, CmsService } from '@spartacus/core';\nimport { CmsComponentsService } from '../../../services/cms-components.service';\n\n/**\n * Used to prepare injector for CMS components.\n *\n * Injector will take into account configured providers and provides CmsComponentData\n * for specified component's uid\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsInjectorService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  private getCmsData<T extends CmsComponent>(\n    uid: string,\n    parentInjector?: Injector\n  ): CmsComponentData<T> {\n    return {\n      uid: uid,\n      data$: (parentInjector ?? this.injector)\n        .get(CmsService)\n        .getComponentData<T>(uid),\n    };\n  }\n\n  public getInjector(\n    type: string,\n    uid: string,\n    parentInjector?: Injector\n  ): Injector {\n    const configProviders =\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useValue: this.getCmsData(uid),\n        },\n        ...configProviders,\n      ],\n      parent: parentInjector ?? this.injector,\n    });\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * ComponentHandler implementations can be used for instantiating and launching\n * different types of CMS mapped components\n */\nexport abstract class ComponentHandler implements Applicable {\n  /**\n   * Returns component resource - an observable stream used to launch and dispose\n   * component.\n   *\n   * Instantiate and launch component by subscribing to launcher.\n   * Successful component launch will be followed by emission of ElementRef\n   * (and in case of native Angular component, also ComponentRef).\n   * Unsubscribing from the launcher will remove and tear down the component.\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  abstract launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\n\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\n  abstract getPriority?(): Priority;\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  Injector,\n  isDevMode,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from '../handlers/component-handler';\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Responsible for obtaining component handler for specified component mapping\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentHandlerService {\n  constructor(\n    @Optional()\n    @Inject(ComponentHandler)\n    protected handlers: ComponentHandler[]\n  ) {}\n\n  protected invalidMappings = new Set<CmsComponentMapping>();\n\n  /**\n   * Get best matching component handler\n   *\n   * @param componentMapping\n   */\n  protected resolve(componentMapping: CmsComponentMapping): ComponentHandler {\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\n\n    if (isDevMode() && !handler) {\n      if (!this.invalidMappings.has(componentMapping)) {\n        this.invalidMappings.add(componentMapping);\n        console.warn(\n          \"Can't resolve handler for component mapping: \",\n          componentMapping\n        );\n      }\n    }\n\n    return handler;\n  }\n\n  /**\n   * Get launcher for specified component mapping\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  getLauncher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return this.resolve(componentMapping)?.launcher(\n      componentMapping,\n      viewContainerRef,\n      elementInjector\n    );\n  }\n}\n","import {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ContentSlotComponentData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nimport { CmsInjectorService } from './services/cms-injector.service';\nimport { ComponentHandlerService } from './services/component-handler.service';\n\n/**\n * Directive used to facilitate instantiation of CMS driven dynamic components\n */\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n\n  /**\n   * @deprecated since 2.0\n   *\n   * This property in unsafe, i.e.\n   * - cmpRef can be set later because of lazy loading or deferred loading\n   * - cmpRef can be not set at all if for example, web components are used as cms components\n   */\n  cmpRef?: ComponentRef<any>;\n\n  private launcherResource?: Subscription;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected componentHandler: ComponentHandlerService,\n    protected cmsInjector: CmsInjectorService\n  ) {}\n\n  ngOnInit() {\n    this.cmsComponentsService\n      .determineMappings([this.cxComponentWrapper.flexType])\n      .subscribe(() => {\n        if (\n          this.cmsComponentsService.shouldRender(\n            this.cxComponentWrapper.flexType\n          )\n        ) {\n          this.launchComponent();\n        }\n      });\n  }\n\n  private launchComponent() {\n    const componentMapping = this.cmsComponentsService.getMapping(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (!componentMapping) {\n      return;\n    }\n\n    this.launcherResource = this.componentHandler\n      .getLauncher(\n        componentMapping,\n        this.vcr,\n        this.cmsInjector.getInjector(\n          this.cxComponentWrapper.flexType,\n          this.cxComponentWrapper.uid,\n          this.injector\n        )\n      )\n      ?.subscribe(({ elementRef, componentRef }) => {\n        this.cmpRef = componentRef;\n        this.decorate(elementRef);\n      });\n  }\n\n  private decorate(elementRef: ElementRef): void {\n    this.dynamicAttributeService.addDynamicAttributes(\n      elementRef.nativeElement,\n      this.renderer,\n      { componentData: this.cxComponentWrapper }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.launcherResource) {\n      this.launcherResource.unsubscribe();\n    }\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from './component-handler';\nimport { Observable } from 'rxjs';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * Default component handler used for dynamically launching cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DefaultComponentHandler implements ComponentHandler {\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return typeof componentMapping.component === 'function';\n  }\n\n  getPriority(): Priority {\n    return Priority.FALLBACK;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return new Observable<{\n      elementRef: ElementRef;\n      componentRef?: ComponentRef<any>;\n    }>((subscriber) => {\n      let componentRef: ComponentRef<any>;\n\n      const injector = elementInjector ?? viewContainerRef.injector;\n\n      const dispose = () => {\n        if (componentRef) {\n          componentRef.destroy();\n        }\n      };\n\n      const factory = this.getComponentFactory(\n        injector,\n        componentMapping.component\n      );\n\n      if (factory) {\n        componentRef = viewContainerRef.createComponent(\n          factory,\n          undefined,\n          injector\n        );\n        subscriber.next({ elementRef: componentRef.location, componentRef });\n      }\n\n      return dispose;\n    });\n  }\n\n  protected getComponentFactory(injector: Injector, component: any): any {\n    if (!component) {\n      return null;\n    }\n    const factory = injector\n      .get(ComponentFactoryResolver)\n      .resolveComponentFactory(component);\n\n    return factory;\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport {\n  ActiveCartService,\n  AuthService,\n  BaseSiteService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  CmsService,\n  CurrencyService,\n  FeatureConfigService,\n  GlobalMessageService,\n  KymaService,\n  LanguageService,\n  OccEndpointsService,\n  PageMetaService,\n  ProductReferenceService,\n  ProductReviewService,\n  ProductSearchService,\n  ProductService,\n  RoutingService,\n  SearchboxService,\n  SelectiveCartService,\n  TranslationService,\n  UserAddressService,\n  UserConsentService,\n  UserInterestsService,\n  UserNotificationPreferenceService,\n  UserOrderService,\n  UserPaymentService,\n  UserService,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CxApiService {\n  cmsComponentData?: CmsComponentData<any>;\n\n  constructor(\n    // auth\n    @Optional() public auth: AuthService,\n    // cart\n    @Optional() public cart: ActiveCartService,\n    // checkout\n    @Optional() public checkout: CheckoutService,\n    @Optional() public checkoutDelivery: CheckoutDeliveryService,\n    @Optional() public checkoutPayment: CheckoutPaymentService,\n    // cms\n    @Optional() public cms: CmsService,\n    @Optional() public pageMeta: PageMetaService,\n    // features config\n    @Optional() public featureConfig: FeatureConfigService,\n    // global message\n    @Optional() public globalMessage: GlobalMessageService,\n    // i18n\n    @Optional() public translation: TranslationService,\n    // kyma\n    @Optional() public kyma: KymaService,\n    // occ\n    @Optional() public occEndpoints: OccEndpointsService,\n    // product\n    @Optional() public product: ProductService,\n    @Optional() public productSearch: ProductSearchService,\n    @Optional() public productReview: ProductReviewService,\n    @Optional() public productReference: ProductReferenceService,\n    @Optional() public searchbox: SearchboxService,\n    // routing\n    @Optional() public routing: RoutingService,\n    // site context\n    @Optional() public currency: CurrencyService,\n    @Optional() public language: LanguageService,\n    @Optional() public baseSite: BaseSiteService,\n    // user\n    @Optional() public user: UserService,\n    @Optional() public userAddress: UserAddressService,\n    @Optional() public userConsent: UserConsentService,\n    @Optional() public userOrder: UserOrderService,\n    @Optional() public userPayment: UserPaymentService,\n    @Optional()\n    public userNotificationPreferenceService: UserNotificationPreferenceService,\n    @Optional()\n    public userInterestsService: UserInterestsService,\n    @Optional() public selectiveCartService: SelectiveCartService,\n    // framework\n    public ngZone: NgZone\n  ) {}\n}\n","import {\n  ElementRef,\n  Inject,\n  Injectable,\n  Injector,\n  PLATFORM_ID,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ComponentHandler } from './component-handler';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { CxApiService } from '../services/cx-api.service';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\nimport { CmsComponentData } from '../../model';\n\n/**\n * Component handler responsible for launching cms web components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WebComponentHandler implements ComponentHandler {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  private loadedWebComponents: { [path: string]: any } = {};\n\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return (\n      typeof componentMapping.component === 'string' &&\n      componentMapping.component.includes('#')\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW; // low, as it's a default matcher\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef }> {\n    return new Observable<{ elementRef: ElementRef }>((subscriber) => {\n      let webElement;\n      let active = true;\n      const injector = elementInjector ?? viewContainerRef.injector;\n\n      const renderer = injector.get(Renderer2);\n\n      const disposeFunc = () => {\n        active = false;\n        if (webElement) {\n          webElement.remove();\n        }\n      };\n\n      this.initWebComponent(componentMapping.component, renderer).then(\n        (elementName) => {\n          if (elementName) {\n            webElement = renderer.createElement(elementName);\n\n            const cmsComponentData = injector.get(CmsComponentData, null);\n\n            webElement.cxApi = {\n              ...injector.get(CxApiService),\n              cmsComponentData,\n            };\n\n            renderer.appendChild(\n              viewContainerRef.element.nativeElement.parentElement,\n              webElement\n            );\n\n            subscriber.next({ elementRef: new ElementRef(webElement) });\n\n            if (!active) {\n              disposeFunc();\n            }\n          }\n        }\n      );\n\n      return disposeFunc;\n    });\n  }\n\n  private initWebComponent(\n    component: string,\n    renderer: Renderer2\n  ): Promise<string> {\n    return new Promise((resolve) => {\n      const [path, selector] = component.split('#');\n\n      let script = this.loadedWebComponents[path];\n\n      if (!script) {\n        if (path) {\n          script = renderer.createElement('script');\n          this.loadedWebComponents[path] = script;\n          script.setAttribute('src', path);\n          renderer.appendChild(this.document.body, script);\n          if (isPlatformBrowser(this.platform)) {\n            script.onload = () => {\n              script.onload = null;\n            };\n          }\n        } else {\n          script = {};\n        }\n      }\n\n      if (script.onload) {\n        // If script is still loading (has onload callback defined)\n        // add new callback and chain it with the existing one.\n        // Needed to support loading multiple components from one script\n        const chainedOnload = script.onload;\n        script.onload = () => {\n          chainedOnload();\n          resolve(selector);\n        };\n      } else {\n        resolve(selector);\n      }\n    });\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\nimport { from, Observable } from 'rxjs';\nimport { DefaultComponentHandler } from './default-component.handler';\nimport { switchMap } from 'rxjs/operators';\nimport { ComponentHandler } from './component-handler';\n\n/**\n * Lazy component handler used for launching lazy loaded cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyComponentHandler implements ComponentHandler {\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\n\n  /**\n   * We want to mach dynamic import signature () => import('')\n   */\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return (\n      typeof componentMapping.component === 'function' &&\n      this.isNotClass(componentMapping.component)\n    );\n  }\n\n  private isNotClass(symbol: any): boolean {\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\n    return signature.startsWith('function()') || signature.startsWith('()=>');\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return from(componentMapping.component()).pipe(\n      switchMap((component) =>\n        this.defaultHandler.launcher(\n          { ...componentMapping, component },\n          viewContainerRef,\n          elementInjector\n        )\n      )\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\nimport { ComponentHandler } from './handlers/component-handler';\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\nimport { WebComponentHandler } from './handlers/web-component.handler';\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: ComponentHandler,\n      useExisting: DefaultComponentHandler,\n      multi: true,\n    },\n    {\n      provide: ComponentHandler,\n      useExisting: LazyComponentHandler,\n      multi: true,\n    },\n    {\n      provide: ComponentHandler,\n      useExisting: WebComponentHandler,\n      multi: true,\n    },\n  ],\n  declarations: [ComponentWrapperDirective],\n  exports: [ComponentWrapperDirective],\n})\nexport class PageComponentModule {}\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Injectable } from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmComponentService {\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected routingService: RoutingService,\n    protected winRef: WindowRef\n  ) {}\n\n  logoutCustomerSupportAgentAndCustomer(): void {\n    this.authService\n      .getUserToken()\n      .pipe(take(1))\n      .subscribe((token) => {\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\n          this.logoutCustomer();\n        }\n        this.asmAuthService.logoutCustomerSupportAgent();\n      });\n  }\n\n  logoutCustomer(): void {\n    this.authService.logout();\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\n    return this.authService\n      .getUserToken()\n      .pipe(\n        mergeMap((userToken) =>\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\n        )\n      );\n  }\n\n  /**\n   * We're currently only removing the persisted storage in the browser\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\n   * optimsiations we could think of:\n   * - drop the `asm` parameter from the URL, in case it's still there\n   * - remove the generated UI from the DOM (outlets currently do not support this)\n   */\n  unload() {\n    if (this.winRef.localStorage) {\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\n    }\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  User,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-main-ui',\n  templateUrl: './asm-main-ui.component.html',\n  styleUrls: ['./asm-main-ui.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmMainUiComponent implements OnInit {\n  csAgentToken$: Observable<UserToken>;\n  csAgentTokenLoading$: Observable<boolean>;\n  customer$: Observable<User>;\n\n  @HostBinding('class.hidden') disabled = false;\n\n  private startingCustomerSession = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected userService: UserService,\n    protected asmComponentService: AsmComponentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService\n  ) {}\n\n  ngOnInit(): void {\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\n    this.customer$ = this.authService.getUserToken().pipe(\n      switchMap((token) => {\n        if (token && !!token.access_token) {\n          this.handleCustomerSessionStartRedirection(token);\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\n    if (\n      this.startingCustomerSession &&\n      this.asmAuthService.isCustomerEmulationToken(token)\n    ) {\n      this.startingCustomerSession = false;\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n      this.routingService.go('/');\n    }\n  }\n\n  loginCustomerSupportAgent({\n    userId,\n    password,\n  }: {\n    userId: string;\n    password: string;\n  }): void {\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\n  }\n\n  logout(): void {\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n  }\n\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\n    this.asmAuthService\n      .getCustomerSupportAgentToken()\n      .pipe(take(1))\n      .subscribe((customerSupportAgentToken) =>\n        this.asmAuthService.startCustomerEmulationSession(\n          customerSupportAgentToken,\n          customerId\n        )\n      )\n      .unsubscribe();\n    this.startingCustomerSession = true;\n  }\n\n  hideUi(): void {\n    this.disabled = true;\n    this.asmComponentService.unload();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseFocusService {}\n","/** The element attribute used to store the focus state */\nexport const FOCUS_ATTR = 'data-cx-focus';\n/** The element attribute used to store the focus group state */\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\n\nexport const enum MOVE_FOCUS {\n  NEXT = 1,\n  PREV = -1,\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface BaseFocusConfig {}\n\nexport interface VisibleFocusConfig {\n  /**\n   * When set to true, the mouse-focus class is added to the host element,\n   * indicating that the element focus was not caused by the keyboard.\n   */\n  disableMouseFocus?: boolean;\n}\n\nexport interface BlockFocusConfig extends VisibleFocusConfig {\n  block?: boolean;\n}\n\nexport interface PersistFocusConfig extends BlockFocusConfig {\n  /**\n   * A key to maintain the focus of an element in case the component is\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\n   */\n  key?: string;\n\n  /**\n   * Optional group identifier that can be used to persist the focus. This allows\n   * to have separate persisted focus available when the DOM is partially rebuild.\n   */\n  group?: string;\n}\n\nexport interface EscapeFocusConfig extends PersistFocusConfig {\n  focusOnEscape?: boolean;\n  /**\n   * Force an autofocus in case of double-escape\n   */\n  focusOnDoubleEscape?: boolean;\n}\n\nexport interface AutoFocusConfig extends EscapeFocusConfig {\n  /**\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\n   * In case the focus is explicitly set to `true`, the first accessible element\n   * is focussed in case there is no _autofocus_ element found.\n   * If the focus is set to false, autofocus will be disabled completely.\n   *\n   * If a string value is given, the autofocus will be restored based on the persisted\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\n   *\n   * Defaults to `true`.\n   */\n  autofocus?: boolean | string;\n\n  // whenever the target autofocus element is selected by the `skipFocus` selector,\n  // autofocus is ignored.\n  skipFocus?: string;\n}\n\nexport interface TabFocusConfig extends AutoFocusConfig {\n  tab?: boolean | 'scroll' | string;\n}\n\n/**\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\n * for the nested focusable elements. This means that the focus can not\n * \"leave\" the elements. If the last element is focused, the keyboard will\n * navigate to the first element and visa versa.\n */\nexport interface TrapFocusConfig extends TabFocusConfig {\n  /** traps the focus */\n  trap?: boolean | 'start' | 'end';\n}\n\nexport interface LockFocusConfig extends TrapFocusConfig {\n  /**\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\n   */\n  lock?: boolean;\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface FocusConfig extends LockFocusConfig {}\n","import { Injectable } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\n\nconst GLOBAL_GROUP = '_g_';\n\n/**\n * Shared service to persist the focus for an element or a group\n * of elements. The persisted element focus can be used to persist\n * the focus for a DOM tree, so that the focus remains after a repaint\n * or reoccurs when a DOM tree is \"unlocked\".\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersistFocusService extends BaseFocusService {\n  // this is going to fail as we have sub services. They will al have their own map.\n  // We must bring this to a singlton map.\n  protected focus = new Map<string, string>();\n\n  get(group?: string): string {\n    return this.focus.get(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Persist the keyboard focus state for the given key. The focus is stored globally\n   * or for the given group.\n   */\n  set(key: string, group?: string) {\n    if (key) {\n      this.focus.set(group || GLOBAL_GROUP, key);\n    }\n  }\n\n  /**\n   * Clears the persisted keyboard focus state globally or for the given group.\n   */\n  clear(group?: string) {\n    this.focus.delete(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Returns the group for the host element based on the configured group or\n   * by the `data-cx-focus-group` attribute stored on the host.\n   */\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectFocusUtility {\n  /**\n   * Query selectors used to query focusable child elements of the host element.\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\n   */\n  protected focusableSelectors: string[] = [\n    'a[href]',\n    'button',\n    '[tabindex]',\n    'input',\n    'select',\n    'textarea',\n  ];\n\n  // like to leave out the following as we don't use it, and make this list exensible.\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\n  //   `iframe`, // we really don't like iframes...\n  //   `area[href]`, // very debatable!\n\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\n\n  query(host: HTMLElement, selector: string): HTMLElement[] {\n    if (!selector || selector === '') {\n      return [];\n    }\n    return Array.from(\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\n    );\n  }\n\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    const selector =\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\n    // fallback to first focusable\n    return (\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\n      this.findFocusable(host).find((el) => Boolean(el))\n    );\n  }\n\n  /**\n   * returns all focusable child elements of the host element. The element selectors\n   * are build from the `focusableSelectors`.\n   *\n   * @param host the `HTMLElement` used to query focusable elements\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\n   * @param invisible indicates whether hidden focusable elements should be returned\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    let suffix = this.focusableSelectorSuffix;\n    if (!locked) {\n      suffix += `:not([tabindex='-1'])`;\n    }\n    const selector = this.focusableSelectors\n      .map((s) => (s += suffix))\n      .join(',');\n    return this.query(host, selector).filter((el) =>\n      !invisible ? !this.isHidden(el) : Boolean(el)\n    );\n  }\n\n  /**\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\n   *\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\n   * phyisical location on the element itself or any of it's anchestor elements. Those\n   * technique require to work with the _computed styles_, which will cause a performance\n   * downgrade. We don't do this in the standard implementaton.\n   */\n  protected isHidden(el: HTMLElement): boolean {\n    return el.offsetParent === null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from '../persist/persist-focus.service';\nimport { SelectFocusUtility } from '../services/select-focus.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EscapeFocusService extends PersistFocusService {\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\n    super();\n  }\n\n  shouldFocus(config: EscapeFocusConfig): boolean {\n    return !!config?.focusOnEscape;\n  }\n\n  handleEscape(\n    host: HTMLElement,\n    config: EscapeFocusConfig,\n    event: KeyboardEvent\n  ): void {\n    if (this.shouldFocus(config)) {\n      if (host !== event.target) {\n        host.focus({ preventScroll: true });\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        if (config?.focusOnDoubleEscape) {\n          this.selectFocusUtil\n            .findFirstFocusable(host, { autofocus: true })\n            ?.focus();\n        }\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusService } from '../escape/escape-focus.service';\nimport {\n  AutoFocusConfig,\n  FOCUS_ATTR,\n  PersistFocusConfig,\n} from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutoFocusService extends EscapeFocusService {\n  /**\n   * Returns the first focusable child element of the host element.\n   */\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    if (config?.autofocus === ':host') {\n      return host;\n    } else if (this.hasPersistedFocus(host, config)) {\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\n    } else {\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\n    }\n  }\n\n  /**\n   * Indicates whether any of the focusabe child elements is focused.\n   */\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\n  }\n\n  /**\n   * Returns the element that has a persisted focus state.\n   *\n   * @param host the `HTMLElement` used to query for focusable children\n   * @param group the optional group for the persistent state, to separate different focus\n   *   groups and remain the persistance\n   */\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\n    if (!this.get(group)) {\n      return;\n    }\n    const focussed = Array.from(\n      host.querySelectorAll(\n        `[${FOCUS_ATTR}='${this.get(group)}']`\n      ) as NodeListOf<HTMLElement>\n    );\n    return focussed.length > 0 ? focussed[0] : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TabFocusService extends AutoFocusService {\n  /**\n   * Moves to the next (or previous) tab.\n   */\n  moveTab(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS,\n    event: KeyboardEvent\n  ): void {\n    if (config?.tab) {\n      const next =\n        config.tab === 'scroll'\n          ? this.findNextScrollable(host, config, increment)\n          : this.findNext(host, config, increment);\n\n      next?.focus();\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * builds out virtual slides out of the full scrollable area, to allow\n   * for maximum flexibility for the underlying layout without using hardcoded\n   * slide sizes.\n   */\n  protected findNextScrollable(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const active = this.getActiveChild(host, config);\n\n    if (!active) {\n      return;\n    }\n    // slide count\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\n\n    // find current virtual slide\n    const currentVirtualSlide = Math.round(\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\n    );\n\n    let nextVirtualSlide = currentVirtualSlide + increment;\n    if (\n      increment === MOVE_FOCUS.NEXT &&\n      nextVirtualSlide >= virtualSlideCount\n    ) {\n      nextVirtualSlide = 0;\n    }\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\n      nextVirtualSlide = virtualSlideCount - 1;\n    }\n\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\n      (tab) =>\n        tab.offsetLeft >=\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\n    );\n\n    return firstItemOnNextSlide;\n  }\n\n  protected findNext(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const childs = this.getChildren(host, config);\n    let activeIndex = childs?.findIndex(\n      (c) => c === this.getActiveChild(host, config)\n    );\n\n    if (!activeIndex || activeIndex === -1) {\n      activeIndex = 0;\n    }\n    activeIndex += increment;\n\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\n      activeIndex = childs.length - 1;\n    }\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\n      activeIndex = 0;\n    }\n    return childs ? childs[activeIndex] : undefined;\n  }\n\n  /**\n   * Returns the active focusable child element. If there's no active\n   * focusable child element, the first focusable child is returned.\n   */\n  protected getActiveChild(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement {\n    const persisted = this.getPersisted(host, config?.group);\n    if (persisted) {\n      return persisted;\n    }\n    const children = this.getChildren(host, config);\n    let index = children.findIndex((tab) => this.isActive(tab));\n    if (!index || index === -1) {\n      index = 0;\n    }\n    return children[index];\n  }\n\n  protected getChildren(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement[] {\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\n      return this.selectFocusUtil.query(host, config.tab);\n    } else {\n      return this.findFocusable(host, true);\n    }\n  }\n\n  /**\n   * Returns all focusable child elements of the host element.\n   *\n   * @param host The host element is used to query child focusable elements.\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\n  }\n\n  protected isActive(el: HTMLElement): boolean {\n    const child = document.activeElement;\n    const selector = child.tagName;\n\n    return (\n      el === child ||\n      !!Array.from(el.querySelectorAll(selector)).find((e) => e === child)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from '../tab/tab-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrapFocusService extends TabFocusService {\n  /**\n   * Indicates whether any of the child elements of the host are focusable.\n   *\n   * @param host `HTMLElement` that is used to query the focusable elements.\n   */\n  hasFocusableChildren(host: HTMLElement): boolean {\n    return this.findFocusable(host).length > 0;\n  }\n\n  /**\n   * Focus the next or previous element of all available focusable elements.\n   * The focus is _trapped_ in case there's no next or previous available element.\n   * The focus will automatically move the start or end of the list.\n   */\n  moveFocus(\n    host: HTMLElement,\n    config: TrapFocusConfig,\n    increment: MOVE_FOCUS,\n    event: UIEvent\n  ): void {\n    const focusable: HTMLElement[] = this.findFocusable(host);\n\n    let index = focusable.findIndex((v) => v === event.target) + increment;\n\n    const shouldMoveFocus =\n      (index >= 0 && index < focusable.length) ||\n      (index < 0 && this.getTrapStart(config.trap)) ||\n      (index >= focusable.length && this.getTrapEnd(config.trap));\n\n    if (shouldMoveFocus) {\n      if (index >= focusable.length) {\n        index = 0;\n      }\n      if (index < 0) {\n        index = focusable.length - 1;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const el = focusable[index];\n\n      el.focus();\n    }\n  }\n\n  protected getTrapStart(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'start';\n  }\n\n  protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'end';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TrapFocusService } from '../trap/trap-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LockFocusService extends TrapFocusService {}\n","import { Injectable } from '@angular/core';\nimport { LockFocusService } from '../lock/lock-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeyboardFocusService extends LockFocusService {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SkipLinkConfig {\n  skipLinks?: SkipLink[];\n}\n\nexport abstract class SkipLink {\n  key: string;\n  i18nKey: string;\n  target?: HTMLElement;\n  position?: SkipLinkScrollPosition;\n}\n\nexport enum SkipLinkScrollPosition {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkipLinkService {\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\n\n  constructor(\n    protected config: SkipLinkConfig,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  getSkipLinks(): Observable<SkipLink[]> {\n    return this.skipLinks$;\n  }\n\n  add(key: string, target: HTMLElement): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      const existing: SkipLink[] = this.skipLinks$.value;\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\n        target,\n        i18nKey: found.i18nKey,\n        position: found.position,\n        key,\n      });\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  remove(key: string): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      let existing: SkipLink[] = this.skipLinks$.value;\n      existing = existing.filter((skipLink) => skipLink.key !== key);\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  scrollToTarget(skipLink: SkipLink): void {\n    const target =\n      skipLink.target instanceof HTMLElement\n        ? skipLink.target\n        : (skipLink.target as Element).parentElement;\n\n    // focus first focusable element in the\n    const firstFocusable =\n      this.keyboardFocusService.findFirstFocusable(target) || target;\n\n    // we force a tabindex if not available, to ensure we can focus into the element\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\n    if (!hasTabindex) {\n      firstFocusable.setAttribute('tabindex', '-1');\n    }\n\n    firstFocusable.focus();\n\n    // drop the tmp tabindex\n    if (!hasTabindex) {\n      firstFocusable.removeAttribute('tabindex');\n    }\n  }\n\n  protected getSkipLinkIndexInArray(key: string): number {\n    let index: number = this.config.skipLinks.findIndex(\n      (skipLink) => skipLink.key === key\n    );\n\n    while (index > 0) {\n      index--;\n      const previous: SkipLink = this.config.skipLinks[index];\n      if (previous) {\n        const existing: SkipLink[] = this.skipLinks$.value;\n        const found: number = existing.findIndex(\n          (skipLink) => skipLink.key === previous.key\n        );\n        if (found > -1) {\n          return found + 1;\n        }\n      }\n    }\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SkipLink } from '../config/skip-link.config';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Component({\n  selector: 'cx-skip-link',\n  templateUrl: './skip-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkipLinkComponent {\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\n\n  constructor(private skipLinkService: SkipLinkService) {}\n\n  scrollToTarget(skipLink: SkipLink): void {\n    this.skipLinkService.scrollToTarget(skipLink);\n  }\n}\n","import { AsmMainUiComponent } from '../../../cms-components/asm/asm-main-ui/asm-main-ui.component';\nimport { SkipLinkComponent } from '../../a11y/skip-link/component/skip-link.component';\nimport { LaunchConfig } from './launch-config';\n\nexport const DEFAULT_LAUNCH_CONFIG: LaunchConfig = {\n  launch: {\n    ASM: {\n      outlet: 'cx-storefront',\n      component: AsmMainUiComponent,\n    },\n    SKIP_LINKS: {\n      outlet: 'cx-storefront',\n      component: SkipLinkComponent,\n    },\n  },\n};\n","import { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class LaunchConfig {\n  launch?: {\n    [key: string]: LaunchOptions;\n  };\n}\n\nexport type LaunchOptions =\n  | LaunchOutletDialog\n  | LaunchInlineDialog\n  | LaunchRoute;\n\n/**\n * Parent type for configurations that render components\n */\nexport interface LaunchDialog {\n  component: any;\n  /**\n   * Can the element be rendered multiple times\n   */\n  multi?: boolean;\n  /**\n   * Optional elements for other configurations\n   */\n  options?: {\n    /**\n     * Dialog type is used to apply CSS classes\n     */\n    dialogType?: DIALOG_TYPE;\n  };\n}\n\n/**\n * Configuration type to render a component in an outlet\n */\nexport interface LaunchOutletDialog extends LaunchDialog {\n  /**\n   * The outlet to render the element in\n   */\n  outlet: string;\n  /**\n   * Default: OutletPosition.BEFORE\n   */\n  position?: OutletPosition;\n}\n\n/**\n * Configuration type to render a component inline (next to the trigger)\n */\nexport interface LaunchInlineDialog extends LaunchDialog {\n  inline: boolean;\n}\n\n/**\n * Configuration type to render as link\n */\nexport interface LaunchRoute {\n  /**\n   * The route for the url\n   */\n  cxRoute: string;\n  /**\n   * The parameters for the route\n   */\n  params?: { [param: string]: any };\n}\n\n/**\n * Types of dialog openings supported\n */\nexport enum DIALOG_TYPE {\n  POPOVER = 'POPOVER',\n  DIALOG = 'DIALOG',\n  SIDEBAR_START = 'SIDEBAR_START',\n  SIDEBAR_END = 'SIDEBAR_END',\n}\n\n/**\n * List of available callers\n */\nexport enum LAUNCH_CALLER {\n  ASM = 'ASM',\n  SKIP_LINKS = 'SKIP_LINKS',\n}\n","import { ViewContainerRef } from '@angular/core';\nimport { LAUNCH_CALLER, LaunchDialog, LaunchOptions } from '../config';\nimport { Applicable } from '@spartacus/core';\n\nexport abstract class LaunchRenderStrategy implements Applicable {\n  // List of called references; only used for rendered elements\n  protected renderedCallers: Array<{\n    caller: LAUNCH_CALLER;\n    element?: any;\n  }> = [];\n\n  /**\n   * Render method to implement based on the strategy\n   *\n   * @param config Launch configuration\n   */\n  abstract render(\n    config: LaunchOptions,\n    caller: LAUNCH_CALLER,\n    vcr?: ViewContainerRef\n  ): void;\n\n  /**\n   * Determines if the strategy is the right one for the provided configuration\n   *\n   * @param config\n   */\n  abstract hasMatch(config: LaunchOptions): boolean;\n\n  /**\n   * Determines if element should render\n   *\n   * @param caller\n   * @param config\n   */\n  protected shouldRender(caller: LAUNCH_CALLER, config: LaunchDialog): boolean {\n    return this.renderedCallers.some((el) => el.caller === caller)\n      ? !!config.multi\n      : true;\n  }\n\n  /**\n   * Method to call when rendered element is destroyed\n   * The element will be removed from the list of rendered elements\n   *\n   * @param caller\n   * @param _config optional parameters used in children strategies\n   */\n  public remove(caller: LAUNCH_CALLER, _config?: LaunchOptions): void {\n    this.renderedCallers = this.renderedCallers.filter(\n      (el) => el.caller === caller\n    );\n  }\n}\n","import { Inject, Injectable, ViewContainerRef } from '@angular/core';\nimport {\n  LAUNCH_CALLER,\n  LaunchConfig,\n  LaunchOptions,\n} from '../config/launch-config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\nimport { resolveApplicable } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class LaunchDialogService {\n  // Keep a list of rendered elements\n  protected renderedCallers: LAUNCH_CALLER[] = [];\n\n  constructor(\n    @Inject(LaunchRenderStrategy)\n    protected renderStrategies: LaunchRenderStrategy[],\n    protected launchConfig: LaunchConfig\n  ) {\n    this.renderStrategies = this.renderStrategies || [];\n  }\n\n  /**\n   * Render the element based on the strategy from the launch configuration\n   *\n   * @param caller LAUNCH_CALLER\n   * @param vcr View Container Ref of the container for inline rendering\n   */\n  launch(caller: LAUNCH_CALLER, vcr?: ViewContainerRef): void {\n    const config = this.findConfiguration(caller);\n    const renderer = this.getStrategy(config);\n\n    // Render if the strategy exists\n    if (renderer) {\n      renderer.render(config, caller, vcr);\n    }\n  }\n\n  /**\n   * Util method to remove element from rendered elements list\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  clear(caller: LAUNCH_CALLER): void {\n    const config = this.findConfiguration(caller);\n    const renderer = this.getStrategy(config);\n\n    // Render if the strategy exists\n    if (renderer) {\n      renderer.remove(caller, config);\n    }\n  }\n\n  /**\n   * Returns the configuration for the caller\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  protected findConfiguration(caller: LAUNCH_CALLER): LaunchOptions {\n    return this.launchConfig?.launch[caller];\n  }\n\n  /**\n   * Returns the render strategy based on the configuration\n   *\n   * @param config Configuration for launch\n   */\n  protected getStrategy(config: LaunchOptions): LaunchRenderStrategy {\n    return resolveApplicable(this.renderStrategies, [config]);\n  }\n}\n","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/index';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n/**\n * The AsmEnablerService is used to enable ASM for those scenario's\n * where it's actually used. This service is added to avoid any polution\n * of the UI and runtime performance for the ordinary production user.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmEnablerService {\n  constructor(\n    protected location: Location,\n    protected winRef: WindowRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  /**\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\n   * existence of a URL parameter or previous usage given by local storage.\n   */\n  load(): void {\n    if (this.isEnabled()) {\n      this.addUi();\n    }\n  }\n\n  /**\n   * Indicates whether the ASM module is enabled.\n   */\n  isEnabled(): boolean {\n    if (this.isLaunched() && !this.isUsedBefore()) {\n      if (this.winRef.localStorage) {\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\n      }\n    }\n    return this.isLaunched() || this.isUsedBefore();\n  }\n\n  /**\n   * Indicates whether ASM is launched through the URL,\n   * using the asm flag in the URL.\n   */\n  protected isLaunched(): boolean {\n    const params = this.location.path().split('?')[1];\n    return params && params.split('&').includes('asm=true');\n  }\n\n  /**\n   * Evaluates local storage where we persist the usage of ASM.\n   */\n  protected isUsedBefore(): boolean {\n    return (\n      this.winRef.localStorage &&\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\n    );\n  }\n\n  /**\n   * Adds the ASM UI by using the `cx-storefront` outlet.\n   */\n  protected addUi(): void {\n    this.launchDialogService.launch(LAUNCH_CALLER.ASM);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { PageComponentModule } from '../../cms-structure/page/component/page-component.module';\nimport { AsmEnablerService } from './services/asm-enabler.service';\n\n/**\n * The ASM loader module takes care of loading the ASM UI\n * only in case there's a reason to do so.\n */\n@NgModule({\n  imports: [CommonModule, PageComponentModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: asmFactory,\n      deps: [AsmEnablerService],\n      multi: true,\n    },\n  ],\n})\nexport class AsmLoaderModule {}\n\n/**\n *\n * We do not like to block the UI, which is why we delgate loading of ASM\n * to a real component; the router and state aren't available in an optimized\n * way during the APP_INITIALIZER.\n */\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\n  const isReady = () => {\n    asmEnablerService.load();\n  };\n  return isReady;\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-session-timer',\n  templateUrl: './asm-session-timer.component.html',\n  styleUrls: ['./asm-session-timer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private interval: any;\n  private maxStartDelayInSeconds = 60000;\n  timeLeft: number;\n\n  constructor(\n    private config: AsmConfig,\n    private asmComponentService: AsmComponentService,\n    private authService: AuthService,\n    private routingService: RoutingService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.timeLeft = this.getTimerStartDelayInSeconds();\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        clearInterval(this.interval);\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n      }\n      this.changeDetectorRef.markForCheck();\n    }, 1000);\n\n    this.resetOnNavigate();\n    this.resetOnCustomerSessionChange();\n  }\n\n  private resetOnNavigate(): void {\n    this.subscriptions.add(\n      this.routingService.isNavigating().subscribe((isNavigating) => {\n        if (isNavigating) {\n          this.resetTimer();\n        }\n      })\n    );\n  }\n\n  private resetOnCustomerSessionChange(): void {\n    this.subscriptions.add(\n      this.authService\n        .getOccUserId()\n        .pipe(distinctUntilChanged())\n        .subscribe(() => this.resetTimer())\n    );\n  }\n\n  resetTimer(): void {\n    if (this.timeLeft > 0) {\n      this.timeLeft = this.getTimerStartDelayInSeconds();\n    }\n  }\n\n  private getTimerStartDelayInSeconds(): number {\n    if (\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\n      this.maxStartDelayInSeconds\n    ) {\n      return this.maxStartDelayInSeconds;\n    } else {\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'cx-csagent-login-form',\n  templateUrl: './csagent-login-form.component.html',\n  styleUrls: ['./csagent-login-form.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CSAgentLoginFormComponent implements OnInit {\n  csAgentLoginForm: FormGroup;\n\n  @Input()\n  csAgentTokenLoading = false;\n\n  @Output()\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.csAgentLoginForm = this.fb.group({\n      userId: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.csAgentLoginForm.valid) {\n      this.submitEvent.emit({\n        userId: this.csAgentLoginForm.get('userId').value,\n        password: this.csAgentLoginForm.get('password').value,\n      });\n    } else {\n      this.csAgentLoginForm.markAllAsTouched();\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { User, UserService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-customer-emulation',\n  templateUrl: './customer-emulation.component.html',\n  styleUrls: ['./customer-emulation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\n  customer: User;\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  constructor(\n    protected asmComponentService: AsmComponentService,\n    protected userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.userService.get().subscribe((user) => (this.customer = user))\n    );\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\n  }\n\n  logoutCustomer() {\n    this.asmComponentService.logoutCustomer();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AsmConfig,\n  AsmService,\n  CustomerSearchPage,\n  User,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-customer-selection',\n  templateUrl: './customer-selection.component.html',\n  styleUrls: ['./customer-selection.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    '(document:click)': 'onDocumentClick($event)',\n  },\n})\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\n  customerSelectionForm: FormGroup;\n  private subscription = new Subscription();\n  searchResultsLoading$: Observable<boolean>;\n  searchResults: Observable<CustomerSearchPage>;\n  selectedCustomer: User;\n\n  @Output()\n  submitEvent = new EventEmitter<{ customerId: string }>();\n\n  @ViewChild('resultList') resultList: ElementRef;\n  @ViewChild('searchTerm') searchTerm: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private asmService: AsmService,\n    private config: AsmConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.customerSelectionForm = this.fb.group({\n      searchTerm: ['', Validators.required],\n    });\n    this.asmService.customerSearchReset();\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\n    this.searchResults = this.asmService.getCustomerSearchResults();\n\n    this.subscription.add(\n      this.customerSelectionForm.controls.searchTerm.valueChanges\n        .pipe(debounceTime(300))\n        .subscribe((searchTermValue) => {\n          this.handleSearchTerm(searchTermValue);\n        })\n    );\n  }\n\n  private handleSearchTerm(searchTermValue: string) {\n    if (\n      Boolean(this.selectedCustomer) &&\n      searchTermValue !== this.selectedCustomer.name\n    ) {\n      this.selectedCustomer = undefined;\n    }\n    if (Boolean(this.selectedCustomer)) {\n      return;\n    }\n    this.asmService.customerSearchReset();\n    if (searchTermValue.trim().length >= 3) {\n      this.asmService.customerSearch({\n        query: searchTermValue,\n        pageSize: this.config.asm.customerSearch.maxResults,\n      });\n    }\n  }\n\n  selectCustomerFromList(customer: User) {\n    this.selectedCustomer = customer;\n    this.customerSelectionForm.controls.searchTerm.setValue(\n      this.selectedCustomer.name\n    );\n    this.asmService.customerSearchReset();\n  }\n\n  onSubmit(): void {\n    if (this.customerSelectionForm.valid && Boolean(this.selectedCustomer)) {\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\n    } else {\n      this.customerSelectionForm.markAllAsTouched();\n    }\n  }\n\n  onDocumentClick(event) {\n    if (Boolean(this.resultList)) {\n      if (\n        this.resultList.nativeElement.contains(event.target) ||\n        this.searchTerm.nativeElement.contains(event.target)\n      ) {\n        return;\n      } else {\n        this.asmService.customerSearchReset();\n      }\n    }\n  }\n\n  closeResults() {\n    this.asmService.customerSearchReset();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.asmService.customerSearchReset();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n  @Input()\n  fitToContainer = false;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { CardComponent } from './card.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the items can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n}\n","import { DeferLoadingStrategy, Config } from '@spartacus/core';\nimport { Injectable } from '@angular/core';\n\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n\n  /**\n   * The page fold identifies the last expected page slot above-the-fold.\n   * It's perfectly fine to specify this by idication, however a more\n   * precise indication will have an positive impact on performance.\n   */\n  pageFold?: string;\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class LayoutConfig {\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\n  breakpoints?: {\n    [BREAKPOINT.xs]?: number;\n    [BREAKPOINT.sm]?: number;\n    [BREAKPOINT.md]?: number;\n    [BREAKPOINT.lg]?: number;\n  };\n  layoutSlots?: LayoutSlotConfig;\n\n  /**\n   * Deferrred loading is a technique to hold of with the loading / creation\n   * of DOM elements which are not not in the initial view port.\n   * This technique wil increase performance.\n   */\n  deferredLoading?: {\n    /**\n     * The global strategy will be used as a fallback strategy for all DOM creation,\n     * but can be overriden by local configuration, i.e. for cms components.\n     */\n    strategy?: DeferLoadingStrategy;\n    /**\n     * The intersection margin contains the offset used by the Intersection Observer\n     * to observe elements outside the view port.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\n     */\n    intersectionMargin?: string;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\n\nconst DEFAULT_BREAKPOINTS = {\n  [BREAKPOINT.xs]: 576,\n  [BREAKPOINT.sm]: 768,\n  [BREAKPOINT.md]: 992,\n  [BREAKPOINT.lg]: 1200,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\n\n  get breakpoint$(): Observable<BREAKPOINT> {\n    if (!this.window) {\n      return of(BREAKPOINT.xs);\n    }\n    return this.winRef.resize$.pipe(\n      map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpint, given by the `LayoutConfig.breakpoints`\n   * configuration. If no configuration is available for the given breakpoint, the\n   * method will return the default values:\n   * - xs: 567\n   * - sm: 768\n   * - md: 992\n   * - lg: 1200\n   */\n  getSize(breakpoint: BREAKPOINT): number {\n    return this.config.breakpoints?.hasOwnProperty(breakpoint)\n      ? this.config.breakpoints[breakpoint]\n      : DEFAULT_BREAKPOINTS[breakpoint];\n  }\n\n  /**\n   * Returns all available breakpoints for the system.\n   */\n  get breakpoints(): BREAKPOINT[] {\n    return [\n      BREAKPOINT.xs,\n      BREAKPOINT.sm,\n      BREAKPOINT.md,\n      BREAKPOINT.lg,\n      BREAKPOINT.xl,\n    ];\n  }\n\n  /**\n   * Indicates whether the current screen size is smaller than the maximum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\n   */\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is larger than the minimum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\n   */\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(this.breakpoints.indexOf(breakpoint))\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size fits to the given breakpoint\n   */\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\n  }\n\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    const breakpoint = this.getClosest(windowWidth);\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\n  }\n\n  protected getClosest(windowWidth?: number): BREAKPOINT {\n    if (!windowWidth) {\n      windowWidth = this.window.innerWidth;\n    }\n\n    return windowWidth > this.getSize(BREAKPOINT.lg)\n      ? BREAKPOINT.xl\n      : this.breakpoints.find((br) => windowWidth <= this.getSize(br));\n  }\n\n  get window(): Window {\n    return this.winRef.nativeWindow;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Config, Image, OccConfig } from '@spartacus/core';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { StorefrontConfig } from '../../../storefront-config';\nimport { MediaConfig } from './media.config';\nimport { Media, MediaContainer, MediaFormatSize } from './media.model';\n\n/**\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\n * that URLs and sizes are generated for the same media. This helps to improve performance\n * across difference devices and layouts.\n *\n * Media formats are optional, but highly recommended. The format will help the browser to\n * identify the right media for the right experience.\n *\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\n * `occConfig.backend.occ.baseUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  /**\n   * The media formats sorted by size. The media format representing the smallest\n   * size is sorted on top.\n   */\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\n\n  constructor(\n    @Inject(Config) protected config: StorefrontConfig,\n    /**\n     * The BreakpointService is no longer used in version 2.0 as the different size formats are\n     * driven by configuration only. There's however a change that this service will play a role\n     * in the near future, which is why we keep the constructor as-is.\n     */\n    protected breakpointService: BreakpointService\n  ) {}\n\n  /**\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\n   * for specific formats.\n   */\n  getMedia(\n    mediaContainer: MediaContainer | Image,\n    format?: string,\n    alt?: string\n  ): Media {\n    if (!mediaContainer) {\n      return;\n    }\n\n    const mainMedia: Image = mediaContainer.url\n      ? mediaContainer\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\n\n    return {\n      src: this.resolveAbsoluteUrl(mainMedia?.url),\n      alt: alt || mainMedia?.altText,\n      srcset: this.resolveSrcSet(mediaContainer),\n    };\n  }\n\n  /**\n   * Creates the media formats in a logical sorted order. The map contains the\n   * format key and the format size information. We do this only once for performance\n   * benefits.\n   */\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._sortedFormats) {\n      this._sortedFormats = Object.keys(\n        (this.config as MediaConfig).mediaFormats\n      )\n        .map((key) => ({\n          code: key,\n          size: (this.config as MediaConfig).mediaFormats[key],\n        }))\n        .sort((a, b) => (a.size.width > b.size.width ? 1 : -1));\n    }\n    return this._sortedFormats;\n  }\n\n  /**\n   * Creates the media formats in a reversed sorted order.\n   */\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._reversedFormats) {\n      this._reversedFormats = this.sortedFormats.slice().reverse();\n    }\n    return this._reversedFormats;\n  }\n\n  /**\n   * Resolves the right media for the given format. The fo\n   */\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\n    return media[this.resolveFormat(media, format)];\n  }\n\n  /**\n   * Validates the format against the given mediaContainer. If there is no format available,\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\n   * format is resolved. If even that is not possible, the first format is returned.\n   */\n  protected resolveFormat(\n    mediaContainer: MediaContainer,\n    format?: string\n  ): string {\n    if (format && mediaContainer[format]) {\n      return format;\n    }\n    return (\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\n    );\n  }\n\n  /**\n   * Returns the media format code with the best size.\n   */\n  protected resolveBestFormat(media: MediaContainer | Image): string {\n    return this.reversedFormats.find((format) =>\n      media.hasOwnProperty(format.code)\n    )?.code;\n  }\n\n  /**\n   * Returns a set of media for the available media formats. Additionally, the congiured media\n   * format width is added to the srcset, so that browsers can select the appropriate media.\n   */\n  protected resolveSrcSet(media: MediaContainer | Image): string {\n    if (!media) {\n      return undefined;\n    }\n\n    const srcset = this.sortedFormats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.resolveAbsoluteUrl(media[format.code].url)} ${\n          format.size.width\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  /**\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\n   */\n  protected resolveAbsoluteUrl(url: string): string {\n    if (!url) {\n      return null;\n    }\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\n  }\n\n  /**\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\n   * `backend.occ.baseUrl`.\n   *\n   * The `backend.media.baseUrl` can be used to load media from a different location.\n   *\n   * In Commerce Cloud, a differnt location could mean a different \"aspect\".\n   */\n  protected getBaseUrl(): string {\n    return (\n      (this.config as OccConfig).backend.media.baseUrl ||\n      (this.config as OccConfig).backend.occ.baseUrl ||\n      ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Media, MediaContainer } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container: MediaContainer;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  protected create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container,\n      this.format,\n      this.alt\n    );\n    if (!this.media?.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  protected handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {\n  static forRoot(): ModuleWithProviders<MediaModule> {\n    return {\n      ngModule: MediaModule,\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\n\n/**\n * Provides a UI to manage the count of the quantity, typically by using\n * increase and decrease functinality. The item counter expects an input `FormControl`\n * so that the state of the control can be managed outside of this component.\n */\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  // do not use OnPush change detection strategy as we would not\n  // get updates of other form control state (disabled). We want to have a\n  // disabled state in order to ensure that the control cannot be used while\n  // the cart is updated.\n})\nexport class ItemCounterComponent {\n  /**\n   * Holds the value of the counter, the state of the `FormControl`\n   * can be managed outside of the item counter.\n   */\n  @Input() control: FormControl;\n\n  /**\n   * This can be used in case an item has a minmum order quantity.\n   * @default 1\n   */\n  @Input() min = 1;\n\n  /**\n   * This can be used in case an item has a maximum order quantity.\n   */\n  @Input() max: number;\n\n  /**\n   * The step is used to increment the count. It is supposed to be a\n   * positive inteteger or float.\n   * @default 1\n   */\n  @Input() step = 1;\n\n  /**\n   * Inidicates that the input can be manually set to zero,\n   * despite the fact that the input controls will be limited to\n   * the minimum. The zero value can be used to remove an item.\n   */\n  @Input() allowZero = false;\n\n  private _control$: Observable<FormControl>;\n\n  /**\n   * In readonly mode the item counter will only be shown as a label,\n   * the form controls are not rendered.\n   * Please not that readonly is different from the `disabled` form state.\n   * @default false\n   */\n  @HostBinding('class.readonly') @Input() readonly = false;\n\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\n\n  @HostListener('click') handleClick() {\n    this.input.nativeElement.focus();\n  }\n\n  increment() {\n    // it's too early to use the `stepUp` and `stepDown` API...\n    // let's wait for FF: https://caniuse.com/#search=stepUp\n    this.control.setValue(this.control.value + this.step);\n    this.control.markAsDirty();\n  }\n\n  decrement() {\n    this.control.setValue(this.control.value - this.step);\n    this.control.markAsDirty();\n  }\n\n  /**\n   * Returns an observable with the control. The value changes of the\n   * control are intercepted in order to suppress invalid values.\n   */\n  getControl(): Observable<FormControl> {\n    if (!this._control$) {\n      this._control$ = this.control.valueChanges.pipe(\n        startWith(this.control.value),\n        tap((value) =>\n          this.control.setValue(this.getValidCount(value), { emitEvent: false })\n        ),\n        map(() => this.control)\n      );\n    }\n    return this._control$;\n  }\n\n  /**\n   * Validate that the given value is in between\n   * the `min` and `max` value. If the value is out\n   * of  the min/max range, it will be altered.\n   * If `allowZero` is set to true, the 0 value is ignored.\n   *\n   */\n  private getValidCount(value: number) {\n    if (value < this.min && !(value === 0 && this.allowZero)) {\n      value = this.min;\n    }\n    if (this.max && value > this.max) {\n      value = this.max;\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ItemCounterComponent } from './item-counter.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { Component, Input } from '@angular/core';\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent {\n  private readonly protocolRegex: RegExp = /^https?:\\/\\//i;\n\n  @Input() url: string | any[];\n  @Input() target: string;\n  @Input() class: string;\n  @Input() id: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  get routerUrl(): any[] {\n    if (typeof this.url === 'string') {\n      return [this.getAbsoluteUrl(this.url)];\n    }\n    return this.url;\n  }\n\n  isExternalUrl(): boolean {\n    return typeof this.url === 'string' && this.protocolRegex.test(this.url);\n  }\n\n  private getAbsoluteUrl(url: string) {\n    return url.startsWith('/') ? this.url : '/' + this.url;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import { PaginationConfig } from './pagination.config';\n\nexport const defaultPaginationConfig: PaginationConfig = {\n  pagination: {\n    addStart: true,\n    addEnd: true,\n  },\n};\n","import { PaginationOptions } from '../pagination.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PaginationConfig {\n  pagination?: PaginationOptions;\n}\n","/**\n * Represents a page item for a pagination system. This is used\n * to store the model of each page.\n */\nexport interface PaginationItem {\n  label?: string;\n  type?: PaginationItemType;\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\n  number?: number;\n}\n\n/**\n * The item type is used to add semantic structure to the\n * PaginationItem, so that the UI understands the usage.\n */\nexport enum PaginationItemType {\n  GAP = 'gap',\n  FIRST = 'first',\n  LAST = 'last',\n  PREVIOUS = 'previous',\n  NEXT = 'next',\n  START = 'start',\n  END = 'end',\n  PAGE = 'page',\n}\n\nexport interface PaginationOptions {\n  /**\n   * The range of direct accessible pages in the pagination.\n   *\n   * `« 4 (5) 6 »`\n   *\n   * Defaults to 3.\n   */\n  rangeCount?: number;\n\n  /** Adds a link to skip to the start of the pages, defaults to false. */\n  addStart?: boolean;\n  /** A link to skip to the end of the pages, defaults to false. */\n  addEnd?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addPrevious?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addNext?: boolean;\n\n  navigationPosition?: PaginationNavigationPosition;\n\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\n  addFirst?: boolean;\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\n  addLast?: boolean;\n\n  /**\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\n   *\n   * `1 ...  4 (5) 6 ... 18`\n   *\n   * Defaults to false.\n   */\n  addDots?: boolean;\n\n  /**\n   * If the page dots only represents a single page, we rather add the page\n   * as this would take the same amount of space. Some UX might want to use\n   * the dots for consistency reasons, which why this option is configurable.\n   *\n   * This typically happens on the 4th page (in case the range is 3):\n   * Instead of having:\n   *\n   *  `1 ...  3 (4) 5`\n   *\n   * we'd have\n   *\n   * `1 2 3 (4) 5`.\n   *\n   * Defaults to false.\n   */\n  substituteDotsForSingularPage?: boolean;\n\n  /** Custom label for the start link, defaults to `«`. */\n  startLabel?: string;\n  /** Custom label for the previous link, defaults to `‹`. */\n  previousLabel?: string;\n  /** Custom label for the next link, defaults to `›`. */\n  nextLabel?: string;\n  /** Custom label for the end link, defaults to `»`. */\n  endLabel?: string;\n  /** Custom label for the dots, defaults to `...`. */\n  dotsLabel?: string;\n}\n\nexport enum PaginationNavigationPosition {\n  ASIDE = 'aside',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","import { Injectable } from '@angular/core';\nimport { PaginationConfig } from './config/pagination.config';\nimport {\n  PaginationItem,\n  PaginationItemType,\n  PaginationNavigationPosition,\n  PaginationOptions,\n} from './pagination.model';\n\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\n  rangeCount: 3,\n  dotsLabel: '...',\n  startLabel: '«',\n  previousLabel: '‹',\n  nextLabel: '›',\n  endLabel: '»',\n};\n\n/**\n * Builds a pagination structures based on a pageCount and current page number.\n * There are various {@link PaginationConfig} options which can be used to configure\n * the behaviour of the build. Alternatively, CSS can be used to further customise\n * the pagination.\n *\n * Examples:\n * The full blown pagination items contain the follow elements:\n *\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\n *\n * This includes pagination items to the following pages:\n * - start page\n * - previous page\n * - first page\n * - page range\n * - last page\n * - next page\n * - end page\n *\n * All of those links are configurable, including the size of the page range.\n * The current page will always be centered in the page range to provide direct access\n * to the previous and next page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaginationBuilder {\n  constructor(protected paginationConfig: PaginationConfig) {}\n\n  /**\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\n   * to build out the full pagination. There are various {@link PaginationConfig} options\n   * which can be used to configure the behaviour of the build. Alternatively, CSS\n   * can be used to further specialize visibility of the pagination.\n   *\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   * @returns An array of `PaginationItem`\n   */\n  paginate(pageCount: number, current: number): PaginationItem[] {\n    const pages: PaginationItem[] = [];\n    if (pageCount < 2) {\n      return pages;\n    }\n    this.addPages(pages, pageCount, current);\n    this.addDots(pages, pageCount);\n    this.addFirstLast(pages, pageCount);\n    this.addNavigation(pages, pageCount, current);\n\n    return pages;\n  }\n\n  /**\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\n   * The current page is always centered to provide direct access to the previous and next page.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   */\n  protected addPages(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const start = this.getStartOfRange(pageCount, current);\n    const max = Math.min(this.config.rangeCount, pageCount);\n\n    Array.from(Array(max)).forEach((_, i) => {\n      pages.push({\n        number: i + start,\n        label: String(i + start + 1),\n        type: PaginationItemType.PAGE,\n      });\n    });\n  }\n\n  /**\n   * Adds dots before and after the given pages, if configured (defaults to true).\n   * If the dots only represent a single page, the page number is added instead of\n   * the dots, unless the configuration requires dots always.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   */\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\n    if (!this.config.addDots) {\n      return;\n    }\n\n    const addFirstGap = () => {\n      const firstItemNumber = pages[0].number;\n      const gapNumber = this.config.addFirst ? 1 : 0;\n      if (firstItemNumber > gapNumber) {\n        const isGap =\n          !this.config.substituteDotsForSingularPage ||\n          firstItemNumber !== gapNumber + 1;\n        const isSubstitued =\n          this.config.addFirst &&\n          this.config.substituteDotsForSingularPage &&\n          gapNumber === 0;\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstitued\n          ? PaginationItemType.FIRST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\n              type,\n            },\n            isGap ? null : { number: gapNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    const addLastGap = () => {\n      const nextPageNumber = pages[pages.length - 1].number + 1;\n      const last = pageCount - (this.config.addLast ? 2 : 1);\n      if (nextPageNumber <= last) {\n        const isSubstitued =\n          this.config.addLast &&\n          this.config.substituteDotsForSingularPage &&\n          nextPageNumber === last;\n        const isGap =\n          nextPageNumber <\n          pageCount -\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\n            (this.config.addLast ? 1 : 0);\n\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstitued\n          ? PaginationItemType.LAST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\n              type,\n            },\n            isGap ? null : { number: nextPageNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    pages.unshift(...addFirstGap());\n    pages.push(...addLastGap());\n  }\n\n  /**\n   * Add links to the first and last page, if configured to do so.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   *\n   */\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\n    if (this.config.addFirst && pages[0].number !== 0) {\n      pages.unshift({\n        number: 0,\n        label: '1',\n        type: PaginationItemType.FIRST,\n      });\n    }\n    if (\n      this.config.addLast &&\n      pages[pages.length - 1].number !== pageCount - 1\n    ) {\n      pages.push({\n        number: pageCount - 1,\n        label: String(pageCount),\n        type: PaginationItemType.LAST,\n      });\n    }\n  }\n\n  /**\n   * Add links to the start, previous, next and last page, if configured to do so.\n   * The order of the links can be configured by using the {@link PaginationConfig},\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\n   * The `PaginationNavigationPosition` allows for 3 flavours:\n   *\n   * - by default the pagination starts with start and previous and ends with the next and end links\n   * - BEFORE – all navigation links are added in the front of the pagination list\n   * - AFTER – all navigation links are pushed to the end of the pagination list\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   *\n   */\n  protected addNavigation(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const before = this.getBeforeLinks(current);\n    const after = this.getAfter(pageCount, current);\n    const pos = this.config.navigationPosition;\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\n      pages.unshift(...before);\n      pages.push(...after);\n    } else {\n      if (pos === PaginationNavigationPosition.BEFORE) {\n        pages.unshift(...before, ...after);\n      }\n      if (pos === PaginationNavigationPosition.AFTER) {\n        pages.push(...before, ...after);\n      }\n    }\n  }\n\n  /**\n   * Returns the start and previous links, if applicable.\n   */\n  private getBeforeLinks(current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addStart) {\n      const start = () => {\n        return Object.assign(\n          {\n            label: this.config.startLabel,\n            type: PaginationItemType.START,\n          },\n          current > 0 ? { number: 0 } : null\n        );\n      };\n      list.push(start());\n    }\n    if (this.config.addPrevious) {\n      const previous = () => {\n        return Object.assign(\n          {\n            label: this.config.previousLabel,\n            type: PaginationItemType.PREVIOUS,\n          },\n          current > 0 ? { number: current - 1 } : null\n        );\n      };\n      list.push(previous());\n    }\n    return list;\n  }\n\n  /**\n   * Returns the next and end links, if applicable.\n   */\n  private getAfter(pageCount: number, current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addNext) {\n      const next = () => {\n        return Object.assign(\n          {\n            label: this.config.nextLabel,\n            type: PaginationItemType.NEXT,\n          },\n          current < pageCount - 1 ? { number: current + 1 } : null\n        );\n      };\n      list.push(next());\n    }\n    if (this.config.addEnd) {\n      const end = () => {\n        return Object.assign(\n          {\n            label: this.config.endLabel,\n            type: PaginationItemType.END,\n          },\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\n        );\n      };\n      list.push(end());\n    }\n\n    return list;\n  }\n  /**\n   * Resolves the first page of the range we need to build.\n   * This is the page that is leading up to the range of the\n   * current page.\n   *\n   * @param pageCount The total number of pages.\n   * @param current The current page number, 0-index based.\n   */\n  private getStartOfRange(pageCount: number, current: number): number {\n    const count = this.config.rangeCount - 1;\n    // the least number of pages before and after the current\n    const delta = Math.round(count / 2);\n\n    // ensure that we start with at least the first page\n    const minStart = Math.max(0, current - delta);\n    // ensures that we start with at least 1 and do not pass the last range\n    const maxStart = Math.max(0, pageCount - count - 1);\n\n    // ensure that we get at least a full range at the end\n    return Math.min(maxStart, minStart);\n  }\n\n  private get config(): PaginationOptions {\n    return Object.assign(\n      FALLBACK_PAGINATION_OPTIONS,\n      this.paginationConfig.pagination\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PaginationModel } from '@spartacus/core';\nimport { PaginationBuilder } from './pagination.builder';\nimport { PaginationItem, PaginationItemType } from './pagination.model';\n\n/**\n * The `PaginationComponent` is a generic component that is used for\n * all lists in Spartacus that require pagination. The component supports\n * all common features, which can be configured or hidden by CSS.\n */\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\n  @Input() pageRoute: string;\n\n  /** The (optional) query parameter which is added to the page route.  */\n  @Input() queryParam: string;\n\n  /**\n   * Whenever there's a default page specified, the routing logic\n   * will omit the page number in routeLink or parameters.\n   */\n  @Input() defaultPage;\n\n  private _pagination: PaginationModel;\n  get pagination(): PaginationModel {\n    return this._pagination;\n  }\n  @Input() set pagination(value: PaginationModel) {\n    this._pagination = value;\n    this.render(value);\n  }\n\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  pages: PaginationItem[] = [];\n\n  constructor(\n    private paginationBuilder: PaginationBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  private render(pagination: PaginationModel) {\n    this.pages = this.paginationBuilder.paginate(\n      pagination.totalPages,\n      pagination.currentPage\n    );\n  }\n\n  /**\n   * Inidicates whether the given item is the current item.\n   *\n   * @param item PaginationItem\n   * @returns boolean\n   */\n  isCurrent(item: PaginationItem): boolean {\n    return (\n      item.type === PaginationItemType.PAGE &&\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  /**\n   * Indicates whether the pagination item is inactive. This is used\n   * to disabled a link or set the tabindex to `-1`.\n   *\n   * Defaults to true\n   *\n   * @param item PaginationItem\n   * @returns returns -1 in case of a disabled\n   */\n  isInactive(item: PaginationItem): boolean {\n    return (\n      !item.hasOwnProperty('number') ||\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  getQueryParams(item: PaginationItem): Params {\n    const queryParams = Object.assign(\n      {},\n      this.activatedRoute.snapshot.queryParams\n    );\n    if (\n      this.queryParam &&\n      item.number < this.pagination.totalPages &&\n      !this.isCurrent(item)\n    ) {\n      queryParams[this.queryParam] = item.number;\n    }\n    // omit the page number from the query parameters in case it's the default\n    // to clean up the experience and avoid unnecessary polluting of the URL\n    if (queryParams[this.queryParam] === this.defaultPage) {\n      delete queryParams[this.queryParam];\n    }\n    return queryParams;\n  }\n\n  pageChange(page: PaginationItem): void {\n    this.viewPageEvent.emit(page.number);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultPaginationConfig } from './config/index';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class PaginationModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PaginationComponent, PaginationModule } from './pagination/index';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule, PaginationModule],\n  declarations: [SortingComponent],\n  exports: [SortingComponent, PaginationComponent],\n})\nexport class ListNavigationModule {}\n","import { MediaFormatSize } from './media.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n/**\n * Provides configuration specific to Media, such as images. This is used to optimize\n * rendering of the media, SEO and performance.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class MediaConfig {\n  /**\n   * Media _format_ configuration holds the size of the media's assigned to\n   * a format.\n   */\n  mediaFormats?: {\n    /**\n     * Represents the media format code, that is the key to distinguish different\n     * media in a container.\n     */\n    [format: string]: MediaFormatSize;\n  };\n}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class QualtricsConfig {\n  qualtrics?: {\n    projectId?: string;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, fromEvent, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, tap } from 'rxjs/operators';\nimport { QualtricsConfig } from './config/qualtrics-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QualtricsLoaderService {\n  private qualtricsLoaded$ = new BehaviorSubject<boolean>(false);\n\n  constructor(private winRef: WindowRef, private config: QualtricsConfig) {\n    if (\n      Boolean(this.winRef.nativeWindow) &&\n      Boolean(this.winRef.document) &&\n      this.isQualtricsConfigured()\n    ) {\n      this.initialize();\n      this.setup();\n    }\n  }\n\n  private initialize(): void {\n    fromEvent(this.winRef.nativeWindow, 'qsi_js_loaded').subscribe(() =>\n      this.qualtricsLoaded$.next(true)\n    );\n  }\n\n  private setup(): void {\n    const qualtricsScript = this.winRef.document.createElement('script');\n    qualtricsScript.type = 'text/javascript';\n    qualtricsScript.defer = true;\n    qualtricsScript.src = 'assets/qualtricsIntegration.js';\n\n    const idScript = this.winRef.document.createElement('div');\n    idScript.id = this.config.qualtrics.projectId;\n\n    this.winRef.document\n      .getElementsByTagName('head')[0]\n      .appendChild(qualtricsScript);\n\n    this.winRef.document.getElementsByTagName('head')[0].appendChild(idScript);\n  }\n\n  private isQualtricsConfigured(): boolean {\n    return (\n      Boolean(this.config.qualtrics) && Boolean(this.config.qualtrics.projectId)\n    );\n  }\n\n  load(): Observable<boolean> {\n    return this.qualtricsLoaded$.pipe(\n      filter((loaded) => loaded),\n      switchMap(() => {\n        const qsi = this.winRef.nativeWindow['QSI'];\n        return this.isDataLoaded().pipe(\n          distinctUntilChanged(),\n          tap((dataLoaded) => {\n            if (dataLoaded) {\n              qsi.API.unload();\n              qsi.API.load().done(qsi.API.run());\n            }\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data\n   * If client(s) does not extend this service to override this implementation, it returns true\n   * Return false otherwise.\n   */\n  protected isDataLoaded(): Observable<boolean> {\n    return of(true);\n  }\n}\n","import { Component } from '@angular/core';\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\n\n@Component({\n  selector: 'cx-qualtrics',\n  template: ` <ng-container *ngIf=\"qualtricsEnabled$ | async\"></ng-container> `,\n})\nexport class QualtricsComponent {\n  qualtricsEnabled$ = this.qualtricsLoader.load();\n\n  constructor(private qualtricsLoader: QualtricsLoaderService) {}\n}\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\nimport { QualtricsComponent } from './qualtrics.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [QualtricsComponent],\n  entryComponents: [QualtricsComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        QualtricsComponent: {\n          component: QualtricsComponent,\n        },\n      },\n    }),\n    provideDefaultConfig(defaultQualtricsConfig),\n  ],\n})\nexport class QualtricsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap((items) =>\n        this.getContext(context).pipe(\n          switchMap((ctx) => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map((ctx) => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe((service) => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map((ctx: string) => (ctx ? this.getInjectedService(ctx) : undefined)),\n      filter((s) => !!s)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map((data) => data?.context),\n        map((ctx) => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ContextServiceMap,\n  provideDefaultConfig,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextComponentService,\n  ],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent implements OnInit {\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interation is not provided.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = false;\n\n  /**\n   * The rating will be used to render some colorful stars in the UI.\n   */\n  @Input() rating: number;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  // tslint:disable-next-line:no-output-native\n  @Output() change = new EventEmitter<number>();\n\n  private initialRate = 0;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.setRate(this.rating, true);\n  }\n\n  setRate(value: number, force?: boolean): void {\n    if (!this.disabled || force) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'style',\n        `--star-fill:${value || this.initialRate};`\n      );\n    }\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n\n  setRateOnEvent(event: any, rating: number) {\n    if (event.code === 'Space') {\n      event.preventDefault();\n      this.setRate(rating);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  HostBinding,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\n\n/**\n * This component renders form errors.\n */\n@Component({\n  selector: 'cx-form-errors',\n  templateUrl: './form-errors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormErrorsComponent {\n  _control: FormControl;\n  errors$: Observable<string[]>;\n\n  @Input()\n  set control(control: FormControl) {\n    this._control = control;\n\n    this.errors$ = control?.statusChanges.pipe(\n      startWith({}),\n      map(() => control.errors || {}),\n      map((errors) =>\n        Object.entries(errors)\n          .filter((error) => error[1])\n          .map((error) => error[0])\n      )\n    );\n  }\n\n  get control(): FormControl {\n    return this._control;\n  }\n\n  @HostBinding('class.control-invalid') get invalid() {\n    return this.control.invalid;\n  }\n  @HostBinding('class.control-dirty') get dirty() {\n    return this.control.dirty;\n  }\n  @HostBinding('class.control-touched') get touched() {\n    return this.control.touched;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormErrorsComponent } from './form-errors.component';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [FormErrorsComponent],\n  exports: [FormErrorsComponent],\n})\nexport class FormErrorsModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ViewConfig {\n  view?: {\n    /**\n     * Configurations related to the view of the application\n     */\n    infiniteScroll?: {\n      active?: boolean;\n      productLimit?: number;\n      showMoreButton?: boolean;\n    };\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({})\nexport class ViewConfigModule {\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\n    return {\n      ngModule: ViewConfigModule,\n      providers: [\n        provideDefaultConfig({\n          view: {},\n        }),\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService\n  ) {\n    this.orderCode$ = this.routingService\n      .getRouterState()\n      .pipe(map((routingData) => routingData.state.params.orderCode));\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap((orderCode) => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CheckoutService,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PromotionService {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected checkoutService: CheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  getOrderPromotions(\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.getOrderPromotionsFromCart();\n      case PromotionLocation.Checkout:\n        return this.getOrderPromotionsFromCheckout();\n      case PromotionLocation.Order:\n        return this.getOrderPromotionsFromOrder();\n      default:\n        return of([]);\n    }\n  }\n\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\n    return this.activeCartService\n      .getActive()\n      .pipe(map((cart) => this.getOrderPromotionsFromCartHelper(cart)));\n  }\n\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\n    const potentialPromotions = [];\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\n\n    const appliedPromotions = [];\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\n\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\n    return this.checkoutService\n      .getOrderDetails()\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\n    return this.orderDetailsService\n      .getOrderDetails()\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\n    const appliedOrderPromotions = [];\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\n\n    return appliedOrderPromotions;\n  }\n\n  getProductPromotionForEntry(\n    item: OrderEntry,\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.activeCartService\n          .getActive()\n          .pipe(\n            map((cart) =>\n              this.getProductPromotion(\n                item,\n                cart.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Checkout:\n        return this.checkoutService\n          .getOrderDetails()\n          .pipe(\n            map((order) =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Order:\n        return this.orderDetailsService\n          .getOrderDetails()\n          .pipe(\n            map((order) =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n    }\n  }\n\n  private getProductPromotion(\n    item: OrderEntry,\n    promotions: PromotionResult[]\n  ): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    if (promotions && promotions.length > 0) {\n      for (const promotion of promotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumedEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumedEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\n\nexport class CustomFormValidators {\n  /**\n   * Checks control's value with predefined email regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return !email.length || email.match(EMAIL_PATTERN)\n      ? null\n      : { cxInvalidEmail: true };\n  }\n\n  /**\n   * Checks control's value with predefined password regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n\n    return !password.length || password.match(PASSWORD_PATTERN)\n      ? null\n      : { cxInvalidPassword: true };\n  }\n\n  /**\n   * Checks if control's value is between 1 and 5\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\n   * @memberof CustomFormValidators\n   */\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\n    const rating = control.value as number;\n\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\n  }\n\n  /**\n   * Checks if two password controls match\n   *\n   * NOTE: Use it as a form validator and pass password control names as parameters\n   *\n   * @static\n   * @param {string} password First password control name\n   * @param {string} passwordConfirmation Second password control name\n   * @returns Uses 'cxPasswordsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordsMustMatch(\n    password: string,\n    passwordConfirmation: string\n  ): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        password,\n        passwordConfirmation,\n        'cxPasswordsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if two email controls match\n   *\n   * NOTE: Use it as a form validator and pass email control names as parameters\n   *\n   * @static\n   * @param {string} email First email control name\n   * @param {string} emailConfirmation Second email control name\n   * @returns Uses 'cxEmailsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        email,\n        emailConfirmation,\n        'cxEmailsMustMatch'\n      );\n\n    return validator;\n  }\n}\n\n/**\n * Generic function for validators, which checks if two passed controls match.\n *\n * @param formGroup\n * @param firstControlName First control to check\n * @param secondControlName Second control to check\n * @param errorName Error which will be returned by validator\n */\nexport function controlsMustMatch(\n  formGroup: FormGroup,\n  firstControlName: string,\n  secondControlName: string,\n  errorName: string\n): void {\n  const firstControl = formGroup.controls[firstControlName];\n  const secondControl = formGroup.controls[secondControlName];\n\n  if (secondControl.errors && !secondControl.errors[errorName]) {\n    return;\n  }\n\n  secondControl.setErrors(\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\n  );\n}\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AsmModule as AsmCoreModule, I18nModule } from '@spartacus/core';\nimport { AsmLoaderModule } from './asm-loader.module';\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\nimport { FormErrorsModule } from '../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    AsmCoreModule.forRoot(),\n    AsmLoaderModule,\n    FormErrorsModule,\n  ],\n  declarations: [\n    AsmMainUiComponent,\n    CSAgentLoginFormComponent,\n    CustomerSelectionComponent,\n    AsmSessionTimerComponent,\n    FormatTimerPipe,\n    CustomerEmulationComponent,\n  ],\n  entryComponents: [AsmMainUiComponent],\n})\nexport class AsmModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductScope,\n  ProductService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\n\n  /**\n   * Will emit current product or null, if there is no current product (i.e. we are not on PDP)\n   *\n   * @param scopes\n   */\n  getProduct(\n    scopes?: (ProductScope | string)[] | ProductScope | string\n  ): Observable<Product | null> {\n    return this.routingService.getRouterState().pipe(\n      map((state) => state.state.params['productCode']),\n      switchMap((productCode: string) => {\n        return productCode\n          ? this.productService.get(\n              productCode,\n              scopes || this.DEFAULT_PRODUCT_SCOPE\n            )\n          : of(null);\n      }),\n      filter((x) => x !== undefined),\n      distinctUntilChanged()\n    );\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  Cart,\n  ActiveCartService,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n  increment: boolean;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  quantity = 0;\n  modalIsOpen = false;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = new FormGroup({});\n\n  private quantityControl$: Observable<FormControl>;\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: ActiveCartService,\n    protected promotionService: PromotionService\n  ) {}\n  /**\n   * Returns an observable formControl with the quantity of the cartEntry,\n   * but also updates the entry in case of a changed value.\n   * The quantity can be set to zero in order to remove the entry.\n   */\n  getQuantityControl(): Observable<FormControl> {\n    if (!this.quantityControl$) {\n      this.quantityControl$ = this.entry$.pipe(\n        filter((e) => !!e),\n        map((entry) => this.getFormControl(entry)),\n        switchMap(() =>\n          this.form.valueChanges.pipe(\n            // tslint:disable-next-line:deprecation\n            startWith(null),\n            tap((valueChange) => {\n              if (valueChange) {\n                this.cartService.updateEntry(\n                  valueChange.entryNumber,\n                  valueChange.quantity\n                );\n                if (valueChange.quantity === 0) {\n                  this.dismissModal('Removed');\n                }\n              } else {\n                this.form.markAsPristine();\n              }\n            })\n          )\n        ),\n        map(() => <FormControl>this.form.get('quantity'))\n      );\n    }\n    return this.quantityControl$;\n  }\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  private getFormControl(entry: OrderEntry): FormControl {\n    if (!this.form.get('quantity')) {\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\n      this.form.addControl('quantity', quantity);\n\n      const entryNumber = new FormControl(entry.entryNumber);\n      this.form.addControl('entryNumber', entryNumber);\n    }\n    return <FormControl>this.form.get('quantity');\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActiveCartService, OrderEntry, Product } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  /**\n   * As long as we do not support #5026, we require product input, as we need\n   *  a reference to the product model to fetch the stock data.\n   */\n  @Input() product: Product;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock = false;\n  quantity = 1;\n  increment = false;\n  cartEntry$: Observable<OrderEntry>;\n\n  subscription: Subscription;\n\n  addToCartForm = new FormGroup({\n    quantity: new FormControl(1),\n  });\n\n  constructor(\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    private cd: ChangeDetectorRef,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.product) {\n      this.productCode = this.product.code;\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n      this.setStockInfo(this.product);\n      this.cd.markForCheck();\n    } else if (this.productCode) {\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n      // force hasStock and quantity for the time being, as we do not have more info:\n      this.quantity = 1;\n      this.hasStock = true;\n      this.cd.markForCheck();\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(Boolean))\n        .subscribe((product: Product) => {\n          this.productCode = product.code;\n          this.setStockInfo(product);\n          this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  private setStockInfo(product: Product): void {\n    this.quantity = 1;\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n    if (this.hasStock && product.stock.stockLevel) {\n      this.maxQuantity = product.stock.stockLevel;\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    const quantity = this.addToCartForm.get('quantity').value;\n    if (!this.productCode || quantity <= 0) {\n      return;\n    }\n    // check item is already present in the cart\n    // so modal will have proper header text displayed\n    this.activeCartService\n      .getEntry(this.productCode)\n      .subscribe((entry) => {\n        if (entry) {\n          this.increment = true;\n        }\n        this.openModal();\n        this.activeCartService.addEntry(this.productCode, quantity);\n        this.increment = false;\n      })\n      .unsubscribe();\n  }\n\n  private openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.entry$ = this.cartEntry$;\n    modalInstance.cart$ = this.activeCartService.getActive();\n    modalInstance.loaded$ = this.activeCartService.isStable();\n    modalInstance.quantity = this.quantity;\n    modalInstance.increment = this.increment;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { BaseFocusConfig } from '../keyboard-focus.model';\nimport { BaseFocusService } from './base-focus.service';\n\n/**\n * Abstract directive that provides a common interface for all focus directives:\n * - Block Focus\n * - Persist Focus\n * - Escape Focus\n * - Auto Focus\n * - Tab Focus\n * - Trap Focus\n * - Lock Focus\n */\n@Directive()\nexport abstract class BaseFocusDirective implements OnInit {\n  /**\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\n   * focus directive.\n   */\n  protected config: BaseFocusConfig;\n\n  /**\n   * A default config can be provided for each directive if a specific focus directive\n   * is used directly. i.e. `<div cxAutoFocus></div>`\n   */\n  protected defaultConfig: BaseFocusConfig = {};\n\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected service: BaseFocusService\n  ) {}\n\n  ngOnInit() {\n    this.setDefaultConfiguration();\n    this.requiredTabindex = -1;\n  }\n\n  /**\n   * Override the (input) config if it undefined or an empty string, with the\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\n   * specific (inherited) defaultConfig will be used.\n   */\n  protected setDefaultConfiguration(): void {\n    if ((!this.config || this.config === '') && this.defaultConfig) {\n      this.config = this.defaultConfig;\n    }\n  }\n\n  /**\n   * Helper method to return the host element for the directive\n   * given by the `elementRef`.\n   */\n  protected get host(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /**\n   * Force a tabindex on the host element if it is _requried_ to make the element\n   * focusable. If the element is focusable by nature or by a given tabindex, the\n   * `tabindex` is not applied.\n   *\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\n   */\n  protected set requiredTabindex(tabindex: number) {\n    if (this.requiresExplicitTabIndex) {\n      this.tabindex = tabindex;\n    }\n  }\n\n  /**\n   * Returns true if the host element does not have a tabindex defined\n   * and it also doesn't get focus by browsers nature (i.e. button or\n   * active link).\n   */\n  protected get requiresExplicitTabIndex(): boolean {\n    return (\n      this.tabindex === undefined &&\n      ['button', 'input', 'select', 'textarea'].indexOf(\n        this.host.tagName.toLowerCase()\n      ) === -1 &&\n      !(\n        this.host.tagName === 'A' &&\n        (this.host.hasAttribute('href') || this.host.hasAttribute('routerlink'))\n      )\n    );\n  }\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\nimport { BaseFocusDirective } from '../base/base-focus.directive';\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\n\n/**\n * Directive implementation that adds a CSS class to the host element\n * when the moused is used to focus an element. As soon as the keyboard\n * is used, the class is removed.\n */\n@Directive() // selector: '[cxVisibleFocus]'\nexport class VisibleFocusDirective extends BaseFocusDirective {\n  protected defaultConfig: VisibleFocusConfig = { disableMouseFocus: true };\n\n  // @Input('cxVisibleFocus')\n  protected config: VisibleFocusConfig;\n\n  /** controls a polyfill class for the lacking focus-visible feature */\n  @HostBinding('class.mouse-focus') mouseFocus = false;\n\n  @HostListener('mousedown') handleMousedown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = true;\n    }\n  }\n\n  @HostListener('keydown') handleKeydown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = false;\n    }\n  }\n\n  protected get shouldFocusVisible(): boolean {\n    return this.config?.disableMouseFocus;\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { BlockFocusConfig } from '../keyboard-focus.model';\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\n\n@Directive()\n// { selector: '[cxBlockFocus]' }\nexport class BlockFocusDirective extends VisibleFocusDirective\n  implements OnInit {\n  protected defaultConfig: BlockFocusConfig = { block: true };\n\n  // @Input('cxBlockFocus')\n  protected config: BlockFocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: BaseFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.config.block) {\n      this.tabindex = -1;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { BlockFocusDirective } from '../block/block-focus.directive';\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from './persist-focus.service';\n\n/**\n * Directive that provides persistence of the focused state. This is useful\n * when a group of focusable elements got refocused or even recreated. That\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\n *\n * The focus state is based on a configured _key_, which can be passed in the\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\n *\n * ```html\n * <button cxPersistFocus=\"myKey\"></button>\n * <button cxFocus=\"myKey\"></button>\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\n * ```\n *\n * The focus state can be part of a focus _group_, so that the state is shared\n * and remember for the given group. In order to detect the persistence for a\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\n *\n * ```html\n * <button data-cx-focus=\"myKey\"></button>\n * ```\n *\n * Other keyboard focus directives can read the key to understand whether the element\n * should retrieve focus.\n *\n */\n@Directive() // selector: '[cxPersistFocus]',\nexport class PersistFocusDirective extends BlockFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: PersistFocusConfig = {};\n\n  /**\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\n   * While this could be considered a global key, the likeliness of conflicts\n   * is very small since the key is cleared when the focus is changed.\n   */\n  // @Input('cxPersistFocus')\n  protected config: PersistFocusConfig = {};\n\n  /**\n   * The persistance key is maintained in an element attribute for other\n   * implementations. This is needed to ensure that we can resolve the focus\n   * state in case of a repaint.\n   */\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\n\n  @HostListener('focus', ['$event'])\n  handleFocus(event?: KeyboardEvent) {\n    this.service.set(this.key, this.group);\n\n    event?.preventDefault();\n    event?.stopPropagation();\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: PersistFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.attr = this.key ? this.key : undefined;\n  }\n\n  protected setDefaultConfiguration() {\n    if (typeof this.config === 'string' && this.config !== '') {\n      this.config = { key: this.config };\n    }\n    super.setDefaultConfiguration();\n  }\n\n  /**\n   * Focus the element explicitly if it was focused before.\n   */\n  ngAfterViewInit() {\n    if (this.isPersisted) {\n      this.host.focus({ preventScroll: true });\n    }\n  }\n\n  protected get isPersisted(): boolean {\n    return !!this.key && this.service.get(this.group) === this.key;\n  }\n\n  /**\n   * Returns the key for the host element, which is used to persist the\n   * focus state. This is useful in cases where the DOM is rebuild.\n   */\n  protected get key(): string {\n    return (this.config as PersistFocusConfig)?.key;\n  }\n\n  /**\n   * returns the persistence group (if any) for the focusable elements.\n   */\n  protected get group(): string {\n    return this.service.getPersistenceGroup(\n      this.host,\n      this.config as PersistFocusConfig\n    );\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\nimport { EscapeFocusService } from './escape-focus.service';\n\n/**\n * Directive to focus the host element whenever the `escape` key is captured.\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\n * on a tree of elements. Each time the escape key is used, the focus will\n * move up in the DOM tree.\n *\n */\n@Directive() // selector: '[cxEscFocus]',\nexport class EscapeFocusDirective extends PersistFocusDirective\n  implements OnInit {\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\n\n  // @Input('cxEscFocus')\n  protected config: EscapeFocusConfig;\n\n  @Output() esc = new EventEmitter<boolean>();\n\n  /**\n   * Handles the escape key event.\n   * @param event the native keyboard event which contains the escape keydown event\n   */\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    if (this.service.shouldFocus(this.config)) {\n      this.service.handleEscape(this.host, this.config, event);\n    }\n    this.esc.emit(this.service.shouldFocus(this.config));\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: EscapeFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    if (this.service.shouldFocus(this.config)) {\n      this.requiredTabindex = -1;\n    }\n    super.ngOnInit();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\nimport { AutoFocusService } from './auto-focus.service';\n\n/**\n * Directive that focus the first nested _focusable_ element based on state and configuration:\n *\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\n * 4. first focusable element\n * 5. the host element, in case the configured CSS selector is `:host`.\n *\n * Example configurations:\n *\n * `<div cxAutoFocus>[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\n *\n */\n@Directive() // selector: '[cxAutoFocus]'\nexport class AutoFocusDirective extends EscapeFocusDirective\n  implements AfterViewInit {\n  /** The AutoFocusDirective will be using autofocus by default  */\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\n\n  // @Input('cxAutoFocus')\n  protected config: AutoFocusConfig;\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: AutoFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Focus the element explicitly if it was focussed before.\n   */\n  ngAfterViewInit(): void {\n    if (this.shouldAutofocus) {\n      this.handleFocus();\n    }\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\n      super.ngAfterViewInit();\n    }\n  }\n\n  /**\n   * Mimic the focus without setting the actual focus on the host. The first\n   * focusable child element will be focussed.\n   */\n  handleFocus(event?: KeyboardEvent) {\n    if (this.shouldAutofocus) {\n      if (!event?.target || event.target === this.host) {\n        this.firstFocusable?.focus();\n      } else {\n        (event.target as HTMLElement).focus();\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  /**\n   * Helper function to get the first focusable child element\n   */\n  protected get hasPersistedFocus() {\n    return this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Helper function to indicate whether we should use autofocus for the\n   * child elements.\n   */\n  protected get shouldAutofocus(): boolean {\n    return !!this.config?.autofocus;\n  }\n\n  /**\n   * Helper function to get the first focusable child element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get firstFocusable(): HTMLElement {\n    return this.service.findFirstFocusable(this.host, this.config);\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from './tab-focus.service';\n\n/**\n * Directive to move the focus of (\"locked\") child elements. This is useful\n * for a nested list of tabs, carousel slides or any group of elements that\n * requires horizontal navigation.\n */\n@Directive() // selector: '[cxTabFocus]'\nexport class TabFocusDirective extends AutoFocusDirective {\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\n  protected defaultConfig: TabFocusConfig = { tab: true };\n\n  // @Input('cxTabFocus')\n  protected config: TabFocusConfig = {};\n\n  @HostListener('keydown.arrowRight', ['$event'])\n  handleNextTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\n    }\n  }\n\n  @HostListener('keydown.arrowLeft', ['$event'])\n  handlePreviousTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TabFocusService\n  ) {\n    super(elementRef, service);\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\nimport { TrapFocusService } from './trap-focus.service';\n\n/**\n * Directive that keeps the focus inside the focussable child elements,\n * also known as a _focus trap_.\n */\n@Directive() // selector: '[cxTrapFocus]'\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\n  protected defaultConfig: TrapFocusConfig = { trap: true };\n\n  // @Input('cxTrapFocus')\n  protected config: TrapFocusConfig = {};\n\n  @HostListener('keydown.arrowdown', ['$event'])\n  @HostListener('keydown.tab', ['$event'])\n  handleTrapDown = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\n    }\n  };\n\n  @HostListener('keydown.arrowup', ['$event'])\n  @HostListener('keydown.shift.tab', ['$event'])\n  handleTrapUp = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.PREV);\n    }\n  };\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TrapFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Moves the focus of the element reference up or down, depending on the increment.\n   * The focus of the element is trapped to avoid it from going out of the group.\n   *\n   * @param event UIEvent that is used to get the target element. The event is blocked\n   *   from standard execution and further bubbling.\n   * @param increment indicates whether the next or previous is focussed.\n   */\n  protected moveFocus(event: UIEvent, increment: number) {\n    if (this.service.hasFocusableChildren(this.host)) {\n      this.service.moveFocus(\n        this.host,\n        this.config,\n        increment,\n        event as UIEvent\n      );\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\nimport { LockFocusService } from './lock-focus.service';\n\n/**\n * Focusable elements exclude hidden elements by default, but this contradicts with\n * unlocking (hidden) elements.\n */\nconst UNLOCK_HIDDEN_ELEMENTS = true;\n/**\n * Directive that adds persistence for focussed element in case\n * the elements are being rebuild. This happens often when change\n * detection kicks in because of new data set from the backend.\n */\n@Directive() // selector: '[cxLockFocus]'\nexport class LockFocusDirective extends TrapFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: LockFocusConfig = { lock: true };\n\n  // @Input('cxLockFocus')\n  protected config: LockFocusConfig = {};\n\n  /**\n   * Indicates that the host is configured to use locking. This is available as a\n   * CSS class `focus-lock`.\n   */\n  @HostBinding('class.focus-lock') shouldLock: boolean;\n\n  /**\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\n   */\n  @HostBinding('class.is-locked') isLocked: boolean;\n\n  /**\n   * Emits an event when the host is unlocked.\n   */\n  @Output() unlock = new EventEmitter<boolean>();\n\n  /**\n   * When the user selects enter or space, the focusable childs are\n   * unlocked, which means that the tabindex is set to 0.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handleEnter(event: KeyboardEvent) {\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * In case any of the children elements is touched by the mouse,\n   * we unlock the group to not break the mouse-experience.\n   */\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if (this.shouldLock && this.isLocked) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: LockFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service);\n  }\n\n  protected lockFocus() {\n    this.addTabindexToChildren(-1);\n  }\n\n  protected unlockFocus(event?: UIEvent) {\n    this.unlock.emit(true);\n    this.addTabindexToChildren(0);\n    // we focus the host if the event was triggered from a child\n    if (event?.target === this.host) {\n      super.handleFocus(event as KeyboardEvent);\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.shouldLock = this.config?.lock;\n\n    if (this.shouldLock) {\n      this.tabindex = 0;\n\n      // Locked elements will be set to `autofocus` by default if it's not\n      // been configured. This will ensure that autofocus kicks in upon unlock.\n      if (!this.config.hasOwnProperty('autofocus')) {\n        this.config.autofocus = true;\n      }\n      // Locked elements will be set to `focusOnEscape` by default if it's not\n      // been configured. This will ensure that  the host gets locked again when\n      // `escape` is pressed.\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.shouldLock) {\n      /**\n       * If the component hosts a group of focusable children elmenents,\n       * we persist the group key to the children, so that they can taken this\n       * into account when they persist their focus state.\n       */\n      if (!!this.group) {\n        this.service.findFocusable(this.host).forEach((el) =>\n          // we must do this in after view init as\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\n        );\n      }\n\n      if (this.shouldAutofocus) {\n        this.handleFocus();\n      }\n    }\n    super.ngAfterViewInit();\n  }\n\n  handleFocus(event?: KeyboardEvent): void {\n    if (this.shouldLock) {\n      if (this.shouldUnlockAfterAutofocus(event)) {\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\n        setTimeout(() => this.unlockFocus(event));\n      } else {\n        setTimeout(() => this.lockFocus());\n        event?.stopPropagation();\n        return;\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  handleEscape(event: KeyboardEvent): void {\n    if (this.shouldLock) {\n      this.service.clear(this.config.group);\n    }\n    super.handleEscape(event);\n  }\n\n  /**\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\n   * In this case we unlock the focusable children in case there's a focusable child that\n   * was unlocked before.\n   *\n   * We keep this private to not polute the API.\n   */\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Add the tabindex attribute to the focusable children elements\n   */\n  protected addTabindexToChildren(i = 0): void {\n    if (this.shouldLock) {\n      this.isLocked = i === -1;\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\n        this.focusable.forEach((el) =>\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\n        );\n      }\n    }\n  }\n\n  /**\n   * Utility method, returns all focusable children for the host element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get hasFocusableChildren(): boolean {\n    return this.service.hasFocusableChildren(this.host);\n  }\n\n  /**\n   * Returns the focusable children of the host element. If the host element\n   * is configured to be locked, the query is restricted to child elements\n   * with a tabindex !== `-1`.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get focusable(): HTMLElement[] {\n    return this.service.findFocusable(\n      this.host,\n      this.shouldLock,\n      UNLOCK_HIDDEN_ELEMENTS\n    );\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\nimport { LockFocusDirective } from './lock/lock-focus.directive';\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class FocusDirective extends LockFocusDirective {\n  protected defaultConfig: FocusConfig = {};\n  // tslint:disable-next-line: no-input-rename\n  @Input('cxFocus') protected config: FocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: KeyboardFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service, renderer);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\n\nconst directives = [\n  // PersistFocusDirective,\n  // VisibleFocusDirective,\n  // BlockFocusDirective,\n  // AutoFocusDirective,\n  // EscapeFocusDirective,\n  // LockFocusDirective,\n  // TrapFocusDirective,\n  // TabFocusDirective,\n  FocusDirective,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...directives],\n  exports: [...directives],\n})\nexport class KeyboardFocusModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\nimport { FeaturesConfigModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, FeaturesConfigModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Voucher, CartVoucherService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-applied-coupons',\n  templateUrl: './applied-coupons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppliedCouponsComponent {\n  @Input()\n  vouchers: Voucher[];\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isReadOnly = false;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(private cartVoucherService: CartVoucherService) {}\n\n  public get sortedVouchers(): Voucher[] {\n    this.vouchers = this.vouchers || [];\n    return this.vouchers.slice().sort((a, b) => {\n      return a.code.localeCompare(b.code);\n    });\n  }\n\n  removeVoucher(voucherId: string) {\n    this.cartVoucherService.removeVoucher(voucherId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ActiveCartService,\n  Cart,\n  CartVoucherService,\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-coupon',\n  templateUrl: './cart-coupon.component.html',\n})\nexport class CartCouponComponent implements OnInit, OnDestroy {\n  MAX_CUSTOMER_COUPON_PAGE = 100;\n  couponForm: FormGroup;\n  cartIsLoading$: Observable<boolean>;\n  cart$: Observable<Cart>;\n  cartId: string;\n  applicableCoupons: CustomerCoupon[];\n\n  private ignoreCloseEvent = false;\n\n  private subscription = new Subscription();\n\n  couponBoxIsActive = false;\n\n  constructor(\n    protected cartVoucherService: CartVoucherService,\n    protected formBuilder: FormBuilder,\n    protected customerCouponService: CustomerCouponService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.customerCouponService) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n    }\n\n    this.cart$ = combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.getActiveCartId(),\n      this.customerCouponService.getCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      ),\n    ]).pipe(\n      tap(\n        ([cart, activeCardId, customerCoupons]: [\n          Cart,\n          string,\n          CustomerCouponSearchResult\n        ]) => {\n          this.cartId = activeCardId;\n          this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\n        }\n      ),\n      map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\n    );\n\n    this.cartIsLoading$ = this.activeCartService\n      .isStable()\n      .pipe(map((loaded) => !loaded));\n\n    this.cartVoucherService.resetAddVoucherProcessingState();\n\n    this.couponForm = this.formBuilder.group({\n      couponCode: ['', [Validators.required]],\n    });\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService\n        .getAddVoucherResultSuccess()\n        .subscribe((success) => {\n          this.onSuccess(success);\n        })\n    );\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService.getAddVoucherResultError().subscribe((error) => {\n        this.onError(error);\n      })\n    );\n  }\n\n  protected onError(error: boolean) {\n    if (error) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  onSuccess(success: boolean) {\n    if (success) {\n      this.couponForm.reset();\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  protected getApplicableCustomerCoupons(\n    cart: Cart,\n    coupons: CustomerCoupon[]\n  ): void {\n    this.applicableCoupons = coupons || [];\n    if (cart.appliedVouchers) {\n      cart.appliedVouchers.forEach((appliedVoucher) => {\n        this.applicableCoupons = this.applicableCoupons.filter(\n          (coupon) => coupon.couponId !== appliedVoucher.code\n        );\n      });\n    }\n  }\n\n  applyVoucher(): void {\n    if (this.couponForm.valid) {\n      this.cartVoucherService.addVoucher(\n        this.couponForm.value.couponCode,\n        this.cartId\n      );\n    } else {\n      this.couponForm.markAllAsTouched();\n    }\n  }\n\n  applyCustomerCoupon(couponId: string): void {\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\n    this.couponBoxIsActive = false;\n  }\n\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.couponBoxIsActive = false;\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.cartVoucherService.resetAddVoucherProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\nimport { CartCouponComponent } from './cart-coupon.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\n  exports: [CartCouponComponent, AppliedCouponsComponent],\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    I18nModule,\n    IconModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartApplyCouponComponent: {\n          component: CartCouponComponent,\n        },\n      },\n    }),\n  ],\n\n  entryComponents: [CartCouponComponent],\n})\nexport class CartCouponModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  ConsignmentEntry,\n  PromotionLocation,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport {\n  CartItemComponentOptions,\n  Item,\n} from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemListComponent {\n  @Input() readonly = false;\n\n  @Input() hasHeader = true;\n\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  private _items: Item[] = [];\n  form: FormGroup;\n\n  @Input('items')\n  // TODO: currently we're getting a new array of items if the cart changes.\n  // pretty annoying as it forces a repaint on the screen,\n  // which is noticable in the UI.\n  set items(items: Item[]) {\n    this.resolveItems(items);\n    this.createForm();\n  }\n  get items(): Item[] {\n    return this._items;\n  }\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  @Input('cartIsLoading') set setLoading(value: boolean) {\n    if (!this.readonly) {\n      // Whenver the cart is loading, we disable the complete form\n      // to avoid any user interaction with the cart.\n      value\n        ? this.form.disable({ emitEvent: false })\n        : this.form.enable({ emitEvent: false });\n    }\n  }\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  /**\n   * The items we're getting form the input do not have a consistent model.\n   * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\n   */\n  private resolveItems(items: Item[]): void {\n    if (items.every((item) => item.hasOwnProperty('orderEntry'))) {\n      this._items = items.map((consignmentEntry) => {\n        const entry = Object.assign(\n          {},\n          (consignmentEntry as ConsignmentEntry).orderEntry\n        );\n        entry.quantity = consignmentEntry.quantity;\n        return entry;\n      });\n    } else {\n      this._items = items;\n    }\n  }\n\n  private createForm(): void {\n    this.form = new FormGroup({});\n    this._items.forEach((item) => {\n      const { code } = item.product;\n      const group = new FormGroup({\n        entryNumber: new FormControl((<any>item).entryNumber),\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\n      });\n      if (!item.updateable || this.readonly) {\n        group.disable();\n      }\n      this.form.addControl(code, group);\n    });\n  }\n\n  removeEntry(item: Item): void {\n    if (this.selectiveCartService && this.options.isSaveForLater) {\n      this.selectiveCartService.removeEntry(item);\n    } else {\n      this.activeCartService.removeEntry(item);\n    }\n    delete this.form.controls[item.product.code];\n  }\n\n  getControl(item: Item): Observable<FormGroup> {\n    return this.form.get(item.product.code).valueChanges.pipe(\n      // tslint:disable-next-line:deprecation\n      startWith(null),\n      map((value) => {\n        if (value && this.selectiveCartService && this.options.isSaveForLater) {\n          this.selectiveCartService.updateEntry(\n            value.entryNumber,\n            value.quantity\n          );\n        } else if (value) {\n          this.activeCartService.updateEntry(value.entryNumber, value.quantity);\n        }\n      }),\n      map(() => <FormGroup>this.form.get(item.product.code))\n    );\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { PromotionLocation, PromotionResult } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\nexport interface Item {\n  product?: any;\n  quantity?: any;\n  basePrice?: any;\n  totalPrice?: any;\n  updateable?: boolean;\n}\n\nexport interface CartItemComponentOptions {\n  isSaveForLater?: boolean;\n  optionalBtn?: any;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n})\nexport class CartItemComponent implements OnInit {\n  @Input() compact = false;\n  @Input() item: Item;\n  @Input() readonly = false;\n  @Input() quantityControl: FormControl;\n\n  @Output() view = new EventEmitter<any>();\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  // TODO: evaluate whether this is generic enough\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  appliedProductPromotions$: Observable<PromotionResult[]>;\n\n  constructor(protected promotionService: PromotionService) {}\n\n  ngOnInit() {\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\n      this.item,\n      this.promotionLocation\n    );\n  }\n\n  isProductOutOfStock(product: any) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  removeItem() {\n    this.quantityControl.setValue(0);\n    this.quantityControl.markAsDirty();\n  }\n\n  viewItem() {\n    this.view.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CartCouponModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CartSharedModule,\n    RouterModule,\n    SpinnerModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  AuthService,\n  Cart,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n  RoutingService,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  loggedIn = false;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n  promotions$: Observable<PromotionResult[]>;\n  selectiveCartEnabled: boolean;\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected promotionService: PromotionService,\n    protected selectiveCartService: SelectiveCartService,\n    protected authService: AuthService,\n    protected routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\n\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n\n    this.selectiveCartEnabled = this.selectiveCartService.isEnabled();\n\n    this.cartLoaded$ = combineLatest([\n      this.activeCartService.isStable(),\n      this.selectiveCartEnabled\n        ? this.selectiveCartService.getLoaded()\n        : of(false),\n      this.authService.isUserLoggedIn(),\n    ]).pipe(\n      tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\n      map(([cartLoaded, sflLoaded, loggedIn]) =>\n        loggedIn && this.selectiveCartEnabled\n          ? cartLoaded && sflLoaded\n          : cartLoaded\n      )\n    );\n\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  saveForLater(item: Item) {\n    if (this.loggedIn) {\n      this.activeCartService.removeEntry(item);\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\n    } else {\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartDetailsComponent } from './cart-details.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    CartCouponModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n  entryComponents: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { ActiveCartService, Cart, RoutingService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.isStable(),\n    ]).pipe(\n      filter(([_, loaded]) => loaded),\n      map(([cart]) => {\n        if (this.isEmpty(cart)) {\n          this.routingService.go({ cxRoute: 'home' });\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActiveCartService, Cart, SelectiveCartService } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      return combineLatest([\n        slots$,\n        this.activeCartService.getActive(),\n        this.selectiveCartService.isEnabled()\n          ? this.selectiveCartService.getCart()\n          : of({} as Cart),\n        this.activeCartService.getLoading(),\n      ]).pipe(\n        map(([slots, cart, selectiveCart, loadingCart]) => {\n          const exclude = (arr, args) =>\n            arr.filter((item) => args.every((arg) => arg !== item));\n          return Object.keys(cart).length === 0 && loadingCart\n            ? exclude(slots, [\n                'TopContent',\n                'CenterRightContentSlot',\n                'EmptyCartMiddleContent',\n              ])\n            : cart.totalItems\n            ? exclude(slots, ['EmptyCartMiddleContent'])\n            : selectiveCart.totalItems\n            ? exclude(slots, [\n                'EmptyCartMiddleContent',\n                'CenterRightContentSlot',\n              ])\n            : exclude(slots, ['TopContent', 'CenterRightContentSlot']);\n        })\n      );\n    }\n    return slots$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n\n  constructor(protected activeCartService: ActiveCartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartTotalsComponent } from './cart-totals.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    CartSharedModule,\n    I18nModule,\n    CartCouponModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n  entryComponents: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\n    startWith({ deliveryItemsQuantity: 0 }),\n    map((cart) => cart.deliveryItemsQuantity || 0)\n  );\n\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\n    filter((cart) => !!cart.totalPrice),\n    map((cart) => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected activeCartService: ActiveCartService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [MiniCartComponent],\n  exports: [MiniCartComponent],\n  entryComponents: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AuthService,\n  OrderEntry,\n  Product,\n  WishListService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CurrentProductService } from '../../product/current-product.service';\n\n@Component({\n  selector: 'cx-add-to-wishlist',\n  templateUrl: './add-to-wish-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToWishListComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\n    filter((product) => Boolean(product)),\n    tap((product) => this.setStockInfo(product))\n  );\n\n  wishListEntries$: Observable<\n    OrderEntry[]\n  > = this.wishListService.getWishList().pipe(\n    filter((wishlist) => Boolean(wishlist)),\n    map((wishList) => wishList.entries)\n  );\n\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  hasStock = false;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected wishListService: WishListService,\n    protected currentProductService: CurrentProductService,\n    protected authService: AuthService\n  ) {}\n\n  add(product: Product): void {\n    this.wishListService.addEntry(product.code);\n  }\n\n  remove(entry: OrderEntry): void {\n    this.wishListService.removeEntry(entry);\n  }\n\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\n    const item = entries.find((entry) => entry.product.code === product.code);\n    return item;\n  }\n\n  private setStockInfo(product: Product): void {\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { AddToWishListComponent } from './add-to-wish-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AddToWishListComponent: {\n          component: AddToWishListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToWishListComponent],\n  entryComponents: [AddToWishListComponent],\n  exports: [AddToWishListComponent],\n})\nexport class AddToWishListModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CmsParagraphComponent,\n  CmsService,\n  OrderEntry,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-save-for-later',\n  templateUrl: './save-for-later.component.html',\n})\nexport class SaveForLaterComponent implements OnInit {\n  saveForLater$: Observable<Cart>;\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  data$: Observable<CmsParagraphComponent>;\n  isCartEmpty$: Observable<boolean>;\n\n  constructor(\n    protected cmsService: CmsService,\n    protected cartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isCartEmpty$ = this.cartService\n      .getActive()\n      .pipe(map((cart) => !(cart && cart.totalItems && cart.totalItems > 0)));\n    this.saveForLater$ = this.selectiveCartService.getCart();\n    this.entries$ = this.selectiveCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n    this.cartLoaded$ = combineLatest([\n      this.cartService.isStable(),\n      this.selectiveCartService.getLoaded(),\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\n    this.data$ = this.cmsService.getComponentData(\n      'EmptyCartParagraphComponent'\n    );\n  }\n\n  moveToCart(item: Item) {\n    this.selectiveCartService.removeEntry(item);\n    this.cartService.addEntry(item.product.code, item.quantity);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  FeaturesConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { SaveForLaterComponent } from './save-for-later.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        SaveForLaterComponent: {\n          component: SaveForLaterComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SaveForLaterComponent],\n  exports: [SaveForLaterComponent],\n  entryComponents: [SaveForLaterComponent],\n})\nexport class SaveForLaterModule {}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutStep } from '../model/checkout-step.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\nexport enum DeliveryModePreferences {\n  FREE = 'FREE',\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CheckoutConfig {\n  checkout?: {\n    /**\n     * Set checkout steps as ordered array of pages.\n     */\n    steps?: Array<CheckoutStep>;\n    /**\n     * Allow for express checkout when default shipping method and payment method are available.\n     */\n    express?: boolean;\n    /**\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\n     */\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\n    /**\n     * Allow for guest checkout.\n     */\n    guest?: boolean;\n  };\n}\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\nimport {\n  CheckoutConfig,\n  DeliveryModePreferences,\n} from '../config/checkout-config';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\n  private express: boolean = this.checkoutConfig.checkout.express;\n  private guest: boolean = this.checkoutConfig.checkout.guest;\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\n\n  constructor(\n    private checkoutConfig: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\n    return this.getCheckoutStep(currentStepType).routeName;\n  }\n\n  getFirstCheckoutStepRoute(): string {\n    return this.steps[0].routeName;\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\n      : null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\n      : null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    let stepIndex: number;\n    let index = 0;\n    for (const step of this.steps) {\n      if (\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n      ) {\n        stepIndex = index;\n      } else {\n        index++;\n      }\n    }\n\n    return stepIndex >= 0 ? stepIndex : null;\n  }\n\n  protected compareDeliveryCost(\n    deliveryMode1: DeliveryMode,\n    deliveryMode2: DeliveryMode\n  ): number {\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\n      return 1;\n    } else if (\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\n    ) {\n      return -1;\n    }\n    return 0;\n  }\n\n  protected findMatchingDeliveryMode(\n    deliveryModes: DeliveryMode[],\n    index = 0\n  ): string {\n    switch (this.defaultDeliveryMode[index]) {\n      case DeliveryModePreferences.FREE:\n        if (deliveryModes[0].deliveryCost.value === 0) {\n          return deliveryModes[0].code;\n        }\n        break;\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\n        const leastExpensiveFound = deliveryModes.find(\n          (deliveryMode) => deliveryMode.deliveryCost.value !== 0\n        );\n        if (leastExpensiveFound) {\n          return leastExpensiveFound.code;\n        }\n        break;\n      case DeliveryModePreferences.MOST_EXPENSIVE:\n        return deliveryModes[deliveryModes.length - 1].code;\n      default:\n        const codeFound = deliveryModes.find(\n          (deliveryMode) =>\n            deliveryMode.code === this.defaultDeliveryMode[index]\n        );\n        if (codeFound) {\n          return codeFound.code;\n        }\n    }\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\n    return lastMode\n      ? deliveryModes[0].code\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\n  }\n\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\n    deliveryModes.sort(this.compareDeliveryCost);\n    return this.findMatchingDeliveryMode(deliveryModes);\n  }\n\n  isExpressCheckout(): boolean {\n    return this.express;\n  }\n\n  isGuestCheckout(): boolean {\n    return this.guest;\n  }\n\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string): string {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthRedirectService,\n  AuthService,\n  RoutingService,\n  User,\n  UserToken,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.authService.getUserToken(),\n      this.activeCartService.getAssignedUser(),\n    ]).pipe(\n      map(([token, user]: [UserToken, User]) => {\n        if (!token.access_token) {\n          if (this.activeCartService.isGuestCart()) {\n            return Boolean(user);\n          }\n          if (this.checkoutConfigService.isGuestCheckout()) {\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\n          } else {\n            this.routingService.go({ cxRoute: 'login' });\n          }\n          this.authRedirectService.reportAuthGuard();\n        }\n        return !!token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  OCC_USER_ID_ANONYMOUS,\n  PaymentDetails,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.cartId$ = this.activeCartService.getActive().pipe(\n      map((cartData) => {\n        if (\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\n          this.activeCartService.isGuestCart()\n        ) {\n          return cartData.guid;\n        }\n        return cartData.code;\n      }),\n      filter((cartId) => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap((cartId) => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile((loaded) => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, of, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\n\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n  UserPaymentService,\n  PaymentDetails,\n  DeliveryMode,\n  CheckoutPaymentService,\n  StateUtils,\n} from '@spartacus/core';\nimport { CheckoutConfigService } from './checkout-config.service';\nimport { CheckoutDetailsService } from './checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExpressCheckoutService {\n  private shippingAddressSet$: Observable<boolean>;\n  private deliveryModeSet$: Observable<boolean>;\n  private paymentMethodSet$: Observable<boolean>;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected checkoutConfigService: CheckoutConfigService\n  ) {\n    this.setShippingAddress();\n    this.setDeliveryMode();\n    this.setPaymentMethod();\n  }\n\n  protected setShippingAddress() {\n    this.shippingAddressSet$ = combineLatest([\n      this.userAddressService.getAddresses(),\n      this.userAddressService.getAddressesLoadedSuccess(),\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!addressesLoadedSuccess) {\n            this.userAddressService.loadAddresses();\n          }\n        }\n      ),\n      filter(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => addressesLoadedSuccess\n      ),\n      switchMap(\n        ([addresses, , setDeliveryAddressProcess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          const defaultAddress =\n            addresses.find((address) => address.defaultAddress) || addresses[0];\n          if (defaultAddress && Object.keys(defaultAddress).length) {\n            if (\n              !(\n                setDeliveryAddressProcess.success ||\n                setDeliveryAddressProcess.error ||\n                setDeliveryAddressProcess.loading\n              )\n            ) {\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\n            }\n            return of(setDeliveryAddressProcess).pipe(\n              filter(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    (setDeliveryAddressProcessState.success ||\n                      setDeliveryAddressProcessState.error) &&\n                    !setDeliveryAddressProcessState.loading\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setDeliveryAddressProcessState.success) {\n                    return this.checkoutDetailsService.getDeliveryAddress();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setPaymentMethod() {\n    this.paymentMethodSet$ = combineLatest([\n      this.userPaymentService.getPaymentMethods(),\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, paymentMethodsLoadedSuccess]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!paymentMethodsLoadedSuccess) {\n            this.userPaymentService.loadPaymentMethods();\n          }\n        }\n      ),\n      filter(\n        ([, success]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => success\n      ),\n      switchMap(\n        ([payments, , setPaymentDetailsProcess]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          const defaultPayment =\n            payments.find((address) => address.defaultPayment) || payments[0];\n          if (defaultPayment && Object.keys(defaultPayment).length) {\n            if (\n              !(\n                setPaymentDetailsProcess.success ||\n                setPaymentDetailsProcess.error ||\n                setPaymentDetailsProcess.loading\n              )\n            ) {\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\n            }\n            return of(setPaymentDetailsProcess).pipe(\n              filter(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    (setPaymentDetailsProcessState.success ||\n                      setPaymentDetailsProcessState.error) &&\n                    !setPaymentDetailsProcessState.loading\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setPaymentDetailsProcessState.success) {\n                    return this.checkoutDetailsService.getPaymentDetails();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setDeliveryMode() {\n    this.deliveryModeSet$ = combineLatest([\n      this.shippingAddressSet$,\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\n    ]).pipe(\n      debounceTime(0),\n      switchMap(\n        ([\n          addressSet,\n          supportedDeliveryModes,\n          setDeliveryModeStatusFlag,\n          loadSupportedDeliveryModeStatus,\n        ]: [\n          boolean,\n          DeliveryMode[],\n          StateUtils.LoaderState<void>,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (addressSet) {\n            return of([\n              supportedDeliveryModes,\n              setDeliveryModeStatusFlag,\n              loadSupportedDeliveryModeStatus,\n            ]).pipe(\n              filter(\n                ([, , supportedDeliveryModeStatus]: [\n                  DeliveryMode[],\n                  StateUtils.LoaderState<void>,\n                  StateUtils.LoaderState<void>\n                ]) => supportedDeliveryModeStatus.success\n              ),\n              switchMap(\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\n                  DeliveryMode[],\n                  StateUtils.LoaderState<void>,\n                  StateUtils.LoaderState<void>\n                ]) => {\n                  if (Boolean(deliveryModes.length)) {\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\n                      deliveryModes\n                    );\n                    return of([\n                      preferredDeliveryMode,\n                      setDeliveryModeStatus,\n                    ]).pipe(\n                      tap(\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          if (\n                            deliveryMode &&\n                            !(\n                              deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error ||\n                              deliveryModeLoadingStatus.loading\n                            )\n                          ) {\n                            this.checkoutDeliveryService.setDeliveryMode(\n                              deliveryMode\n                            );\n                          }\n                        }\n                      ),\n                      filter(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          return (\n                            (deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error) &&\n                            !deliveryModeLoadingStatus.loading\n                          );\n                        }\n                      ),\n                      switchMap(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          if (deliveryModeLoadingStatus.success) {\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\n                          }\n                          return of(false);\n                        }\n                      ),\n                      map((data) => Boolean(data))\n                    );\n                  }\n                  return of(false);\n                }\n              )\n            );\n          } else {\n            return of(false);\n          }\n        }\n      )\n    );\n  }\n\n  protected resetCheckoutProcesses() {\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\n  }\n\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\n    this.resetCheckoutProcesses();\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\n      map(([deliveryModeSet, paymentMethodSet]) =>\n        Boolean(deliveryModeSet && paymentMethodSet)\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  private readonly firstStep$: Observable<UrlTree>;\n\n  constructor(\n    protected router: Router,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected expressCheckoutService: ExpressCheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.firstStep$ = of(\n      this.router.parseUrl(\n        this.routingConfigService.getRouteConfig(\n          this.checkoutConfigService.getFirstCheckoutStepRoute()\n        ).paths[0]\n      )\n    );\n  }\n\n  canActivate(): Observable<boolean | UrlTree> {\n    if (\n      this.checkoutConfigService.isExpressCheckout() &&\n      !this.activeCartService.isGuestCart()\n    ) {\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\n        switchMap((expressCheckoutPossible: boolean) => {\n          return expressCheckoutPossible\n            ? of(\n                this.router.parseUrl(\n                  this.routingConfigService.getRouteConfig(\n                    this.checkoutConfigService.getCheckoutStepRoute(\n                      CheckoutStepType.REVIEW_ORDER\n                    )\n                  ).paths[0]\n                )\n              )\n            : this.firstStep$;\n        })\n      );\n    }\n    return this.firstStep$;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrchestratorComponent],\n  entryComponents: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected activeCartService: ActiveCartService) {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [CommonModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  entryComponents: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n})\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit() {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap((router) => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  entryComponents: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  RoutingConfigService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  cart$: Observable<Cart>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.cart$ = this.activeCartService.getActive();\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap((router) => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  entryComponents: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { CheckoutStep } from '../../model/checkout-step.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap((router) => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n\n  getTabIndex(stepIndex: number): number {\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\n  }\n\n  isActive(index: number): boolean {\n    return index === this.activeStepIndex;\n  }\n\n  isDisabled(index: number): boolean {\n    return index > this.activeStepIndex;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  declarations: [CheckoutProgressComponent],\n  entryComponents: [CheckoutProgressComponent],\n  exports: [CheckoutProgressComponent],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutProgressModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutDeliveryService,\n  DeliveryMode,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  currentDeliveryModeId: string;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n  private allowRedirect = false;\n\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private routingService: RoutingService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\n\n    this.deliveryModeSub = this.supportedDeliveryModes$\n      .pipe(\n        withLatestFrom(\n          this.checkoutDeliveryService\n            .getSelectedDeliveryMode()\n            .pipe(\n              map((deliveryMode: DeliveryMode) =>\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\n              )\n            )\n        )\n      )\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\n        if (!code && deliveryModes && deliveryModes.length) {\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\n            deliveryModes\n          );\n        }\n        if (\n          this.allowRedirect &&\n          !!code &&\n          code === this.currentDeliveryModeId\n        ) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        this.currentDeliveryModeId = code;\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n        }\n      });\n  }\n\n  changeMode(code: string): void {\n    if (code !== this.currentDeliveryModeId) {\n      this.currentDeliveryModeId = code;\n    }\n  }\n\n  next(): void {\n    this.allowRedirect = true;\n    if (this.mode.valid && this.mode.value) {\n      if (!this.currentDeliveryModeId) {\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\n      }\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\n    }\n    this.routingService.go(this.checkoutStepUrlNext);\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  entryComponents: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  StateUtils,\n  UserAddressService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n  months: string[] = [];\n  years: number[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  loading$: Observable<StateUtils.LoaderState<void>>;\n  sameAsShippingAddress = true;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  showSameAsShippingAddressCheckbox$: Observable<boolean>;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  paymentForm: FormGroup = this.fb.group({\n    cardType: this.fb.group({\n      code: [null, Validators.required],\n    }),\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    expiryMonth: [null, Validators.required],\n    expiryYear: [null, Validators.required],\n    cvn: ['', Validators.required],\n    defaultPayment: [false],\n  });\n\n  billingAddressForm: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected modalService: ModalService,\n    protected userAddressService: UserAddressService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap((countries) => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap((cardTypes) => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\n\n    this.showSameAsShippingAddressCheckbox$ = combineLatest([\n      this.countries$,\n      this.shippingAddress$,\n    ]).pipe(\n      map(([countries, address]) => {\n        return (\n          address?.country &&\n          !!countries.filter(\n            (country: Country): boolean =>\n              country.isocode === address.country.isocode\n          ).length\n        );\n      }),\n      tap((shouldShowCheckbox) => {\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.next();\n        } else if (results.decision === 'REJECT') {\n          this.globalMessageService.add(\n            { key: 'addressForm.invalidAddress' },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions) => {\n        const regionControl = this.billingAddressForm.get(\n          'region.isocodeShort'\n        );\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n\n    for (let i = 0; i < 10; i++) {\n      this.years.push(year + i);\n    }\n\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push(`0${j}`);\n      } else {\n        this.months.push(j.toString());\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.paymentForm.value.defaultPayment = !this.paymentForm.value\n      .defaultPayment;\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    };\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.checkoutDeliveryService.verifyAddress(this.billingAddressForm.value);\n    }\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddressForm.get('country.isocode').setValue(country.isocode);\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  next(): void {\n    if (this.paymentForm.valid) {\n      if (this.sameAsShippingAddress) {\n        this.setPaymentDetails.emit({\n          paymentDetails: this.paymentForm.value,\n          billingAddress: null,\n        });\n      } else {\n        if (this.billingAddressForm.valid) {\n          this.setPaymentDetails.emit({\n            paymentDetails: this.paymentForm.value,\n            billingAddress: this.billingAddressForm.value,\n          });\n        } else {\n          this.billingAddressForm.markAllAsTouched();\n        }\n      }\n    } else {\n      this.paymentForm.markAllAsTouched();\n\n      if (!this.sameAsShippingAddress) {\n        this.billingAddressForm.markAllAsTouched();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { PaymentFormComponent } from './payment-form.component';\nimport { FormErrorsModule } from '../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  declarations: [PaymentFormComponent],\n  entryComponents: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  RoutingService,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\n  selectedMethod$: Observable<PaymentDetails>;\n  isGuestCheckout = false;\n  newPaymentFormManuallyOpened = false;\n\n  protected shouldRedirect: boolean;\n  protected deliveryAddress: Address;\n  protected checkoutStepUrlNext: string;\n  protected checkoutStepUrlPrevious: string;\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.shouldRedirect = false;\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n\n    if (!this.activeCartService.isGuestCart()) {\n      this.userPaymentService.loadPaymentMethods();\n    } else {\n      this.isGuestCheckout = true;\n    }\n\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .pipe(take(1))\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n\n    this.selectedMethod$ = this.checkoutPaymentService.getPaymentDetails().pipe(\n      tap((paymentInfo) => {\n        if (paymentInfo && !!Object.keys(paymentInfo).length) {\n          if (paymentInfo['hasError']) {\n            Object.keys(paymentInfo).forEach((key) => {\n              if (key.startsWith('InvalidField')) {\n                this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\n              }\n            });\n            this.checkoutService.clearCheckoutStep(3);\n          } else if (this.shouldRedirect) {\n            this.routingService.go(this.checkoutStepUrlNext);\n          }\n        }\n      })\n    );\n\n    this.cards$ = combineLatest([\n      this.existingPaymentMethods$.pipe(\n        switchMap((methods) => {\n          return !methods?.length\n            ? of([])\n            : combineLatest(\n                methods.map((method) =>\n                  combineLatest([\n                    of(method),\n                    this.translation.translate('paymentCard.expires', {\n                      month: method.expiryMonth,\n                      year: method.expiryYear,\n                    }),\n                  ]).pipe(\n                    map(([payment, translation]) => ({\n                      payment,\n                      expiryTranslation: translation,\n                    }))\n                  )\n                )\n              );\n        })\n      ),\n      this.selectedMethod$,\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          paymentMethods,\n          selectedMethod,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          if (\n            paymentMethods.length &&\n            (!selectedMethod || Object.keys(selectedMethod).length === 0)\n          ) {\n            const defaultPaymentMethod = paymentMethods.find(\n              (paymentMethod) => paymentMethod.payment.defaultPayment\n            );\n            if (defaultPaymentMethod) {\n              selectedMethod = defaultPaymentMethod.payment;\n              this.checkoutPaymentService.setPaymentDetails(selectedMethod);\n            }\n          }\n          return paymentMethods.map((payment) => ({\n            content: this.createCard(\n              payment.payment,\n              {\n                textExpires: payment.expiryTranslation,\n                textUseThisPayment,\n                textDefaultPaymentMethod,\n                textSelected,\n              },\n              selectedMethod\n            ),\n            paymentMethod: payment.payment,\n          }));\n        }\n      )\n    );\n  }\n\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\n    this.checkoutPaymentService.setPaymentDetails(paymentDetails);\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n  }): void {\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress || this.deliveryAddress;\n    this.checkoutPaymentService.createPaymentDetails(details);\n    this.shouldRedirect = true;\n  }\n\n  ngOnDestroy(): void {\n    this.checkoutPaymentService.paymentProcessSuccess();\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n\n  protected sendPaymentMethodFailGlobalMessage(field: string) {\n    this.globalMessageService.add(\n      {\n        key: 'paymentMethods.invalidField',\n        params: { field },\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  protected createCard(\n    paymentDetails: PaymentDetails,\n    cardLabels: {\n      textDefaultPaymentMethod: string;\n      textExpires: string;\n      textUseThisPayment: string;\n      textSelected: string;\n    },\n    selected: PaymentDetails\n  ): Card {\n    return {\n      title: paymentDetails.defaultPayment\n        ? cardLabels.textDefaultPaymentMethod\n        : '',\n      textBold: paymentDetails.accountHolderName,\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\n      img: this.getCardIcon(paymentDetails.cardType.code),\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\n      header:\n        selected?.id === paymentDetails.id\n          ? cardLabels.textSelected\n          : undefined,\n    };\n  }\n\n  goNext(): void {\n    this.routingService.go(this.checkoutStepUrlNext);\n  }\n\n  goPrevious(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodComponent],\n  entryComponents: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { CheckoutService, RoutingService } from '@spartacus/core';\n\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  placeOrderSubscription: Subscription;\n\n  checkoutSubmitForm = this.fb.group({\n    termsAndConditions: [false, Validators.requiredTrue],\n  });\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected routingService: RoutingService,\n    protected fb: FormBuilder\n  ) {}\n\n  submitForm(): void {\n    if (this.checkoutSubmitForm.valid) {\n      this.checkoutService.placeOrder();\n    } else {\n      this.checkoutSubmitForm.markAllAsTouched();\n    }\n  }\n\n  ngOnInit(): void {\n    this.placeOrderSubscription = this.checkoutService\n      .getOrderDetails()\n      .pipe(filter((order) => Object.keys(order).length !== 0))\n      .subscribe(() => {\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.placeOrderSubscription) {\n      this.placeOrderSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PlaceOrderComponent } from './place-order.component';\nimport { FormErrorsModule } from '../../../../shared/index';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  entryComponents: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentDetailsSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.PAYMENT_DETAILS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map((paymentDetails) =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  Cart,\n  ActiveCartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  TranslationService,\n  UserAddressService,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutStepType } from '../../model/index';\nimport { CheckoutConfigService } from '../../services/index';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent implements OnInit {\n  checkoutStepType = CheckoutStepType;\n  entries$: Observable<OrderEntry[]>;\n  cart$: Observable<Cart>;\n  deliveryMode$: Observable<DeliveryMode>;\n  countryName$: Observable<string>;\n  deliveryAddress$: Observable<Address>;\n  paymentDetails$: Observable<PaymentDetails>;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected userAddressService: UserAddressService,\n    protected activeCartService: ActiveCartService,\n    protected translation: TranslationService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected promotionService: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.entries$ = this.activeCartService.getEntries();\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n\n    this.deliveryMode$ = this.checkoutDeliveryService\n      .getSelectedDeliveryMode()\n      .pipe(\n        tap((selected: DeliveryMode) => {\n          if (selected === null) {\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\n          }\n        })\n      );\n\n    this.countryName$ = this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address.country.isocode)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress.country.isocode;\n        }\n\n        let region = '';\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [deliveryMode.description],\n        };\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\n    const step = this.checkoutConfigService.getCheckoutStep(stepType);\n    return step && step.routeName;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\nimport { PromotionsModule } from '../promotions/promotions.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n            PaymentDetailsSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  entryComponents: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CheckoutDeliveryService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  regionsSub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  addressForm: FormGroup = this.fb.group({\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n    defaultAddress: [false],\n  });\n\n  constructor(\n    protected fb: FormBuilder,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    protected modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.userService.getTitles().pipe(\n      tap((titles) => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map((titles) => {\n        titles.sort(sortTitles);\n        const noneTitle = { code: '', name: 'Title' };\n        return [noneTitle, ...titles];\n      })\n    );\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions) => {\n        const regionControl = this.addressForm.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.submitAddress.emit(this.addressForm.value);\n        } else if (results.decision === 'REJECT') {\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n          if (\n            results.errors.errors.some((error) => error.subject === 'titleCode')\n          ) {\n            this.globalMessageService.add(\n              { key: 'addressForm.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          } else {\n            this.globalMessageService.add(\n              { key: 'addressForm.invalidAddress' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\n      this.addressForm.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n  }\n\n  countrySelected(country: Country): void {\n    this.addressForm['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.addressForm['controls'].region['controls'].isocode.setValue(\n      region.isocode\n    );\n  }\n\n  toggleDefaultAddress(): void {\n    this.addressForm['controls'].defaultAddress.setValue(\n      this.addressForm.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.addressForm.valid) {\n      if (this.addressForm.get('region').value.isocode) {\n        this.regionsSub = this.regions$.pipe(take(1)).subscribe((regions) => {\n          const obj = regions.find(\n            (region) =>\n              region.isocode ===\n              this.addressForm.controls['region'].value.isocode\n          );\n          Object.assign(this.addressForm.value.region, {\n            isocodeShort: obj.isocodeShort,\n          });\n        });\n      }\n\n      if (this.addressForm.dirty) {\n        this.checkoutDeliveryService.verifyAddress(this.addressForm.value);\n      } else {\n        // address form value not changed\n        // ignore duplicate address\n        this.submitAddress.emit(undefined);\n      }\n    } else {\n      this.addressForm.markAllAsTouched();\n    }\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.addressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then((address) => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.addressForm.value.titleCode,\n                phone: this.addressForm.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.addressForm.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.checkoutDeliveryService.clearAddressVerificationResults();\n\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n\n    if (this.regionsSub) {\n      this.regionsSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport { FormErrorsModule } from '../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  entryComponents: [SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\n})\nexport class AddressFormModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  RoutingService,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit {\n  existingAddresses$: Observable<Address[]>;\n  newAddressFormManuallyOpened = false;\n  isLoading$: Observable<boolean>;\n  cards$: Observable<CardWithAddress[]>;\n  selectedAddress$: Observable<Address>;\n  forceLoader = false; // this helps with smoother steps transition\n  isGuestCheckout = false;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected routingService: RoutingService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\n    this.existingAddresses$ = this.userAddressService.getAddresses();\n    this.selectedAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n\n    this.cards$ = combineLatest([\n      this.existingAddresses$,\n      this.selectedAddress$,\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          addresses,\n          selected,\n          textDefaultShippingAddress,\n          textShipToThisAddress,\n          textSelected,\n        ]) => {\n          // Select default address if none selected\n          if (\n            addresses.length &&\n            (!selected || Object.keys(selected).length === 0)\n          ) {\n            const defaultAddress = addresses.find(\n              (address) => address.defaultAddress\n            );\n            selected = defaultAddress;\n            this.selectAddress(defaultAddress);\n          }\n          return addresses.map((address) => {\n            const card = this.getCardContent(\n              address,\n              selected,\n              textDefaultShippingAddress,\n              textShipToThisAddress,\n              textSelected\n            );\n            return {\n              address,\n              card,\n            };\n          });\n        }\n      )\n    );\n\n    if (!this.activeCartService.isGuestCart()) {\n      this.userAddressService.loadAddresses();\n    } else {\n      this.isGuestCheckout = true;\n    }\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    };\n  }\n\n  selectAddress(address: Address): void {\n    this.checkoutDeliveryService.setDeliveryAddress(address);\n  }\n\n  addAddress(address: Address): void {\n    const selectedSub = this.selectedAddress$.subscribe((selected) => {\n      if (selected && selected.shippingAddress) {\n        this.goNext();\n        selectedSub.unsubscribe();\n      }\n    });\n\n    this.forceLoader = true;\n\n    this.existingAddresses$.pipe(take(1)).subscribe((addresses) => {\n      addresses.includes(address)\n        ? this.selectAddress(address)\n        : this.checkoutDeliveryService.createAndSetAddress(address);\n    });\n  }\n\n  showNewAddressForm(): void {\n    this.newAddressFormManuallyOpened = true;\n  }\n\n  hideNewAddressForm(goPrevious: boolean = false): void {\n    this.newAddressFormManuallyOpened = false;\n    if (goPrevious) {\n      this.goPrevious();\n    }\n  }\n\n  goNext(): void {\n    this.routingService.go(\n      this.checkoutConfigService.getNextCheckoutStepUrl(this.activatedRoute)\n    );\n  }\n\n  goPrevious(): void {\n    this.routingService.go(\n      this.checkoutConfigService.getPreviousCheckoutStepUrl(\n        this.activatedRoute\n      ) || 'cart'\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\n// tslint:disable-next-line:max-line-length\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { CheckoutDetailsLoadedGuard } from '../../guards/checkout-details-loaded.guard';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            CheckoutDetailsLoadedGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  entryComponents: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotCheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authService.getUserToken().pipe(\n      map((token) => {\n        if (token.access_token) {\n          this.routingService.go({ cxRoute: 'home' });\n        } else if (this.activeCartService.isGuestCart()) {\n          this.routingService.go({ cxRoute: 'cart' });\n          return false;\n        }\n        return !token.access_token;\n      })\n    );\n  }\n}\n","// given that we're likely going to refactor the directives, we're\n// NOT exposing all it to the public API.\nexport * from './focus.directive';\nexport { FocusConfig } from './keyboard-focus.model';\nexport * from './keyboard-focus.module';\nexport * from './services/index';\n\n// export * from './autofocus/index';\n// export * from './base/index';\n// export * from './block/index';\n// export * from './escape/index';\n// export * from './lock/index';\n// export * from './persist/index';\n// export * from './tab/index';\n// export * from './trap/index';\n// export * from './visible/index';\n// export * from './keyboard-focus.model';\n","import { SkipLinkConfig } from './skip-link.config';\n\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\n  skipLinks: [\n    {\n      key: 'cx-header',\n      i18nKey: 'skipLink.labels.header',\n    },\n    {\n      key: 'cx-main',\n      i18nKey: 'skipLink.labels.main',\n    },\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\n  ],\n};\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Directive({\n  selector: '[cxSkipLink]',\n})\nexport class SkipLinkDirective implements OnInit, OnDestroy {\n  @Input() cxSkipLink: string;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected skipLinkService: SkipLinkService\n  ) {}\n\n  ngOnInit(): void {\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.skipLinkService.remove(this.cxSkipLink);\n  }\n}\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService<T = TemplateRef<any>> {\n  private templatesRefs = new Map<string, T[]>();\n  private templatesRefsBefore = new Map<string, T[]>();\n  private templatesRefsAfter = new Map<string, T[]>();\n\n  /**\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\n   * The UI position where this template or ComponentFactory is inserted is given by a\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\n   * is either before or after, or replaces the entire UI.\n   *\n   * @param outlet the UI location represented by a string\n   * @param template the `TemplateRef` that will be used to insert UI\n   * @param position the `OutletPosition` in the UI\n   */\n  add(outlet: string, template: T, position?: OutletPosition): void;\n  /**\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\n   */\n  add(\n    outlet: string,\n    // tslint:disable-next-line: unified-signatures\n    factory: T,\n    position?: OutletPosition\n  ): void;\n  /**\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\n   */\n  add(\n    outlet: string,\n    templateOrFactory: T,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    if (position === OutletPosition.BEFORE) {\n      this.store(this.templatesRefsBefore, outlet, templateOrFactory);\n    }\n    if (position === OutletPosition.REPLACE) {\n      this.store(this.templatesRefs, outlet, templateOrFactory);\n    }\n    if (position === OutletPosition.AFTER) {\n      this.store(this.templatesRefsAfter, outlet, templateOrFactory);\n    }\n  }\n\n  /**\n   *\n   * Returns a single object or multiple objects for the given outlet reference,\n   * depending on the `stacked` argument.\n   *\n   * @param outlet The outlet reference\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\n   * @param stacked Indicates whether an array of outlet components is returned\n   */\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    stacked = AVOID_STACKED_OUTLETS\n  ): T[] | T {\n    let templateRef: T[];\n    switch (position) {\n      case OutletPosition.BEFORE:\n        templateRef = this.templatesRefsBefore.get(outlet);\n        break;\n      case OutletPosition.AFTER:\n        templateRef = this.templatesRefsAfter.get(outlet);\n        break;\n      default:\n        templateRef = this.templatesRefs.get(outlet);\n    }\n    if (templateRef && !stacked) {\n      return templateRef[0];\n    }\n    return templateRef;\n  }\n\n  remove(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    value?: T\n  ): void {\n    switch (position) {\n      case OutletPosition.BEFORE:\n        this.removeValueOrAll(this.templatesRefsBefore, outlet, value);\n        break;\n      case OutletPosition.AFTER:\n        this.removeValueOrAll(this.templatesRefsAfter, outlet, value);\n        break;\n      default:\n        this.removeValueOrAll(this.templatesRefs, outlet, value);\n    }\n  }\n\n  private store(store: Map<string, T[]>, outlet: string, value: T) {\n    const existing = store.get(outlet) || [];\n    const newValue: T[] = existing.concat([value]);\n    store.set(outlet, newValue);\n  }\n\n  protected removeValueOrAll(\n    store: Map<string, T[]>,\n    outlet: string,\n    value?: T\n  ): void {\n    if (!value && store.has(outlet)) {\n      store.delete(outlet);\n    } else if (value && store.has(outlet)) {\n      let existing = store.get(outlet);\n      existing = existing.filter((val) => val === value);\n      store.set(outlet, existing);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\nimport {\n  ConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\nimport { SkipLinkComponent } from './component/skip-link.component';\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\nimport { SkipLinkDirective } from './directive/skip-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(defaultSkipLinkConfig),\n    KeyboardFocusModule,\n  ],\n  declarations: [SkipLinkComponent, SkipLinkDirective],\n  exports: [SkipLinkDirective],\n  entryComponents: [SkipLinkComponent],\n\n  providers: [\n    provideDefaultConfig(defaultSkipLinkConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: skipLinkFactory,\n      deps: [ComponentFactoryResolver, OutletService],\n      multi: true,\n    },\n  ],\n})\nexport class SkipLinkModule {}\n\n/**\n * Adds the skip link component before the cx-storefront.\n */\nexport function skipLinkFactory(\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService\n) {\n  const isReady = () => {\n    const factory = componentFactoryResolver.resolveComponentFactory(\n      SkipLinkComponent\n    );\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\n  };\n  return isReady;\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter((event) => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  exports: [HamburgerMenuComponent],\n  entryComponents: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","import {\n  ComponentFactoryResolver,\n  Injectable,\n  isDevMode,\n  ViewContainerRef,\n} from '@angular/core';\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\n  constructor(protected componentFactoryResolver: ComponentFactoryResolver) {\n    super();\n  }\n\n  /**\n   * Renders the component from the configuration in the view container ref\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchInlineDialog,\n    caller: LAUNCH_CALLER,\n    vcr: ViewContainerRef\n  ) {\n    // Only render if a ViewContainerRef is provided\n    if (vcr && this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n      vcr.createComponent(template);\n      this.renderedCallers.push({ caller, element: vcr.element });\n    } else if (isDevMode()) {\n      if (!vcr) {\n        console.warn(`No view container ref provided for ${caller}`);\n      } else {\n        console.warn(\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\n        );\n      }\n    }\n  }\n\n  hasMatch(config: LaunchInlineDialog) {\n    return Boolean(config.inline);\n  }\n}\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\n\n/**\n * The IntersectionService uses the native IntersectionObserver (v2), which\n * can be used to implement pre-loading and deferred loading of DOM content.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntersectionService {\n  constructor(protected config: LayoutConfig) {}\n\n  /**\n   * Returns an Observable that emits only once a boolean value whenever\n   * the given element has shown in the view port.\n   *\n   * The returned observable will only emit the first value. The\n   * observable must be cleaned up either way, since the value might never emit; it\n   *  depends on whether the element appears in the view port.\n   */\n  isIntersected(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    return this.intersects(element, options).pipe(first((v) => v === true));\n  }\n\n  /**\n   * Indicates whenever the element intersects the view port. An optional margin\n   * is used to intersects before the element shows up in the viewport.\n   * A value is emitted each time the element intersects.\n   *\n   * This is private for now, but could be exposed as a public API\n   * to introduce additional (css) render effects to the UI.\n   */\n  private intersects(\n    element: HTMLElement,\n    options: IntersectionOptions = {}\n  ): Observable<boolean> {\n    const elementVisible$ = new Observable((observer) => {\n      const rootMargin = this.getRootMargin(options);\n      const intersectOptions = { rootMargin, thresholds: options.threshold };\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        observer.next(entries);\n      }, intersectOptions);\n      intersectionObserver.observe(element);\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    }).pipe(\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\n      distinctUntilChanged()\n    );\n\n    return elementVisible$;\n  }\n\n  private getRootMargin(options: IntersectionOptions = {}): string {\n    if (options.rootMargin) {\n      return options.rootMargin;\n    }\n    const layoutConfig = this.config as LayoutConfig;\n    if (\n      layoutConfig.deferredLoading &&\n      layoutConfig.deferredLoading.intersectionMargin\n    ) {\n      return layoutConfig.deferredLoading.intersectionMargin;\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\nimport { IntersectionService } from './intersection.service';\n\n/**\n * The defer loading serivce is used to defer loading of DOM elements\n * until the elements are required for the user experience.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeferLoaderService {\n  globalLoadStrategy: DeferLoadingStrategy;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected config: LayoutConfig,\n    protected intersectionService: IntersectionService\n  ) {\n    this.globalLoadStrategy = config.deferredLoading\n      ? config.deferredLoading.strategy\n      : DeferLoadingStrategy.INSTANT;\n  }\n\n  /**\n   * Defer loading till the element intersects the viewport.\n   *\n   * We evaluate whether we instantly load the element for different reasons:\n   * - we run in SSR mode\n   * - there's no global strategy given\n   * - the global loading strategy is set to INSTANT loading,\n   *   and the loading strategy in the given is not set to DEFER\n   * - the loading strategy in the given options is set to INSTANT\n   */\n  load(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\n      return of(true);\n    } else {\n      return this.intersectionService.isIntersected(element, options);\n    }\n  }\n\n  private shouldLoadInstantly(\n    elementLoadingStrategy: DeferLoadingStrategy\n  ): boolean {\n    return (\n      isPlatformServer(this.platformId) ||\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OutletDirective } from './outlet.directive';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletRendererService {\n  private outletRefs = new Map<string, OutletDirective>();\n\n  render(outlet: string): void {\n    if (this.outletRefs.size !== 0) {\n      this.outletRefs.get(outlet).render();\n    }\n  }\n\n  register(cxOutlet: string, context: OutletDirective): void {\n    this.outletRefs.set(cxOutlet, context);\n  }\n}\n","import {\n  ComponentFactory,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\nimport { OutletRendererService } from './outlet-renderer.service';\nimport { OutletPosition, USE_STACKED_OUTLETS } from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective implements OnDestroy, OnChanges {\n  private renderedTemplate = [];\n\n  @Input() cxOutlet: string;\n\n  @Input() cxOutletContext: any;\n\n  /**\n   * Defers loading options for the the templates of this outlet.\n   */\n  @Input() cxOutletDefer: IntersectionOptions;\n\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\n\n  subscription = new Subscription();\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService<\n      TemplateRef<any> | ComponentFactory<any>\n    >,\n    private deferLoaderService: DeferLoaderService,\n    private outletRendererService?: OutletRendererService\n  ) {}\n\n  public render(): void {\n    this.vcr.clear();\n    this.renderedTemplate = [];\n    this.subscription.unsubscribe();\n    this.subscription = new Subscription();\n    this.outletRendererService.register(this.cxOutlet, this);\n\n    if (this.cxOutletDefer) {\n      this.deferLoading();\n    } else {\n      this.build();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.cxOutlet) {\n      this.render();\n    }\n  }\n\n  private deferLoading(): void {\n    this.loaded.emit(false);\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\n    // Although the deferLoaderService might emit only once, as long as the hostElement\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\n    // the subscription on destroy.\n    this.subscription.add(\n      this.deferLoaderService\n        .load(hostElement, this.cxOutletDefer)\n        .subscribe(() => {\n          this.build();\n          this.loaded.emit(true);\n        })\n    );\n  }\n\n  private build() {\n    this.buildOutlet(OutletPosition.BEFORE);\n    this.buildOutlet(OutletPosition.REPLACE);\n    this.buildOutlet(OutletPosition.AFTER);\n  }\n\n  private buildOutlet(position: OutletPosition): void {\n    let templates: any[] = <any[]>(\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\n    );\n\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\n\n    if (!templates && position === OutletPosition.REPLACE) {\n      templates = [this.templateRef];\n    }\n\n    // Just in case someone extended the `OutletService` and\n    // returns a singular object.\n    if (!Array.isArray(templates)) {\n      templates = [templates];\n    }\n\n    templates.forEach((obj) => {\n      this.create(obj);\n    });\n  }\n\n  private create(tmplOrFactory: any): void {\n    if (tmplOrFactory instanceof ComponentFactory) {\n      this.vcr.createComponent(tmplOrFactory);\n    } else if (tmplOrFactory instanceof TemplateRef) {\n      const view = this.vcr.createEmbeddedView(\n        <TemplateRef<any>>tmplOrFactory,\n        {\n          $implicit: this.cxOutletContext,\n        }\n      );\n\n      // we do not know if content is created dynamically or not\n      // so we apply change detection anyway\n      view.markForCheck();\n    }\n    this.renderedTemplate.push(tmplOrFactory);\n  }\n\n  /**\n   * Returns the closest `HtmlElement`, by iterating over the\n   * parent nodes of the given element.\n   *\n   * We avoid traversing the parent _elements_, as this is blocking\n   * ie11 implementations. One of the spare exclusions we make to not\n   * supporting ie11.\n   *\n   * @param element\n   */\n  private getHostElement(element: Node): HTMLElement {\n    if (element instanceof HTMLElement) {\n      return element;\n    }\n    return this.getHostElement(element.parentNode);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Injectable,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  OutletPosition,\n  OutletService,\n} from '../../../cms-structure/outlet/index';\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    protected outletService: OutletService<ComponentFactory<any>>,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected outletRendererService: OutletRendererService\n  ) {\n    super();\n  }\n\n  /**\n   * Renders the element in the configured outlet\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchOutletDialog,\n    caller: LAUNCH_CALLER,\n    vcr?: ViewContainerRef\n  ) {\n    if (this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n      this.outletService.add(\n        config.outlet,\n        template,\n        config.position ? config.position : OutletPosition.BEFORE\n      );\n      this.outletRendererService.render(config.outlet);\n\n      const element = vcr?.element;\n      this.renderedCallers.push({ caller, element });\n    }\n  }\n\n  hasMatch(config: LaunchOutletDialog) {\n    return Boolean(config.outlet);\n  }\n\n  remove(caller: LAUNCH_CALLER, config: LaunchOutletDialog): void {\n    const template = this.componentFactoryResolver.resolveComponentFactory(\n      config.component\n    );\n    this.renderedCallers = this.renderedCallers.filter(\n      (el) => el.caller === caller\n    );\n\n    this.outletService.remove(\n      config.outlet,\n      config.position ? config.position : OutletPosition.BEFORE,\n      template\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\n  constructor(protected routingService: RoutingService) {\n    super();\n  }\n  /**\n   * Navigates to the route configured for the caller\n   */\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER) {\n    this.routingService.go(config);\n  }\n\n  hasMatch(config: LaunchRoute) {\n    return Boolean(config.cxRoute);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideConfig } from '@spartacus/core';\nimport { DEFAULT_LAUNCH_CONFIG } from './config/default-launch-config';\nimport {\n  InlineRenderStrategy,\n  LaunchRenderStrategy,\n  OutletRenderStrategy,\n  RoutingRenderStrategy,\n} from './services/index';\n\n@NgModule({\n  providers: [\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: OutletRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: InlineRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: RoutingRenderStrategy,\n      multi: true,\n    },\n  ],\n})\nexport class LaunchDialogModule {\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\n    return {\n      ngModule: LaunchDialogModule,\n      providers: [provideConfig(DEFAULT_LAUNCH_CONFIG)],\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { LaunchDialogModule } from './launch-dialog/index';\n\n@NgModule({\n  imports: [OutletRefModule, LaunchDialogModule.forRoot()],\n  exports: [OutletRefModule],\n})\nexport class LayoutModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { CmsComponentsService } from '../../services/cms-components.service';\n\n/**\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\n *\n * The Page slot host element will be supplemented with css classes so that the layout\n * can be fully controlled by customers:\n * - The page slot _position_ is added as a css class by default.\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\n */\n@Component({\n  selector: 'cx-page-slot,[cx-page-slot]',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent implements OnInit, OnDestroy {\n  /**\n   * The position represents the unique key for a page slot on a single page, but can\n   * be reused cross pages.\n   *\n   * The position is used to find the CMS components for the page slot. It is also\n   * added as an additional CSS class so that layoutt can be applied.\n   */\n  @Input() set position(value: string) {\n    this.position$.next(value);\n  }\n  get position(): string {\n    return this.position$.value;\n  }\n\n  /**\n   * Maintains css classes introduced by the host and adds additional classes.\n   */\n  @Input() @HostBinding() class: string;\n\n  /**\n   * Indicates that the page slot is the last page slot above the fold.\n   */\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\n\n  /**\n   * Indicates that the components of the page slot haven't been loaded as long\n   * as the isPending state is true.\n   */\n  @HostBinding('class.cx-pending') isPending = true;\n\n  /**\n   * Indicates that the page slot doesn't contain any components. This is no\n   * longer used in spartacus, but kept for backwards compatibility.\n   */\n  @HostBinding('class.has-components') @Input() hasComponents = false;\n\n  protected position$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  components: ContentSlotComponentData[];\n\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap((position) => this.cmsService.getContentSlot(position)),\n    distinctUntilChanged(this.isDistinct)\n  );\n\n  /** Observes the components for the given page slot. */\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\n    map((slot) => slot?.components ?? [])\n  );\n\n  protected subscription: Subscription = new Subscription();\n\n  /** Keeps track of the pending components that must be loaded for the page slot */\n  private pendingComponentCount = 0;\n\n  /** Tracks the last used position, in case the page slot is used dynamically */\n  private lastPosition: string;\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected elementRef: ElementRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\n        this.components = value?.components || [];\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  protected decorate(slot: ContentSlotData): void {\n    let cls = this.class || '';\n\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\n      cls = cls.replace(this.lastPosition, '');\n    }\n    if (this.position$.value) {\n      cls += ` ${this.position$.value}`;\n      this.lastPosition = this.position$.value;\n    }\n\n    // host bindings\n    this.pending = slot?.components?.length || 0;\n    this.hasComponents = slot?.components?.length > 0;\n    if (cls && cls !== this.class) {\n      this.class = cls;\n    }\n\n    this.addSmartEditSlotClass(slot);\n  }\n\n  /**\n   * Sets the pending count for the page slot components. Once all pending components are\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\n   */\n  protected set pending(count: number) {\n    this.pendingComponentCount = count;\n    this.isPending = this.pendingComponentCount > 0;\n  }\n\n  protected get pending(): number {\n    return this.pendingComponentCount;\n  }\n\n  /*\n   * Is triggered when a component is added to the view. This is used to\n   * update the pending count\n   */\n  isLoaded(loadState: boolean) {\n    if (loadState) {\n      this.pending--;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * The `DeferLoadingStrategy` indicates whether the component should be\n   * rendered instantly or whether it should be deferred.\n   */\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\n    const deferLoading = this.cmsComponentsService.getDeferLoadingStrategy(\n      componentType\n    );\n    return { deferLoading };\n  }\n\n  protected isDistinct(old: ContentSlotData, current: ContentSlotData) {\n    return (\n      current.components &&\n      old.components?.length === current.components.length &&\n      !old.components.find(\n        (el, index) => el.uid !== current.components[index].uid\n      )\n    );\n  }\n\n  private addSmartEditSlotClass(slot: ContentSlotData): void {\n    if (slot) {\n      this.dynamicAttributeService.addDynamicAttributes(\n        this.elementRef.nativeElement,\n        this.renderer,\n        { slotData: slot }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  providers: [],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {}\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable()\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // Prints warn messages for missing layout configs.\n  // The warnings are only printed once per config\n  // to not pollute the console log.\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged((a, b) => {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n\n  /**\n   * Returns an observable with the last page slot above-the-fold\n   * for the given pageTemplate / breakpoint.\n   *\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\n   */\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => {\n        if (!this.config.layoutSlots) {\n          // no layout config available\n          return null;\n        }\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\n        const config = this.getResponsiveSlotConfig(\n          <LayoutSlotConfig>pageTemplateConfig,\n          'pageFold',\n          breakpoint\n        );\n        return config ? config.pageFold : null;\n      })\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      const pageSlots = Object.keys(page.slots);\n      return config.slots.filter((slot) => pageSlots.includes(slot));\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter((page) => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuratoin\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!layoutSlotConfig || !breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // tslint:disable-next-line: no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n  readonly templateName$: Observable<string> = this.pageLayoutService\n    .templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap((section) => (section ? of(section) : this.templateName$)),\n    tap((name) => {\n      this.styleClass = name;\n    })\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap((section) => this.pageLayoutService.getSlots(section))\n  );\n\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\n    switchMap((templateName) =>\n      this.pageLayoutService.getPageFoldSlot(templateName)\n    ),\n    distinctUntilChanged()\n  );\n\n  private currentClass;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private pageLayoutService: PageLayoutService\n  ) {}\n\n  set styleClass(cls: string) {\n    if (this.currentClass) {\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\n    }\n    this.renderer.addClass(this.el.nativeElement, cls);\n    this.currentClass = cls;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageLayoutService } from './page-layout.service';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent],\n  providers: [PageLayoutService],\n  exports: [PageLayoutComponent],\n})\nexport class PageLayoutModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable()\nexport class AddToHomeScreenService {\n  private deferredEvent: any;\n\n  private canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    private config: PWAModuleConfig,\n    private globalMessageService: GlobalMessageService,\n    private winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        (event) => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ServiceWorkerModule.register('/ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultPWAModuleConfig),\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n    AddToHomeScreenService,\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { LanguageService, WindowRef } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n) {\n  const result = () => {\n    languageService.getActive().subscribe((lang) => {\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\n    });\n  };\n  return result;\n}\n","import { Injectable } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  init() {\n    this.pageMetaService\n      .getMeta()\n      .pipe(filter(Boolean))\n      .subscribe((meta: PageMeta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\n  }\n\n  protected set title(title: string) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string) {\n    this.addTag({ name: 'description', content: value });\n  }\n\n  protected set image(imageUrl: string) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[]) {\n    if (value) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  protected addTag(meta: MetaDefinition) {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { SchemaBuilder } from './builders/schema.interface';\nimport { SCHEMA_BUILDER } from './builders/tokens';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StructuredDataFactory {\n  constructor(\n    private scriptBuilder: JsonLdScriptFactory,\n    @Optional()\n    @Inject(SCHEMA_BUILDER)\n    private builders: SchemaBuilder[]\n  ) {}\n\n  build() {\n    this.collectSchemas().subscribe((schema: {}[]) => {\n      this.scriptBuilder.build(schema);\n    });\n  }\n\n  private collectSchemas(): Observable<any[]> {\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\n      return of();\n    }\n    return combineLatest(\n      this.builders.map((builder) => builder.build())\n    ).pipe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  consentGiven = false;\n\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Input()\n  requiredConsents: string[] = [];\n\n  @Input()\n  consent: AnonymousConsent;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.consent) {\n      this.consentGiven = Boolean(\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    } else {\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n          this.consentGiven = false;\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n          this.consentGiven = true;\n        }\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentGiven = !this.consentGiven;\n\n    this.consentChanged.emit({\n      given: this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n\n  isRequired(templateId: string): boolean {\n    return this.requiredConsents.includes(templateId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  AuthService,\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserConsentService,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concat,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  skipWhile,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  requiredConsents: string[] = [];\n\n  constructor(\n    protected userConsentService: UserConsentService,\n    protected globalMessageService: GlobalMessageService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n      this.authService.isUserLoggedIn(),\n      this.allConsentsLoading,\n    ]).pipe(\n      map(\n        ([\n          consentLoading,\n          giveConsentLoading,\n          withdrawConsentLoading,\n          isUserLoggedIn,\n          allConsentsLoading,\n        ]) =>\n          consentLoading ||\n          giveConsentLoading ||\n          withdrawConsentLoading ||\n          !isUserLoggedIn ||\n          allConsentsLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      withLatestFrom(\n        this.anonymousConsentsService.getTemplates(),\n        this.authService.isUserLoggedIn()\n      ),\n      filter(\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\n      ),\n      tap(([templateList, _anonymousTemplates]) => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      }),\n      map(([templateList, anonymousTemplates]) => {\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n            )\n          ) {\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\n          }\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents\n                .consentManagementPage\n            )\n          ) {\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\n          }\n        }\n\n        return templateList;\n      })\n    );\n  }\n\n  private hideAnonymousConsents(\n    templateList: ConsentTemplate[],\n    anonymousTemplates: ConsentTemplate[] = []\n  ): ConsentTemplate[] {\n    let hideTemplateIds: string[] = [];\n\n    if (\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .showAnonymousConsents\n    ) {\n      hideTemplateIds = anonymousTemplates.map((template) => template.id);\n      return this.userConsentService.filterConsentTemplates(\n        templateList,\n        hideTemplateIds\n      );\n    }\n\n    if (\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents.length > 0\n    ) {\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\n        .consentManagementPage.hideConsents;\n    }\n\n    return this.userConsentService.filterConsentTemplates(\n      templateList,\n      hideTemplateIds\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe((success) => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap((withdrawalSuccess) => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe((withdrawalSuccess) =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  rejectAll(templates: ConsentTemplate[] = []): void {\n    const consentsToWithdraw: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n        consentsToWithdraw.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupWithdrawalStream(consentsToWithdraw)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupWithdrawalStream(\n    consentsToWithdraw: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getWithdrawConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const withdraw$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToWithdraw.length) {\n          this.userConsentService.withdrawConsent(\n            consentsToWithdraw[i].currentConsent.code\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = withdraw$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  allowAll(templates: ConsentTemplate[] = []): void {\n    const consentsToGive: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n\n        consentsToGive.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupGiveStream(consentsToGive)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupGiveStream(\n    consentsToGive: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getGiveConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const giveConsent$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToGive.length) {\n          this.userConsentService.giveConsent(\n            consentsToGive[i].id,\n            consentsToGive[i].version\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = giveConsent$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n        template.id\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.allConsentsLoading.unsubscribe();\n\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\n  entryComponents: [ConsentManagementComponent],\n})\nexport class ConsentManagementModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { AnonymousConsentDialogComponent } from './dialog/anonymous-consent-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConsentManagementModule,\n  ],\n  declarations: [AnonymousConsentDialogComponent],\n  entryComponents: [AnonymousConsentDialogComponent],\n  exports: [AnonymousConsentDialogComponent],\n})\nexport class AnonymousConsentsModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  FocusConfig,\n  KeyboardFocusService,\n} from '../a11y/keyboard-focus/index';\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  // required by esc focus\n  @HostBinding('tabindex') tabindex = '0';\n\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\n\n  private keyboardFocusConfig: FocusConfig = {\n    focusOnEscape: true,\n    focusOnDoubleEscape: true,\n  };\n\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    this.keyboardFocusService.handleEscape(\n      this.elementRef.nativeElement,\n      this.keyboardFocusConfig,\n      event\n    );\n  }\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe((val) => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: MouseEvent) {\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FeaturesConfigModule } from '@spartacus/core';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\nimport { AnonymousConsentsModule } from '../../shared/components/anonymous-consents/anonymous-consents.module';\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\nimport { StorefrontComponent } from './storefront.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageSlotModule,\n    AnonymousConsentsModule,\n    FeaturesConfigModule,\n\n    SkipLinkModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class MainModule {}\n","import { Injectable, Injector } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map((guardClass) => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected translation: TranslationService,\n    protected translationChunk: TranslationChunkService\n  ) {}\n\n  loadForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsComponentsService } from './cms-components.service';\n\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\n@Injectable({ providedIn: 'root' })\nexport class CmsRoutesImplService {\n  constructor(\n    private router: Router,\n    private cmsComponentsService: CmsComponentsService\n  ) {}\n\n  private cmsRouteExists(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean {\n    if (this.cmsRouteExists(currentPageLabel)) {\n      return true;\n    }\n\n    const componentRoutes = this.cmsComponentsService.getChildRoutes(\n      componentTypes\n    );\n    if (componentRoutes.length) {\n      if (this.updateRouting(pageContext, currentPageLabel, componentRoutes)) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(\n    pageContext: PageContext,\n    pageLabel: string,\n    routes: Route[]\n  ): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageLabel.startsWith('/') &&\n      pageLabel.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageLabel.substr(1),\n        component: PageLayoutComponent,\n        children: routes,\n        data: {\n          cxCmsRouteContext: {\n            type: pageContext.type,\n            id: pageLabel,\n          },\n        },\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PageContext } from '@spartacus/core';\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\n\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\n// After #7070, this class should be replaced with a real implementation.\n@Injectable({\n  providedIn: 'root',\n  useExisting: CmsRoutesImplService,\n})\nexport abstract class CmsRoutesService {\n  abstract handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  Page,\n  PageContext,\n  PageType,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\nimport { CmsComponentsService } from '../services';\n\n/**\n * Helper service for `CmsPageGuard`\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuardService {\n  constructor(\n    protected semanticPathService: SemanticPathService,\n    protected cmsService: CmsService,\n    protected cmsRoutes: CmsRoutesService,\n    protected cmsI18n: CmsI18nService,\n    protected cmsGuards: CmsGuardsService,\n    protected cmsComponentsService: CmsComponentsService\n  ) {}\n\n  /**\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\n   *\n   * Based on `cmsComponents` config for the components in the page:\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\n   * - If all components' guards emitted true, then the route can be activated\n   * - Then we trigger loading of configured i18n chunks in parallel\n   * - And we register the configured children routes of cms components\n   *\n   * @param pageContext current cms page context\n   * @param pageData cms page data\n   * @param route activated route snapshot\n   * @param state router state snapshot\n   *\n   * @returns boolean observable - whether the route can be activated\n   */\n  canActivatePage(\n    pageContext: PageContext,\n    pageData: Page,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      take(1),\n      switchMap((componentTypes) =>\n        this.cmsComponentsService.determineMappings(componentTypes)\n      ),\n      switchMap((componentTypes) =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url,\n            pageLabel\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  /**\n   * Activates the \"NOT FOUND\" cms page.\n   *\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\n   */\n  canActivateNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\n      switchMap((notFoundPage) => {\n        if (notFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap((notFoundIndex) => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n            }),\n            switchMap((notFoundIndex) =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter((index) => index === notFoundIndex)\n              )\n            ),\n            switchMap(() =>\n              this.canActivatePage(pageContext, notFoundPage, route, state)\n            )\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  ProtectedRoutesGuard,\n  RouteLoadStrategy,\n  RoutingConfigService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\nimport { CmsPageGuardService } from './cms-page-guard.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected cmsService: CmsService,\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\n    protected service: CmsPageGuardService,\n    protected routingConfig: RoutingConfigService\n  ) {}\n\n  /**\n   * Tries to load the CMS page data for the anticipated route and returns:\n   * - `true` - if it can be activated\n   * - `false` - if it cannot be activated\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\n   *\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\n   * based on their configuration (`cmsComponents` config).\n   *\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\n   */\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.protectedRoutesGuard.canActivate(route).pipe(\n      switchMap((canActivate) =>\n        canActivate\n          ? this.routingService.getNextPageContext().pipe(\n              switchMap((pageContext) =>\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\n                  first(),\n                  switchMap((pageData) =>\n                    pageData\n                      ? this.service.canActivatePage(\n                          pageContext,\n                          pageData,\n                          route,\n                          state\n                        )\n                      : this.service.canActivateNotFoundPage(\n                          pageContext,\n                          route,\n                          state\n                        )\n                  )\n                )\n              )\n            )\n          : of(false)\n      )\n    );\n  }\n\n  /**\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\n   */\n  private shouldReload(): boolean {\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\n  }\n}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector) {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: { paths: ['login'], protected: false },\n  register: { paths: ['login/register'], protected: false },\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\n  resetPassword: { paths: ['login/pw/change'], protected: false },\n  logout: { paths: ['logout'] },\n  checkoutLogin: { paths: ['checkout-login'] },\n\n  checkout: { paths: ['checkout'] },\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\n  orderConfirmation: { paths: ['order-confirmation'] },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  orders: {\n    paths: ['my-account/orders'],\n  },\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderGuest: {\n    paths: ['guest/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturn: {\n    paths: ['my-account/order/return/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturnConfirmation: {\n    paths: ['my-account/order/return/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancel: {\n    paths: ['my-account/order/cancel/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancelConfirmation: {\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  returnRequestDetails: {\n    paths: ['my-account/return-request/:returnCode'],\n    paramsMapping: { returnCode: 'rma' },\n  },\n  coupons: { paths: ['my-account/coupons'] },\n  couponClaim: {\n    paths: ['my-account/coupon/claim/:couponCode'],\n    paramsMapping: { couponCode: 'code' },\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function getSuffixUrlMatcher({\n  marker,\n  paramName,\n  precedingParamName,\n}: {\n  marker: string;\n  paramName: string;\n  precedingParamName?: string;\n}) {\n  precedingParamName = precedingParamName || 'param';\n  const matcher = function suffixUrlMatcher(\n    segments: UrlSegment[]\n  ): UrlMatchResult | null {\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n    if (markerIndex === -1 || isMarkerLastSegment) {\n      return null;\n    }\n\n    const paramIndex = markerIndex + 1;\n    const posParams: { [name: string]: UrlSegment } = {\n      [paramName]: segments[paramIndex],\n    };\n\n    for (let i = 0; i < markerIndex; i++) {\n      posParams[`${precedingParamName}${i}`] = segments[i];\n    }\n\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\n  };\n\n  if (isDevMode()) {\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\n  }\n\n  return matcher;\n}\n\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { Injectable } from '@angular/core';\nimport { PageMeta, PageMetaService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaBuilder } from '../schema.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\n  constructor(protected pageMetaService: PageMetaService) {}\n\n  build(): Observable<any> {\n    return this.pageMetaService\n      .getMeta()\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\n  }\n\n  protected collect(pageMeta: PageMeta): any {\n    if (!pageMeta?.breadcrumbs) {\n      return;\n    }\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@id': crumb.link,\n          name: crumb.label,\n        },\n      };\n    });\n\n    if (pageMeta.title) {\n      crumbs.push({\n        '@type': 'ListItem',\n        position: crumbs.length + 1,\n        item: {\n          '@id': pageMeta.title,\n          name: pageMeta.title,\n        },\n      });\n    }\n\n    return {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: crumbs,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product reviews, see https://schema.org/Review.\n * The data includes the aggregated product rating and the individual reviews.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\n  constructor(private reviewService: ProductReviewService) {}\n\n  build(product: Product): Observable<any> {\n    return this.reviewService.getByProductCode(product.code).pipe(\n      filter(Boolean),\n      map((reviews: Review[]) => {\n        return {\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\n          review: reviews.map((review) => this.buildReviews(review)),\n        };\n      })\n    );\n  }\n\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\n    const aggregated: any = {\n      '@type': 'AggregateRating',\n    };\n    if (product.averageRating) {\n      aggregated.ratingValue = product.averageRating;\n    }\n    if (reviews) {\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\n    }\n    return aggregated;\n  }\n\n  private buildReviews(review: Review) {\n    const reviewSchema: any = {\n      '@type': 'review',\n    };\n\n    if (review.principal && review.principal.name) {\n      reviewSchema.author = review.principal.name;\n    }\n    if (review.date) {\n      const date = new Date(review.date);\n      reviewSchema.datePublished = `${date.getFullYear()}-${\n        date.getMonth() + 1\n      }-${date.getDate()}`;\n    }\n    if (review.headline) {\n      reviewSchema.name = review.headline;\n    }\n    if (review.comment) {\n      reviewSchema.description = review.comment;\n    }\n    if (review.rating) {\n      reviewSchema.reviewRating = {\n        '@type': 'Rating',\n        ratingValue: review.rating.toString(),\n      };\n    }\n\n    return reviewSchema;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\n\n/**\n * Adds the minimal structured data for the product, see https://schema.org/product.\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\n * using the `JSONLD_PRODUCT_BUILDER` token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSchemaBuilder implements SchemaBuilder {\n  constructor(\n    private currentProduct: CurrentProductService,\n    @Optional()\n    @Inject(JSONLD_PRODUCT_BUILDER)\n    protected builders: JsonLdBuilder<Product>[]\n  ) {}\n\n  build(): Observable<any> {\n    return this.currentProduct.getProduct().pipe(\n      switchMap((product: Product) => {\n        if (product) {\n          return combineLatest(this.collect(product)).pipe(\n            map((res: {}[]) => Object.assign({}, ...res))\n          );\n        }\n        return of({});\n      })\n    );\n  }\n\n  protected collect(product: Product): Observable<any>[] {\n    if (!product || !product.code) {\n      return [];\n    }\n    const builders = this.builders\n      ? this.builders.map((builder) => builder.build(product))\n      : [];\n    return [\n      of({\n        '@context': 'http://schema.org',\n        '@type': 'Product',\n      }),\n      ...builders,\n    ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<\n    Observable<ContentSlotComponentData>[]\n  > = this.componentData$.pipe(\n    map((data) => data.banners.trim().split(' ')),\n    map((codes) => codes.map((code) => this.cmsService.getComponentData(code)))\n  );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\n  providers: [\n    provideDefaultConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n  ],\n  declarations: [BannerCarouselComponent],\n  entryComponents: [BannerCarouselComponent],\n  exports: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  entryComponents: [BannerComponent],\n  exports: [BannerComponent],\n})\nexport class BannerModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n  entryComponents: [LinkComponent],\n})\nexport class LinkModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParagraphComponent } from './paragraph.component';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n  entryComponents: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  CmsService,\n  CMSTabParagraphContainer,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  activeTabNum = 0;\n\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\n    ComponentWrapperDirective\n  >;\n\n  tabTitleParams: Observable<any>[] = [];\n\n  subscription: Subscription;\n\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    protected cmsService: CmsService,\n    protected winRef: WindowRef\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    distinctUntilChanged((x, y) => x?.components === y?.components),\n    switchMap((data) =>\n      combineLatest(\n        (data?.components ?? '').split(' ').map((component) =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map((tab) => {\n              if (!tab) {\n                return undefined;\n              }\n\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n\n              return {\n                ...tab,\n                title: `${data.uid}.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number): void {\n    this.activeTabNum = tabNum;\n  }\n\n  ngOnInit(): void {\n    this.activeTabNum =\n      this.winRef.nativeWindow.history?.state?.activeTab ?? this.activeTabNum;\n  }\n\n  ngAfterViewInit(): void {\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\n    // In this case, the title parameters are directly pulled from them.\n    // If the sub cms components data does not exist, it should should be loaded first.\n    // In this case, listen to the changes to wait for them to be created.\n    if (this.children.length > 0) {\n      this.getTitleParams(this.children);\n    } else {\n      this.subscription = this.children.changes.subscribe(\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\n          this.getTitleParams(tabComps)\n      );\n    }\n  }\n\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\n    children.forEach((comp) => {\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\n      } else {\n        this.tabTitleParams.push(null);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [TabParagraphContainerComponent],\n  entryComponents: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressBookComponentService {\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  TranslationService,\n  UserAddressService,\n  CheckoutDeliveryService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { AddressBookComponentService } from './address-book.component.service';\nimport { Card } from '../../../shared/components/card';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  cards$: Observable<Card[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n  editCard: string;\n\n  constructor(\n    public service: AddressBookComponentService,\n    protected translation: TranslationService,\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n\n  getCardContent(address: Address) {\n    return combineLatest([\n      this.translation.translate('addressCard.default'),\n      this.translation.translate('addressCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('common.edit'),\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\n    ]).pipe(\n      map(\n        ([\n          defaultText,\n          setAsDefaultText,\n          textDelete,\n          textEdit,\n          textVerifyDeleteMsg,\n        ]) => {\n          let region = '';\n\n          if (address.region && address.region.isocode) {\n            region = address.region.isocode + ', ';\n          }\n\n          const actions: { name: string; event: string }[] = [];\n          if (!address.defaultAddress) {\n            actions.push({ name: setAsDefaultText, event: 'default' });\n          }\n          actions.push({ name: textEdit, event: 'edit' });\n          actions.push({ name: textDelete, event: 'delete' });\n\n          return {\n            textBold: address.firstName + ' ' + address.lastName,\n            text: [\n              address.line1,\n              address.line2,\n              address.town + ', ' + region + address.country.isocode,\n              address.postalCode,\n              address.phone,\n            ],\n            actions: actions,\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\n            deleteMsg: textVerifyDeleteMsg,\n          };\n        }\n      )\n    );\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  deleteAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  setEdit(addressId: string): void {\n    if (this.editCard !== addressId) {\n      this.editCard = addressId;\n    } else {\n      this.deleteAddress(addressId);\n    }\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent],\n  exports: [AddressBookComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          providers: [\n            {\n              provide: AddressBookComponentService,\n              useClass: AddressBookComponentService,\n              deps: [UserAddressService],\n            },\n          ],\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    UserAddressService,\n    AddressBookComponentService,\n  ],\n  entryComponents: [AddressBookComponent],\n})\nexport class AddressBookModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-close-account-modal',\n  templateUrl: './close-account-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private subscription = new Subscription();\n  userToken$: Observable<UserToken>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    protected modalService: ModalService,\n    private userService: UserService,\n    private authService: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private routingService: RoutingService,\n    private translationService: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.userToken$ = this.authService.getUserToken();\n    this.userService.resetRemoveUserProcessState();\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultError()\n        .subscribe((error) => this.onError(error))\n    );\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedSuccessfully')\n        .pipe(first())\n        .subscribe((text) => {\n          this.globalMessageService.add(\n            text,\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        });\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onError(error: boolean): void {\n    if (error) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedFailure')\n        .pipe(first())\n        .subscribe((text) => {\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\n        });\n    }\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  closeAccount() {\n    this.userService.remove();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CloseAccountComponent: {\n          component: CloseAccountComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\n})\nexport class CloseAccountModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.forgotPasswordForm = this.fb.group({\n      userEmail: [\n        '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n    });\n  }\n\n  requestForgotPasswordEmail() {\n    if (this.forgotPasswordForm.valid) {\n      this.userService.requestForgotPasswordEmail(\n        this.forgotPasswordForm.value.userEmail\n      );\n      this.routingService.go({ cxRoute: 'login' });\n    } else {\n      this.forgotPasswordForm.markAllAsTouched();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ForgotPasswordComponent],\n  exports: [ForgotPasswordComponent],\n  entryComponents: [ForgotPasswordComponent],\n})\nexport class ForgotPasswordModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'cx-amend-order-actions',\n  templateUrl: './amend-order-actions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmendOrderActionsComponent {\n  @Input() orderCode: string;\n  @Input() amendOrderForm: FormGroup;\n  @Input() backRoute: string;\n  @Input() forwardRoute: string;\n\n  @HostBinding('class') styles = 'row';\n\n  constructor(protected routingService: RoutingService) {}\n\n  continue(event: Event): void {\n    if (this.amendOrderForm.valid) {\n      this.routingService.go({\n        cxRoute: this.forwardRoute,\n        params: { code: this.orderCode },\n      });\n    } else {\n      this.amendOrderForm.markAllAsTouched();\n      event.stopPropagation();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Order, OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { AmendOrderType } from './amend-order.model';\n\nfunction ValidateQuantityToCancel(control: FormControl) {\n  if (!control.value) {\n    return null;\n  }\n  const quantity = Object.values(control.value).reduce(\n    (acc: number, val: number) => acc + val,\n    0\n  );\n  return quantity > 0 ? null : { cxNoSelectedItemToCancel: true };\n}\n\n@Injectable()\nexport abstract class OrderAmendService {\n  protected amendType: AmendOrderType;\n  protected form: FormGroup;\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  /**\n   * Returns entries for the given order.\n   */\n  abstract getEntries(): Observable<OrderEntry[]>;\n\n  /**\n   * Returns entries with an amended quantity.\n   */\n  getAmendedEntries(): Observable<OrderEntry[]> {\n    return this.getForm().pipe(\n      switchMap((form) => {\n        return this.getEntries().pipe(\n          map((entries) =>\n            entries.filter(\n              (entry) => this.getFormControl(form, entry).value > 0\n            )\n          )\n        );\n      })\n    );\n  }\n\n  /**\n   * Submits the amended order.\n   */\n  abstract save(): void;\n\n  getOrder(): Observable<Order> {\n    return this.orderDetailsService.getOrderDetails();\n  }\n\n  /**\n   * returns the form with form data at runtime\n   */\n  getForm(): Observable<FormGroup> {\n    return this.getOrder().pipe(\n      tap((order) => {\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\n          this.buildForm(order);\n        }\n      }),\n      map(() => this.form)\n    );\n  }\n\n  private buildForm(order: Order): void {\n    this.form = new FormGroup({});\n    this.form.addControl('orderCode', new FormControl(order.code));\n\n    const entryGroup = new FormGroup(\n      {},\n      { validators: [ValidateQuantityToCancel] }\n    );\n    this.form.addControl('entries', entryGroup);\n\n    (order.entries || []).forEach((entry) => {\n      const key = entry.entryNumber.toString();\n      entryGroup.addControl(\n        key,\n        new FormControl(0, {\n          validators: [\n            Validators.min(0),\n            Validators.max(this.getMaxAmendQuantity(entry)),\n          ],\n        })\n      );\n    });\n  }\n\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\n  }\n\n  /**\n   * As discussed, this calculation is moved to SPA side.\n   * The calculation and validation should be in backend facade layer.\n   */\n  getAmendedPrice(entry: OrderEntry): Price {\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\n    const amendedPrice = Object.assign({}, entry.basePrice);\n    amendedPrice.value =\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\n\n    amendedPrice.formattedValue = formatCurrency(\n      amendedPrice.value,\n      // TODO: user current language\n      'en',\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\n      amendedPrice.currencyIso\n    );\n\n    return amendedPrice;\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return (\n      (this.isCancellation()\n        ? entry.cancellableQuantity\n        : entry.returnableQuantity) || entry.quantity\n    );\n  }\n\n  isCancellation() {\n    return this.amendType === AmendOrderType.CANCEL;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Component({\n  selector: 'cx-amend-order-items',\n  templateUrl: './amend-order-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrReturnItemsComponent {\n  @Input() entries: OrderEntry[];\n  @Input() isConfirmation = false;\n\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\n    const control = <FormControl>(\n      form.get('entries').get(entry.entryNumber.toString())\n    );\n    return control;\n  }\n\n  setAll(form: FormGroup): void {\n    this.entries.forEach((entry) =>\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\n    );\n  }\n\n  getItemPrice(entry: OrderEntry): Price {\n    return this.orderAmendService.getAmendedPrice(entry);\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return this.orderAmendService.getMaxAmendQuantity(entry);\n  }\n\n  isCancellation() {\n    return this.orderAmendService.isCancellation();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  ItemCounterModule,\n  MediaModule,\n} from '../../../../../shared/index';\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  declarations: [CancelOrReturnItemsComponent],\n  exports: [CancelOrReturnItemsComponent],\n  entryComponents: [CancelOrReturnItemsComponent],\n})\nexport class AmendOrderItemsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order-confirmation',\n  templateUrl: './cancel-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup) {\n    if (form.valid) {\n      this.orderAmendService.save();\n    } else {\n      form.markAllAsTouched();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  RoutingService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationService extends OrderAmendService {\n  amendType = AmendOrderType.CANCEL;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected userOrderService: UserOrderService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n  /**\n   * Return cancellable order entries.\n   */\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order?.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.userOrderService.cancelOrder(orderCode, {\n      cancellationRequestEntryInputs: inputs,\n    });\n\n    this.userOrderService\n      .getCancelOrderSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave(orderCode));\n  }\n\n  private afterSave(orderCode: string): void {\n    this.userOrderService.resetCancelOrderProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\n        params: { orderCode },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routing.go({\n      cxRoute: 'orders',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderCancellationService } from './order-cancellation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderCancellationService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancelConfirmation',\n        },\n      },\n    ]),\n    ReactiveFormsModule,\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderConfirmationComponent: {\n          component: CancelOrderConfirmationComponent,\n          guards: [AuthGuard, OrderCancellationGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderConfirmationComponent],\n  exports: [CancelOrderConfirmationComponent],\n  entryComponents: [CancelOrderConfirmationComponent],\n})\nexport class CancelOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order',\n  templateUrl: './cancel-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport {\n  CmsPageGuard,\n  PageLayoutComponent,\n} from '../../../../../../cms-structure/index';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderComponent } from './cancel-order.component';\nimport { FormErrorsModule } from '../../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancel',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderComponent: {\n          component: CancelOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderComponent],\n  exports: [CancelOrderComponent],\n  entryComponents: [CancelOrderComponent],\n})\nexport class CancelOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  OrderReturnRequestService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnService extends OrderAmendService {\n  amendType = AmendOrderType.RETURN;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.returnableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.returnRequestService.createOrderReturnRequest({\n      orderCode,\n      returnRequestEntryInputs: inputs,\n    });\n\n    this.returnRequestService\n      .getReturnRequestSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave());\n  }\n\n  private afterSave(): void {\n    this.returnRequestService\n      .getOrderReturnRequest()\n      .pipe(first((r) => !!r))\n      .subscribe((returnRequest) => {\n        const rma = returnRequest.rma;\n        this.globalMessageService.add(\n          {\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\n            params: { rma },\n          },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n        this.routing.go({\n          cxRoute: 'returnRequestDetails',\n          params: { rma },\n        });\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderReturnService } from './order-return.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderReturnService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order-confirmation',\n  templateUrl: './return-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnGuard } from '../order-return.guard';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturnConfirmation',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderConfirmationComponent: {\n          component: ReturnOrderConfirmationComponent,\n          guards: [AuthGuard, OrderReturnGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderConfirmationComponent],\n  exports: [ReturnOrderConfirmationComponent],\n  entryComponents: [ReturnOrderConfirmationComponent],\n})\nexport class ReturnOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order',\n  templateUrl: './return-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderComponent } from './return-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturn',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderComponent: {\n          component: ReturnOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderComponent],\n  exports: [ReturnOrderComponent],\n  entryComponents: [ReturnOrderComponent],\n})\nexport class ReturnOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\nimport { OrderDetailsService } from '../order-details.service';\nimport {\n  cancelledValues,\n  completedValues,\n} from './order-consigned-entries/order-consigned-entries.model';\n\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected promotionService: PromotionService\n  ) {}\n\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n  orderPromotions$: Observable<PromotionResult[]>;\n  others$: Observable<Consignment[]>;\n  completed$: Observable<Consignment[]>;\n  cancel$: Observable<Consignment[]>;\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\n    this.completed$ = this.getExactStatus(completedValues);\n    this.cancel$ = this.getExactStatus(cancelledValues);\n  }\n\n  private getExactStatus(\n    consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter((consignment) =>\n            consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n\n  private getOtherStatus(\n    ...consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(\n            (consignment) => !consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-consigned-entries',\n  templateUrl: './order-consigned-entries.component.html',\n})\nexport class OrderConsignedEntriesComponent {\n  @Input() consignments: Consignment[];\n  @Input() order: Order;\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach((element) => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${address.postalCode}`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\n\nconst moduleComponents = [\n  OrderDetailActionsComponent,\n  OrderDetailHeadlineComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n  TrackingEventsComponent,\n  ConsignmentTrackingComponent,\n  OrderConsignedEntriesComponent,\n];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    PromotionsModule,\n    UrlModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\n      },\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        AccountOrderDetailsActionsComponent: {\n          component: OrderDetailActionsComponent,\n        },\n        AccountOrderDetailsHeadlineComponent: {\n          component: OrderDetailHeadlineComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n      features: {\n        consignmentTracking: '1.2',\n      },\n    }),\n    OrderDetailsService,\n  ],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderHistoryComponent implements OnDestroy {\n  constructor(\n    private routing: RoutingService,\n    private userOrderService: UserOrderService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  orders$: Observable<\n    OrderHistoryList\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\n    tap((orders: OrderHistoryList) => {\n      if (orders.pagination) {\n        this.sortType = orders.pagination.sort;\n      }\n    })\n  );\n\n  isLoaded$: Observable<\n    boolean\n  > = this.userOrderService.getOrderHistoryListLoaded();\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\n    map((order) => order.pagination.totalResults),\n    filter((totalResults) => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { OrderHistoryComponent } from './order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orders' },\n      },\n    ]),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  entryComponents: [OrderHistoryComponent],\n})\nexport class OrderHistoryModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-overview',\n  templateUrl: './return-request-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  rma: string;\n  subscription: Subscription;\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService\n    .getReturnRequest()\n    .pipe(tap((returnRequest) => (this.rma = returnRequest.rma)));\n\n  isCancelling$ = this.returnRequestService.isCancelling$;\n\n  ngOnInit(): void {\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\n      (success) => {\n        if (success) {\n          this.returnRequestService.cancelSuccess(this.rma);\n        }\n      }\n    );\n  }\n\n  cancelReturn(returnRequestCode: string): void {\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\n  }\n\n  back(): void {\n    this.returnRequestService.backToList();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { MediaModule } from '../../../../shared/index';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\n\nconst components = [\n  ReturnRequestOverviewComponent,\n  ReturnRequestItemsComponent,\n  ReturnRequestTotalsComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'returnRequestDetails' },\n      },\n    ]),\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    MediaModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnRequestOverviewComponent: {\n          component: ReturnRequestOverviewComponent,\n        },\n        ReturnRequestItemsComponent: {\n          component: ReturnRequestItemsComponent,\n        },\n        ReturnRequestTotalsComponent: {\n          component: ReturnRequestTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [...components],\n  exports: [...components],\n  entryComponents: [...components],\n})\nexport class ReturnRequestDetailModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  ReturnRequestList,\n  OrderReturnRequestService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { tap, map, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-return-request-list',\n  templateUrl: './order-return-request-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderReturnRequestListComponent implements OnDestroy {\n  constructor(\n    private returnRequestService: OrderReturnRequestService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  returnRequests$: Observable<\n    ReturnRequestList\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\n    tap((requestList: ReturnRequestList) => {\n      if (requestList.pagination) {\n        this.sortType = requestList.pagination.sort;\n      }\n    })\n  );\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\n    map((returnRequests) => returnRequests.pagination.totalResults),\n    filter((totalResults) => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.returnRequestService.clearOrderReturnRequestList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReturnRequests(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReturnRequests(event);\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.rma'),\n    ]).pipe(\n      map(([textByDate, textByRma]) => {\n        return {\n          byDate: textByDate,\n          byRMA: textByRma,\n        };\n      })\n    );\n  }\n\n  private fetchReturnRequests(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.returnRequestService.loadOrderReturnRequestList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderReturnRequestListComponent: {\n          component: OrderReturnRequestListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [OrderReturnRequestListComponent],\n  exports: [OrderReturnRequestListComponent],\n  entryComponents: [OrderReturnRequestListComponent],\n})\nexport class ReturnRequestListModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  iconTypes = ICON_TYPE;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap((paymentDetails) => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n    cardType,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n            img: this.getCardIcon(cardType.code),\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n\n  getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n  entryComponents: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n})\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\n  token: string;\n  subscription = new Subscription();\n\n  resetPasswordForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      repassword: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'repassword'\n      ),\n    }\n  );\n\n  constructor(\n    private fb: FormBuilder,\n    private routingService: RoutingService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.routingService\n        .getRouterState()\n        .subscribe((state) => (this.token = state.state.queryParams['token']))\n    );\n\n    this.subscription.add(\n      this.userService.isPasswordReset().subscribe((reset) => {\n        if (reset) {\n          this.routingService.go({ cxRoute: 'login' });\n        }\n      })\n    );\n  }\n\n  resetPassword() {\n    if (this.resetPasswordForm.valid) {\n      const password = this.resetPasswordForm.get('password').value;\n      this.userService.resetPassword(this.token, password);\n    } else {\n      this.resetPasswordForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ResetPasswordComponent: {\n          component: ResetPasswordFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ResetPasswordFormComponent],\n  exports: [ResetPasswordFormComponent],\n  entryComponents: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-update-email-form',\n  templateUrl: './update-email-form.component.html',\n})\nexport class UpdateEmailFormComponent {\n  @Output()\n  saveEmail = new EventEmitter<{\n    newUid: string;\n    password: string;\n  }>();\n\n  @Output()\n  cancelEmail = new EventEmitter<void>();\n\n  updateEmailForm: FormGroup = this.fb.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      confirmEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch('email', 'confirmEmail'),\n    }\n  );\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit(): void {\n    if (this.updateEmailForm.valid) {\n      const newUid = this.updateEmailForm.get('confirmEmail').value;\n      const password = this.updateEmailForm.get('password').value;\n\n      this.saveEmail.emit({ newUid, password });\n    } else {\n      this.updateEmailForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelEmail.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-email',\n  templateUrl: './update-email.component.html',\n})\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\n  constructor(\n    private routingService: RoutingService,\n    private globalMessageService: GlobalMessageService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  private subscription = new Subscription();\n  private newUid: string;\n  isLoading$: Observable<boolean>;\n\n  ngOnInit() {\n    this.userService.resetUpdateEmailResultState();\n    this.subscription.add(\n      this.userService\n        .getUpdateEmailResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\n    this.newUid = newUid;\n    this.userService.updateEmail(password, newUid);\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        {\n          key: 'updateEmailForm.emailUpdateSuccess',\n          params: { newUid: this.newUid },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.authService.logout();\n      this.routingService.go({ cxRoute: 'login' }, null, {\n        state: {\n          newUid: this.newUid,\n        },\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetUpdateEmailResultState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\nimport { UpdateEmailComponent } from './update-email.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          component: UpdateEmailComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\n  entryComponents: [UpdateEmailComponent],\n})\nexport class UpdateEmailModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-update-password-form',\n  templateUrl: './update-password-form.component.html',\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n  updatePasswordForm: FormGroup;\n\n  @Output()\n  submitted = new EventEmitter<{ oldPassword: string; newPassword: string }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.updatePasswordForm = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, CustomFormValidators.passwordValidator],\n        ],\n        newPasswordConfirm: ['', [Validators.required]],\n      },\n      {\n        validators: CustomFormValidators.passwordsMustMatch(\n          'newPassword',\n          'newPasswordConfirm'\n        ),\n      }\n    );\n  }\n\n  onSubmit(): void {\n    if (this.updatePasswordForm.valid) {\n      this.submitted.emit({\n        oldPassword: this.updatePasswordForm.value.oldPassword,\n        newPassword: this.updatePasswordForm.value.newPassword,\n      });\n    } else {\n      this.updatePasswordForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-password',\n  templateUrl: './update-password.component.html',\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.resetUpdatePasswordProcessState();\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\n    this.subscription.add(\n      this.userService\n        .getUpdatePasswordResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({\n    oldPassword,\n    newPassword,\n  }: {\n    oldPassword: string;\n    newPassword: string;\n  }): void {\n    this.userService.updatePassword(oldPassword, newPassword);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    this.userService.resetUpdatePasswordProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          component: UpdatePasswordComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  entryComponents: [UpdatePasswordComponent],\n})\nexport class UpdatePasswordModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Title, User } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n})\nexport class UpdateProfileFormComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Input()\n  titles: Title[];\n\n  @Output()\n  submitted = new EventEmitter<{ userUpdates: User }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  updateProfileForm = this.fb.group({\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    if (this.user) {\n      this.updateProfileForm.patchValue(this.user);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.updateProfileForm.valid) {\n      this.submitted.emit({\n        userUpdates: { ...this.updateProfileForm.value },\n      });\n    } else {\n      this.updateProfileForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-update-profile',\n  templateUrl: './update-profile.component.html',\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  titles$: Observable<Title[]>;\n  user$: Observable<User>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    // reset the previous form processing state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n\n    this.user$ = this.userService.get();\n    this.titles$ = this.userService.getTitles().pipe(\n      tap((titles) => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\n\n    this.subscription.add(\n      this.userService\n        .getUpdatePersonalDetailsResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updateProfileForm.profileUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\n    this.userService.updatePersonalDetails(userUpdates);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    // clean up the state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\nimport { UpdateProfileComponent } from './update-profile.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          component: UpdateProfileComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\n  entryComponents: [UpdateProfileComponent],\n})\nexport class UpdateProfileModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CustomerCoupon,\n  RoutingService,\n  TranslationService,\n} from '@spartacus/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyCouponsComponentService {\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  protected readonly RELEVANCE = ':relevance';\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected translation: TranslationService\n  ) {}\n\n  launchSearchPage(coupon: CustomerCoupon): void {\n    this.routingService.go(\n      {\n        cxRoute: 'search',\n        params: { query: this.buildSearchParam(coupon) },\n      },\n      { couponcode: coupon.couponId }\n    );\n  }\n\n  private buildSearchParam(coupon: CustomerCoupon): string {\n    return coupon.allProductsApplicable\n      ? this.RELEVANCE\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\n  }\n\n  getSortLabels(): Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('myCoupons.startDateAsc'),\n      this.translation.translate('myCoupons.startDateDesc'),\n      this.translation.translate('myCoupons.endDateAsc'),\n      this.translation.translate('myCoupons.endDateDesc'),\n    ]).pipe(\n      map(\n        ([\n          textByStartDateAsc,\n          textByStartDateDesc,\n          textByEndDateAsc,\n          textByEndDateDesc,\n        ]) => {\n          return {\n            byStartDateAsc: textByStartDateAsc,\n            byStartDateDesc: textByStartDateDesc,\n            byEndDateAsc: textByEndDateAsc,\n            byEndDateDesc: textByEndDateDesc,\n          };\n        }\n      )\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n  PaginationModel,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { MyCouponsComponentService } from './my-coupons.component.service';\n\n@Component({\n  selector: 'cx-my-coupons',\n  templateUrl: './my-coupons.component.html',\n})\nexport class MyCouponsComponent implements OnInit, OnDestroy {\n  couponResult$: Observable<CustomerCouponSearchResult>;\n  couponsLoading$: Observable<boolean>;\n  couponSubscriptionLoading$: Observable<boolean>;\n\n  iconTypes = ICON_TYPE;\n\n  private subscriptions = new Subscription();\n\n  private PAGE_SIZE = 10;\n  private sortMapping = {\n    byStartDateAsc: 'startDate:asc',\n    byStartDateDesc: 'startDate:desc',\n    byEndDateAsc: 'endDate:asc',\n    byEndDateDesc: 'endDate:desc',\n  };\n  sort = 'byStartDateAsc';\n\n  sortOptions = [\n    {\n      code: 'byStartDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byStartDateDesc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateDesc',\n      selected: false,\n    },\n  ];\n\n  pagination: PaginationModel;\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.couponResult$ = this.couponService\n      .getCustomerCoupons(this.PAGE_SIZE)\n      .pipe(\n        tap(\n          (coupons) =>\n            (this.pagination = {\n              currentPage: coupons.pagination.page,\n              pageSize: coupons.pagination.count,\n              totalPages: coupons.pagination.totalPages,\n              totalResults: coupons.pagination.totalCount,\n              sort: this.sort,\n            })\n        )\n      );\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\n    this.couponSubscriptionLoading$ = combineLatest([\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\n    ]).pipe(\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\n    );\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\n\n    this.subscriptions\n      .add(\n        this.couponService\n          .getSubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      )\n      .add(\n        this.couponService\n          .getUnsubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      );\n  }\n\n  private subscriptionFail(error: boolean) {\n    if (error) {\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    }\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      this.pagination.currentPage,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  notificationChange({\n    couponId,\n    notification,\n  }: {\n    couponId: string;\n    notification: boolean;\n  }): void {\n    if (notification) {\n      this.couponService.subscribeCustomerCoupon(couponId);\n    } else {\n      this.couponService.unsubscribeCustomerCoupon(couponId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { CustomerCoupon } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-coupon-dialog',\n  templateUrl: './coupon-dialog.component.html',\n})\nexport class CouponDialogComponent {\n  iconTypes = ICON_TYPE;\n  coupon: CustomerCoupon;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  constructor(protected modalService: ModalService) {}\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  RoutingService,\n  CustomerCouponService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './coupon-claim.component.html',\n  selector: 'cx-coupon-claim',\n})\nexport class CouponClaimComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected routingService: RoutingService,\n    protected messageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService\n      .getRouterState()\n      .subscribe((k) => {\n        const couponCode = k.state.params.couponCode;\n        if (couponCode) {\n          this.couponService.claimCustomerCoupon(couponCode);\n          this.subscription = this.couponService\n            .getClaimCustomerCouponResultSuccess()\n            .subscribe((success) => {\n              if (success) {\n                this.messageService.add(\n                  { key: 'myCoupons.claimCustomerCoupon' },\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\n                );\n              }\n              this.routingService.go({ cxRoute: 'coupons' });\n            });\n        } else {\n          this.routingService.go({ cxRoute: 'notFound' });\n        }\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyCouponsComponent } from './my-coupons.component';\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\n\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { IconModule } from '../../misc/icon/icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    IconModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'couponClaim' },\n      },\n    ]),\n  ],\n  declarations: [\n    MyCouponsComponent,\n    CouponCardComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyCouponsComponent: {\n          component: MyCouponsComponent,\n          guards: [AuthGuard],\n        },\n        CouponClaimComponent: {\n          component: CouponClaimComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyCouponsComponent, CouponClaimComponent],\n  entryComponents: [\n    MyCouponsComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n})\nexport class MyCouponsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  NotificationPreference,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-notification-preference',\n  templateUrl: './notification-preference.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPreferenceComponent implements OnInit {\n  preferences$: Observable<NotificationPreference[]>;\n  isLoading$: Observable<boolean>;\n\n  protected preferences: NotificationPreference[] = [];\n\n  constructor(\n    private notificationPreferenceService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.notificationPreferenceService.resetNotificationPreferences();\n    this.preferences$ = this.notificationPreferenceService\n      .getPreferences()\n      .pipe(tap((preferences) => (this.preferences = preferences)));\n    this.notificationPreferenceService.loadPreferences();\n\n    this.isLoading$ = combineLatest([\n      this.notificationPreferenceService.getPreferencesLoading(),\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\n    ]).pipe(\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\n    );\n  }\n\n  updatePreference(preference: NotificationPreference) {\n    const updatedPreferences = [];\n    this.preferences.forEach((p) => {\n      if (p.channel === preference.channel) {\n        updatedPreferences.push({\n          ...p,\n          enabled: !p.enabled,\n        });\n      } else {\n        updatedPreferences.push(p);\n      }\n    });\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { NotificationPreferenceComponent } from './notification-preference.component';\n\n@NgModule({\n  declarations: [NotificationPreferenceComponent],\n  imports: [CommonModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NotificationPreferenceComponent: {\n          component: NotificationPreferenceComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [NotificationPreferenceComponent],\n  entryComponents: [NotificationPreferenceComponent],\n})\nexport class NotificationPreferenceModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  PaginationModel,\n  Product,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n  ProductScope,\n  ProductService,\n  TranslationService,\n  UserInterestsService,\n} from '@spartacus/core';\nimport { map, tap } from 'rxjs/operators';\n\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\n  results?: (ProductInterestEntryRelation & {\n    product$?: Observable<Product>;\n  })[];\n}\n\n@Component({\n  selector: 'cx-my-interests',\n  templateUrl: './my-interests.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyInterestsComponent implements OnInit, OnDestroy {\n  private DEFAULT_PAGE_SIZE = 10;\n  private sortMapping = {\n    byNameAsc: 'name:asc',\n    byNameDesc: 'name:desc',\n  };\n\n  sort = 'byNameAsc';\n  sortOptions = [\n    {\n      code: 'byNameAsc',\n      selected: false,\n    },\n    {\n      code: 'byNameDesc',\n      selected: false,\n    },\n  ];\n  pagination: PaginationModel;\n\n  interests$: Observable<ProductInterestSearchResultUI>;\n  isRemoveDisabled$: Observable<boolean>;\n  getInterestsloading$: Observable<boolean>;\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\n\n  constructor(\n    private productInterestService: UserInterestsService,\n    private translationService: TranslationService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.interests$ = this.productInterestService\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\n      .pipe(\n        tap(\n          (interests) =>\n            (this.pagination = {\n              currentPage: interests.pagination.page,\n              pageSize: interests.pagination.count,\n              totalPages: interests.pagination.totalPages,\n              totalResults: interests.pagination.totalCount,\n              sort: 'byNameAsc',\n            })\n        ),\n        map((interest) => ({\n          ...interest,\n          results: interest.results\n            ? interest.results.map((result) => ({\n                ...result,\n                product$: this.getProduct(result),\n              }))\n            : interest.results,\n        }))\n      );\n\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\n    this.isRemoveDisabled$ = combineLatest([\n      this.getInterestsloading$,\n      this.productInterestService.getRemoveProdutInterestLoading(),\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\n\n    this.sortLabels = this.getSortLabels();\n  }\n\n  private getSortLabels(): Observable<{\n    byNameAsc: string;\n    byNameDesc: string;\n  }> {\n    return combineLatest([\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\n    ]).pipe(\n      map(([asc, desc]) => {\n        return {\n          byNameAsc: asc,\n          byNameDesc: desc,\n        };\n      })\n    );\n  }\n\n  private getProduct(\n    interest: ProductInterestEntryRelation\n  ): Observable<Product> {\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\n  }\n\n  removeInterest(\n    relation: ProductInterestEntryRelation & {\n      product$?: Observable<Product>;\n    }\n  ): void {\n    this.productInterestService.removeProdutInterest({\n      product: relation.product,\n      productInterestEntry: relation.productInterestEntry,\n    });\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      0,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.productInterestService.clearProductInterests();\n    this.productInterestService.resetRemoveInterestState();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { MyInterestsComponent } from './my-interests.component';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\n\n@NgModule({\n  declarations: [MyInterestsComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    RouterModule,\n    ListNavigationModule,\n    I18nModule,\n    UrlModule,\n    MediaModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyInterestsComponent: {\n          component: MyInterestsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyInterestsComponent],\n  entryComponents: [MyInterestsComponent],\n})\nexport class MyInterestsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMeta,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { asyncScheduler, combineLatest, Observable } from 'rxjs';\nimport { filter, map, observeOn } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent implements OnInit {\n  title$: Observable<string>;\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n    this.setCrumbs();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(Boolean),\n      map((meta: PageMeta) => meta.heading || meta.title)\n    );\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home').pipe(observeOn(asyncScheduler)),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  CmsPageTitleModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, CmsPageTitleModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BreadcrumbComponent],\n  exports: [BreadcrumbComponent],\n  entryComponents: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return data\n          ? {\n              title: data.name,\n              children: [nav],\n            }\n          : undefined;\n      })\n    );\n  }\n\n  /**\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n   * This function will load the navigation underlying entries and childs if they haven't been\n   * loaded so far.\n   */\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter((data) => !!data),\n      switchMap((data) => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap((items) => {\n            if (items === undefined) {\n              this.loadNavigationEntryItems(navigation, true);\n            } else {\n              // we should check whether the existing node items are what expected\n              const expectedItems = [];\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\n              const existingItems = Object.keys(items).map(\n                (key) => items[key].uid\n              );\n              const missingItems = expectedItems.filter(\n                (it) => !existingItems.includes(it.id)\n              );\n              if (missingItems.length > 0) {\n                this.cmsService.loadNavigationItems(\n                  navigation.uid,\n                  missingItems\n                );\n              }\n            }\n          }),\n          filter(Boolean),\n          map((items) => this.populateNavigationNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private loadNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ): void {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach((entry) => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      nodeData.children.forEach((child) =>\n        this.loadNavigationEntryItems(child, false, itemsList)\n      );\n    }\n\n    if (root) {\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for the view\n   * @param nodeData\n   * @param items\n   */\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    if (nodeData.title) {\n      // the node title will be populated by the first entry (if any)\n      // if there's no nodeData.title available\n      node.title = nodeData.title;\n    }\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.populateLink(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      const children = nodeData.children\n        .map((child) => this.populateNavigationNode(child, items))\n        .filter(Boolean);\n      if (children.length > 0) {\n        node.children = children;\n      }\n    }\n\n    // return null in case there are no children\n    return Object.keys(node).length === 0 ? null : node;\n  }\n\n  /**\n   * The node link is driven by the first entry.\n   */\n  private populateLink(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (item && entry.itemType === 'CMSLinkComponent') {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n      const url = this.getLink(item);\n      // only populate the node link if we have a visible node\n      if (node.title && url) {\n        node.url = url;\n        // the backend provide boolean value for the target\n        // in case the link should be opened in a new window\n        node.target = !!item.target ? '_blank' : '';\n      }\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category)\n   */\n  private getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navigation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event) => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  toggleOpen(event: UIEvent): void {\n    if (event.type === 'keydown') {\n      event.preventDefault();\n    }\n    const node = <HTMLElement>event.currentTarget;\n    if (this.openNodes.includes(node)) {\n      if (event.type === 'keydown') {\n        this.back();\n      } else {\n        this.openNodes = this.openNodes.filter((n) => n !== node);\n        this.renderer.removeClass(node, 'is-open');\n      }\n    } else {\n      this.openNodes.push(node);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    if (this.openNodes[this.openNodes.length - 1]) {\n      this.renderer.removeClass(\n        this.openNodes[this.openNodes.length - 1],\n        'is-open'\n      );\n      this.openNodes.pop();\n      this.updateClasses();\n    }\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getTotalDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\n      );\n    } else {\n      return depth;\n    }\n  }\n\n  getColumnCount(length: number): number {\n    return Math.round(length / (this.wrapAfter || length));\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\n      target.parentElement.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\n    const body = <HTMLElement>node.closest('body');\n    if (wrapper) {\n      this.renderer.removeStyle(wrapper, 'margin-left');\n      if (\n        wrapper.offsetLeft + wrapper.offsetWidth >\n        body.offsetLeft + body.offsetWidth\n      ) {\n        this.renderer.setStyle(\n          wrapper,\n          'margin-left',\n          `${node.offsetWidth - wrapper.offsetWidth}px`\n        );\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter((node) => node.tagName === 'NAV')\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  entryComponents: [NavigationComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, NavigationModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  entryComponents: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [FooterNavigationComponent],\n  entryComponents: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap((results) =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  private hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  private getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map((res) => res.map((suggestion) => suggestion.value)),\n        switchMap((suggestions) => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map((match) => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap((productResult) => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          suggestions &&\n          suggestions.length === 0\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  public launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent {\n  config: SearchBoxConfig;\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n\n  /**\n   * The component data is optional, so that this component\n   * can be reused without CMS integration.\n   */\n\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\n    protected winRef: WindowRef\n  ) {}\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    tap((c) => (this.config = c)),\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\n  );\n\n  /**\n   * Returns the backend configuration or default configuration for the searchbox.\n   */\n  private get config$(): Observable<SearchBoxConfig> {\n    if (this.componentData) {\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\n        // boolean values, we replace them with boolean values.\n        map((c) => {\n          return {\n            ...c,\n            displayProducts:\n              <any>c?.displayProducts === 'true' || c?.displayProducts === true,\n            displayProductImages:\n              <any>c?.displayProductImages === 'true' ||\n              c?.displayProductImages === true,\n            displaySuggestions:\n              <any>c?.displaySuggestions === 'true' ||\n              c?.displaySuggestions === true,\n          };\n        })\n      );\n    } else {\n      return of(DEFAULT_SEARCHBOX_CONFIG);\n    }\n  }\n\n  /**\n   * Closes the searchbox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchbox to open\n    this.open();\n  }\n\n  /**\n   * Opens the typeahead searchbox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Closes the typehead searchbox.\n   */\n  close(event: UIEvent, force?: boolean): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if ((!this.ignoreCloseEvent && !this.isSearchboxFocused()) || force) {\n        this.blurSearchBox(event);\n      }\n    });\n  }\n\n  protected blurSearchBox(event: UIEvent): void {\n    this.searchBoxComponentService.toggleBodyClass(\n      'searchbox-is-active',\n      false\n    );\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Check if focus is on searchbox or result list elements\n  private isSearchboxFocused(): boolean {\n    return (\n      this.getResultElements().includes(this.getFocusedElement()) ||\n      this.winRef.document.querySelector('input[aria-label=\"search\"]') ===\n        this.getFocusedElement()\n    );\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  // Return result list as HTMLElement array\n  private getResultElements(): HTMLElement[] {\n    return Array.from(\n      this.winRef.document.querySelectorAll('.products > a, .suggestions > a')\n    );\n  }\n\n  // Return focused element as HTMLElement\n  private getFocusedElement(): HTMLElement {\n    return <HTMLElement>this.winRef.document.activeElement;\n  }\n\n  private getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  // Focus on previous item in results list\n  focusPreviousChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  // Focus on next item in results list\n  focusNextChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a single product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    if (!query || query.trim().length === 0) {\n      return;\n    }\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  public clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  entryComponents: [SearchBoxComponent],\n  exports: [SearchBoxComponent],\n})\nexport class SearchBoxModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  CheckoutService,\n  Order,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\n  order$: Observable<Order>;\n  orderPromotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected promotionService: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  Address,\n  CheckoutService,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      filter(() => Boolean(deliveryAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [\n          deliveryAddress.line1,\n          deliveryAddress.line2,\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${deliveryAddress.postalCode}`,\n          deliveryAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      filter(() => Boolean(deliveryMode)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [deliveryMode.description],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.billTo').pipe(\n      filter(() => Boolean(billingAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [\n          billingAddress.line1,\n          billingAddress.line2,\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n          billingAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: Boolean(payment) ? payment.expiryMonth : '',\n        year: Boolean(payment) ? payment.expiryYear : '',\n      }),\n    ]).pipe(\n      filter(() => Boolean(payment)),\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n  isGuestCustomer = false;\n  orderGuid: string;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\n      tap((order) => {\n        this.isGuestCustomer = order.guestCustomer;\n        this.orderGuid = order.guid;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-guest-register-form',\n  templateUrl: './guest-register-form.component.html',\n})\nexport class GuestRegisterFormComponent implements OnDestroy {\n  @Input() guid: string;\n  @Input() email: string;\n\n  subscription: Subscription;\n  guestRegisterForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'passwordconf'\n      ),\n    }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected fb: FormBuilder\n  ) {}\n\n  submit() {\n    if (this.guestRegisterForm.valid) {\n      this.userService.registerGuest(\n        this.guid,\n        this.guestRegisterForm.value.password\n      );\n      if (!this.subscription) {\n        this.subscription = this.authService\n          .getUserToken()\n          .subscribe((token) => {\n            if (token.access_token) {\n              this.routingService.go({ cxRoute: 'home' });\n            }\n          });\n      }\n    } else {\n      this.guestRegisterForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutService,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map((orderDetails) => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../shared/components/card/card.module';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\n// tslint:disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\nimport { FormErrorsModule } from '../../shared/index';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n  GuestRegisterFormComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n  entryComponents: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductReference,\n  ProductReferenceService,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected referenceService: ProductReferenceService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map((product) => this.convertProduct(product))\n    );\n  }\n\n  getProductReferences(\n    code: string,\n    referenceType: string,\n    displayTitle: boolean,\n    displayProductPrices: boolean\n  ): Observable<ProductCarouselItem[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) =>\n        refs.map((ref) =>\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\n        )\n      )\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  Product,\n  ProductScope,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\n\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean)\n  );\n\n  /**\n   * returns an Obervable string for the title.\n   */\n  title$: Observable<string> = this.componentData$.pipe(\n    map((data) => data.title)\n  );\n\n  /**\n   * Obervable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\n    map((data) => data.productCodes.trim().split(' ')),\n    map((codes) =>\n      codes.map((code) => this.productService.get(code, this.PRODUCT_SCOPE))\n    )\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  entryComponents: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  /**\n   * returns an Obervable string for the title\n   */\n  title$ = this.component.data$.pipe(map((d) => d?.title));\n\n  private currentProductCode$: Observable<\n    string\n  > = this.current.getProduct().pipe(\n    filter(Boolean),\n    map((p: Product) => p.code),\n    distinctUntilChanged(),\n    tap(() => this.referenceService.cleanReferences())\n  );\n\n  /**\n   * Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = combineLatest([\n    this.currentProductCode$,\n    this.component.data$,\n  ]).pipe(\n    switchMap(([code, data]) =>\n      this.getProductReferences(code, data?.productReferenceTypes)\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\n    protected current: CurrentProductService,\n    protected referenceService: ProductReferenceService\n  ) {}\n\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product>[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) => refs.map((ref) => of(ref.target)))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  entryComponents: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  private mainMediaContainer = new BehaviorSubject(null);\n\n  private product$: Observable<\n    Product\n  > = this.currentProductService.getProduct().pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap((p: Product) =>\n      this.mainMediaContainer.next(p.images ? p.images.PRIMARY : {})\n    )\n  );\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map((p: Product) => this.createThumbs(p))\n  );\n\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\n    map(([, container]) => container)\n  );\n\n  constructor(private currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          (t) =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    CarouselModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductImagesComponent],\n  entryComponents: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\n      .subscribe((reviewsTabLabel) => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through button tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const tabElements: HTMLCollectionOf<HTMLElement> = tabsComponent.getElementsByTagName(\n        'button'\n      );\n\n      // Look through button tab elements until finding tab with label\n      for (const buttonElement of Array.from(tabElements)) {\n        if (buttonElement.innerHTML.includes(label)) {\n          return buttonElement;\n        }\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, StarRatingModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  exports: [ProductIntroComponent],\n  entryComponents: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RoutingService,\n  SearchConfig,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  pluck,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\n\ninterface ProductListRouteParams {\n  brandCode?: string;\n  categoryCode?: string;\n  query?: string;\n}\n\ninterface SearchCriteria {\n  currentPage?: number;\n  pageSize?: number;\n  sortCode?: string;\n  query?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  // TODO: make it configurable\n  protected defaultPageSize = 10;\n\n  protected sub: Subscription;\n\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router\n  ) {}\n\n  private searchResults$: Observable<\n    ProductSearchPage\n  > = this.productSearchService\n    .getResults()\n    .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\n\n  private searchByRouting$: Observable<\n    ActivatedRouterStateSnapshot\n  > = combineLatest([\n    this.routing.getRouterState().pipe(\n      distinctUntilChanged((x, y) => {\n        // router emits new value also when the anticipated `nextState` changes\n        // but we want to perform search only when current url changes\n        return x.state.url === y.state.url;\n      })\n    ),\n    // also trigger search on site context changes\n    this.languageService.getActive(),\n    this.currencyService.getActive(),\n  ]).pipe(\n    pluck(0, 'state'),\n    tap((state: ActivatedRouterStateSnapshot) => {\n      const criteria = this.getCriteriaFromRoute(\n        state.params,\n        state.queryParams\n      );\n      this.search(criteria);\n    })\n  );\n\n  /**\n   * This stream should be used only on the Product Listing Page.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\n    this.searchResults$,\n    this.searchByRouting$,\n  ]).pipe(pluck(0), shareReplay({ bufferSize: 1, refCount: true }));\n\n  clearSearchResults(): void {\n    this.productSearchService.clearResults();\n  }\n\n  private getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  private getQueryFromRouteParams({\n    brandCode,\n    categoryCode,\n    query,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\n    }\n    if (brandCode) {\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\n    }\n  }\n\n  private search(criteria: SearchCriteria): void {\n    const query = criteria.query;\n    const searchConfig = this.getSearchConfig(criteria);\n\n    this.productSearchService.search(query, searchConfig);\n  }\n\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\n    const result: SearchConfig = {\n      currentPage: criteria.currentPage,\n      pageSize: criteria.pageSize,\n      sortCode: criteria.sortCode,\n    };\n\n    // drop empty keys\n    Object.keys(result).forEach((key) => !result[key] && delete result[key]);\n\n    return result;\n  }\n\n  setQuery(query: string): void {\n    this.setQueryParams({ query, currentPage: undefined });\n  }\n\n  viewPage(pageNumber: number): void {\n    this.setQueryParams({ currentPage: pageNumber });\n  }\n\n  /**\n   * Get items from a given page without using navigation\n   */\n  getPageItems(pageNumber: number): void {\n    this.routing\n      .getRouterState()\n      .subscribe((route) => {\n        const routeCriteria = this.getCriteriaFromRoute(\n          route.state.params,\n          route.state.queryParams\n        );\n        const criteria = {\n          ...routeCriteria,\n          currentPage: pageNumber,\n        };\n        this.search(criteria);\n      })\n      .unsubscribe();\n  }\n\n  sort(sortCode: string): void {\n    this.setQueryParams({ sortCode });\n  }\n\n  private setQueryParams(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewConfig } from '../../../../shared/config/view-config';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  isInfiniteScroll: boolean;\n\n  model$: Observable<ProductSearchPage> = this.productListComponentService\n    .model$;\n\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService,\n    public scrollConfig: ViewConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\n\n    this.productListComponentService.clearSearchResults();\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$\n        .pipe(take(1))\n        .subscribe((template) => {\n          this.viewMode$.next(\n            template === 'ProductGridPageTemplate'\n              ? ViewModes.Grid\n              : ViewModes.List\n          );\n        })\n    );\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { ViewModes } from '../../product-view/product-view.component';\nimport { Subscription } from 'rxjs';\nimport { ProductListComponentService } from '../product-list-component.service';\nimport { ViewConfig } from '../../../../../shared/config/view-config';\n\n@Component({\n  selector: 'cx-product-scroll',\n  templateUrl: './product-scroll.component.html',\n})\nexport class ProductScrollComponent implements OnDestroy {\n  private subscription = new Subscription();\n\n  @Input('scrollConfig')\n  set setConfig(inputConfig: ViewConfig) {\n    this.setComponentConfigurations(inputConfig);\n  }\n\n  model: ProductSearchPage;\n  @Input('model')\n  set setModel(inputModel: ProductSearchPage) {\n    this.infiniteScrollOperations(inputModel);\n  }\n\n  inputViewMode: ViewModes;\n  @Input('inputViewMode')\n  set setViewMode(inputViewMode: ViewModes) {\n    this.inputViewMode = inputViewMode;\n    //If viewMode is already set (meaning it is not the first load)\n    //Reset the product list\n    if (this.viewMode) {\n      this.resetListOnViewModeChange();\n    } else {\n      //If viewMode is not set (meaning it is the first load)\n      //Set the viewMode\n      this.viewMode = inputViewMode;\n    }\n  }\n\n  viewMode: ViewModes;\n  productLimit: number;\n  maxProducts: number;\n\n  ViewModes = ViewModes;\n  appendProducts = false;\n  resetList = false;\n  isMaxProducts = false;\n  isLastPage = false;\n  isEmpty = false;\n\n  constructor(\n    private productListComponentService: ProductListComponentService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  scrollPage(pageNumber: number): void {\n    this.appendProducts = true;\n    this.ref.markForCheck();\n    this.productListComponentService.getPageItems(pageNumber);\n  }\n\n  loadNextPage(pageNumber: number): void {\n    this.isMaxProducts = false;\n    this.scrollPage(pageNumber);\n  }\n\n  scrollToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\n\n    //Display \"show more\" button every time when button configuration is true\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\n    this.productLimit = isButton ? 1 : configProductLimit;\n  }\n\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\n    if (this.appendProducts) {\n      this.model = {\n        ...inputModel,\n        products: this.model.products.concat(inputModel.products),\n      };\n    } else {\n      this.model = inputModel;\n      this.maxProducts = this.productLimit;\n    }\n    this.setConditions();\n    this.ref.markForCheck();\n  }\n\n  private resetListOnViewModeChange(): void {\n    this.scrollToTop();\n    this.resetList = true;\n    this.productListComponentService.getPageItems(0);\n  }\n\n  //Set booleans after model has been retrieved\n  private setConditions(): void {\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\n\n    this.isLastPage =\n      this.model.pagination.currentPage ===\n      this.model.pagination.totalPages - 1;\n\n    this.isMaxProducts =\n      this.productLimit &&\n      this.productLimit !== 0 &&\n      this.model.products.length >= this.maxProducts;\n\n    //Add the productLimit to the current number of products to determine the next max number of products\n    if (this.isMaxProducts) {\n      this.maxProducts = this.model.products.length + this.productLimit;\n    }\n\n    //Only change viewMode once the new model is set\n    //This prevents flickering issues\n    if (this.viewMode !== this.inputViewMode) {\n      this.viewMode = this.inputViewMode;\n    }\n\n    this.resetList = false;\n    this.appendProducts = false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Breadcrumb, Facet } from '@spartacus/core';\n\n/**\n * UI model that holds the full list of facet and active facets for\n * the product list.\n */\nexport interface FacetList {\n  facets: Facet[];\n  activeFacets?: Breadcrumb[];\n}\n\nexport interface FacetCollapseState {\n  /**\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\n   * Whether the toggle results in an expanded or collapsed state, depends on the\n   * experience, which is controlled in CSS.\n   */\n  toggled?: FacetGroupCollapsedState;\n\n  /**\n   * The top number of facet values that will be visible.\n   */\n  topVisible?: number;\n\n  /**\n   * The max number of facet values which will be visible. This includes\n   * the top visible number.\n   */\n  maxVisible?: number;\n}\n\nexport enum FacetGroupCollapsedState {\n  EXPANDED = 'EXPANDED',\n  COLLAPSED = 'COLLAPSED',\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  Breadcrumb,\n  PageType,\n  ProductSearchPage,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\nimport { ProductListComponentService } from '../../container/product-list-component.service';\nimport { FacetList } from '../facet.model';\n\n/**\n * Provides access to all the facets and active facets for the Product Listing Page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductFacetService {\n  protected readonly routeState$ = this.routing\n    .getRouterState()\n    .pipe(pluck('state'));\n\n  protected readonly searchResult$: Observable<\n    ProductSearchPage\n  > = this.routeState$.pipe(\n    switchMap((state) =>\n      this.productListComponentService.model$.pipe(\n        filter((page) => this.filterForPage(state, page)),\n        map((page) => this.mapResults(state, page))\n      )\n    )\n  );\n\n  constructor(\n    protected routing: RoutingService,\n    protected productListComponentService: ProductListComponentService\n  ) {}\n\n  /**\n   * Observes the facets and active facets for the given page. The facet data\n   * is provided in a `FacetList`.\n   */\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\n    map(\n      (result: ProductSearchPage) =>\n        ({\n          facets: result.facets,\n          activeFacets: result.breadcrumbs,\n        } as FacetList)\n    )\n  );\n\n  /**\n   * Filters the current result by verifying if the result is related to the page.\n   * This is done to avoid a combination of the next page and the current search results.\n   */\n  protected filterForPage(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): boolean {\n    if (state.context.type === PageType.CATEGORY_PAGE) {\n      return (\n        page.currentQuery?.query?.value?.indexOf(\n          `allCategories:${state.context.id}`\n        ) > -1\n      );\n    }\n\n    if (\n      state.context.type === PageType.CONTENT_PAGE &&\n      state.context.id === 'search'\n    ) {\n      return page.currentQuery.query.value.startsWith(`${state.params.query}:`);\n    }\n    return false;\n  }\n\n  private mapResults(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): ProductSearchPage {\n    return {\n      ...page,\n      breadcrumbs: this.filterBreadcrumbs(page.breadcrumbs, state.params),\n    };\n  }\n\n  /**\n   * filter breadcrumbs which are not actively selected\n   * but coming from the route navigation\n   */\n  private filterBreadcrumbs(\n    breadcrumbs: Breadcrumb[],\n    params: Params\n  ): Breadcrumb[] {\n    return breadcrumbs\n      ? breadcrumbs.filter(\n          (breadcrumb) => !this.hasBreadcrumb(breadcrumb, params)\n        )\n      : [];\n  }\n\n  /**\n   * Indicates whether the breadcrumb is related to navigation parameters,\n   * since either the category or brand code should match those codes.\n   */\n  private hasBreadcrumb(breadcrumb: Breadcrumb, params: Params): boolean {\n    return (\n      breadcrumb.facetCode === 'allCategories' &&\n      breadcrumb.facetValueCode === params.categoryCode\n    );\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {\n  FacetCollapseState,\n  FacetGroupCollapsedState,\n  FacetList,\n} from '../facet.model';\nimport { ProductFacetService } from './product-facet.service';\n\n/**\n * Provides access to the facets as well as their UI state. The UI state\n * represents user related changes on the facets, such as expanding or\n * collapsing a facet group or expanding the number of _visible_ facet values.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacetService {\n  /**\n   * An internal map where we keep the UI state of the facets.\n   */\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\n\n  constructor(protected productFacetService: ProductFacetService) {}\n\n  /**\n   * Observes the facets for the given page and configures the initial UI state.\n   *\n   * Facets are configured on each emission so that we keep the facet UI state.\n   * This is mainly done to keep the state during usage of the facet, but also\n   * benefitial when the facets are rebuild while using them.\n   */\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\n    tap((facetList) => {\n      facetList.facets.forEach((facet) => this.initialize(facet));\n    })\n  );\n\n  /**\n   * Returns the observed UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  getState(facet: Facet): Observable<FacetCollapseState> {\n    this.initialize(facet);\n    return this.facetState.get(facet.name);\n  }\n\n  /**\n   * Returns the UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\n  }\n\n  /**\n   * Toggles the facet expanded state. If the expanded state becomes false,\n   * the visible values will decrease to the top values only.\n   *\n   * If the optional value argument is provided the expanded state will be set\n   * to this value, regardless of the current `expanded` state.\n   */\n  toggle(facet: Facet, isExpanded: boolean): void {\n    const state = this.getStateSnapshot(facet);\n\n    const toggledState = {\n      toggled: isExpanded\n        ? FacetGroupCollapsedState.COLLAPSED\n        : FacetGroupCollapsedState.EXPANDED,\n    } as FacetCollapseState;\n\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\n      toggledState.maxVisible = state.topVisible;\n    }\n\n    this.updateState(facet, toggledState);\n  }\n\n  /**\n   * Increases the visible values to the maximum values of the facet.\n   */\n  increaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.values.length });\n  }\n\n  /**\n   * Decreases the visible values to the topValueCount.\n   *\n   * The topValueCount defaults to 6, but can be controlled in\n   * the backend as well.\n   */\n  decreaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.topValueCount });\n  }\n\n  /**\n   * Persists the facet state and initializes the default values for the top\n   * and max visible values.\n   */\n  protected initialize(facet: Facet): void {\n    if (!this.hasState(facet)) {\n      this.facetState.set(\n        facet.name,\n        new BehaviorSubject({\n          topVisible: facet.topValueCount || 0,\n          maxVisible: facet.topValueCount || 0,\n        } as FacetCollapseState)\n      );\n    }\n  }\n\n  /**\n   * Updates the state of the facet in the local facet map.\n   */\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\n    const state = { ...this.getStateSnapshot(facet), ...property };\n    this.facetState.get(facet.name).next(state);\n  }\n\n  protected hasState(facet: Facet): boolean {\n    return this.facetState.has(facet.name);\n  }\n\n  getLinkParams(query: string) {\n    return { query: new HttpUrlEncodingCodec().decodeValue(query) };\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Breadcrumb } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FacetList } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n/**\n * Active facets render the applied facet values as a list of focusable buttons\n * which can be used to remove the applied facet value.\n */\n@Component({\n  selector: 'cx-active-facets',\n  templateUrl: './active-facets.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ActiveFacetsComponent {\n  /** Active facets which are applied to the product results. */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  /** Configurable icon which is used for the active facet close button */\n  @Input() closeIcon = ICON_TYPE.CLOSE;\n\n  constructor(protected facetService: FacetService) {}\n\n  getLinkParams(facet: Breadcrumb) {\n    return this.facetService.getLinkParams(facet.removeQuery?.query?.value);\n  }\n\n  /**\n   * The focus key is used to persist the focus on the facet when the DOM is being\n   * recreated. We only apply the focus key for the given facet when there are no\n   * facets available. This is a great experience for the keyboard user, who keep the\n   * focus on the activated facet all the time.\n   */\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\n    return !facetList.facets?.length ? facet.facetValueName : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ActiveFacetsComponent } from './active-facets.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [ActiveFacetsComponent],\n  exports: [ActiveFacetsComponent],\n})\nexport class ActiveFacetsModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\nimport { FacetComponent } from '../facet/facet.component';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet-list',\n  templateUrl: './facet-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetListComponent {\n  private _isDialog: boolean;\n  /**\n   * Indicates that the facet navigation is rendered in dialog.\n   */\n  @Input()\n  set isDialog(value: boolean) {\n    this._isDialog = value;\n    if (value) {\n      this.renderer.addClass(document.body, 'modal-open');\n    }\n  }\n\n  get isDialog(): boolean {\n    return this._isDialog;\n  }\n\n  /** Emits when the list must close */\n  @Output() closeList = new EventEmitter();\n\n  /** The list of all facet and values related to the products in the list */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  iconTypes = ICON_TYPE;\n\n  dialogFocusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    focusOnEscape: true,\n    autofocus: 'cx-facet',\n  };\n\n  @HostListener('click') handleClick() {\n    this.close();\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2\n  ) {}\n\n  /**\n   * Toggles the facet group in case it is not expanded.\n   */\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\n    if (!ref.isExpanded) {\n      this.facetService.toggle(facet, ref.isExpanded);\n    }\n  }\n\n  /**\n   * Indicates that the facet group has been expanded.\n   */\n  isExpanded(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\n      );\n  }\n\n  /**\n   * Indicates that the facet group has been collapsed.\n   */\n  isCollapsed(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\n      );\n  }\n\n  close(event?: boolean): void {\n    this.renderer.removeClass(document.body, 'modal-open');\n    this.closeList.emit(event);\n  }\n\n  block(event?: MouseEvent) {\n    event.stopPropagation();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { Facet, FacetValue } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\nimport { FacetCollapseState } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet',\n  templateUrl: './facet.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetComponent {\n  protected _facet: Facet;\n\n  state$: Observable<FacetCollapseState>;\n\n  /** configurable icon that is used to collapse the facet group  */\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\n\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\n\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\n\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\n\n  @Input()\n  set facet(value: Facet) {\n    this._facet = value;\n    this.isMultiSelect = !!value.multiSelect;\n    this.state$ = this.facetService.getState(value);\n  }\n\n  get facet(): Facet {\n    return this._facet;\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Handles clicking the heading of the facet group, which means toggling\n   * the visibility of the group (collapse / expand) and optionally focusing\n   * the group.\n   */\n  toggleGroup(event: UIEvent) {\n    const host: HTMLElement = this.elementRef.nativeElement;\n    const isLocked = this.keyboardFocus?.isLocked;\n\n    this.facetService.toggle(this.facet, this.isExpanded);\n\n    if (!isLocked || this.isExpanded) {\n      host.focus();\n      // we stop propagating the event as otherwise the focus on the host will trigger\n      // an unlock event from the LockFocus directive.\n      event.stopPropagation();\n    }\n  }\n\n  get isExpanded(): boolean {\n    return this.values.first.nativeElement.offsetParent !== null;\n  }\n\n  openLink(event: KeyboardEvent) {\n    (event.target as HTMLElement).click();\n    event.preventDefault();\n  }\n\n  /**\n   * Increases the number of visible values for the facet. This is delegated\n   * to `facetService.increaseVisibleValues`.\n   */\n  increaseVisibleValues(): void {\n    this.facetService.increaseVisibleValues(this.facet);\n  }\n\n  /**\n   * Decreases the number of visible values for the facet. This is delegated\n   * to `facetService.decreaseVisibleValues`.\n   */\n  decreaseVisibleValues(): void {\n    this.facetService.decreaseVisibleValues(this.facet);\n  }\n\n  getLinkParams(value: FacetValue) {\n    return this.facetService.getLinkParams(value.query?.query.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { FacetComponent } from './facet.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetComponent],\n  exports: [FacetComponent],\n})\nexport class FacetModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { FacetModule } from '../facet/facet.module';\nimport { FacetListComponent } from './facet-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    FacetModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetListComponent],\n  exports: [FacetListComponent],\n})\nexport class FacetListModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent {\n  iconTypes = ICON_TYPE;\n\n  /**\n   * We delay the removal of DOM so that animations can finish playing before the\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\n   * to be focused.\n   */\n  protected CLOSE_DELAY = 300;\n\n  /**\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\n   * on the availability of the trigger element, which is driven by CSS.\n   *\n   * The reference is also used to refocus the trigger after the dialog is closed.\n   */\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\n\n  protected open$ = new BehaviorSubject(false);\n\n  /**\n   * Emits the open state that indicates whether the facet list should be rendered.\n   * This is either done instantly, or after the user triggers this by using the trigger\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\n   * the behaviour. This can differ per breakpoint.\n   *\n   * There's a configurable delay for the closed state, so that the DOM is not removed\n   * before some CSS animations are done.\n   */\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\n    // method represents the actual UI state.\n    observeOn(asapScheduler),\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\n  );\n\n  /**\n   * Emits the active state that indicates whether the facet list is activated. Activation\n   * is related to the css, so that a animation or transition can visualize opening/closing\n   * the list (i.e. dialog).\n   */\n  isActive$ = this.open$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure the active class is\n    //  applied after the DOM is created\n    observeOn(asapScheduler)\n  );\n\n  constructor(protected breakpointService: BreakpointService) {}\n\n  launch() {\n    this.open$.next(true);\n  }\n\n  close() {\n    this.open$.next(false);\n    this.trigger.nativeElement.focus();\n  }\n\n  /**\n   * Indicates that the facet navigation should be open explicitely by a trigger.\n   * This is fully controlled by CSS, where the trigger button can be hidden\n   * (display:none) for certain screen sizes.\n   */\n  get hasTrigger() {\n    return this.trigger.nativeElement.offsetParent !== null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\nimport { FacetListModule } from './facet-list/facet-list.module';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FacetListModule,\n    ActiveFacetsModule,\n    IconModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductFacetNavigationComponent],\n  exports: [ProductFacetNavigationComponent],\n})\nexport class ProductFacetNavigationModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variants',\n  templateUrl: './product-variants.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsComponent implements OnInit {\n  constructor(private currentProductService: CurrentProductService) {}\n\n  variants: BaseOption[] = [];\n  variantType = VariantType;\n  product$: Observable<Product>;\n\n  ngOnInit(): void {\n    this.product$ = this.currentProductService.getProduct().pipe(\n      filter((product) => !!(product && product.baseOptions)),\n      distinctUntilChanged(),\n      tap((product) => {\n        product.baseOptions.forEach((option) => {\n          if (option && option.variantType) {\n            this.variants[option.variantType] = option;\n          }\n        });\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  OccConfig,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  Product,\n  ProductService,\n  ProductScope,\n  RoutingService,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-style-selector',\n  templateUrl: './variant-style-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleSelectorComponent {\n  constructor(\n    private config: OccConfig,\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  variantQualifier = VariantQualifier;\n\n  @Input()\n  variants: BaseOption;\n\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\n    return obj ? obj.value : '';\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\n    return qualifier\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\n      : '';\n  }\n\n  changeStyle(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Product,\n  RoutingService,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  ProductService,\n  ProductScope,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-size-selector',\n  templateUrl: './variant-size-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantSizeSelectorComponent {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeSize(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BaseOption,\n  Product,\n  RoutingService,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-color-selector',\n  templateUrl: './variant-color-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantColorSelectorComponent {\n  constructor(private routingService: RoutingService) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeColor(code: string, name: string): void {\n    if (code) {\n      this.routingService.go({\n        cxRoute: 'product',\n        params: { code, name },\n      });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {\n  OccConfig,\n  VariantOption,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-style-icons',\n  templateUrl: './variant-style-icons.component.html',\n  styleUrls: ['./variant-style-icons.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleIconsComponent implements OnInit {\n  constructor(private config: OccConfig) {}\n\n  @Input()\n  variants: VariantOption[];\n\n  variantNames: { [key: string]: string } = {};\n\n  ngOnInit() {\n    this.variants.forEach((variant) => {\n      this.variantNames[variant.code] = this.getVariantName(\n        variant.variantOptionQualifiers\n      );\n    });\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const thumbnail = variantOptionQualifiers.find(\n      (item) => item.qualifier === VariantQualifier.THUMBNAIL\n    );\n    return thumbnail\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\n      : '';\n  }\n\n  private getVariantName(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const rollupProperty = variantOptionQualifiers.find(\n      (item) => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\n    );\n    const property = rollupProperty\n      ? variantOptionQualifiers.find(\n          (item) => item.qualifier === rollupProperty.value\n        )\n      : null;\n    return property ? property.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, filter, take } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  VariantOption,\n  ProductService,\n  Product,\n  RoutingService,\n  ProductScope,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductVariantGuard implements CanActivate {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.routingService.getRouterState().pipe(\n      map((state) => state.nextState.params.productCode),\n      switchMap((productCode: string) => {\n        // if open pdp from smartedit\n        if (!productCode) {\n          return of(true);\n        }\n\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\n          filter(Boolean),\n          map((product: Product) => {\n            if (!product.purchasable) {\n              const variant = this.findVariant(product.variantOptions);\n              // below call might looks redundant but in fact this data is going to be loaded anyways\n              // we're just calling it earlier and storing\n              this.productService\n                .get(variant.code, ProductScope.LIST)\n                .pipe(filter(Boolean), take(1))\n                .subscribe((_product: Product) => {\n                  this.routingService.go({\n                    cxRoute: 'product',\n                    params: _product,\n                  });\n                });\n              return false;\n            } else {\n              return true;\n            }\n          })\n        );\n      })\n    );\n  }\n\n  findVariant(variants: VariantOption[]): VariantOption {\n    const results: VariantOption[] = variants.filter((variant) => {\n      return variant.stock && variant.stock.stockLevel ? variant : false;\n    });\n    return !results.length && variants.length ? variants[0] : results[0];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ProductVariantsComponent } from './product-variants.component';\nimport { RouterModule } from '@angular/router';\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\nimport { ProductVariantGuard } from './guards/product-variant.guard';\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    VariantStyleSelectorModule,\n    VariantSizeSelectorModule,\n    VariantColorSelectorModule,\n    VariantStyleIconsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductVariantSelectorComponent: {\n          component: ProductVariantsComponent,\n          guards: [ProductVariantGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ProductVariantsComponent],\n  entryComponents: [ProductVariantsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class ProductVariantsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ViewConfig } from '../../../shared/config/view-config';\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { defaultScrollConfig } from '../config/default-scroll-config';\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n    SpinnerModule,\n    InfiniteScrollModule,\n    ViewConfigModule,\n    ProductVariantsModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<ViewConfig>defaultScrollConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        ProductGridComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\n})\nexport class ProductListModule {}\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  entryComponents: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct(\n    ProductScope.ATTRIBUTES\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  entryComponents: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  entryComponents: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\nimport { CustomFormValidators } from '../../../../shared/index';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\n  @ViewChild('writeReviewButton', { static: false })\n  writeReviewButton: ElementRef;\n\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter((p) => !!p),\n    map((p) => p.code),\n    distinctUntilChanged(),\n    switchMap((productCode) =>\n      this.reviewService.getByProductCode(productCode)\n    ),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n\n    this.cd.detectChanges();\n\n    if (this.titleInput && this.titleInput.nativeElement) {\n      this.titleInput.nativeElement.focus();\n    }\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  setRating(rating: number): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product) {\n    if (this.reviewForm.valid) {\n      this.addReview(product);\n    } else {\n      this.reviewForm.markAllAsTouched();\n    }\n  }\n\n  addReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [null, CustomFormValidators.starRatingEmpty],\n      reviewerName: '',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductReviewsComponent } from './product-reviews.component';\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  entryComponents: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-stock-notification-dialog',\n  templateUrl: './stock-notification-dialog.component.html',\n})\nexport class StockNotificationDialogComponent implements OnDestroy {\n  subscribeSuccess$: Observable<boolean>;\n  enabledPrefs: NotificationPreference[] = [];\n\n  constructor(\n    private modalService: ModalService,\n    private interestsService: UserInterestsService\n  ) {}\n\n  close() {\n    this.modalService.dismissActiveModal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribeSuccess$) {\n      this.subscribeSuccess$\n        .subscribe((success) => {\n          if (success) {\n            this.interestsService.resetAddInterestState();\n          }\n        })\n        .unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  UserInterestsService,\n  UserNotificationPreferenceService,\n  AuthService,\n  OCC_USER_ID_ANONYMOUS,\n  NotificationPreference,\n  NotificationType,\n  Product,\n  GlobalMessageService,\n  TranslationService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { map, filter, tap, first } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\n\n@Component({\n  selector: 'cx-stock-notification',\n  templateUrl: './stock-notification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationComponent implements OnInit, OnDestroy {\n  hasProductInterests$: Observable<boolean>;\n  prefsEnabled$: Observable<boolean>;\n  outOfStock$: Observable<boolean>;\n  isRemoveInterestLoading$: Observable<boolean>;\n  anonymous = true;\n\n  private enabledPrefs: NotificationPreference[] = [];\n  private productCode: string;\n  private subscribeSuccess$: Observable<boolean>;\n  private subscriptions = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private currentProductService: CurrentProductService,\n    private globalMessageService: GlobalMessageService,\n    private translationService: TranslationService,\n    private interestsService: UserInterestsService,\n    private modalService: ModalService,\n    private notificationPrefService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.outOfStock$ = combineLatest([\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\n      this.authService.getOccUserId(),\n    ]).pipe(\n      tap(([product, userId]: [Product, String]) => {\n        this.productCode = product.code;\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\n          this.anonymous = false;\n          this.notificationPrefService.loadPreferences();\n          this.interestsService.loadProductInterests(\n            null,\n            null,\n            null,\n            product.code,\n            NotificationType.BACK_IN_STOCK\n          );\n        }\n      }),\n      map(\n        ([product]: [Product, String]) =>\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\n      )\n    );\n\n    this.hasProductInterests$ = this.interestsService\n      .getProductInterests()\n      .pipe(\n        map(\n          (interests) => !!interests.results && interests.results.length === 1\n        )\n      );\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\n    this.prefsEnabled$ = this.notificationPrefService\n      .getEnabledPreferences()\n      .pipe(\n        tap((prefs) => (this.enabledPrefs = prefs)),\n        map((prefs) => prefs.length > 0)\n      );\n\n    this.subscriptions.add(\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\n        if (error) {\n          this.onInterestAddingError();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.interestsService\n        .getRemoveProdutInterestSuccess()\n        .subscribe((success) => {\n          if (success) {\n            this.onInterestRemovingSuccess();\n          }\n        })\n    );\n  }\n\n  subscribe() {\n    this.openDialog();\n    this.interestsService.addProductInterest(\n      this.productCode,\n      NotificationType.BACK_IN_STOCK\n    );\n  }\n\n  unsubscribe() {\n    this.interestsService.removeProdutInterest(\n      {\n        product: {\n          code: this.productCode,\n        },\n        productInterestEntry: [\n          {\n            interestType: NotificationType.BACK_IN_STOCK,\n          },\n        ],\n      },\n      true\n    );\n  }\n\n  private onInterestRemovingSuccess() {\n    this.subscriptions.add(\n      this.translationService\n        .translate('stockNotification.unsubscribeSuccess')\n        .pipe(first())\n        .subscribe((text) =>\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\n        )\n    );\n    this.interestsService.resetRemoveInterestState();\n  }\n\n  private onInterestAddingError() {\n    this.modalService.dismissActiveModal();\n    this.interestsService.resetAddInterestState();\n  }\n\n  private openDialog() {\n    const modalInstance = this.modalService.open(\n      StockNotificationDialogComponent,\n      {\n        centered: true,\n        size: 'lg',\n      }\n    ).componentInstance;\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\n    modalInstance.enabledPrefs = this.enabledPrefs;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.interestsService.clearProductInterests();\n    this.notificationPrefService.clearPreferences();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockNotificationComponent } from './stock-notification.component';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        StockNotificationComponent: {\n          component: StockNotificationComponent,\n        },\n      },\n    }),\n  ],\n  entryComponents: [\n    StockNotificationComponent,\n    StockNotificationDialogComponent,\n  ],\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\n})\nexport class StockNotificationModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StoreFinderService, GeoPoint } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-grid',\n  templateUrl: './store-finder-grid.component.html',\n})\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\n  locations$: any;\n  isLoading$: Observable<boolean>;\n  defaultLocation: GeoPoint;\n  country: string;\n  region: string;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.defaultLocation = {};\n\n    if (this.route.snapshot.params.country) {\n      this.storeFinderService.findStoresAction(\n        '',\n        {\n          pageSize: -1,\n        },\n        undefined,\n        this.route.snapshot.params.country\n      );\n    }\n  }\n\n  ngOnDestroy() {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input, Directive } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\n// tslint:disable:directive-class-suffix\n@Directive()\nexport class AbstractStoreItemComponent {\n  @Input()\n  location;\n\n  constructor(protected storeDataService: StoreDataService) {}\n\n  getDirections(location: any): string {\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\n    const latitude = this.storeDataService.getStoreLatitude(location);\n    const longitude = this.storeDataService.getStoreLongitude(location);\n    return google_map_url + latitude + ',' + longitude;\n  }\n\n  getFormattedStoreAddress(addressParts: string[]): string {\n    return addressParts.filter(Boolean).join(', ');\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-list-item',\n  templateUrl: './store-finder-list-item.component.html',\n})\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\n  @Input()\n  locationIndex: number = null;\n  @Input()\n  listOrderLabel: any;\n  @Input()\n  displayDistance: boolean;\n  @Input()\n  useClickEvent: boolean;\n  @Output()\n  storeItemClick: EventEmitter<number> = new EventEmitter();\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n\n  handleStoreItemClick() {\n    if (this.locationIndex !== null) {\n      this.storeItemClick.emit(this.locationIndex);\n    }\n  }\n\n  onKey(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.handleStoreItemClick();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleMapRendererService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-map',\n  templateUrl: './store-finder-map.component.html',\n})\nexport class StoreFinderMapComponent implements OnChanges {\n  @ViewChild('mapElement', { static: true })\n  mapElement: ElementRef;\n  @Input()\n  locations: any[];\n  @Output()\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\n\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.locations && this.locations) {\n      this.renderMap();\n    }\n  }\n\n  /**\n   * Sets the center of the map to the given location\n   * @param latitude latitude of the new center\n   * @param longitude longitude of the new center\n   */\n  centerMap(latitude: number, longitude: number): void {\n    this.googleMapRendererService.centerMap(latitude, longitude);\n  }\n\n  renderMap(): void {\n    this.googleMapRendererService.renderMap(\n      this.mapElement.nativeElement,\n      this.locations,\n      (markerIndex) => {\n        this.selectStoreItemClickHandle(markerIndex);\n      }\n    );\n  }\n\n  private selectStoreItemClickHandle(markerIndex: number) {\n    this.selectedStoreItem.emit(markerIndex);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-store-finder-list',\n  templateUrl: './store-finder-list.component.html',\n})\nexport class StoreFinderListComponent {\n  @Input()\n  locations: any;\n  @Input()\n  useMylocation: boolean;\n  @ViewChild('storeMap')\n  storeMap: StoreFinderMapComponent;\n\n  selectedStore: PointOfService;\n  selectedStoreIndex: number;\n  isDetailsModeVisible: boolean;\n  storeDetails: PointOfService;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    private storeDataService: StoreDataService,\n    @Inject(DOCUMENT) private document: any\n  ) {\n    this.isDetailsModeVisible = false;\n  }\n\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\n    this.showStoreDetails(location);\n    this.selectedStoreIndex = index;\n    this.selectedStore = location;\n    this.storeMap.centerMap(\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\n    );\n  }\n\n  selectStoreItemList(index: number): void {\n    this.selectedStoreIndex = index;\n    const storeListItem = this.document.getElementById('item-' + index);\n    storeListItem.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n    });\n  }\n\n  showStoreDetails(location: PointOfService) {\n    this.isDetailsModeVisible = true;\n    this.storeDetails = location;\n  }\n\n  hideStoreDetails() {\n    this.isDetailsModeVisible = false;\n    this.selectedStoreIndex = undefined;\n    this.selectedStore = undefined;\n    this.storeMap.renderMap();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {\n  GeoPoint,\n  SearchConfig,\n  StoreFinderSearchQuery,\n  StoreFinderService,\n  StoreFinderConfig,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-search-result',\n  templateUrl: './store-finder-search-result.component.html',\n})\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\n  locations: any;\n  subscription: Subscription;\n  useMyLocation: boolean;\n  countryCode: string = null;\n  searchConfig: SearchConfig = {\n    currentPage: 0,\n  };\n  radius: number;\n  searchQuery: StoreFinderSearchQuery;\n  geolocation: GeoPoint;\n  locations$: Observable<any>;\n  isLoading$: Observable<any>;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    protected config: StoreFinderConfig\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.route.queryParams.subscribe((params) =>\n      this.initialize(params)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  viewPage(pageNumber: number) {\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation,\n      this.radius\n    );\n  }\n\n  private initialize(params: Params) {\n    this.searchQuery = this.parseParameters(params);\n    this.useMyLocation = params && params.useMyLocation ? true : false;\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\n    this.radius = this.config.googleMaps.radius;\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation,\n      this.radius\n    );\n\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\n  }\n\n  private parseParameters(queryParams: {\n    [key: string]: any;\n  }): StoreFinderSearchQuery {\n    let searchQuery: StoreFinderSearchQuery;\n\n    if (queryParams.query) {\n      searchQuery = { queryText: queryParams.query };\n    } else {\n      searchQuery = { queryText: '' };\n    }\n\n    searchQuery.useMyLocation =\n      queryParams.useMyLocation != null &&\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\n\n    return searchQuery;\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  StoreFinderCoreModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\nimport { IconModule } from './../misc/icon/icon.module';\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ListNavigationModule,\n    NgbTabsetModule,\n    SpinnerModule,\n    UrlModule,\n    StoreFinderCoreModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | LayoutConfig>{\n      cmsComponents: {\n        StoreFinderComponent: {\n          component: StoreFinderComponent,\n          childRoutes: [\n            {\n              path: 'find',\n              component: StoreFinderSearchResultComponent,\n            },\n            {\n              path: 'view-all',\n              component: StoreFinderStoresCountComponent,\n            },\n            {\n              path: 'country/:country',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region/:store',\n              component: StoreFinderStoreComponent,\n            },\n            {\n              path: 'country/:country/:store',\n              component: StoreFinderStoreComponent,\n            },\n          ],\n        },\n      },\n      layoutSlots: {\n        StoreFinderPageTemplate: {\n          slots: ['MiddleContent', 'SideContent'],\n        },\n      },\n    }),\n  ],\n  declarations: [\n    StoreFinderSearchComponent,\n    StoreFinderListComponent,\n    StoreFinderMapComponent,\n    StoreFinderListItemComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreDescriptionComponent,\n    ScheduleComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderStoreComponent,\n  ],\n  exports: [\n    ScheduleComponent,\n    StoreFinderComponent,\n    StoreFinderGridComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderListItemComponent,\n    StoreFinderMapComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderSearchComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderListComponent,\n    StoreFinderStoreDescriptionComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderStoreComponent,\n  ],\n  entryComponents: [\n    StoreFinderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreComponent,\n  ],\n})\nexport class StoreFinderModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-checkout-login',\n  templateUrl: './checkout-login.component.html',\n})\nexport class CheckoutLoginComponent implements OnDestroy {\n  checkoutLoginForm: FormGroup = this.formBuilder.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      emailConfirmation: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch(\n        'email',\n        'emailConfirmation'\n      ),\n    }\n  );\n  sub: Subscription;\n\n  constructor(\n    protected formBuilder: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  onSubmit() {\n    if (this.checkoutLoginForm.valid) {\n      const email = this.checkoutLoginForm.get('email').value;\n      this.activeCartService.addEmail(email);\n\n      if (!this.sub) {\n        this.sub = this.activeCartService.getAssignedUser().subscribe(() => {\n          if (this.activeCartService.isGuestCart()) {\n            this.authRedirectService.redirect();\n          }\n        });\n      }\n    } else {\n      this.checkoutLoginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CheckoutLoginComponent } from './checkout-login.component';\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        GuestCheckoutLoginComponent: {\n          component: CheckoutLoginComponent,\n          guards: [NotCheckoutAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutLoginComponent],\n  exports: [CheckoutLoginComponent],\n  entryComponents: [CheckoutLoginComponent],\n})\nexport class CheckoutLoginModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CheckoutConfigService } from '../../checkout/services/checkout-config.service';\nimport { CustomFormValidators } from '../../../shared/index';\n\n@Component({\n  selector: 'cx-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  loginForm: FormGroup;\n  loginAsGuest = false;\n\n  constructor(\n    protected auth: AuthService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected winRef: WindowRef,\n    protected activatedRoute: ActivatedRoute,\n    protected checkoutConfigService: CheckoutConfigService\n  ) {}\n\n  ngOnInit(): void {\n    const routeState = this.winRef.nativeWindow?.history?.state;\n    const prefilledEmail = routeState?.['newUid'];\n\n    this.loginForm = this.fb.group({\n      userId: [\n        prefilledEmail?.length ? prefilledEmail : '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n      password: ['', Validators.required],\n    });\n\n    if (this.checkoutConfigService.isGuestCheckout()) {\n      this.loginAsGuest = this.activatedRoute?.snapshot?.queryParams?.[\n        'forced'\n      ];\n    }\n  }\n\n  submitForm(): void {\n    if (this.loginForm.valid) {\n      this.loginUser();\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  protected loginUser(): void {\n    const { userId, password } = this.loginForm.controls;\n    this.auth.authorize(\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\n      password.value\n    );\n\n    if (!this.sub) {\n      this.sub = this.auth.getUserToken().subscribe((data) => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { LoginFormComponent } from './login-form.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [LoginFormComponent],\n  exports: [LoginFormComponent],\n  entryComponents: [LoginFormComponent],\n})\nexport class LoginFormModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService, User, UserService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(private auth: AuthService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user$ = this.auth.isUserLoggedIn().pipe(\n      switchMap((isUserLoggedIn) => {\n        if (isUserLoggedIn) {\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  ProtectedRoutesService,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/**\n * Guards the _logout_ route.\n *\n * Takes care of routing the user to a logout page (if available) or redirects to\n * the homepage. If the homepage is protected, the user is redirected\n * to the login route instead.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected routing: RoutingService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutes: ProtectedRoutesService\n  ) {}\n\n  canActivate(): Observable<any> {\n    this.logout();\n\n    return this.cms\n      .hasPage({\n        id: this.semanticPathService.get('logout'),\n        type: PageType.CONTENT_PAGE,\n      })\n      .pipe(\n        tap((hasPage) => {\n          if (!hasPage) {\n            this.redirect();\n          }\n        })\n      );\n  }\n\n  /**\n   * Whenever there is no specific \"logout\" page configured in the CMS,\n   * we redirect after the user is logged out.\n   *\n   * The user gets redirected to the homepage, unless the homepage is protected\n   * (in case of a closed shop). We'll redirect to the login page instead.\n   */\n  protected redirect(): void {\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\n    this.routing.go({ cxRoute });\n  }\n\n  /**\n   * Log user out.\n   *\n   * This is delegated to the `AuthService`.\n   */\n  protected logout(): void {\n    this.auth.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  UserService,\n  UserSignUp,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { sortTitles, CustomFormValidators } from '../../../shared/index';\n\n@Component({\n  selector: 'cx-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  titles$: Observable<Title[]>;\n  loading$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  anonymousConsent$: Observable<{\n    consent: AnonymousConsent;\n    template: string;\n  }>;\n\n  registerForm: FormGroup = this.fb.group(\n    {\n      titleCode: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n      newsletter: new FormControl({\n        value: false,\n        disabled: this.isConsentRequired(),\n      }),\n      termsandconditions: [false, Validators.requiredTrue],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'passwordconf'\n      ),\n    }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected router: RoutingService,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig\n  ) {}\n\n  ngOnInit() {\n    this.titles$ = this.userService.getTitles().pipe(\n      tap((titles) => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map((titles) => {\n        return titles.sort(sortTitles);\n      })\n    );\n\n    this.loading$ = this.userService.getRegisterUserResultLoading();\n    this.registerUserProcessInit();\n\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n    this.subscription.add(\n      this.globalMessageService\n        .get()\n        .pipe(filter((messages) => !!Object.keys(messages).length))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          const messages =\n            globalMessageEntities &&\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\n\n          if (\n            messages &&\n            messages.some((message) => message === 'This field is required.')\n          ) {\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.globalMessageService.add(\n              { key: 'register.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n        })\n    );\n\n    const { registerConsent } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    this.anonymousConsent$ = combineLatest([\n      this.anonymousConsentsService.getConsent(registerConsent),\n      this.anonymousConsentsService.getTemplate(registerConsent),\n    ]).pipe(\n      map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\n        return {\n          consent,\n          template: template ? template.description : '',\n        };\n      })\n    );\n\n    this.subscription.add(\n      this.registerForm.get('newsletter').valueChanges.subscribe(() => {\n        this.toggleAnonymousConsent();\n      })\n    );\n  }\n\n  submitForm(): void {\n    if (this.registerForm.valid) {\n      this.registerUser();\n    } else {\n      this.registerForm.markAllAsTouched();\n    }\n  }\n\n  registerUser(): void {\n    this.userService.register(\n      this.collectDataFromRegisterForm(this.registerForm.value)\n    );\n  }\n\n  titleSelected(title: Title): void {\n    this.registerForm['controls'].titleCode.setValue(title.code);\n  }\n\n  collectDataFromRegisterForm(formData: any): UserSignUp {\n    const { firstName, lastName, email, password, titleCode } = formData;\n\n    return {\n      firstName,\n      lastName,\n      uid: email.toLowerCase(),\n      password,\n      titleCode,\n    };\n  }\n\n  isConsentGiven(consent: AnonymousConsent): boolean {\n    return this.anonymousConsentsService.isConsentGiven(consent);\n  }\n\n  private isConsentRequired(): boolean {\n    const {\n      requiredConsents,\n      registerConsent,\n    } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    if (requiredConsents && registerConsent) {\n      return requiredConsents.includes(registerConsent);\n    }\n\n    return false;\n  }\n\n  private onRegisterUserSuccess(success: boolean): void {\n    if (success) {\n      this.router.go('login');\n      this.globalMessageService.add(\n        { key: 'register.postRegisterMessage' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  toggleAnonymousConsent(): void {\n    const { registerConsent } = this.anonymousConsentsConfig.anonymousConsents;\n\n    if (Boolean(this.registerForm.get('newsletter').value)) {\n      this.anonymousConsentsService.giveConsent(registerConsent);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(registerConsent);\n    }\n  }\n\n  private registerUserProcessInit(): void {\n    this.userService.resetRegisterUserProcessState();\n    this.subscription.add(\n      this.userService.getRegisterUserResultSuccess().subscribe((success) => {\n        this.onRegisterUserSuccess(success);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetRegisterUserProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule, FormErrorsModule } from '../../../shared/index';\nimport { LoginModule } from '../login/login.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          component: RegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [RegisterComponent],\n  exports: [RegisterComponent],\n  entryComponents: [RegisterComponent],\n})\nexport class RegisterComponentModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../shared/index';\nimport { AddToCartModule } from '../cart/index';\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\nimport { WishListComponent } from './components/wish-list/wish-list.component';\n\n@NgModule({\n  imports: [\n    AddToCartModule,\n    CommonModule,\n    I18nModule,\n    MediaModule,\n    RouterModule,\n    StarRatingModule,\n    UrlModule,\n    ItemCounterModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        WishListComponent: {\n          component: WishListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [WishListComponent, WishListItemComponent],\n  entryComponents: [WishListComponent],\n  exports: [WishListComponent, WishListItemComponent],\n})\nexport class WishListModule {}\n","import { NgModule } from '@angular/core';\nimport { HamburgerMenuModule } from '../layout/index';\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\nimport { AsmModule } from './asm/asm.module';\nimport { CartComponentModule } from './cart/cart.module';\nimport { CheckoutComponentModule } from './checkout/checkout.module';\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\nimport {\n  BannerModule,\n  CmsParagraphModule,\n  LinkModule,\n  TabParagraphContainerModule,\n} from './content/index';\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\nimport {\n  AddressBookModule,\n  CloseAccountModule,\n  ConsentManagementModule,\n  ForgotPasswordModule,\n  MyCouponsModule,\n  MyInterestsModule,\n  NotificationPreferenceModule,\n  OrderCancellationModule,\n  OrderDetailsModule,\n  OrderHistoryModule,\n  OrderReturnModule,\n  PaymentMethodsModule,\n  ResetPasswordModule,\n  ReturnRequestDetailModule,\n  ReturnRequestListModule,\n  UpdateEmailModule,\n  UpdatePasswordModule,\n  UpdateProfileModule,\n} from './myaccount/index';\nimport {\n  BreadcrumbModule,\n  CategoryNavigationModule,\n  FooterNavigationModule,\n  NavigationModule,\n  SearchBoxModule,\n} from './navigation/index';\nimport { OrderConfirmationModule } from './order-confirmation/index';\nimport {\n  ProductCarouselModule,\n  ProductFacetNavigationModule,\n  ProductIntroModule,\n  ProductListModule,\n  ProductReferencesModule,\n  ProductTabsModule,\n  StockNotificationModule,\n} from './product/index';\nimport { ProductImagesModule } from './product/product-images/product-images.module';\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\nimport { StoreFinderModule } from './storefinder/store-finder.module';\nimport { UserComponentModule } from './user/user.module';\nimport { WishListModule } from './wish-list/wish-list.module';\n\n@NgModule({\n  imports: [\n    AnonymousConsentManagementBannerModule,\n    AsmModule,\n    HamburgerMenuModule,\n    CmsParagraphModule,\n    LinkModule,\n    BannerModule,\n    CategoryNavigationModule,\n    NavigationModule,\n    FooterNavigationModule,\n    BreadcrumbModule,\n    SearchBoxModule,\n    SiteContextSelectorModule,\n    QualtricsModule,\n    AddressBookModule,\n    OrderHistoryModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n    ProductListModule,\n    ProductFacetNavigationModule,\n    ProductTabsModule,\n    ProductCarouselModule,\n    ProductReferencesModule,\n    OrderDetailsModule,\n    PaymentMethodsModule,\n    UpdateEmailModule,\n    UpdatePasswordModule,\n    UpdateProfileModule,\n    ConsentManagementModule,\n    CloseAccountModule,\n    CartComponentModule,\n    TabParagraphContainerModule,\n    OrderConfirmationModule,\n    StoreFinderModule,\n    ProductImagesModule,\n    ProductSummaryModule,\n    ProductVariantsModule,\n    ProductIntroModule,\n    CheckoutComponentModule,\n    ForgotPasswordModule,\n    ResetPasswordModule,\n    BannerCarouselModule,\n    UserComponentModule,\n    MyCouponsModule,\n    WishListModule,\n    NotificationPreferenceModule,\n    MyInterestsModule,\n    StockNotificationModule,\n  ],\n})\nexport class CmsLibModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductDetailsUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPDPMatcher = getSuffixUrlMatcher({\n      marker: 'p',\n      paramName: 'productCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PDP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / p / :productCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_DETAILS_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_DETAILS_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductDetailsUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          product: {\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductListingUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPLPMatcher = getSuffixUrlMatcher({\n      marker: 'c',\n      paramName: 'categoryCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PLP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / c / :categoryCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_LISTING_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_LISTING_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductListingUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          category: {\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\nexport const b2cLayoutConfig: LayoutConfig = {\n  // deferredLoading: {\n  //   strategy: DeferLoadingStrategy.DEFER,\n  //   intersectionMargin: '50px',\n  // },\n  layoutSlots: {\n    header: {\n      lg: {\n        slots: [\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n    },\n    navigation: {\n      lg: { slots: [] },\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      pageFold: 'Section2B',\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      pageFold: 'Section2',\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\n    },\n    ProductGridPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsListSlot',\n        'Section4',\n      ],\n    },\n    SearchResultsGridPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsGridSlot',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      lg: {\n        pageFold: 'UpSelling',\n      },\n\n      pageFold: 'Summary',\n\n      slots: [\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n    CheckoutLoginPageTemplate: {\n      slots: ['RightContentSlot'],\n    },\n  },\n};\n","import { MediaConfig } from '../../shared/components/media/media.config';\n\nexport const mediaConfig: MediaConfig = {\n  mediaFormats: {\n    mobile: {\n      width: 400,\n    },\n    tablet: {\n      width: 770,\n    },\n    desktop: {\n      width: 1140,\n    },\n    widescreen: {\n      width: 1400,\n    },\n    // product media\n    cartIcon: {\n      width: 65,\n    },\n    thumbnail: {\n      width: 96,\n    },\n    product: {\n      width: 284,\n    },\n    zoom: {\n      width: 515,\n    },\n  },\n};\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\nimport {\n  AnonymousConsentsModule,\n  AuthModule,\n  CartModule,\n  CheckoutModule,\n  CmsModule,\n  ConfigInitializerModule,\n  ConfigModule,\n  ConfigValidatorModule,\n  FeaturesConfigModule,\n  GlobalMessageModule,\n  I18nModule,\n  ProcessModule,\n  ProductModule,\n  provideConfigFromMetaTags,\n  StateModule,\n  UserModule,\n} from '@spartacus/core';\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MediaModule } from '../shared/components/media/media.module';\nimport { ViewConfigModule } from '../shared/config/view-config.module';\n\n@NgModule({\n  imports: [\n    StateModule.forRoot(),\n    AuthModule.forRoot(),\n    AnonymousConsentsModule.forRoot(),\n    ConfigModule.forRoot(),\n    ConfigInitializerModule.forRoot(),\n    ConfigValidatorModule.forRoot(),\n    RoutingModule.forRoot(),\n    I18nModule.forRoot(),\n    CmsModule.forRoot(),\n    GlobalMessageModule.forRoot(),\n    ProcessModule.forRoot(),\n    CartModule.forRoot(),\n    CheckoutModule.forRoot(),\n    UserModule.forRoot(),\n    ProductModule.forRoot(),\n    ViewConfigModule.forRoot(),\n    FeaturesConfigModule.forRoot('2.0'),\n    LayoutModule,\n    MediaModule.forRoot(),\n  ],\n  exports: [LayoutModule],\n  providers: [...provideConfigFromMetaTags()],\n})\nexport class StorefrontFoundationModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  ExternalRoutesModule,\n  OccModule,\n  PersonalizationModule,\n  provideConfig,\n  SiteContextModule,\n  SmartEditModule,\n} from '@spartacus/core';\nimport { AsmModule } from '../cms-components/asm/asm.module';\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\nimport { MainModule } from '../layout/main/main.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n    }),\n\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\n    // since we might have conflicting interceptor logic. See #5461.\n    AsmModule,\n\n    StorefrontFoundationModule,\n    MainModule,\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n\n    SmartEditModule.forRoot(), // should be custom\n    PersonalizationModule.forRoot(), // should be custom\n\n    // opt-in explicitly\n    OccModule.forRoot(),\n    ProductDetailsPageModule,\n    ProductListingPageModule,\n    ExternalRoutesModule.forRoot(),\n  ],\n  exports: [MainModule, StorefrontFoundationModule],\n})\nexport class StorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<StorefrontModule> {\n    return {\n      ngModule: StorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideConfig,\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { b2cLayoutConfig, mediaConfig } from './config/index';\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\nimport { StorefrontModule } from './storefront.module';\n\n@NgModule({\n  imports: [\n    StorefrontModule,\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n  ],\n  providers: [\n    provideDefaultConfig({\n      pwa: {\n        enabled: true,\n        addToHomeScreen: true,\n      },\n    }),\n    provideDefaultConfig(b2cLayoutConfig),\n    provideDefaultConfig(mediaConfig),\n    provideDefaultConfigFactory(defaultCmsContentConfig),\n  ],\n  exports: [StorefrontModule],\n})\nexport class B2cStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2cStorefrontModule> {\n    return {\n      ngModule: B2cStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n"],"names":["ICON_TYPE","Injectable","Config","IconResourceType","WindowRef","DomSanitizer","ElementRef","Renderer2","Input","Component","NgModule","CommonModule","provideDefaultConfig","NgbModalRef","NgbModal","Subscription","combineLatest","take","distinctUntilChanged","tap","AnonymousConsentsConfig","AnonymousConsentsService","I18nModule","FeaturesConfigModule","DeferLoadingStrategy","of","isPlatformServer","CmsConfig","Inject","PLATFORM_ID","CmsService","Injector","resolveApplicable","isDevMode","Optional","ViewContainerRef","DynamicAttributeService","Directive","Observable","ComponentFactoryResolver","AuthService","ActiveCartService","CheckoutService","CheckoutDeliveryService","CheckoutPaymentService","PageMetaService","FeatureConfigService","GlobalMessageService","TranslationService","KymaService","OccEndpointsService","ProductService","ProductSearchService","ProductReviewService","ProductReferenceService","SearchboxService","RoutingService","CurrencyService","LanguageService","BaseSiteService","UserService","UserAddressService","UserConsentService","UserOrderService","UserPaymentService","UserNotificationPreferenceService","UserInterestsService","SelectiveCartService","NgZone","isPlatformBrowser","DOCUMENT","from","switchMap","mergeMap","AsmAuthService","GlobalMessageType","HostBinding","ViewEncapsulation","SkipLinkScrollPosition","BehaviorSubject","ChangeDetectionStrategy","DIALOG_TYPE","LAUNCH_CALLER","Location","APP_INITIALIZER","AsmConfig","ChangeDetectorRef","Pipe","EventEmitter","Validators","FormBuilder","Output","debounceTime","AsmService","ViewChild","map","BREAKPOINT","RouterModule","UrlModule","startWith","HostListener","ReactiveFormsModule","PaginationItemType","PaginationNavigationPosition","ActivatedRoute","NgSelectModule","FormsModule","HttpClientModule","fromEvent","filter","_a","LANGUAGE_CONTEXT_ID","CURRENCY_CONTEXT_ID","ContextServiceMap","SiteContextModule","SiteContextType","shareReplay","PromotionLocation","EMAIL_PATTERN","PASSWORD_PATTERN","AsmCoreModule","ProductScope","FormGroup","FormControl","CartVoucherService","CustomerCouponService","NgbModule","InjectionToken","WishListService","CartModule","CheckoutStepType","DeliveryModePreferences","RoutingConfigService","AuthRedirectService","OCC_USER_ID_ANONYMOUS","skipWhile","Router","withLatestFrom","OutletPosition","ConfigModule","router","NavigationStart","TemplateRef","first","flatMap","ComponentFactory","provideConfig","ServiceWorkerModule","SwRegistrationOptions","PageRobotsMeta","Title","Meta","SecurityContext","RendererFactory2","ANONYMOUS_CONSENT_STATUS","concat","scan","AuthGuard","endWith","isObservable","TranslationChunkService","PageType","SemanticPathService","ProtectedRoutesGuard","CoreRoutingModule","ViewChildren","NotAuthGuard","AmendOrderType","formatCurrency","getCurrencySymbol","OrderReturnRequestService","NgbActiveModal","observeOn","asyncScheduler","CmsPageTitleModule","NavigationEnd","pluck","ViewModes","FacetGroupCollapsedState","HttpUrlEncodingCodec","asapScheduler","delayWhen","interval","VariantType","VariantQualifier","OccConfig","InfiniteScrollModule","ProductDetailOutlets","NotificationType","StoreDataService","StoreFinderService","GoogleMapRendererService","StoreFinderConfig","NgbTabsetModule","StoreFinderCoreModule","ProtectedRoutesService","inject","UrlMatcherService","DEFAULT_URL_MATCHER","StateModule","AuthModule","AnonymousConsentsModule","ConfigInitializerModule","ConfigValidatorModule","CmsModule","GlobalMessageModule","ProcessModule","CheckoutModule","UserModule","ProductModule","provideConfigFromMetaTags","StoreModule","EffectsModule","SmartEditModule","PersonalizationModule","OccModule","ExternalRoutesModule","provideDefaultConfigFactory"],"mappings":"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"}