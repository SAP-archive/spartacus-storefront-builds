{"version":3,"file":"spartacus-storefront.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@spartacus/storefront/shared/components/modal/modal-ref.ts","ng://@spartacus/storefront/shared/components/modal/modal.service.ts","ng://@spartacus/storefront/cms-components/product/current-product.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng://@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng://@spartacus/storefront/shared/directives/auto-focus/auto-focus.directive.ts","ng://@spartacus/storefront/shared/directives/auto-focus/auto-focus.directive.module.ts","ng://@spartacus/storefront/shared/components/card/card.component.ts","ng://@spartacus/storefront/shared/components/card/card.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng://@spartacus/storefront/layout/config/layout-config.ts","ng://@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng://@spartacus/storefront/shared/components/media/media.service.ts","ng://@spartacus/storefront/shared/components/media/media.component.ts","ng://@spartacus/storefront/shared/components/media/media.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng://@spartacus/storefront/shared/directives/only-number/only-number.directive.ts","ng://@spartacus/storefront/shared/directives/only-number/only-number.directive.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng://@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng://@spartacus/storefront/shared/utils/forms/form-utils.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng://@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/cart.module.ts","ng://@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/checkout-config.service.ts","ng://@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng://@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng://@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng://@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng://@spartacus/storefront/cms-components/user/login/login.component.ts","ng://@spartacus/storefront/cms-structure/page/component/component-mapper.service.ts","ng://@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng://@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng://@spartacus/storefront/cms-components/user/login/login.module.ts","ng://@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng://@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng://@spartacus/storefront/cms-components/user/register/register.component.ts","ng://@spartacus/storefront/cms-components/user/register/register.module.ts","ng://@spartacus/storefront/cms-components/user/user.module.ts","ng://@spartacus/storefront/cms-structure/services/cms-mapping.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng://@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng://@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng://@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng://@spartacus/storefront/cms-structure/seo/seo.module.ts","ng://@spartacus/storefront/layout/main/storefront.component.ts","ng://@spartacus/storefront/layout/main/main.module.ts","ng://@spartacus/storefront/layout/layout.module.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng://@spartacus/storefront/cms-components/content/link/link.component.ts","ng://@spartacus/storefront/cms-components/content/link/link.module.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-card/address-card.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng://@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng://@spartacus/storefront/cms-components/cms-lib.module.ts","ng://@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng://@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng://@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng://@spartacus/storefront/cms-structure/routing/routing.module.ts","ng://@spartacus/storefront/recipes/storefront-foundation.module.ts","ng://@spartacus/storefront/recipes/storefront.module.ts","ng://@spartacus/storefront/recipes/b2c-storefront.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductService, RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  getProduct(): Observable<Product> {\n    return this.routingService.getRouterState().pipe(\n      map(state => state.state.params['productCode']),\n      filter(Boolean),\n      switchMap((productCode: string) => this.productService.get(productCode))\n    );\n  }\n}\n","export enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n}\n\nexport abstract class IconConfig {\n  icon?: {\n    /**\n     * Each icon type can be configured with a so-called symbol. The symbol will\n     * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n     * a font based icon. The following configuration would map to a fontawesome\n     * icon:\n     *\n     * icon: {\n     *   symbols: {\n     *     CART: 'fas fa-shopping-cart'\n     *   }\n     * }\n     */\n    symbols?: {\n      [ICON_TYPE: string]: string;\n    };\n\n    /**\n     * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n     * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n     * is used for the SVG xlink reference.\n     */\n    resources?: IconConfigResource[];\n  };\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: ICON_TYPE[];\n}\n\nexport enum IconResourceType {\n  SVG = 'svg',\n  LINK = 'link',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(protected winRef: WindowRef, protected config: IconConfig) {}\n\n  /**\n   * Indicates whether the given icon type is configured to use SVG.\n   */\n  useSvg(iconType: ICON_TYPE): boolean {\n    return (\n      this.config.icon.resources &&\n      !!this.config.icon.resources.find(\n        res =>\n          res.types &&\n          res.type === IconResourceType.SVG &&\n          res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config has been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  getSvgPath(iconType: ICON_TYPE): string {\n    const svgResource = this.config.icon.resources.find(\n      res =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (resource && resource.url) {\n      if (!this.loadedResources.includes(resource.url)) {\n        this.loadedResources.push(resource.url);\n        const head = this.winRef.document.getElementsByTagName('head')[0];\n        const link = this.winRef.document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = resource.url;\n        head.appendChild(link);\n      }\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.icon.resources) {\n      return;\n    }\n\n    let resource = this.config.icon.resources.find(\n      res =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.icon.resources.find(\n        res => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  private getSymbol(iconType: ICON_TYPE | string) {\n    if (\n      this.config.icon &&\n      this.config.icon.symbols &&\n      this.config.icon.symbols[iconType]\n    ) {\n      return this.config.icon.symbols[iconType];\n    }\n  }\n}\n","import { Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE } from './icon.model';\n\n@Component({\n  selector: 'cx-icon',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The type of the icon which maps to the icon link\n   * in the svg icon sprite.\n   */\n  _type: ICON_TYPE;\n  @Input('type')\n  set type(type: ICON_TYPE) {\n    this._type = type;\n    this.addStyleClasses(type);\n  }\n\n  /**\n   * Keeps the given style classes so that we can\n   * clean them up when the icon changes\n   */\n  @HostBinding('class') styleClasses = '';\n\n  /**\n   * Style class names from the host element are taken into account\n   * when classes are set dynamically.\n   */\n  private staticStyleClasses: string;\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>\n  ) {}\n\n  /**\n   * Indicates whether the icon is configured to use SVG or not.\n   */\n  get useSvg(): boolean {\n    return this.iconLoader.useSvg(this._type);\n  }\n\n  /**\n   * Returns the path to the svg symbol. The path could include an\n   * external URL to an svg (sprite) file, but can also reference\n   * an existing SVG symbol in the DOM.\n   */\n  get svgPath(): string {\n    return this.iconLoader.getSvgPath(this._type);\n  }\n\n  /**\n   * Adds the style classes and the link resource (if availabe).\n   */\n  private addStyleClasses(type: ICON_TYPE) {\n    if (this.useSvg) {\n      return;\n    }\n\n    if (this.staticStyleClasses === undefined) {\n      this.staticStyleClasses = this.elementRef.nativeElement.classList.value\n        ? this.elementRef.nativeElement.classList.value + ' '\n        : '';\n    }\n\n    this.styleClasses =\n      this.staticStyleClasses + this.iconLoader.getStyleClasses(type);\n\n    this.iconLoader.addLinkResource(type);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Config, ConfigModule } from '@spartacus/core';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\nimport { IconConfig } from './icon.model';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule, ConfigModule.withConfig(fontawesomeIconConfig)],\n  providers: [{ provide: IconConfig, useExisting: Config }],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Cart, CartService, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n\n  quantity = 0;\n  firstUpdate = true;\n  showItemIncrLabel: boolean;\n\n  @ViewChild('dialog', { static: false, read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = this.fb.group({});\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: CartService,\n    protected fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.entry$ = this.entry$.pipe(\n      tap(entry => {\n        if (entry) {\n          const { code } = entry.product;\n          if (!this.form.controls[code]) {\n            this.form.setControl(code, this.createEntryFormGroup(entry));\n          } else {\n            const entryForm = this.form.controls[code] as FormGroup;\n            entryForm.controls.quantity.setValue(entry.quantity);\n          }\n          this.form.markAsPristine();\n\n          // Announce in header if Add To Cart button has incremented product\n          this.showItemIncrLabel = this.firstUpdate && entry.quantity > 1;\n          // Any updates after the first will be flagged as false\n          this.firstUpdate = false;\n        }\n      })\n    );\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  removeEntry(item: OrderEntry): void {\n    this.cartService.removeEntry(item);\n    delete this.form.controls[item.product.code];\n    this.dismissModal('Removed');\n  }\n\n  updateEntry({ item, updatedQuantity }): void {\n    this.cartService.updateEntry(item.entryNumber, updatedQuantity);\n  }\n\n  private createEntryFormGroup(entry: OrderEntry): FormGroup {\n    return this.fb.group({\n      entryNumber: entry.entryNumber,\n      quantity: entry.quantity,\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CartService, OrderEntry } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ModalRef, ModalService } from '../../../shared/components/modal/index';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock = false;\n  quantity = 1;\n\n  cartEntry$: Observable<OrderEntry>;\n\n  subscription: Subscription;\n\n  constructor(\n    protected cartService: CartService,\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    if (this.productCode) {\n      this.cartEntry$ = this.cartService.getEntry(this.productCode);\n      this.hasStock = true;\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(Boolean))\n        .subscribe(product => {\n          this.productCode = product.code;\n\n          if (\n            product.stock &&\n            product.stock.stockLevelStatus !== 'outOfStock' &&\n            product.stock.stockLevel > 0\n          ) {\n            this.maxQuantity = product.stock.stockLevel;\n            this.hasStock = true;\n          } else {\n            this.hasStock = false;\n          }\n\n          this.cartEntry$ = this.cartService.getEntry(this.productCode);\n\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    if (!this.productCode || this.quantity <= 0) {\n      return;\n    }\n    this.openModal();\n    this.cartService.addEntry(this.productCode, this.quantity);\n  }\n\n  private openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.entry$ = this.cartEntry$;\n    modalInstance.cart$ = this.cartService.getActive();\n    modalInstance.loaded$ = this.cartService.getLoaded();\n    modalInstance.quantity = this.quantity;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[cxAutoFocus]',\n})\nexport class AutoFocusDirective implements AfterViewInit {\n  constructor(private hostElement: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.hostElement.nativeElement.focus();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AutoFocusDirective } from './auto-focus.directive';\n\n@NgModule({\n  declarations: [AutoFocusDirective],\n  exports: [AutoFocusDirective],\n})\nexport class AutoFocusDirectiveModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n  @Input()\n  fitToContainer = false;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { CardComponent } from './card.component';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { fromEvent, iif, Observable, of } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  startWith,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items shown in the carousel is calculated dividing\n   * the host element width with the minimum item width.\n   */\n  getSize(nativeElement: HTMLElement, itemWidth: number): Observable<number> {\n    return iif(\n      () => Boolean(this.winRef.nativeWindow),\n      fromEvent(this.winRef.nativeWindow, 'resize').pipe(\n        map(_ => (nativeElement as HTMLElement).clientWidth),\n        startWith((nativeElement as HTMLElement).clientWidth),\n        debounceTime(100),\n        map(totalWidth => Math.round(totalWidth / itemWidth)),\n        distinctUntilChanged()\n      ),\n      of(3)\n    );\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CarouselItem } from './carousel.model';\nimport { CarouselService } from './carousel.service';\n\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n})\nexport class CarouselComponent implements OnInit {\n  @Input() title: string;\n\n  private _items: CarouselItem[];\n  @Input('items')\n  set items(value: CarouselItem[]) {\n    this._items = value;\n    this.select();\n  }\n  get items(): CarouselItem[] {\n    return this._items;\n  }\n\n  /** Indicates the current active item in carousel (if any)  */\n  @Input() activeItem: number;\n\n  /**\n   * Specifies the min pixel used per product. This value is used\n   * to calculate the amount of items we can fit into the available with\n   * of the host element. The number of items is not related the breakpoints,\n   * which means that a carousel can be placed in different layouts,\n   * regardless of the overall size.\n   */\n  @Input() minItemPixelSize = 300;\n\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  @Output() open = new EventEmitter<CarouselItem>();\n\n  /**\n   * The group with items which is currently active.\n   */\n  activeSlide = 0;\n\n  /**\n   * The number of items that should be rendered in the carousel.\n   */\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    this.size$ = this.service\n      .getSize(this.el.nativeElement, this.minItemPixelSize)\n      .pipe(tap(() => this.select()));\n  }\n\n  select(slide = 0) {\n    this.activeSlide = slide;\n  }\n\n  onOpen(groupIndex: number, itemIndex: number): void {\n    this.select(groupIndex);\n    this.open.emit(this.items[groupIndex + itemIndex]);\n  }\n}\n","import { ServerConfig } from '@spartacus/core';\n\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\nexport abstract class LayoutConfig extends ServerConfig {\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\n  breakpoints?: {\n    [BREAKPOINT.xs]?: number;\n    [BREAKPOINT.sm]?: number;\n    [BREAKPOINT.md]?: number;\n    [BREAKPOINT.lg]?: number;\n  };\n  layoutSlots?: LayoutSlotConfig;\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { fromEvent, Observable, of } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  startWith,\n} from 'rxjs/operators';\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\n\nconst DEFAULT_BREAKPOINTS = {\n  [BREAKPOINT.xs]: 576,\n  [BREAKPOINT.sm]: 768,\n  [BREAKPOINT.md]: 992,\n  [BREAKPOINT.lg]: 1200,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\n\n  getSize(breakpoint: BREAKPOINT): number {\n    return this.config.breakpoints\n      ? this.config.breakpoints[breakpoint]\n      : DEFAULT_BREAKPOINTS[breakpoint];\n  }\n\n  get breakpoint$(): Observable<BREAKPOINT> {\n    if (!this.window) {\n      return of(BREAKPOINT.xs);\n    }\n    return fromEvent(this.window, 'resize').pipe(\n      debounceTime(300),\n      startWith({ target: this.window }),\n      map(event => this.getBreakpoint((<Window>event.target).innerWidth)),\n      distinctUntilChanged()\n    );\n  }\n\n  get breakpoints(): BREAKPOINT[] {\n    return [\n      BREAKPOINT.xs,\n      BREAKPOINT.sm,\n      BREAKPOINT.md,\n      BREAKPOINT.lg,\n      BREAKPOINT.xl,\n    ];\n  }\n\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    const breakpoint = this.getClosest(windowWidth);\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\n  }\n\n  protected getClosest(windowWidth?: number): BREAKPOINT {\n    if (!windowWidth) {\n      windowWidth = this.window.innerWidth;\n    }\n\n    return windowWidth < this.getSize(BREAKPOINT.xs)\n      ? BREAKPOINT.xs\n      : this.breakpoints.reverse().find(br => windowWidth >= this.getSize(br));\n  }\n\n  get window(): Window {\n    return this.winRef.nativeWindow;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '@spartacus/core';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport { Media, MediaFormats } from './media.model';\n\n/** the default format is used for browsers that do not support   */\nconst DEFAULT_MEDIA_FORMAT = 'tablet';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  constructor(\n    protected config: OccConfig,\n    protected breakpointService: BreakpointService\n  ) {}\n\n  private get mediaFormats(): MediaFormats[] {\n    return [\n      {\n        code: 'mobile',\n        threshold: this.breakpointService.getSize(BREAKPOINT.xs),\n      },\n      {\n        code: 'tablet',\n        threshold: this.breakpointService.getSize(BREAKPOINT.sm),\n      },\n      {\n        code: 'desktop',\n        threshold: this.breakpointService.getSize(BREAKPOINT.md),\n      },\n      {\n        code: 'widescreen',\n        threshold: this.breakpointService.getSize(BREAKPOINT.lg),\n      },\n    ];\n  }\n\n  getMedia(container, format?: string, alt?: string): Media {\n    return {\n      src: this.getMainImage(container, format),\n      srcset: this.getSrcSet(container),\n      alt: alt || this.getAlt(container, format),\n    };\n  }\n\n  private getMainImage(media, format?: string): string {\n    if (media && media[format || DEFAULT_MEDIA_FORMAT]) {\n      return this.getImageUrl(media[format || DEFAULT_MEDIA_FORMAT].url);\n    } else if (media && media.url) {\n      return this.getImageUrl(media.url);\n    } else {\n      return null;\n    }\n  }\n\n  private getAlt(media, format?: string): string {\n    if (!media) {\n      return undefined;\n    } else if (media[format || DEFAULT_MEDIA_FORMAT]) {\n      return media[format || DEFAULT_MEDIA_FORMAT].altText;\n    } else if (media.altText) {\n      return media.altText;\n    }\n  }\n\n  /**\n   * builds a set of images aligned with the breakpoints\n   */\n  private getSrcSet(media): string {\n    if (!media) {\n      return undefined;\n    }\n    const srcset = this.mediaFormats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.getImageUrl(media[format.code].url)} ${\n          format.threshold\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  private getImageUrl(url: string): string {\n    if (!url) {\n      return null;\n    }\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\n  }\n\n  private getBaseUrl(): string {\n    return (\n      this.config.backend.media.baseUrl || this.config.backend.occ.baseUrl || ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Media } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container: any;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  private create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container,\n      this.format,\n      this.alt\n    );\n    if (!this.media.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  private handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst COUNTER_CONTROL_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line */\n  useExisting: forwardRef(() => ItemCounterComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  providers: [COUNTER_CONTROL_ACCESSOR],\n})\nexport class ItemCounterComponent\n  implements OnInit, ControlValueAccessor, OnChanges, OnDestroy {\n  @ViewChild('itemCounterInput', { static: false })\n  public input: ElementRef;\n  @ViewChild('incrementBtn', { static: false })\n  public incrementBtn: ElementRef;\n  @ViewChild('decrementBtn', { static: false })\n  public decrementBtn: ElementRef;\n\n  value = 0;\n  @Input()\n  step = 1;\n  @Input()\n  min: number;\n  @Input()\n  max: number;\n  @Input()\n  async = false;\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isValueChangeable = false;\n\n  @Output()\n  update = new EventEmitter<number>();\n\n  focus: boolean;\n\n  isValueOutOfRange = false;\n  inputValue: FormControl = new FormControl({\n    disabled: this.isValueChangeable,\n  });\n\n  subscription: Subscription;\n\n  ngOnInit() {\n    this.writeValue(this.min || 0);\n    this.subscription = this.inputValue.valueChanges\n      .pipe(debounceTime(300))\n      .subscribe(value => {\n        if (value) {\n          this.manualChange(Number(value));\n        }\n      });\n  }\n\n  ngOnChanges() {\n    if (this.cartIsLoading) {\n      this.inputValue.disable({\n        onlySelf: true,\n        emitEvent: false,\n      });\n    } else {\n      this.inputValue.enable({\n        onlySelf: true,\n        emitEvent: false,\n      });\n    }\n  }\n\n  constructor(private renderer: Renderer2) {}\n\n  onTouch: Function = () => {};\n  onModelChange: Function = (_rating: number) => {};\n\n  /**\n   * If value is too small it will be set to min, if is too big it will be set to max.\n   */\n  adjustValueInRange(incomingValue: number): number {\n    return incomingValue < this.min || !this.min\n      ? this.min\n      : incomingValue > this.max || !this.max\n      ? this.max\n      : incomingValue;\n  }\n\n  /**\n   * Update model value and refresh input\n   */\n  manualChange(newValue: number): void {\n    newValue = this.adjustValueInRange(newValue);\n    this.updateValue(newValue);\n    /* We use the value from the input, however, this value\n      is not the correct value that should be displayed. The correct value to display\n      is this.value, which the parent updates if the async call succeed. If the call\n      fails, then the input will need to display this.value, and not what the user\n      recently typed in */\n    this.renderer.setProperty(this.input.nativeElement, 'value', newValue);\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    const handlers = {\n      ArrowDown: () => this.decrement(),\n      ArrowUp: () => this.increment(),\n    };\n\n    if (handlers[event.code]) {\n      handlers[event.code]();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.focus = false;\n    event.preventDefault();\n    event.stopPropagation();\n    this.onTouch();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.focus = true;\n    event.preventDefault();\n    event.stopPropagation();\n    this.onTouch();\n  }\n\n  /**\n   * Verify value that it can be incremented, if yes it does that.\n   */\n  increment(): void {\n    this.manualChange(this.value + this.step);\n    this.setFocus(true);\n  }\n\n  /**\n   * Verify value that it can be decremented, if yes it does that.\n   */\n  decrement(): void {\n    this.manualChange(this.value - this.step);\n    this.setFocus(false);\n  }\n\n  // ControlValueAccessor interface\n\n  registerOnTouched(fn: Function): void {\n    this.onTouch = fn;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  writeValue(value: number): void {\n    this.value = value || this.min || 0;\n    this.onModelChange(this.value);\n  }\n\n  /**\n   * Set up new value for input and emit event outside\n   */\n  updateValue(updatedQuantity: number): void {\n    if (!this.async) {\n      // If the async flag is true, then the parent component is responsible for updating the form\n      this.writeValue(updatedQuantity);\n    }\n\n    // Additionally, we emit a change event, so that users may optionally do something on change\n    this.update.emit(updatedQuantity);\n    this.onTouch();\n  }\n\n  /**\n   * Determines which HTML element should have focus at a given time\n   */\n  setFocus(isIncremented: boolean): void {\n    if (this.isMaxOrMinValueOrBeyond()) {\n      this.input.nativeElement.focus();\n    } else if (isIncremented) {\n      this.incrementBtn.nativeElement.focus();\n    } else {\n      this.decrementBtn.nativeElement.focus();\n    }\n  }\n\n  isMaxOrMinValueOrBeyond(): boolean {\n    return this.value >= this.max || this.value <= this.min;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[cxOnlyNumber]',\n})\nexport class OnlyNumberDirective {\n  previousValue = '';\n  integerUnsigned = '^[0-9]*$';\n  /**\n   * Class constructor\n   * @param hostElement\n   */\n  constructor(private hostElement: ElementRef, private renderer: Renderer2) {}\n\n  /**\n   * Event handler for host's change event\n   */\n  @HostListener('change')\n  onChange() {\n    this.validateValue(this.hostElement.nativeElement.value);\n  }\n\n  /**\n   * Event handler for host's change event\n   */\n  @HostListener('input')\n  onInput() {\n    this.validateValue(this.hostElement.nativeElement.value);\n  }\n\n  /**\n   * Event handler for host's paste event\n   * @param e\n   */\n  @HostListener('paste', ['$event'])\n  onPaste(e: ClipboardEvent) {\n    const value = e.clipboardData.getData('text/plain');\n    this.validateValue(value);\n    e.preventDefault();\n  }\n\n  /**\n   * Event handler for host's keyup event\n   * @param e\n   */\n  @HostListener('keyup', ['$event'])\n  onKeyUp(e: KeyboardEvent): void {\n    const value = e.target['value'];\n    this.validateValue(value);\n  }\n\n  /**\n   * Event handler for host's keydown event\n   * @param e\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent): void {\n    const originalValue: string = e.target['value'];\n    const key: string = this.getName(e);\n    const controlOrCommand = e.ctrlKey === true || e.metaKey === true;\n\n    // allowed keys apart from numeric characters\n    const allowedKeys = [\n      'Backspace',\n      'ArrowLeft',\n      'ArrowRight',\n      'Escape',\n      'Tab',\n    ];\n    // allow some non-numeric characters\n    if (\n      allowedKeys.includes(key) ||\n      // Allow: Ctrl+A and Command+A\n      (key === 'a' && controlOrCommand) ||\n      // Allow: Ctrl+C and Command+C\n      (key === 'c' && controlOrCommand) ||\n      // Allow: Ctrl+V and Command+V\n      (key === 'v' && controlOrCommand) ||\n      // Allow: Ctrl+X and Command+X\n      (key === 'x' && controlOrCommand)\n    ) {\n      // let it happen, don't do anything\n      return;\n    }\n\n    // save value before keydown event\n    this.previousValue = originalValue;\n\n    // allow number characters only\n    const isNumber = new RegExp(this.integerUnsigned).test(key);\n    if (isNumber) {\n      return;\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Test whether value is a valid number or not\n   * @param value\n   */\n  validateValue(value: string): void {\n    value = value.replace(/[^0-9]+/g, '');\n    this.renderer.setProperty(this.hostElement.nativeElement, 'value', value);\n  }\n\n  /**\n   * Get key's name\n   * @param e\n   */\n  getName(e: KeyboardEvent): string {\n    if (e.key) {\n      return e.key;\n    } else {\n      // for old browsers\n      if (e.keyCode && String.fromCharCode) {\n        switch (e.keyCode) {\n          case 8:\n            return 'Backspace';\n          case 9:\n            return 'Tab';\n          case 27:\n            return 'Escape';\n          case 37:\n            return 'ArrowLeft';\n          case 39:\n            return 'ArrowRight';\n          default:\n            return String.fromCharCode(e.keyCode);\n        }\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OnlyNumberDirective } from './only-number.directive';\n\n@NgModule({\n  declarations: [OnlyNumberDirective],\n  exports: [OnlyNumberDirective],\n})\nexport class OnlyNumberDirectiveModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ItemCounterComponent } from './item-counter.component';\nimport { OnlyNumberDirectiveModule } from '../../directives/only-number/only-number.directive.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OnlyNumberDirectiveModule,\n  ],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { Component, Input } from '@angular/core';\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent {\n  private readonly protocolRegex: RegExp = /^https?:\\/\\//i;\n\n  @Input() url: string | any[];\n  @Input() target: string;\n  @Input() class: string;\n  @Input() id: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  get routerUrl(): any[] {\n    if (typeof this.url === 'string') {\n      return [this.getAbsoluteUrl(this.url)];\n    }\n    return this.url;\n  }\n\n  isExternalUrl(): boolean {\n    return typeof this.url === 'string' && this.protocolRegex.test(this.url);\n  }\n\n  private getAbsoluteUrl(url: string) {\n    return url.startsWith('/') ? this.url : '/' + this.url;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\nconst PAGE_FIRST = 1;\nconst PAGE_WINDOW_SIZE = 3;\n\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  @Input() pagination: PaginationModel;\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  // Because pagination model uses indexes starting from 0,\n  // add 1 to get current page number\n  private getCurrentPageNumber() {\n    return this.pagination.currentPage + 1;\n  }\n\n  getPagePrevious(): number {\n    return this.getCurrentPageNumber() - 1;\n  }\n\n  getPageNext(): number {\n    return this.getCurrentPageNumber() + 1;\n  }\n\n  getPageIndicies(): Array<number> {\n    return Array(this.pagination.totalPages);\n  }\n\n  // Gets the minimum index of page numbers that can be shown by being within the page window range\n  getPageWindowMinIndex(): number {\n    return (\n      Math.floor(this.pagination.currentPage / PAGE_WINDOW_SIZE) *\n      PAGE_WINDOW_SIZE\n    );\n  }\n\n  // Gets the maximum index of page numbers that can be shown by being within the page window range\n  getPageWindowMaxIndex(): number {\n    return (\n      Math.floor(this.pagination.currentPage / PAGE_WINDOW_SIZE) *\n        PAGE_WINDOW_SIZE +\n      2\n    );\n  }\n\n  hasPages(): boolean {\n    return this.pagination.totalPages > 0;\n  }\n\n  onFirstPage(): boolean {\n    return this.pagination.currentPage === 0;\n  }\n\n  onLastPage(): boolean {\n    return this.pagination.currentPage === this.pagination.totalPages - 1;\n  }\n\n  onPageIndex(index: number): boolean {\n    return this.pagination.currentPage === index;\n  }\n\n  hidePageIndex(index: number): boolean {\n    return (\n      (this.getPageWindowMinIndex() > index ||\n        this.getPageWindowMaxIndex() < index) &&\n      (index > 0 && index < this.pagination.totalPages - 1)\n    );\n  }\n\n  showDots(index: number): boolean {\n    return (\n      this.hidePageIndex(index) &&\n      (index === this.getPageWindowMaxIndex() + 1 ||\n        index === this.getPageWindowMinIndex() - 1)\n    );\n  }\n\n  clickPageNo(page: number): number {\n    // Change page on valid index\n    if (\n      page >= PAGE_FIRST &&\n      page <= this.pagination.totalPages &&\n      page !== this.getCurrentPageNumber()\n    ) {\n      this.pageChange(page);\n      return page;\n    }\n\n    // Page stays the same on invalid index\n    return this.pagination.currentPage;\n  }\n\n  pageChange(page: number): void {\n    this.viewPageEvent.emit(page - 1);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule],\n  declarations: [PaginationComponent, SortingComponent],\n  exports: [PaginationComponent, SortingComponent],\n})\nexport class ListNavigationModule {}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { GlobalMessageModule, I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    IconModule,\n    I18nModule,\n    GlobalMessageModule.forRoot(),\n  ],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"LANGUAGE\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"CURRENCY\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap(items =>\n        this.getContext(context).pipe(\n          switchMap(ctx => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map(ctx => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe(service => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map(ctx => this.getInjectedService(ctx)),\n      filter(Boolean)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(map(data => data.context));\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  ContextServiceMap,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextModule,\n    IconModule,\n  ],\n  providers: [SiteContextComponentService],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent implements OnInit {\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interation is not provided.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = false;\n\n  /**\n   * The rating will be used to render some colorful stars in the UI.\n   */\n  @Input() rating: number;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  @Output() change = new EventEmitter<number>();\n\n  private initialRate = 0;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    this.setRate(this.rating, true);\n  }\n\n  setRate(value: number, force?: boolean): void {\n    if (!this.disabled || force) {\n      this.el.nativeElement.style.setProperty(\n        '--star-fill',\n        value || this.initialRate\n      );\n    }\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { FormGroup } from '@angular/forms';\n\n/**\n * Utility class when working with forms.\n */\nexport class FormUtils {\n  /**\n   *\n   * Checks is the `formControlName` field valid in the provided `form`.\n   *\n   * If it's NOT valid, the method returns `true`.\n   *\n   * @param form a form whose field to check\n   * @param formControlName a field name\n   * @param submitted is the form submitted\n   */\n  static isNotValidField(\n    form: FormGroup,\n    formControlName: string,\n    submitted: boolean\n  ): boolean {\n    return (\n      form.get(formControlName).invalid &&\n      (submitted ||\n        (form.get(formControlName).touched && form.get(formControlName).dirty))\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { CartService, PromotionResult } from '@spartacus/core';\nimport { Item } from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n})\nexport class CartItemListComponent implements OnInit {\n  @Input()\n  isReadOnly = false;\n\n  @Input()\n  hasHeader = true;\n\n  @Input()\n  items: Item[] = [];\n\n  @Input()\n  potentialProductPromotions: PromotionResult[] = [];\n\n  @Input()\n  cartIsLoading = false;\n\n  form: FormGroup = this.fb.group({});\n\n  constructor(protected cartService: CartService, protected fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.items.forEach(item => {\n      const { code } = item.product;\n      if (!this.form.controls[code]) {\n        this.form.setControl(code, this.createEntryFormGroup(item));\n      } else {\n        const entryForm = this.form.controls[code] as FormGroup;\n        entryForm.controls.quantity.setValue(item.quantity);\n      }\n    });\n  }\n\n  removeEntry(item: Item): void {\n    this.cartService.removeEntry(item);\n    delete this.form.controls[item.product.code];\n  }\n\n  updateEntry({\n    item,\n    updatedQuantity,\n  }: {\n    item: any;\n    updatedQuantity: number;\n  }): void {\n    this.cartService.updateEntry(item.entryNumber, updatedQuantity);\n  }\n\n  getPotentialProductPromotionsForItem(item: Item): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    if (\n      this.potentialProductPromotions &&\n      this.potentialProductPromotions.length > 0\n    ) {\n      for (const promotion of this.potentialProductPromotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private createEntryFormGroup(entry): FormGroup {\n    return this.fb.group({\n      entryNumber: entry.entryNumber,\n      quantity: entry.quantity,\n    });\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumendEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumendEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumendEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nexport interface Item {\n  product?: any;\n  quantity?: any;\n  basePrice?: any;\n  totalPrice?: any;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n})\nexport class CartItemComponent implements OnInit {\n  @Input()\n  compact = false;\n  @Input()\n  item: Item;\n  @Input()\n  potentialProductPromotions: any[];\n  @Input()\n  isReadOnly = false;\n  @Input()\n  cartIsLoading = false;\n\n  @Output()\n  remove = new EventEmitter<any>();\n  @Output()\n  update = new EventEmitter<any>();\n  @Output()\n  view = new EventEmitter<any>();\n\n  @Input()\n  parent: FormGroup;\n\n  ngOnInit() {}\n\n  isProductOutOfStock(product) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  updateItem(updatedQuantity: number) {\n    this.update.emit({ item: this.item, updatedQuantity });\n  }\n\n  removeItem() {\n    this.remove.emit(this.item);\n  }\n\n  viewItem() {\n    this.view.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule, MediaModule } from '../../../shared/index';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { AutoFocusDirectiveModule } from '../../../shared/directives/auto-focus/auto-focus.directive.module';\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    RouterModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n        },\n      },\n    }),\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    AutoFocusDirectiveModule,\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { CartService, Cart, OrderEntry } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n\n  constructor(protected cartService: CartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n    this.cartLoaded$ = this.cartService.getLoaded();\n  }\n\n  getAllPromotionsForCart(cart: Cart): Cart[] {\n    const potentialPromotions = cart.potentialOrderPromotions || [];\n    const appliedPromotions = cart.appliedOrderPromotions || [];\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartDetailsComponent } from './cart-details.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n  entryComponents: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { skipWhile, map, switchMap } from 'rxjs/operators';\n\nimport { CartService, RoutingService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    private cartService: CartService,\n    private routingService: RoutingService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.cartService.getLoaded().pipe(\n      skipWhile(loaded => !loaded),\n      switchMap(() => this.cartService.getActive()),\n      map(cart => {\n        if (this.cartService.isEmpty(cart)) {\n          this.routingService.go({ cxRoute: 'home' });\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n}\n","import { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { CartService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(private cartService: CartService) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      return combineLatest(slots$, this.cartService.getActive()).pipe(\n        map(([slots, cart]) => {\n          if (cart.totalItems) {\n            return slots.filter(slot => slot !== 'EmptyCartMiddleContent');\n          } else {\n            return slots.filter(\n              slot => slot !== 'TopContent' && slot !== 'CenterRightContentSlot'\n            );\n          }\n        })\n      );\n    }\n    return slots$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Cart, OrderEntry, CartService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n\n  constructor(protected cartService: CartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  UrlModule,\n  ConfigModule,\n  CmsConfig,\n  I18nModule,\n} from '@spartacus/core';\nimport { CartTotalsComponent } from './cart-totals.component';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n    CartSharedModule,\n    I18nModule,\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n  entryComponents: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.cartService\n    .getActive()\n    .pipe(map(cart => cart.deliveryItemsQuantity || 0));\n\n  total$: Observable<string> = this.cartService.getActive().pipe(\n    filter(cart => !!cart.totalPrice),\n    map(cart => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected cartService: CartService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CartModule,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CartModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n    UrlModule,\n    IconModule,\n    I18nModule,\n  ],\n  declarations: [MiniCartComponent],\n  entryComponents: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\n\n@NgModule({\n  imports: [\n    CartModule,\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n  ],\n  exports: [\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n  ],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useClass: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","import { CheckoutStep } from '../model/checkout-step.model';\n\nexport abstract class CheckoutConfig {\n  checkout?: {\n    steps: Array<CheckoutStep>;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { CheckoutConfig } from './config/checkout-config';\nimport { ActivatedRoute } from '@angular/router';\nimport { CheckoutStep, CheckoutStepType } from './model/checkout-step.model';\nimport { RoutingConfigService } from '@spartacus/core';\n\n@Injectable()\nexport class CheckoutConfigService {\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\n\n  constructor(\n    private checkoutConfig: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\n      : null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\n      : null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute) {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    let stepIndex: number;\n    let index = 0;\n    for (const step of this.steps) {\n      if (\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n      ) {\n        stepIndex = index;\n      } else {\n        index++;\n      }\n    }\n\n    return stepIndex >= 0 ? stepIndex : null;\n  }\n\n  private getStepUrlFromActivatedRoute(activatedRoute: ActivatedRoute) {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string) {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number {\n    return key && value\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\n      : null;\n  }\n}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutConfig } from './checkout-config';\nimport { CheckoutStepType } from '../model/checkout-step.model';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\n\nimport { CheckoutConfig } from '../config/checkout-config';\nimport { Observable, of } from 'rxjs';\nimport { RoutingConfigService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private config: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return of(\n      this.router.parseUrl(\n        this.routingConfigService.getRouteConfig(\n          this.config.checkout.steps[0].routeName\n        ).paths[0]\n      )\n    );\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AuthGuard, CmsConfig, Config, ConfigModule } from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [AuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  providers: [{ provide: CheckoutConfig, useExisting: Config }],\n  declarations: [CheckoutOrchestratorComponent],\n  entryComponents: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CartService, Cart } from '@spartacus/core';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected cartService: CartService) {\n    this.cart$ = this.cartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  entryComponents: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n})\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit() {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  entryComponents: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport {\n  RoutingService,\n  CartService,\n  Cart,\n  RoutingConfigService,\n} from '@spartacus/core';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected cartService: CartService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  cart$: Observable<Cart>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.cart$ = this.cartService.getActive();\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  entryComponents: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { CheckoutStep } from '../../model/checkout-step.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  Config,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressComponent],\n  entryComponents: [CheckoutProgressComponent],\n  exports: [CheckoutProgressComponent],\n  providers: [{ provide: CheckoutConfig, useExisting: Config }],\n})\nexport class CheckoutProgressModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CartService,\n  CheckoutService,\n  PaymentDetails,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n  filter,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutPaymentService: CheckoutPaymentService,\n    private cartService: CartService\n  ) {\n    this.cartId$ = this.cartService.getActive().pipe(\n      map(cartData => cartData.code),\n      filter(cartId => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap(cartId => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile(loaded => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ServerConfig, Address, RoutingConfigService } from '@spartacus/core';\nimport { CheckoutConfigService } from '../checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router,\n    private serverConfig: ServerConfig\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && !this.serverConfig.production) {\n      console.warn(\n        `Missing step with type ${\n          CheckoutStepType.SHIPPING_ADDRESS\n        } in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutDeliveryService,\n  DeliveryMode,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../checkout-config.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  currentDeliveryModeId: string;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n\n  changedOption: boolean;\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private routingService: RoutingService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.changedOption = false;\n\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\n\n    this.deliveryModeSub = this.checkoutDeliveryService\n      .getSelectedDeliveryMode()\n      .pipe(\n        map((deliveryMode: DeliveryMode) =>\n          deliveryMode && deliveryMode.code ? deliveryMode.code : null\n        )\n      )\n      .subscribe(code => {\n        if (!!code && code === this.currentDeliveryModeId) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        this.currentDeliveryModeId = code;\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n        }\n      });\n  }\n\n  changeMode(code: string): void {\n    if (code !== this.currentDeliveryModeId) {\n      this.changedOption = true;\n      this.currentDeliveryModeId = code;\n    }\n  }\n\n  next(): void {\n    if (this.changedOption) {\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\n    } else {\n      this.routingService.go(this.checkoutStepUrlNext);\n    }\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          guards: [AuthGuard, CartNotEmptyGuard, ShippingAddressSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  entryComponents: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutConfigService } from '../checkout-config.service';\nimport { ServerConfig, RoutingConfigService } from '@spartacus/core';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router,\n    private serverConfig: ServerConfig\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && !this.serverConfig.production) {\n      console.warn(\n        `Missing step with type ${\n          CheckoutStepType.DELIVERY_MODE\n        } in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Country, Region, UserAddressService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-billing-address-form',\n  templateUrl: './billing-address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillingAddressFormComponent implements OnInit {\n  regions$: Observable<Region[]>;\n\n  @Input()\n  billingAddress: FormGroup;\n\n  @Input()\n  countries$: Observable<Country[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  constructor(protected userAddressService: UserAddressService) {}\n\n  ngOnInit() {\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.billingAddress.get('region.isocodeShort');\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddress['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.billingAddress['controls'].region['controls'].isocodeShort.setValue(\n      region.isocodeShort\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { I18nModule } from '@spartacus/core';\nimport { BillingAddressFormComponent } from './billing-address-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    I18nModule,\n  ],\n  declarations: [BillingAddressFormComponent],\n  exports: [BillingAddressFormComponent],\n})\nexport class BillingAddressFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\n\ntype monthType = { id: number; name: string };\ntype yearType = { id: number; name: number };\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private checkboxSub: Subscription;\n  private addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n  months: monthType[] = [];\n  years: yearType[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  sameAsShippingAddress = true;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  addPaymentInfo = new EventEmitter<any>();\n\n  payment: FormGroup = this.fb.group({\n    defaultPayment: [false],\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    cardType: this.fb.group({\n      code: ['', Validators.required],\n    }),\n    expiryMonth: ['', Validators.required],\n    expiryYear: ['', Validators.required],\n    cvn: ['', Validators.required],\n  });\n\n  billingAddress: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    private fb: FormBuilder,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap(countries => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap(cardTypes => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n\n    this.checkboxSub = this.showSameAsShippingAddressCheckbox().subscribe(\n      (shouldShowCheckbox: boolean) => {\n        // this operation makes sure the checkbox is not checked if not shown and vice versa\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      }\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.next();\n        } else if (results.decision === 'REJECT') {\n          this.globalMessageService.add(\n            { key: 'addressForm.invalidAddress' },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n    for (let i = 0; i < 10; i++) {\n      this.years.push({ id: i + 1, name: year + i });\n    }\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push({ id: j, name: '0' + j.toString() });\n      } else {\n        this.months.push({ id: j, name: j.toString() });\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.payment.value.defaultPayment = !this.payment.value.defaultPayment;\n  }\n\n  paymentSelected(card: CardType): void {\n    this.payment['controls'].cardType['controls'].code.setValue(card.code);\n  }\n\n  monthSelected(month: monthType): void {\n    this.payment['controls'].expiryMonth.setValue(month.name);\n  }\n\n  yearSelected(year: yearType): void {\n    this.payment['controls'].expiryYear.setValue(year.name);\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  isContinueButtonDisabled(): boolean {\n    return (\n      this.payment.invalid ||\n      (!this.sameAsShippingAddress && this.billingAddress.invalid)\n    );\n  }\n\n  /**\n   * Check if the shipping address can also be a billing address\n   *\n   * @memberof PaymentFormComponent\n   */\n  showSameAsShippingAddressCheckbox(): Observable<boolean> {\n    return combineLatest([this.countries$, this.shippingAddress$]).pipe(\n      map(([countries, address]) => {\n        return !!countries.filter(\n          (country: Country): boolean =>\n            country.isocode === address.country.isocode\n        ).length;\n      })\n    );\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    };\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddress.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.checkoutDeliveryService.verifyAddress(this.billingAddress.value);\n    }\n  }\n\n  next(): void {\n    this.addPaymentInfo.emit({\n      paymentDetails: this.payment.value,\n      billingAddress: this.sameAsShippingAddress\n        ? null\n        : this.billingAddress.value,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.checkboxSub) {\n      this.checkboxSub.unsubscribe();\n    }\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../../shared/components/card/card.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { BillingAddressFormModule } from '../billing-address-form/billing-address-form.module';\nimport { PaymentFormComponent } from './payment-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    BillingAddressFormModule,\n    I18nModule,\n    IconModule,\n  ],\n  declarations: [PaymentFormComponent],\n  entryComponents: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  RoutingService,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutConfigService } from '../../checkout-config.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  newPaymentFormManuallyOpened = false;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  selectedPayment: PaymentDetails;\n  newPayment = false;\n\n  private getPaymentDetailsSub: Subscription;\n  private getDeliveryAddressSub: Subscription;\n\n  private deliveryAddress: Address;\n  private checkoutStepUrlNext: string;\n  private checkoutStepUrlPrevious: string;\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.getDeliveryAddressSub = this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n    this.getPaymentDetailsSub = this.checkoutPaymentService\n      .getPaymentDetails()\n      .pipe(\n        filter(\n          paymentInfo => paymentInfo && Object.keys(paymentInfo).length !== 0\n        ),\n        tap(paymentInfo => {\n          if (paymentInfo === this.selectedPayment || this.newPayment) {\n            this.routingService.go(this.checkoutStepUrlNext);\n          }\n        })\n      )\n      .subscribe(paymentInfo => {\n        if (!paymentInfo['hasError']) {\n          this.selectedPayment = paymentInfo;\n        } else {\n          Object.keys(paymentInfo).forEach(key => {\n            if (key.startsWith('InvalidField')) {\n              this.globalMessageService.add(\n                {\n                  key: 'paymentMethods.invalidField',\n                  params: { field: paymentInfo[key] },\n                },\n                GlobalMessageType.MSG_TYPE_ERROR\n              );\n            }\n          });\n          this.checkoutService.clearCheckoutStep(3);\n        }\n      });\n  }\n\n  getCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          textExpires,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          const card: Card = {\n            title: payment.defaultPayment ? textDefaultPaymentMethod : '',\n            textBold: payment.accountHolderName,\n            text: [payment.cardNumber, textExpires],\n            img: this.getCardIcon(payment.cardType.code),\n            actions: [{ name: textUseThisPayment, event: 'send' }],\n          };\n          if (this.selectedPayment && this.selectedPayment.id === payment.id) {\n            card.header = textSelected;\n          }\n          return card;\n        }\n      )\n    );\n  }\n\n  paymentMethodSelected(paymentDetails: PaymentDetails) {\n    this.selectedPayment = paymentDetails;\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  next(): void {\n    this.addPaymentInfo({\n      payment: this.selectedPayment,\n      newPayment: false,\n    });\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  addNewPaymentMethod({\n    paymentDetails,\n    billingAddress,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress: Address;\n  }): void {\n    this.addPaymentInfo({\n      payment: paymentDetails,\n      billingAddress,\n      newPayment: true,\n    });\n  }\n\n  addPaymentInfo({\n    newPayment,\n    payment,\n    billingAddress,\n  }: {\n    newPayment: boolean;\n    payment: PaymentDetails;\n    billingAddress?: Address;\n  }): void {\n    if (newPayment) {\n      payment.billingAddress = billingAddress\n        ? billingAddress\n        : this.deliveryAddress;\n\n      this.checkoutPaymentService.createPaymentDetails(payment);\n      this.checkoutService.clearCheckoutStep(3);\n      this.newPayment = newPayment;\n    } else if (this.selectedPayment && this.selectedPayment.id === payment.id) {\n      this.checkoutPaymentService.setPaymentDetails(payment);\n      this.checkoutService.clearCheckoutStep(3);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.getPaymentDetailsSub) {\n      this.getPaymentDetailsSub.unsubscribe();\n    }\n    if (this.getDeliveryAddressSub) {\n      this.getDeliveryAddressSub.unsubscribe();\n    }\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          guards: [\n            AuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  providers: [UserService],\n  declarations: [PaymentMethodComponent],\n  entryComponents: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { CheckoutService, RoutingService } from '@spartacus/core';\n\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  tAndCToggler = false;\n  placeOrderSubscription: Subscription;\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private routingService: RoutingService\n  ) {}\n\n  toggleTAndC(): void {\n    this.tAndCToggler = !this.tAndCToggler;\n  }\n\n  placeOrder(): void {\n    this.checkoutService.placeOrder();\n  }\n\n  ngOnInit(): void {\n    this.placeOrderSubscription = this.checkoutService\n      .getOrderDetails()\n      .pipe(filter(order => Object.keys(order).length !== 0))\n      .subscribe(() => {\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.placeOrderSubscription) {\n      this.placeOrderSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CheckoutModule,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PlaceOrderComponent } from './place-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  entryComponents: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ServerConfig, RoutingConfigService } from '@spartacus/core';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentDetailsSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router,\n    private serverConfig: ServerConfig\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.PAYMENT_DETAILS\n    );\n\n    if (!checkoutStep && !this.serverConfig.production) {\n      console.warn(\n        `Missing step with type ${\n          CheckoutStepType.PAYMENT_DETAILS\n        } in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map(paymentDetails =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n  Address,\n  Cart,\n  CartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Card } from '../../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent implements OnInit {\n  entries$: Observable<OrderEntry[]>;\n  cart$: Observable<Cart>;\n  deliveryMode$: Observable<DeliveryMode>;\n  countryName$: Observable<string>;\n  deliveryAddress$: Observable<Address>;\n  paymentDetails$: Observable<PaymentDetails>;\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected userAddressService: UserAddressService,\n    protected cartService: CartService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService.getEntries();\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\n\n    this.deliveryMode$ = this.checkoutDeliveryService\n      .getSelectedDeliveryMode()\n      .pipe(\n        tap((selected: DeliveryMode) => {\n          if (selected === null) {\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\n          }\n        })\n      );\n\n    this.countryName$ = this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address.country.isocode)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress.country.isocode;\n        }\n\n        let region = '';\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [deliveryMode.description],\n        };\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          guards: [\n            AuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n            PaymentDetailsSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  entryComponents: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\nimport { map, tap, switchMap } from 'rxjs/operators';\n\nimport {\n  Address,\n  AddressValidation,\n  CheckoutDeliveryService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  address: FormGroup = this.fb.group({\n    defaultAddress: [false],\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap(countries => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map(titles => {\n        const noneTitle = { code: '', name: 'Title' };\n        return [noneTitle, ...titles];\n      })\n    );\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.address.get('region.isocode');\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.submitAddress.emit(this.address.value);\n        } else if (results.decision === 'REJECT') {\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n          if (\n            results.errors.errors.some(error => error.subject === 'titleCode')\n          ) {\n            this.globalMessageService.add(\n              { key: 'addressForm.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          } else {\n            this.globalMessageService.add(\n              { key: 'addressForm.invalidAddress' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    if (this.addressData) {\n      this.address.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n  }\n\n  titleSelected(title: Title): void {\n    this.address['controls'].titleCode.setValue(title.code);\n  }\n\n  countrySelected(country: Country): void {\n    this.address['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.address['controls'].region['controls'].isocode.setValue(\n      region.isocode\n    );\n  }\n\n  toggleDefaultAddress(): void {\n    this.address['controls'].defaultAddress.setValue(\n      this.address.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    this.checkoutDeliveryService.verifyAddress(this.address.value);\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.address.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(address => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.address.value.titleCode,\n                phone: this.address.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.address.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.checkoutDeliveryService.clearAddressVerificationResults();\n\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { AutoFocusDirectiveModule } from '../../../../../shared/directives/auto-focus/auto-focus.directive.module';\nimport { IconModule } from '../../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    AutoFocusDirectiveModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  entryComponents: [SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent],\n})\nexport class AddressFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Address,\n  CartService,\n  CheckoutDeliveryService,\n  RoutingService,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutConfigService } from '../../checkout-config.service';\nimport { CheckoutStepType } from '../../model/checkout-step.model';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit, OnDestroy {\n  existingAddresses$: Observable<Address[]>;\n  newAddressFormManuallyOpened = false;\n  cards: Card[] = [];\n  isLoading$: Observable<boolean>;\n  selectedAddress: Address;\n  goTo: CheckoutStepType;\n  setAddress: Address;\n  setAddressSub: Subscription;\n  selectedAddressSub: Subscription;\n  selectedAddress$: BehaviorSubject<Address> = new BehaviorSubject<Address>(\n    null\n  );\n  cards$: Observable<CardWithAddress[]>;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected cartService: CartService,\n    protected routingService: RoutingService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.goTo = null;\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = 'cart';\n\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\n    this.existingAddresses$ = this.userAddressService.getAddresses();\n    this.cards$ = combineLatest([\n      this.existingAddresses$,\n      this.selectedAddress$.asObservable(),\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          addresses,\n          selected,\n          textDefaultShippingAddress,\n          textShipToThisAddress,\n          textSelected,\n        ]) => {\n          return addresses.map(address => {\n            const card = this.getCardContent(\n              address,\n              selected,\n              textDefaultShippingAddress,\n              textShipToThisAddress,\n              textSelected\n            );\n            return {\n              address,\n              card,\n            };\n          });\n        }\n      )\n    );\n\n    this.cartService.loadDetails();\n    this.userAddressService.loadAddresses();\n\n    this.setAddressSub = this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .subscribe(address => {\n        this.setAddress = address;\n        this.selectedAddress$.next(address);\n        if (this.goTo) {\n          this.goNext();\n          this.goTo = null;\n        }\n      });\n    this.selectedAddressSub = this.selectedAddress$.subscribe(address => {\n      this.selectedAddress = address;\n    });\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n    const card: Card = {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    };\n\n    this.cards.push(card);\n\n    return card;\n  }\n\n  addressSelected(address: Address): void {\n    this.selectedAddress$.next(address);\n  }\n\n  next(): void {\n    this.addAddress({ address: this.selectedAddress, newAddress: false });\n  }\n\n  addAddress({\n    newAddress,\n    address,\n  }: {\n    newAddress: boolean;\n    address: Address;\n  }): void {\n    if (newAddress) {\n      this.checkoutDeliveryService.createAndSetAddress(address);\n      this.goTo = CheckoutStepType.DELIVERY_MODE;\n      return;\n    }\n    if (\n      this.setAddress &&\n      this.selectedAddress &&\n      this.setAddress.id === this.selectedAddress.id\n    ) {\n      this.goNext();\n    } else {\n      this.goTo = CheckoutStepType.DELIVERY_MODE;\n      this.checkoutDeliveryService.setDeliveryAddress(address);\n    }\n  }\n\n  addNewAddress(address: Address): void {\n    this.addAddress({ address, newAddress: true });\n  }\n\n  showNewAddressForm(): void {\n    this.newAddressFormManuallyOpened = true;\n  }\n\n  hideNewAddressForm(goBack: boolean = false): void {\n    this.newAddressFormManuallyOpened = false;\n    if (goBack) {\n      this.back();\n    }\n  }\n\n  goNext(): void {\n    this.routingService.go(this.checkoutStepUrlNext);\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  ngOnDestroy(): void {\n    if (this.setAddressSub) {\n      this.setAddressSub.unsubscribe();\n    }\n    if (this.selectedAddressSub) {\n      this.selectedAddressSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\n// tslint:disable-next-line:max-line-length\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  entryComponents: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutModule } from '@spartacus/core';\nimport { CartComponentModule } from '../cart/cart.module';\nimport { CheckoutConfigService } from './checkout-config.service';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartComponentModule,\n    CheckoutModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n  // @todo: should we keep below provider here?\n  providers: [CheckoutConfigService],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter(event => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  entryComponents: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService {\n  private templatesRefs = {};\n  private templatesRefsBefore = {};\n  private templatesRefsAfter = {};\n\n  add(\n    outlet: string,\n    template: TemplateRef<any>,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    if (position === OutletPosition.BEFORE) {\n      this.templatesRefsBefore[outlet] = template;\n    }\n    if (position === OutletPosition.REPLACE) {\n      this.templatesRefs[outlet] = template;\n    }\n    if (position === OutletPosition.AFTER) {\n      this.templatesRefsAfter[outlet] = template;\n    }\n  }\n\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): TemplateRef<any> {\n    let templateRef;\n    switch (position) {\n      case OutletPosition.BEFORE:\n        templateRef = this.templatesRefsBefore[outlet];\n        break;\n      case OutletPosition.AFTER:\n        templateRef = this.templatesRefsAfter[outlet];\n        break;\n      default:\n        templateRef = this.templatesRefs[outlet];\n    }\n    return templateRef;\n    // return this.templatesRefs[outlet] ? this.templatesRefs[outlet] : null;\n  }\n}\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { OutletPosition } from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective implements OnInit {\n  @Input() cxOutlet: string;\n\n  private _context: any;\n  @Input()\n  set cxOutletContext(value: any) {\n    this._context = value;\n  }\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit(): void {\n    const nodes = [];\n    nodes.push(...this.renderTemplate(OutletPosition.BEFORE));\n    nodes.push(...this.renderTemplate(OutletPosition.REPLACE, true));\n    nodes.push(...this.renderTemplate(OutletPosition.AFTER));\n  }\n\n  private renderTemplate(position: OutletPosition, replace = false): any[] {\n    const nodes = [];\n    const template = this.outletService.get(this.cxOutlet, position);\n    if (template || replace) {\n      const ref = this.vcr.createEmbeddedView(template || this.templateRef, {\n        $implicit: this._context,\n      });\n      nodes.push(...ref.rootNodes);\n    }\n    return nodes;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport class CustomFormValidators {\n  static emailDomainValidator(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match('[.][a-zA-Z]+$') ? null : { InvalidEmail: true };\n  }\n\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match(\n      // Email Standard RFC 5322:\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ // tslint:disable-line\n    )\n      ? null\n      : { InvalidEmail: true };\n  }\n\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n    return password.match(\n      /^(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[!@#$%^*()_\\-+{};:.,]).{6,}$/\n    )\n      ? null\n      : { InvalidPassword: true };\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  form: FormGroup;\n\n  constructor(\n    private auth: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private fb: FormBuilder,\n    private authRedirectService: AuthRedirectService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      userId: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: ['', Validators.required],\n    });\n  }\n\n  login(): void {\n    const userId = this.emailToLowerCase();\n    this.auth.authorize(userId, this.form.controls.password.value);\n\n    if (!this.sub) {\n      this.sub = this.auth.getUserToken().subscribe(data => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n\n  /*\n   * Change the inputed email to lowercase because\n   * the backend only accepts lowercase emails\n   */\n  emailToLowerCase() {\n    return this.form.controls.userId.value.toLowerCase();\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n  UserModule,\n} from '@spartacus/core';\nimport { LoginFormComponent } from './login-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UserModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [LoginFormComponent],\n  exports: [LoginFormComponent],\n  entryComponents: [LoginFormComponent],\n})\nexport class LoginFormModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService, User, UserService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(private auth: AuthService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user$ = this.auth.getUserToken().pipe(\n      switchMap(token => {\n        if (token && !!token.access_token) {\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  Inject,\n  Renderer2,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { CmsConfig } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ComponentMapperService {\n  missingComponents: string[] = [];\n\n  private loadedWebComponents: { [path: string]: any } = {};\n\n  constructor(\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: CmsConfig,\n    @Inject(DOCUMENT) protected document: any,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  /**\n   * @desc\n   * returns a web component for the CMS typecode.\n   *\n   * The mapping of CMS components to web componetns requires a mapping.\n   * This is configurable when the module is loaded.\n   *\n   * For example:\n   *\n   *  {\n   *      'CMSLinkComponent': 'LinkComponent',\n   *      'SimpleResponsiveBannerComponent': 'SimpleResponsiveBannerComponent',\n   *      [etc.]\n   *  }\n   *\n   * The type codes are dynamic since they depend on the implementation.\n   * Customer will add, extend or ingore standard components.\n   *\n   * @param typeCode the component type\n   */\n  protected getComponent(typeCode: string): any {\n    const componentConfig = this.config.cmsComponents[typeCode];\n    if (!componentConfig) {\n      if (!this.missingComponents.includes(typeCode)) {\n        this.missingComponents.push(typeCode);\n        console.warn(\n          `No component implementation found for the CMS component type '${typeCode}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n    return componentConfig ? componentConfig.component : null;\n  }\n\n  getComponentFactoryByCode(typeCode: string): any {\n    const component = this.getComponent(typeCode);\n    if (!component) {\n      return null;\n    }\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      component\n    );\n\n    if (!factory) {\n      console.warn(\n        `No component factory found for the CMS component type '${typeCode}'.\\n`,\n        `Make sure you add a component to the 'entryComponents' array in the NgModule.`\n      );\n      return null;\n    }\n    return factory;\n  }\n\n  isWebComponent(typeCode: string): boolean {\n    const component = this.getComponent(typeCode);\n    return typeof component === 'string' && (component || '').includes('#');\n  }\n\n  initWebComponent(\n    componentType: string,\n    renderer: Renderer2\n  ): Promise<string> {\n    return new Promise(resolve => {\n      const [path, selector] = this.getComponent(componentType).split('#');\n\n      let script = this.loadedWebComponents[path];\n\n      if (!script) {\n        script = renderer.createElement('script');\n        this.loadedWebComponents[path] = script;\n        script.setAttribute('src', path);\n        renderer.appendChild(this.document.body, script);\n\n        if (isPlatformBrowser(this.platform)) {\n          script.onload = () => {\n            script.onload = null;\n          };\n        }\n      }\n\n      if (script.onload) {\n        // If script is still loading (has onload callback defined)\n        // add new callback and chain it with the existing one.\n        // Needed to support loading multiple components from one script\n        const chainedOnload = script.onload;\n        script.onload = () => {\n          chainedOnload();\n          resolve(selector);\n        };\n      } else {\n        resolve(selector);\n      }\n    });\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  CmsComponent,\n  CmsConfig,\n  CmsService,\n  ContentSlotComponentData,\n  CxApiService,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../model/cms-component-data';\nimport { ComponentMapperService } from './component-mapper.service';\n\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n\n  cmpRef: ComponentRef<any>;\n  webElement: any;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private componentMapper: ComponentMapperService,\n    private injector: Injector,\n    private cmsService: CmsService,\n    private dynamicAttributeService: DynamicAttributeService,\n    private renderer: Renderer2,\n    private cd: ChangeDetectorRef,\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngOnInit() {\n    if (!this.shouldRenderComponent()) {\n      return;\n    }\n\n    if (this.componentMapper.isWebComponent(this.cxComponentWrapper.flexType)) {\n      this.launchWebComponent();\n    } else {\n      this.launchComponent();\n    }\n  }\n\n  private shouldRenderComponent(): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (\n      this.config.cmsComponents[this.cxComponentWrapper.flexType] || {}\n    ).disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  private launchComponent() {\n    const factory = this.componentMapper.getComponentFactoryByCode(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (factory) {\n      this.cmpRef = this.vcr.createComponent(\n        factory,\n        undefined,\n        this.getInjectorForComponent()\n      );\n\n      this.cd.detectChanges();\n\n      if (this.cmsService.isLaunchInSmartEdit()) {\n        this.addSmartEditContract(this.cmpRef.location.nativeElement);\n      }\n    }\n  }\n\n  private async launchWebComponent() {\n    const elementName = await this.componentMapper.initWebComponent(\n      this.cxComponentWrapper.flexType,\n      this.renderer\n    );\n\n    if (elementName) {\n      this.webElement = this.renderer.createElement(elementName);\n\n      this.webElement.cxApi = {\n        ...this.injector.get(CxApiService),\n        CmsComponentData: this.getCmsDataForComponent(),\n      };\n\n      this.renderer.appendChild(\n        this.vcr.element.nativeElement.parentElement,\n        this.webElement\n      );\n    }\n  }\n\n  private getCmsDataForComponent<T extends CmsComponent>(): CmsComponentData<\n    T\n  > {\n    return {\n      uid: this.cxComponentWrapper.uid,\n      data$: this.cmsService.getComponentData(this.cxComponentWrapper.uid),\n    };\n  }\n\n  private getInjectorForComponent(): Injector {\n    const configProviders =\n      (this.config.cmsComponents[this.cxComponentWrapper.flexType] || {})\n        .providers || [];\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useValue: this.getCmsDataForComponent(),\n        },\n        ...configProviders,\n      ],\n      parent: this.injector,\n    });\n  }\n\n  private addSmartEditContract(element: Element) {\n    this.dynamicAttributeService.addDynamicAttributes(\n      this.cxComponentWrapper.properties,\n      element,\n      this.renderer\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.cmpRef) {\n      this.cmpRef.destroy();\n    }\n    if (this.webElement) {\n      this.renderer.removeChild(\n        this.vcr.element.nativeElement.parentElement,\n        this.webElement\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [],\n  declarations: [ComponentWrapperDirective],\n  exports: [ComponentWrapperDirective],\n})\nexport class PageComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-page-slot',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent {\n  @Input() set position(position: string) {\n    this.position$.next(position);\n    // add the position name as a css class so that\n    // layout can be applied to it, using the position based class.\n    this.renderer.addClass(this.hostElement.nativeElement, position);\n  }\n\n  readonly position$ = new BehaviorSubject<string>(undefined);\n\n  /**\n   * observable with `ContentSlotData` for the current position\n   */\n  readonly slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap(position => this.cmsService.getContentSlot(position)),\n    tap(slot => this.addSmartEditSlotClass(slot))\n  );\n\n  /**\n   * observable with components (`ContentSlotComponentData[]`)\n   * for the current slot\n   */\n  readonly components$: Observable<\n    ContentSlotComponentData[]\n  > = this.slot$.pipe(\n    map(slot => (slot && slot.components ? slot.components : [])),\n    distinctUntilChanged(\n      (a, b) =>\n        a.length === b.length && !a.find((el, index) => el.uid !== b[index].uid)\n    ),\n    tap(components => this.addComponentClass(components))\n  );\n\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected hostElement: ElementRef\n  ) {}\n\n  // add a class to indicate whether the class is empty or not\n  private addComponentClass(components): void {\n    if (components && components.length > 0) {\n      this.renderer.addClass(this.hostElement.nativeElement, 'has-components');\n    }\n  }\n\n  private addSmartEditSlotClass(slot): void {\n    if (slot && this.cmsService.isLaunchInSmartEdit()) {\n      this.addSmartEditContract(slot);\n    }\n  }\n\n  private addSmartEditContract(slot: ContentSlotData): void {\n    this.dynamicAttributeService.addDynamicAttributes(\n      slot.properties,\n      this.hostElement.nativeElement,\n      this.renderer\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  providers: [],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  UserModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UserModule,\n    UrlModule,\n    PageSlotModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected routing: RoutingService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<any> {\n    this.logout();\n\n    return this.cms\n      .hasPage({\n        id: this.semanticPathService.get('logout'),\n        type: PageType.CONTENT_PAGE,\n      })\n      .pipe(\n        tap(hasPage => {\n          if (!hasPage) {\n            this.routing.go({ cxRoute: 'home' });\n          }\n        })\n      );\n  }\n\n  protected logout(): void {\n    this.auth.logout();\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable()\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // we print warn messages on missing layout configs\n  // only once to not polute the console log\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      return config.slots;\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter(Boolean));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter(page => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuratoin\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (this.config.production) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // tslint:disable-next-line: no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n  readonly templateName$: Observable<string> = this.pageLayoutService\n    .templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap(section => (section ? of(section) : this.templateName$)),\n    tap(name => {\n      this.styleClass = name;\n    })\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap(section => this.pageLayoutService.getSlots(section))\n  );\n\n  private currentClass;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private pageLayoutService: PageLayoutService\n  ) {}\n\n  set styleClass(cls: string) {\n    if (this.currentClass) {\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\n    }\n    this.renderer.addClass(this.el.nativeElement, cls);\n    this.currentClass = cls;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageLayoutService } from './page-layout.service';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent],\n  providers: [PageLayoutService],\n  exports: [PageLayoutComponent],\n})\nexport class PageLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n  Title,\n  UserService,\n  UserSignUp,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  titles$: Observable<Title[]>;\n\n  private subscription = new Subscription();\n\n  userRegistrationForm: FormGroup = this.fb.group(\n    {\n      titleCode: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n      newsletter: [false],\n      termsandconditions: [false, Validators.requiredTrue],\n    },\n    { validator: this.matchPassword }\n  );\n\n  constructor(\n    private auth: AuthService,\n    private authRedirectService: AuthRedirectService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n\n    this.subscription.add(\n      this.auth.getUserToken().subscribe(data => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      })\n    );\n\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n    this.subscription.add(\n      this.globalMessageService\n        .get()\n        .pipe(filter(data => Object.keys(data).length > 0))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          if (\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR].some(\n              message => message === 'This field is required.'\n            )\n          ) {\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.globalMessageService.add(\n              { key: 'register.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n        })\n    );\n  }\n\n  submit(): void {\n    this.emailToLowerCase();\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      titleCode,\n    } = this.userRegistrationForm.value;\n    const userRegisterFormData: UserSignUp = {\n      firstName,\n      lastName,\n      uid: email,\n      password,\n      titleCode,\n    };\n    this.userService.register(userRegisterFormData);\n  }\n\n  private matchPassword(ac: AbstractControl): { NotEqual: boolean } {\n    if (ac.get('password').value !== ac.get('passwordconf').value) {\n      return { NotEqual: true };\n    }\n  }\n\n  /*\n   * Change the inputed email to lowercase because\n   * the backend only accepts lowercase emails\n   */\n  emailToLowerCase(): void {\n    this.userRegistrationForm.value.email = this.userRegistrationForm.value.email.toLowerCase();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { LoginModule } from '../login/login.module';\nimport { RegisterComponent } from './register.component';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n  UserModule,\n} from '@spartacus/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UserModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          component: RegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [RegisterComponent],\n  exports: [RegisterComponent],\n  entryComponents: [RegisterComponent],\n})\nexport class RegisterComponentModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule, UserModule } from '@spartacus/core';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UserModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { CmsConfig } from '@spartacus/core';\nimport { Route } from '@angular/router';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsMappingService {\n  constructor(\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  isComponentEnabled(flexType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (this.config.cmsComponents[flexType] || {})\n      .disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  getRoutesForComponents(componentTypes: string[]): Route[] {\n    const routes = [];\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        routes.push(...this.getRoutesForComponent(componentType));\n      }\n    }\n    return routes;\n  }\n\n  getGuardsForComponents(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getGuardsForComponent(componentType).forEach(guard =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  getI18nKeysForComponents(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        this.getI18nKeysForComponent(componentType).forEach(key =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n\n  private getRoutesForComponent(componentType: string): Route[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.childRoutes) || [];\n  }\n\n  private getGuardsForComponent(componentType: string): any[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.guards) || [];\n  }\n\n  private getI18nKeysForComponent(componentType: string): string[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.i18nKeys) || [];\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsMappingService } from './cms-mapping.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsMapping.getGuardsForComponents(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map(guardClass => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { CmsMappingService } from './cms-mapping.service';\nimport { TranslationService, TranslationChunkService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private translation: TranslationService,\n    private translationChunk: TranslationChunkService\n  ) {}\n\n  loadChunksForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsMapping.getI18nKeysForComponents(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsMappingService } from './cms-mapping.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsRoutesService {\n  constructor(private router: Router, private cmsMapping: CmsMappingService) {}\n\n  cmsRouteExist(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string\n  ): boolean {\n    const componentRoutes = this.cmsMapping.getRoutesForComponents(\n      componentTypes\n    );\n    if (componentRoutes.length) {\n      if (this.updateRouting(pageContext, componentRoutes)) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(pageContext: PageContext, routes: Route[]): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageContext.id.startsWith('/') &&\n      pageContext.id.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageContext.id.substr(1),\n        component: PageLayoutComponent,\n        children: routes,\n        data: {\n          cxCmsRouteContext: pageContext,\n        },\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\n\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  PageContext,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\n\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  first,\n  map,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    private routingService: RoutingService,\n    private cmsService: CmsService,\n    private cmsRoutes: CmsRoutesService,\n    private cmsI18n: CmsI18nService,\n    private cmsGuards: CmsGuardsService,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.routingService.getNextPageContext().pipe(\n      switchMap(pageContext =>\n        this.cmsService.hasPage(pageContext, true).pipe(\n          first(),\n          withLatestFrom(of(pageContext))\n        )\n      ),\n      switchMap(([hasPage, pageContext]) =>\n        hasPage\n          ? this.resolveCmsPageLogic(pageContext, route, state)\n          : this.handleNotFoundPage(pageContext, route, state)\n      )\n    );\n  }\n\n  private resolveCmsPageLogic(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      switchMap(componentTypes =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadChunksForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        if (\n          canActivate === true &&\n          !route.data.cxCmsRouteContext &&\n          !this.cmsRoutes.cmsRouteExist(pageContext.id)\n        ) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  private handleNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n    return this.cmsService.hasPage(notFoundCmsPageContext).pipe(\n      switchMap(hasNotFoundPage => {\n        if (hasNotFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap(notFoundIndex => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n            }),\n            switchMap(notFoundIndex =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter(index => index === notFoundIndex)\n              )\n            ),\n            switchMap(() => this.resolveCmsPageLogic(pageContext, route, state))\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","import { ServerConfig } from '@spartacus/core';\n\nexport abstract class PWAModuleConfig extends ServerConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { PWAModuleConfig } from '../pwa.module-config';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddToHomeScreenService {\n  private deferredEvent: any;\n\n  private canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    private config: PWAModuleConfig,\n    private globalMessageService: GlobalMessageService,\n    private winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        event => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, ConfigModule, I18nModule } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (pwaConfig.production && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(defaultPWAModuleConfig),\n    ServiceWorkerModule.register('/ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    { provide: PWAModuleConfig, useExisting: Config },\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n    AddToHomeScreenService,\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/index';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector) {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { Injectable } from '@angular/core';\nimport { Title, Meta, MetaDefinition } from '@angular/platform-browser';\nimport { PageMetaService, PageMeta, PageRobotsMeta } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  init() {\n    this.pageMetaService\n      .getMeta()\n      .pipe(filter(Boolean))\n      .subscribe((meta: PageMeta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\n  }\n\n  protected set title(title: string) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string) {\n    this.addTag({ name: 'description', content: value });\n  }\n\n  protected set image(imageUrl: string) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[]) {\n    if (value) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  protected addTag(meta: MetaDefinition) {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { WindowRef, LanguageService } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n) {\n  const result = () => {\n    languageService.getActive().subscribe(lang => {\n      winRef.document.documentElement.lang = lang;\n    });\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { SeoMetaService } from './seo-meta.service';\nimport { htmlLangProvider } from './html-lang-provider';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe(val => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { UserComponentModule } from '../../cms-components/user/index';\nimport { SeoModule } from '../../cms-structure/index';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { PageLayoutModule } from '../../cms-structure/page/index';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from '../../cms-structure/pwa/index';\nimport { StorefrontComponent } from './storefront.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    UserComponentModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageSlotModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class MainModule {}\n","import { NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { OutletRefModule } from '../cms-structure/outlet/index';\nimport { LayoutConfig } from './config/layout-config';\nimport { MainModule } from './main/main.module';\n\nconst layoutModules = [OutletRefModule];\n\n@NgModule({\n  imports: [MainModule, ...layoutModules],\n  providers: [{ provide: LayoutConfig, useExisting: Config }],\n  exports: [MainModule, ...layoutModules],\n})\nexport class LayoutModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GenericLinkModule,\n    MediaModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  entryComponents: [BannerComponent],\n})\nexport class BannerModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GenericLinkModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n  entryComponents: [LinkComponent],\n})\nexport class LinkModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParagraphComponent } from './paragraph.component';\nimport { ConfigModule } from '@spartacus/core';\nimport { CmsConfig } from '@spartacus/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n  entryComponents: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsService, CMSTabParagraphContainer } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent {\n  activeTabNum = 0;\n\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    private cmsService: CmsService\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    switchMap(data =>\n      combineLatest(\n        data.components.split(' ').map(component =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            map(tab => {\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n              return {\n                ...tab,\n                title: `CMSTabParagraphContainer.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number): void {\n    this.activeTabNum = tabNum;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n    PageComponentModule,\n    OutletModule,\n    I18nModule,\n  ],\n  declarations: [TabParagraphContainerComponent],\n  entryComponents: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport { Address, UserAddressService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressBookComponentService {\n  constructor(private userAddressService: UserAddressService) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n\n  constructor(public service: AddressBookComponentService) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Address, UserAddressService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-address-card',\n  templateUrl: './address-card.component.html',\n})\nexport class AddressCardComponent {\n  editMode: boolean;\n  isDefault: boolean;\n\n  @Input() address: Address;\n\n  @Output() editEvent = new EventEmitter<any>();\n\n  constructor(private userAddressService: UserAddressService) {}\n\n  openEditFormEvent(): void {\n    this.editEvent.emit();\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n  }\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n  }\n\n  deleteAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressBookComponentService } from './address-book.component.service';\nimport { AddressCardComponent } from './address-card/address-card.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          providers: [\n            {\n              provide: AddressBookComponentService,\n              useClass: AddressBookComponentService,\n              deps: [UserAddressService],\n            },\n          ],\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent, AddressCardComponent],\n  exports: [AddressBookComponent, AddressCardComponent],\n  providers: [UserAddressService, AddressBookComponentService],\n  entryComponents: [AddressBookComponent],\n})\nexport class AddressBookModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account-modal',\n  templateUrl: './close-account-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private subscription = new Subscription();\n  userToken$: Observable<UserToken>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    protected modalService: ModalService,\n    private userService: UserService,\n    private authService: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private routingService: RoutingService,\n    private translationService: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.userToken$ = this.authService.getUserToken();\n    this.userService.resetRemoveUserProcessState();\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedSuccessfully')\n        .pipe(first())\n        .subscribe(text => {\n          this.globalMessageService.add(\n            text,\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        });\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  closeAccount() {\n    this.userService.remove();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CloseAccountComponent: {\n          component: CloseAccountComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\n  exports: [CloseAccountComponent],\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\n})\nexport class CloseAccountModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ConsentTemplate } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  consentGiven = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.consentTemplate && this.consentTemplate.currentConsent) {\n      if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n        this.consentGiven = false;\n      } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n        this.consentGiven = true;\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentChanged.emit({\n      given: !this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserConsentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, skipWhile, tap, withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userConsentService: UserConsentService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n    ]).pipe(\n      map(\n        ([consentLoading, giveConsentLoading, withdrawConsentLoading]) =>\n          consentLoading || giveConsentLoading || withdrawConsentLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      tap(templateList => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      })\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe(success => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap(withdrawalSuccess => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe(withdrawalSuccess =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent],\n  entryComponents: [ConsentManagementComponent],\n})\nexport class ConsentManagementModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  form: FormGroup;\n  submited = false;\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      userEmail: [\n        '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n    });\n  }\n\n  requestForgotPasswordEmail() {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n    this.userService.requestForgotPasswordEmail(this.form.value.userEmail);\n    this.routingService.go({ cxRoute: 'login' });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { ForgotPasswordComponent } from './forgot-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [ForgotPasswordComponent],\n  exports: [ForgotPasswordComponent],\n  entryComponents: [ForgotPasswordComponent],\n})\nexport class ForgotPasswordModule {}\n","import { Injectable } from '@angular/core';\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService\n  ) {\n    this.orderCode$ = this.routingService\n      .getRouterState()\n      .pipe(map(routingData => routingData.state.params.orderCode));\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap(orderCode => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order, Consignment, OrderEntry } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach(element => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${\n              address.postalCode\n            }`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${\n              billingAddress.postalCode\n            }`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\n\nconst moduleComponents = [\n  OrderDetailHeadlineComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderDetailsHeadlineComponent: {\n          component: OrderDetailHeadlineComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n    }),\n  ],\n  providers: [OrderDetailsService],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n})\nexport class OrderHistoryComponent implements OnInit, OnDestroy {\n  constructor(\n    private routing: RoutingService,\n    private userOrderService: UserOrderService,\n    private translation: TranslationService\n  ) {}\n\n  orders$: Observable<OrderHistoryList>;\n  isLoaded$: Observable<boolean>;\n\n  private PAGE_SIZE = 5;\n\n  sortType: string;\n\n  ngOnInit(): void {\n    this.orders$ = this.userOrderService\n      .getOrderHistoryList(this.PAGE_SIZE)\n      .pipe(\n        tap((orders: OrderHistoryList) => {\n          if (orders.pagination) {\n            this.sortType = orders.pagination.sort;\n          }\n        })\n      );\n\n    this.isLoaded$ = this.userOrderService.getOrderHistoryListLoaded();\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  UserService,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderHistoryComponent } from './order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [UserService],\n  entryComponents: [OrderHistoryComponent],\n})\nexport class OrderHistoryModule {}\n","import { NgModule } from '@angular/core';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { OrderDetailsModule } from './order-details/order-details.module';\n\n@NgModule({\n  imports: [OrderHistoryModule, OrderDetailsModule],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap(paymentDetails => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find(paymentDetail => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  providers: [UserService],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n  entryComponents: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n})\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\n  token: string;\n  subscription = new Subscription();\n  submited = false;\n\n  form: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      repassword: ['', [Validators.required]],\n    },\n    { validator: this.matchPassword }\n  );\n\n  constructor(\n    private fb: FormBuilder,\n    private routingService: RoutingService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.routingService\n        .getRouterState()\n        .subscribe(state => (this.token = state.state.queryParams['token']))\n    );\n\n    this.subscription.add(\n      this.userService.isPasswordReset().subscribe(reset => {\n        if (reset) {\n          this.routingService.go({ cxRoute: 'login' });\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  resetPassword() {\n    this.submited = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    const password = this.form.value['password'];\n    this.userService.resetPassword(this.token, password);\n  }\n\n  private matchPassword(ac: AbstractControl) {\n    if (ac.get('password').value !== ac.get('repassword').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n} from '@spartacus/core';\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ResetPasswordComponent: {\n          component: ResetPasswordFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    I18nModule,\n  ],\n  declarations: [ResetPasswordFormComponent],\n  exports: [ResetPasswordFormComponent],\n  entryComponents: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-update-email-form',\n  templateUrl: './update-email-form.component.html',\n})\nexport class UpdateEmailFormComponent {\n  submited = false;\n\n  @Output()\n  saveEmail = new EventEmitter<{\n    newUid: string;\n    password: string;\n  }>();\n\n  @Output()\n  cancelEmail = new EventEmitter<void>();\n\n  form: FormGroup = this.fb.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      confirmEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    },\n    { validator: this.matchEmail }\n  );\n\n  constructor(private fb: FormBuilder) {}\n\n  isEmailConfirmNotValid(formControlName: string): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submited ||\n        (this.form.get(formControlName).touched &&\n          this.form.get(formControlName).dirty))\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(this.form, formControlName, this.submited);\n  }\n\n  onSubmit(): void {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const newUid = this.form.value.confirmEmail;\n    const password = this.form.value.password;\n\n    this.saveEmail.emit({ newUid, password });\n  }\n\n  onCancel(): void {\n    this.cancelEmail.emit();\n  }\n\n  private matchEmail(ac: AbstractControl): ValidationErrors {\n    if (ac.get('email').value !== ac.get('confirmEmail').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-email',\n  templateUrl: './update-email.component.html',\n})\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\n  constructor(\n    private routingService: RoutingService,\n    private globalMessageService: GlobalMessageService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  private subscription = new Subscription();\n  private newUid: string;\n  isLoading$: Observable<boolean>;\n\n  ngOnInit() {\n    this.userService.resetUpdateEmailResultState();\n    this.subscription.add(\n      this.userService\n        .getUpdateEmailResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\n    this.newUid = newUid;\n    this.userService.updateEmail(password, newUid);\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        {\n          key: 'updateEmailForm.emailUpdateSuccess',\n          params: { newUid: this.newUid },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.authService.logout();\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetUpdateEmailResultState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\nimport { UpdateEmailComponent } from './update-email.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          component: UpdateEmailComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\n  exports: [UpdateEmailComponent],\n  entryComponents: [UpdateEmailComponent],\n})\nexport class UpdateEmailModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-update-password-form',\n  templateUrl: './update-password-form.component.html',\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n  private submitClicked = false;\n  form: FormGroup;\n\n  @Output()\n  submited = new EventEmitter<{ oldPassword: string; newPassword: string }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, CustomFormValidators.passwordValidator],\n        ],\n        newPasswordConfirm: ['', [Validators.required]],\n      },\n      { validator: this.matchPassword }\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  isPasswordConfirmNotValid(): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submitClicked ||\n        (this.form.get('newPasswordConfirm').touched &&\n          this.form.get('newPasswordConfirm').dirty))\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      oldPassword: this.form.value.oldPassword,\n      newPassword: this.form.value.newPassword,\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  private matchPassword(abstractControl: AbstractControl): ValidationErrors {\n    if (\n      abstractControl.get('newPassword').value !==\n      abstractControl.get('newPasswordConfirm').value\n    ) {\n      return { NotEqual: true };\n    }\n    return null;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-password',\n  templateUrl: './update-password.component.html',\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.resetUpdatePasswordProcessState();\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\n    this.subscription.add(\n      this.userService\n        .getUpdatePasswordResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({\n    oldPassword,\n    newPassword,\n  }: {\n    oldPassword: string;\n    newPassword: string;\n  }): void {\n    this.userService.updatePassword(oldPassword, newPassword);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    this.userService.resetUpdatePasswordProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          component: UpdatePasswordComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  exports: [UpdatePasswordComponent],\n  entryComponents: [UpdatePasswordComponent],\n})\nexport class UpdatePasswordModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Title, User } from '@spartacus/core';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\n\n@Component({\n  selector: 'cx-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n})\nexport class UpdateProfileFormComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Input()\n  titles: Title[];\n\n  @Output()\n  submited = new EventEmitter<{ userUpdates: User }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  form = this.fb.group({\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  private submitClicked = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    if (this.user) {\n      this.form.patchValue(this.user);\n    }\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      userUpdates: { ...this.form.value },\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-update-profile',\n  templateUrl: './update-profile.component.html',\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  titles$: Observable<Title[]>;\n  user$: Observable<User>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    // reset the previous form processing state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n\n    this.user$ = this.userService.get();\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\n\n    this.subscription.add(\n      this.userService\n        .getUpdatePersonalDetailsResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updateProfileForm.profileUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\n    this.userService.updatePersonalDetails(userUpdates);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    // clean up the state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\nimport { UpdateProfileComponent } from './update-profile.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          component: UpdateProfileComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\n  exports: [UpdateProfileComponent],\n  entryComponents: [UpdateProfileComponent],\n})\nexport class UpdateProfileModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMeta,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent implements OnInit {\n  title$: Observable<string>;\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n    this.setCrumbs();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(Boolean),\n      map((meta: PageMeta) => meta.heading || meta.title)\n    );\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest(\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home')\n    ).pipe(\n      map(([meta, textHome]) =>\n        meta.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ConfigModule, CmsConfig, CmsPageTitleModule } from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n    CmsPageTitleModule,\n  ],\n  declarations: [BreadcrumbComponent],\n  entryComponents: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return {\n          title: data.name,\n          children: [nav],\n        };\n      })\n    );\n  }\n\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter(Boolean),\n      switchMap(data => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap(items => {\n            if (items === undefined) {\n              this.getNavigationEntryItems(navigation, true);\n            }\n          }),\n          filter(Boolean),\n          map(items => this.createNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Get all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private getNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ) {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach(entry => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      this.processChildren(nodeData, itemsList);\n    }\n\n    if (root) {\n      const rootUid = nodeData.uid;\n      this.cmsService.loadNavigationItems(rootUid, itemsList);\n    }\n  }\n\n  private processChildren(node, itemsList): void {\n    for (const child of node.children) {\n      this.getNavigationEntryItems(child, false, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for display\n   * @param nodeData\n   * @param items\n   */\n  private createNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    node.title = nodeData.title;\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.addLinkToNode(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      const children = this.createChildren(nodeData, items);\n      node.children = children;\n    }\n\n    return node;\n  }\n\n  private addLinkToNode(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (entry.itemType === 'CMSLinkComponent' && item !== undefined) {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n\n      node.url = this.getLink(item);\n\n      // if \"NEWWINDOW\", target is true\n      node.target = item.target;\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category)\n   */\n  private getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n\n  private createChildren(node, items) {\n    const children = [];\n\n    for (const child of node.children) {\n      const childNode = this.createNode(child, items);\n      children.push(childNode);\n    }\n\n    return children;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navitation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n\n  private subscription: Subscription;\n\n  constructor(private router: Router, private renderer: Renderer2) {\n    this.subscription = this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(() => this.clear());\n  }\n\n  toggleOpen(event: UIEvent): void {\n    if (this.openNodes.includes(<HTMLElement>event.currentTarget)) {\n      this.openNodes = this.openNodes.filter(n => n !== event.currentTarget);\n      this.renderer.removeClass(<HTMLElement>event.currentTarget, 'is-open');\n    } else {\n      this.openNodes.push(<HTMLElement>event.currentTarget);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    this.renderer.removeClass(\n      this.openNodes[this.openNodes.length - 1],\n      'is-open'\n    );\n    this.openNodes.pop();\n    this.updateClasses();\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n\n  getDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(...node.children.map(n => this.getDepth(n, depth + 1)));\n    } else {\n      return depth;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  entryComponents: [NavigationComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NavigationModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  entryComponents: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  data$ = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n    GenericLinkModule,\n  ],\n  declarations: [FooterNavigationComponent],\n  entryComponents: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap(results =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  private hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  private getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map(res => res.map(suggestion => suggestion.value)),\n        switchMap(suggestions => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map(match => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap(productResult => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest(\n      this.getProductResults(config),\n      this.getProductSuggestions(config)\n    ).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          (suggestions && suggestions.length === 0)\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  public launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { CmsSearchBoxComponent } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent {\n  config: SearchBoxConfig;\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n\n  /**\n   * The component data is optional, so that this component\n   * can be reused without CMS integration.\n   */\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>\n  ) {}\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    tap(c => (this.config = c)),\n    switchMap(config => this.searchBoxComponentService.getResults(config))\n  );\n\n  /**\n   * Returns the backend configuration or default configuration for the searchbox.\n   */\n  private get config$(): Observable<SearchBoxConfig> {\n    if (this.componentData) {\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\n        // boolean values, we replace them with boolean values.\n        map(c => {\n          return {\n            ...c,\n            displayProducts:\n              <any>c.displayProducts === 'true' || c.displayProducts === true,\n            displayProductImages:\n              <any>c.displayProductImages === 'true' ||\n              c.displayProductImages === true,\n            displaySuggestions:\n              <any>c.displaySuggestions === 'true' ||\n              c.displaySuggestions === true,\n          };\n        })\n      );\n    } else {\n      return of(DEFAULT_SEARCHBOX_CONFIG);\n    }\n  }\n\n  /**\n   * Closes the searchbox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchbox to open\n    this.open();\n  }\n\n  /**\n   * Opens the typeahead searchbox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Closes the typehead searchbox.\n   */\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.searchBoxComponentService.toggleBodyClass(\n        'searchbox-is-active',\n        false\n      );\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a singe product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  public clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  ProductModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    ProductModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  entryComponents: [SearchBoxComponent],\n  exports: [SearchBoxComponent],\n})\nexport class SearchBoxModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  Address,\n  CheckoutService,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [\n          deliveryAddress.line1,\n          deliveryAddress.line2,\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${\n            deliveryAddress.postalCode\n          }`,\n          deliveryAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      map(textTitle => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [deliveryMode.description],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.billTo').pipe(\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [\n          billingAddress.line1,\n          billingAddress.line2,\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${\n            billingAddress.postalCode\n          }`,\n          billingAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutService,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map(orderDetails => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CheckoutModule,\n  I18nModule,\n  ConfigModule,\n  CmsConfig,\n  AuthGuard,\n} from '@spartacus/core';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { CardModule } from '../../shared/components/card/card.module';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\n// tslint:disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { OrderConfirmationGuard } from './guards/index';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    CheckoutModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n  entryComponents: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductReferenceService,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CarouselItem } from '../../../shared/components/carousel/carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected referenceService: ProductReferenceService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<CarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map(product => this.convertProduct(product))\n    );\n  }\n\n  getProductReferences(\n    code: string,\n    referenceType: string,\n    displayTitle: boolean,\n    displayProductPrices: boolean\n  ): Observable<CarouselItem[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map(refs =>\n        refs.map(ref =>\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\n        )\n      )\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): CarouselItem {\n    const item: CarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsProductCarouselComponent } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CarouselItem } from '../../../../shared/components/carousel/carousel.model';\nimport { ProductCarouselService } from '../product-carousel.service';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  title$: Observable<string> = this.component.data$.pipe(\n    map(data => data.title)\n  );\n\n  items$: Observable<CarouselItem[]> = this.component.data$.pipe(\n    filter(Boolean),\n    map(data => data.productCodes.split(' ')),\n    map(codes => codes.map(code => this.service.loadProduct(code))),\n    switchMap((products$: Observable<CarouselItem>[]) =>\n      combineLatest(products$)\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductCarouselComponent>,\n    protected service: ProductCarouselService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CarouselModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  entryComponents: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsProductReferencesComponent } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\nimport { ProductCarouselService } from '../product-carousel.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  title$ = this.component.data$.pipe(map(d => d.title));\n\n  items$ = combineLatest([this.productCode$, this.component.data$]).pipe(\n    switchMap(([code, data]) =>\n      this.service.getProductReferences(\n        code,\n        data.productReferenceTypes,\n        Boolean(JSON.parse(data.displayProductTitles)),\n        Boolean(JSON.parse(data.displayProductPrices))\n      )\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\n    protected service: ProductCarouselService,\n    protected current: CurrentProductService\n  ) {}\n\n  get productCode$(): Observable<string> {\n    return this.current.getProduct().pipe(\n      filter(Boolean),\n      map(p => p.code)\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CarouselModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  entryComponents: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('CMSTabParagraphContainer.tabs.ProductReviewsTabComponent')\n      .subscribe(reviewsTabLabel => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through h3 tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const h3Elements: HTMLCollectionOf<\n        HTMLElement\n      > = tabsComponent.getElementsByTagName('h3');\n\n      // Look through h3 tab elements until finding tab with label\n      for (const h3Element of Array.from(h3Elements)) {\n        if (h3Element.innerHTML.includes(label)) {\n          return h3Element;\n        }\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    StarRatingModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  entryComponents: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ProductSearchPage,\n  ProductSearchService,\n  RoutingService,\n  SearchConfig,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\n\ninterface ProductListRouteParams {\n  brandCode?: string;\n  categoryCode?: string;\n  query?: string;\n}\n\ninterface SearchCriteria {\n  currentPage?: number;\n  pageSize?: number;\n  sortCode?: string;\n  query?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  protected defaultPageSize = 10;\n\n  protected sub: Subscription;\n\n  protected readonly RELEVANCE_CATEGORY = ':relevance:category:';\n  protected readonly RELEVANCE_BRAND = ':relevance:brand:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected router: Router\n  ) {}\n\n  private searchResults$: Observable<\n    ProductSearchPage\n  > = this.productSearchService\n    .getResults()\n    .pipe(filter(searchResult => Object.keys(searchResult).length > 0));\n\n  private searchByRouting$: Observable<\n    any\n  > = this.routing.getRouterState().pipe(\n    distinctUntilChanged((x, y) => {\n      // router emits new value also when the anticipated `nextState` changes\n      // but we want to perform search only when current url changes\n      return x.state.url === y.state.url;\n    }),\n    tap(({ state }) => {\n      const criteria = this.getCriteriaFromRoute(\n        state.params,\n        state.queryParams\n      );\n      this.search(criteria);\n    })\n  );\n\n  /**\n   * This stream should be used only on the Product Listing Page.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = combineLatest(\n    this.searchResults$,\n    this.searchByRouting$\n  ).pipe(\n    map(([searchResults]) => searchResults),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  clearSearchResults(): void {\n    this.productSearchService.clearResults();\n  }\n\n  private getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  private getQueryFromRouteParams({\n    brandCode,\n    categoryCode,\n    query,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_CATEGORY + categoryCode;\n    }\n    if (brandCode) {\n      return this.RELEVANCE_BRAND + brandCode;\n    }\n  }\n\n  private search(criteria: SearchCriteria): void {\n    const query = criteria.query;\n    const searchConfig = this.getSearchConfig(criteria);\n\n    this.productSearchService.search(query, searchConfig);\n  }\n\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\n    const result: SearchConfig = {\n      currentPage: criteria.currentPage,\n      pageSize: criteria.pageSize,\n      sortCode: criteria.sortCode,\n    };\n\n    // drop empty keys\n    Object.keys(result).forEach(key => !result[key] && delete result[key]);\n\n    return result;\n  }\n\n  setQuery(query: string): void {\n    this.setQueryParams({ query, currentPage: undefined });\n  }\n\n  viewPage(pageNumber: number): void {\n    this.setQueryParams({ currentPage: pageNumber });\n  }\n\n  sort(sortCode: string): void {\n    this.setQueryParams({ sortCode });\n  }\n\n  private setQueryParams(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit {\n  model$: Observable<ProductSearchPage> = this.productListComponentService\n    .model$;\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.productListComponentService.clearSearchResults();\n\n    this.pageLayoutService.templateName$.pipe(take(1)).subscribe(template => {\n      this.viewMode$.next(\n        template === 'ProductGridPageTemplate' ? ViewModes.Grid : ViewModes.List\n      );\n    });\n  }\n\n  viewPage(pageNumber: number): void {\n    this.productListComponentService.viewPage(pageNumber);\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Facet, ProductSearchPage } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../shared/components/modal/index';\nimport { ProductListComponentService } from '../container/product-list-component.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent implements OnInit, OnDestroy {\n  private sub: Subscription;\n\n  iconTypes = ICON_TYPE;\n\n  activeFacetValueCode: string;\n  searchResult: ProductSearchPage;\n  minPerFacet = 6;\n  showAllPerFacetMap: Map<String, boolean>;\n  protected queryCodec: HttpUrlEncodingCodec;\n  private collapsedFacets = new Set<string>();\n  searchResult$: Observable<ProductSearchPage>;\n  visibleFacets$: Observable<Facet[]>;\n\n  constructor(\n    private modalService: ModalService,\n    private activatedRoute: ActivatedRoute,\n    private productListComponentService: ProductListComponentService\n  ) {\n    this.showAllPerFacetMap = new Map<String, boolean>();\n    this.queryCodec = new HttpUrlEncodingCodec();\n  }\n\n  ngOnInit(): void {\n    this.sub = this.activatedRoute.params.subscribe(params => {\n      this.activeFacetValueCode = params.categoryCode || params.brandCode;\n    });\n\n    this.searchResult$ = this.productListComponentService.model$.pipe(\n      tap(searchResult => {\n        if (searchResult.facets) {\n          searchResult.facets.forEach(el => {\n            this.showAllPerFacetMap.set(el.name, false);\n          });\n        }\n      })\n    );\n\n    this.visibleFacets$ = this.searchResult$.pipe(\n      map(searchResult => {\n        return searchResult.facets\n          ? searchResult.facets.filter(facet => facet.visible)\n          : [];\n      })\n    );\n  }\n\n  openFilterModal(content): void {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n  }\n\n  toggleValue(query: string): void {\n    this.productListComponentService.setQuery(\n      this.queryCodec.decodeValue(query)\n    );\n  }\n\n  showLess(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, false);\n  }\n\n  showMore(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, true);\n  }\n\n  private updateShowAllPerFacetMap(facetName: String, showAll: boolean): void {\n    this.showAllPerFacetMap.set(facetName, showAll);\n  }\n\n  isFacetCollapsed(facetName: string): boolean {\n    return this.collapsedFacets.has(facetName);\n  }\n\n  toggleFacet(facetName: string): void {\n    if (this.collapsedFacets.has(facetName)) {\n      this.collapsedFacets.delete(facetName);\n    } else {\n      this.collapsedFacets.add(facetName);\n    }\n  }\n\n  getVisibleFacetValues(facet): any {\n    return facet.values.slice(\n      0,\n      this.showAllPerFacetMap.get(facet.name)\n        ? facet.values.length\n        : this.minPerFacet\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductFacetNavigationComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n  ],\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\n})\nexport class ProductListModule {}\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  CmsModule,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CmsModule,\n    OutletModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  entryComponents: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { CurrentProductService } from '../../current-product.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter(Boolean),\n    switchMap(product => this.reviewService.getByProductCode(product.code)),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n  }\n\n  setRating(rating): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [0, [Validators.min(1), Validators.max(5)]],\n      reviewerName: '',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ConfigModule, CmsConfig, I18nModule } from '@spartacus/core';\nimport { StarRatingModule } from '../../../../shared/index';\nimport { ProductReviewsComponent } from './product-reviews.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  entryComponents: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigModule, CmsConfig, I18nModule } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  entryComponents: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigModule, CmsConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  entryComponents: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CarouselItem } from '../../../shared/components/carousel/index';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  private mainMediaContainer = new BehaviorSubject(null);\n\n  private product$: Observable<\n    Product\n  > = this.currentProductService.getProduct().pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap((p: Product) =>\n      this.mainMediaContainer.next(p.images ? p.images.PRIMARY : {})\n    )\n  );\n\n  private thumbs$: Observable<CarouselItem[]> = this.product$.pipe(\n    map(product => this.createCarouselItems(product))\n  );\n\n  private mainImage$ = combineLatest([\n    this.product$,\n    this.mainMediaContainer,\n  ]).pipe(map(([_, container]) => container));\n\n  constructor(private currentProductService: CurrentProductService) {}\n\n  getThumbs(): Observable<CarouselItem[]> {\n    return this.thumbs$;\n  }\n\n  getMain(): Observable<any> {\n    return this.mainImage$;\n  }\n\n  openImage(item: CarouselItem): void {\n    this.mainMediaContainer.next(item.media.container);\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: CarouselItem[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          t =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createCarouselItems(product: Product): CarouselItem[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return null;\n    }\n\n    return (<any[]>product.images.GALLERY).map(c => {\n      return {\n        media: {\n          container: c,\n          format: 'thumbnail',\n        },\n      };\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n    CarouselModule,\n  ],\n  declarations: [ProductImagesComponent],\n  entryComponents: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import { NgModule } from '@angular/core';\nimport { HamburgerMenuModule } from '../layout/index';\nimport { CartComponentModule } from './cart/cart.module';\nimport { CheckoutComponentModule } from './checkout/checkout.module';\nimport {\n  BannerModule,\n  CmsParagraphModule,\n  LinkModule,\n  TabParagraphContainerModule,\n} from './content/index';\nimport { SiteContextSelectorModule } from './misc/index';\nimport {\n  AddressBookModule,\n  CloseAccountModule,\n  ConsentManagementModule,\n  ForgotPasswordModule,\n  OrderDetailsModule,\n  OrderHistoryModule,\n  PaymentMethodsModule,\n  ResetPasswordModule,\n  UpdateEmailModule,\n  UpdatePasswordModule,\n  UpdateProfileModule,\n} from './myaccount/index';\nimport {\n  BreadcrumbModule,\n  CategoryNavigationModule,\n  FooterNavigationModule,\n  NavigationModule,\n  SearchBoxModule,\n} from './navigation/index';\nimport { OrderConfirmationModule } from './order-confirmation/index';\nimport {\n  ProductCarouselModule,\n  ProductIntroModule,\n  ProductListModule,\n  ProductReferencesModule,\n  ProductTabsModule,\n} from './product/index';\nimport { ProductImagesModule } from './product/product-images/product-images.module';\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\n\n@NgModule({\n  imports: [\n    HamburgerMenuModule,\n    CmsParagraphModule,\n    LinkModule,\n    BannerModule,\n    CategoryNavigationModule,\n    NavigationModule,\n    FooterNavigationModule,\n    BreadcrumbModule,\n    SearchBoxModule,\n    SiteContextSelectorModule,\n    AddressBookModule,\n    OrderHistoryModule,\n    ProductListModule,\n    ProductTabsModule,\n    ProductCarouselModule,\n    ProductReferencesModule,\n    OrderDetailsModule,\n    PaymentMethodsModule,\n    UpdateEmailModule,\n    UpdatePasswordModule,\n    UpdateProfileModule,\n    ConsentManagementModule,\n    CloseAccountModule,\n    CartComponentModule,\n    TabParagraphContainerModule,\n    OrderConfirmationModule,\n    // TODO:#2811 - uncomment to enable\n    // StoreFinderModule,\n    ProductImagesModule,\n    ProductSummaryModule,\n    ProductIntroModule,\n    CheckoutComponentModule,\n    ForgotPasswordModule,\n    ResetPasswordModule,\n  ],\n})\nexport class CmsLibModule {}\n","import {\n  UrlSegment,\n  UrlMatchResult,\n  Route,\n  UrlSegmentGroup,\n} from '@angular/router';\n\nexport interface SuffixRoute extends Route {\n  data: {\n    cxSuffixUrlMatcher: {\n      marker: string;\n      paramName: string;\n      precedingParamName?: string;\n    };\n  };\n}\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName [ / ** ]'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function suffixUrlMatcher(\n  segments: UrlSegment[],\n  _segmentGroup: UrlSegmentGroup,\n  route: SuffixRoute\n): UrlMatchResult | null {\n  const config = route.data.cxSuffixUrlMatcher;\n  const { marker, paramName } = config;\n  const precedingParamName = config.precedingParamName || 'param';\n\n  const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n  const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n  if (markerIndex === -1 || isMarkerLastSegment) {\n    return null;\n  }\n\n  const paramIndex = markerIndex + 1;\n  const posParams: { [name: string]: UrlSegment } = {\n    [paramName]: segments[paramIndex],\n  };\n\n  for (let i = 0; i < markerIndex; i++) {\n    posParams[`${precedingParamName}${i}`] = segments[i];\n  }\n\n  return { consumed: segments.slice(0, paramIndex + 1), posParams };\n}\n\nexport function findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { suffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n      {\n        matcher: suffixUrlMatcher,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxSuffixUrlMatcher: {\n            marker: 'p',\n            paramName: 'productCode',\n          },\n        },\n      },\n    ]),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { suffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        matcher: suffixUrlMatcher,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxSuffixUrlMatcher: {\n            marker: 'c',\n            paramName: 'categoryCode',\n          },\n        },\n      },\n    ]),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\nexport const b2cLayoutConfig: LayoutConfig = {\n  layoutSlots: {\n    header: {\n      md: {\n        slots: [\n          'PreHeader',\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      xs: {\n        slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n      },\n    },\n    navigation: {\n      md: { slots: [] },\n      xs: {\n        slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n      },\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductListSlot', 'ProductLeftRefinements'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'SearchResultsListSlot',\n        'ProductLeftRefinements',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      slots: [\n        'TopHeaderSlot',\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n  },\n};\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: { paths: ['login'] },\n  logout: { paths: ['logout'] },\n  register: { paths: ['login/register'] },\n  forgotPassword: { paths: ['login/forgot-password'] },\n\n  checkout: { paths: ['checkout'] },\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\n  orderConfirmation: { paths: ['order-confirmation'] },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orders: {\n    paths: ['my-account/orders'],\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { NgModule } from '@angular/core';\nimport {\n  ConfigModule,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [\n    CoreRoutingModule,\n    ConfigModule.withConfig(defaultRoutingConfig),\n    CmsRouteModule,\n  ],\n})\nexport class RoutingModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  AuthModule,\n  ConfigModule,\n  I18nModule,\n  provideConfigFromMetaTags,\n  StateModule,\n} from '@spartacus/core';\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\nimport { LayoutModule } from '../layout/layout.module';\n\n@NgModule({\n  imports: [\n    StateModule,\n    AuthModule.forRoot(),\n    ConfigModule.forRoot(),\n    RoutingModule,\n    I18nModule.forRoot(),\n\n    LayoutModule,\n  ],\n  providers: [...provideConfigFromMetaTags()],\n})\nexport class StorefrontFoundationModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  OccModule,\n  PersonalizationModule,\n  provideConfig,\n  SiteContextModule,\n  SmartEditModule,\n} from '@spartacus/core';\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n    }),\n\n    StoreModule.forRoot(\n      {},\n      {\n        runtimeChecks: {\n          strictStateImmutability: true,\n          strictStateSerializability: true,\n          strictActionImmutability: true,\n          strictActionSerializability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n\n    StorefrontFoundationModule,\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n\n    SmartEditModule.forRoot(), // should be custom\n    PersonalizationModule.forRoot(), // should be custom\n\n    // opt-in explicitely\n    OccModule,\n    ProductDetailsPageModule,\n    ProductListingPageModule,\n  ],\n})\nexport class StorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<StorefrontModule> {\n    return {\n      ngModule: StorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ConfigModule, provideConfig } from '@spartacus/core';\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { b2cLayoutConfig } from './config/b2c-layout-config';\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\nimport { StorefrontModule } from './storefront.module';\n\n@NgModule({\n  imports: [\n    StorefrontModule.withConfig(<StorefrontConfig>{\n      pwa: {\n        enabled: true,\n        addToHomeScreen: true,\n      },\n    }),\n\n    ConfigModule.withConfig(b2cLayoutConfig),\n    ConfigModule.withConfigFactory(defaultCmsContentConfig),\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n  ],\n  exports: [LayoutModule],\n})\nexport class B2cStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2cStorefrontModule> {\n    return {\n      ngModule: B2cStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n"],"names":["tslib_1.__extends","NgbModalRef","Injectable","NgbModal","map","filter","switchMap","RoutingService","ProductService","WindowRef","Component","ElementRef","Input","HostBinding","NgModule","CommonModule","ConfigModule","Config","tap","CartService","FormBuilder","ViewChild","ChangeDetectionStrategy","ChangeDetectorRef","Directive","EventEmitter","Output","I18nModule","iif","fromEvent","startWith","debounceTime","distinctUntilChanged","of","ServerConfig","OccConfig","RouterModule","UrlModule","NG_VALUE_ACCESSOR","forwardRef","FormControl","Renderer2","HostListener","FormsModule","ReactiveFormsModule","NgSelectModule","GlobalMessageType","GlobalMessageService","HttpClientModule","GlobalMessageModule","_a","LANGUAGE_CONTEXT_ID","CURRENCY_CONTEXT_ID","tslib_1.__values","take","Optional","ContextServiceMap","Injector","SiteContextModule","NgbModule","skipWhile","combineLatest","CartModule","InjectionToken","RoutingConfigService","Router","AuthGuard","shareReplay","CheckoutService","CheckoutDeliveryService","CheckoutPaymentService","Validators","ActivatedRoute","BehaviorSubject","UserAddressService","UserPaymentService","TranslationService","UserService","CheckoutModule","router","NavigationStart","TemplateRef","ViewContainerRef","AuthService","AuthRedirectService","UserModule","NotAuthGuard","isPlatformBrowser","ComponentFactoryResolver","CmsConfig","Inject","DOCUMENT","PLATFORM_ID","isPlatformServer","CxApiService","CmsService","DynamicAttributeService","PageType","SemanticPathService","Subscription","first","concat","endWith","isObservable","from","TranslationChunkService","withLatestFrom","ServiceWorkerModule","SwRegistrationOptions","APP_INITIALIZER","PageRobotsMeta","Title","Meta","PageMetaService","LanguageService","UserConsentService","UserOrderService","CmsPageTitleModule","NavigationEnd","SearchboxService","Pipe","ProductModule","ProductReferenceService","ProductSearchService","HttpUrlEncodingCodec","CmsModule","ProductReviewService","CoreRoutingModule","StateModule","AuthModule","provideConfigFromMetaTags","provideConfig","StoreModule","EffectsModule","SmartEditModule","PersonalizationModule","OccModule"],"mappings":"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"}