{"version":3,"file":"spartacus-storefront.js","sources":["../../../projects/storefrontlib/src/layout/launch-dialog/config/launch-config.ts","../../../projects/storefrontlib/src/layout/config/layout-config.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/launch-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/inline-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/launch-dialog.service.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.model.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.service.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet-renderer.service.ts","../../../projects/storefrontlib/src/layout/loading/intersection.service.ts","../../../projects/storefrontlib/src/layout/loading/defer-loader.service.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.directive.ts","../../../projects/storefrontlib/src/cms-structure/outlet/outlet.module.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/outlet-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/services/routing-render.strategy.ts","../../../projects/storefrontlib/src/layout/launch-dialog/launch-dialog.module.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/anonymous-consent-launch-dialog.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/keyboard-focus.model.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/base/base-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/base/base-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/block/block-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/services/select-focus.util.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/focus.directive.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/keyboard-focus.module.ts","../../../projects/storefrontlib/src/layout/a11y/keyboard-focus/index.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon.model.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/fontawesome-icon.config.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon-loader.service.ts","../../../projects/storefrontlib/src/layout/direction/config/direction.model.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon.component.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/default-icon.config.ts","../../../projects/storefrontlib/src/cms-components/misc/icon/icon.module.ts","../../../projects/storefrontlib/src/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/default-anonymous-consent-layout.config.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","../../../projects/storefrontlib/src/shared/components/spinner/spinner.component.ts","../../../projects/storefrontlib/src/shared/components/spinner/spinner.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/consent-management/components/consent-management.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/consent-management/consent-management.module.ts","../../../projects/storefrontlib/src/shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module.ts","../../../projects/storefrontlib/src/shared/components/card/card.component.ts","../../../projects/storefrontlib/src/shared/components/card/card.module.ts","../../../projects/storefrontlib/src/shared/components/carousel/carousel.service.ts","../../../projects/storefrontlib/src/shared/components/carousel/carousel.component.ts","../../../projects/storefrontlib/src/layout/breakpoint/breakpoint.service.ts","../../../projects/storefrontlib/src/shared/components/media/media.service.ts","../../../projects/storefrontlib/src/shared/components/media/media.component.ts","../../../projects/storefrontlib/src/shared/components/media/media.module.ts","../../../projects/storefrontlib/src/shared/components/carousel/carousel.module.ts","../../../projects/storefrontlib/src/shared/components/date-picker/date-picker-formatter.service.ts","../../../projects/storefrontlib/src/shared/components/date-picker/date-picker.component.ts","../../../projects/storefrontlib/src/shared/components/date-picker/date-picker.module.ts","../../../projects/storefrontlib/src/shared/components/date-time-picker/date-time-picker-formatter.service.ts","../../../projects/storefrontlib/src/shared/components/date-time-picker/date-time-picker.component.ts","../../../projects/storefrontlib/src/shared/components/date-time-picker/date-time-picker.module.ts","../../../projects/storefrontlib/src/shared/components/form/form-errors/form-errors.component.ts","../../../projects/storefrontlib/src/shared/components/form/form-errors/form-errors.module.ts","../../../projects/storefrontlib/src/shared/components/generic-link/generic-link.component.ts","../../../projects/storefrontlib/src/shared/components/generic-link/generic-link.module.ts","../../../projects/storefrontlib/src/shared/components/item-counter/item-counter.component.ts","../../../projects/storefrontlib/src/shared/components/item-counter/item-counter.module.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/config/default-pagination.config.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/config/pagination.config.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.model.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.builder.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.component.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/pagination/pagination.module.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/sorting/sorting.component.ts","../../../projects/storefrontlib/src/shared/components/list-navigation/list-navigation.module.ts","../../../projects/storefrontlib/src/shared/components/media/media.config.ts","../../../projects/storefrontlib/src/shared/components/modal/modal-ref.ts","../../../projects/storefrontlib/src/shared/components/modal/modal.service.ts","../../../projects/storefrontlib/src/shared/components/split-view/split-view-deactivate.guard.ts","../../../projects/storefrontlib/src/shared/components/split-view/split-view.service.ts","../../../projects/storefrontlib/src/shared/components/split-view/split/split-view.component.ts","../../../projects/storefrontlib/src/shared/components/split-view/view/view.component.ts","../../../projects/storefrontlib/src/shared/components/split-view/split-view.module.ts","../../../projects/storefrontlib/src/cms-components/misc/global-message/global-message.component.ts","../../../projects/storefrontlib/src/cms-components/misc/global-message/global-message.module.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/config/qualtrics-config.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/qualtrics-loader.service.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/qualtrics.component.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","../../../projects/storefrontlib/src/cms-components/misc/qualtrics/qualtrics.module.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/language-currency.component.ts","../../../projects/storefrontlib/src/cms-structure/page/model/cms-component-data.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context-component.service.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context-selector.component.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context-selector.module.ts","../../../projects/storefrontlib/src/cms-components/misc/site-context-selector/site-context.model.ts","../../../projects/storefrontlib/src/shared/components/star-rating/star-rating.component.ts","../../../projects/storefrontlib/src/shared/components/star-rating/star-rating.module.ts","../../../projects/storefrontlib/src/shared/components/table/table-data-cell/table-data-cell.component.ts","../../../projects/storefrontlib/src/shared/components/table/table-header-cell/table-header-cell.component.ts","../../../projects/storefrontlib/src/shared/components/table/config/default-table.config.ts","../../../projects/storefrontlib/src/shared/components/table/config/table.config.ts","../../../projects/storefrontlib/src/shared/components/table/table-data-cell/table-data-cell.module.ts","../../../projects/storefrontlib/src/shared/components/table/table-header-cell/table-header-cell.module.ts","../../../projects/storefrontlib/src/shared/components/table/table-renderer.service.ts","../../../projects/storefrontlib/src/shared/components/table/table.model.ts","../../../projects/storefrontlib/src/shared/components/table/table.component.ts","../../../projects/storefrontlib/src/shared/components/table/table.module.ts","../../../projects/storefrontlib/src/shared/components/table/table.service.ts","../../../projects/storefrontlib/src/shared/config/view-config.ts","../../../projects/storefrontlib/src/shared/config/view-config.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-details.service.ts","../../../projects/storefrontlib/src/shared/services/promotion/promotion.service.ts","../../../projects/storefrontlib/src/shared/utils/validators/custom-form-validators.ts","../../../projects/storefrontlib/src/shared/utils/forms/title-utils.ts","../../../projects/storefrontlib/src/cms-structure/services/feature-modules.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-components.service.ts","../../../projects/storefrontlib/src/shared/utils/combined-injector.ts","../../../projects/storefrontlib/src/cms-structure/page/component/services/cms-injector.service.ts","../../../projects/storefrontlib/src/cms-structure/page/component/handlers/component-handler.ts","../../../projects/storefrontlib/src/cms-structure/page/component/services/component-handler.service.ts","../../../projects/storefrontlib/src/cms-structure/page/component/component-wrapper.directive.ts","../../../projects/storefrontlib/src/cms-structure/page/component/handlers/default-component.handler.ts","../../../projects/storefrontlib/src/cms-structure/page/component/handlers/lazy-component.handler.ts","../../../projects/storefrontlib/src/cms-structure/page/component/page-component.module.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-constants.ts","../../../projects/storefrontlib/src/cms-components/asm/services/asm-enabler.service.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-loader.module.ts","../../../projects/storefrontlib/src/cms-components/asm/services/asm-component.service.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-session-timer/format-timer.pipe.ts","../../../projects/storefrontlib/src/cms-components/asm/asm-toggle-ui/asm-toggle-ui.component.ts","../../../projects/storefrontlib/src/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","../../../projects/storefrontlib/src/cms-components/asm/customer-emulation/customer-emulation.component.ts","../../../projects/storefrontlib/src/cms-components/asm/customer-selection/customer-selection.component.ts","../../../projects/storefrontlib/src/cms-components/asm/default-asm-layout.config.ts","../../../projects/storefrontlib/src/cms-components/asm/asm.module.ts","../../../projects/storefrontlib/src/cms-components/product/current-product.service.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-cart/add-to-cart.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/promotions/promotions.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/promotions/promotions.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-coupon/cart-coupon.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-coupon/cart-coupon.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-shared/cart-shared.module.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-cart/add-to-cart.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-details/cart-details.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-details/cart-details.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-not-empty.guard.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-page-layout-handler.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-totals/cart-totals.component.ts","../../../projects/storefrontlib/src/cms-components/cart/cart-totals/cart-totals.module.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout-handler.ts","../../../projects/storefrontlib/src/cms-components/cart/mini-cart/mini-cart.component.ts","../../../projects/storefrontlib/src/cms-components/cart/mini-cart/mini-cart.module.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","../../../projects/storefrontlib/src/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","../../../projects/storefrontlib/src/cms-components/cart/save-for-later/save-for-later.component.ts","../../../projects/storefrontlib/src/cms-components/cart/save-for-later/save-for-later.module.ts","../../../projects/storefrontlib/src/cms-components/cart/cart.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/model/checkout-step.model.ts","../../../projects/storefrontlib/src/cms-components/checkout/config/checkout-config.ts","../../../projects/storefrontlib/src/cms-components/checkout/config/default-checkout-config.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/checkout-config.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout-auth.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/checkout-step.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/checkout-details.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/services/express-checkout.service.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout-steps-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/multiline-titles.pipe.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/checkout-details-loaded.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/not-checkout-auth.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/delivery-mode-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/payment-details-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/guards/shipping-address-set.guard.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/cost-center/cost-center.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/cost-center/cost-center.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-method.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-method/payment-method.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-type/payment-type.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/payment-type/payment-type.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/place-order/place-order.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/place-order/place-order.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/review-submit/review-submit.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/review-submit/review-submit.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/shipping-address.component.ts","../../../projects/storefrontlib/src/cms-components/checkout/components/shipping-address/shipping-address.module.ts","../../../projects/storefrontlib/src/cms-components/checkout/checkout.module.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/config/skip-link.config.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/service/skip-link.service.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/component/skip-link.component.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/config/default-skip-link.config.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/directive/skip-link.directive.ts","../../../projects/storefrontlib/src/layout/a11y/skip-link/skip-link.module.ts","../../../projects/storefrontlib/src/layout/direction/config/direction.config.ts","../../../projects/storefrontlib/src/layout/direction/config/default-direction.config.ts","../../../projects/storefrontlib/src/layout/direction/direction.service.ts","../../../projects/storefrontlib/src/layout/direction/direction.module.ts","../../../projects/storefrontlib/src/layout/header/hamburger-menu/hamburger-menu.service.ts","../../../projects/storefrontlib/src/layout/header/hamburger-menu/hamburger-menu.component.ts","../../../projects/storefrontlib/src/layout/header/hamburger-menu/hamburger-menu.module.ts","../../../projects/storefrontlib/src/layout/layout.module.ts","../../../projects/storefrontlib/src/cms-structure/page/slot/page-slot.component.ts","../../../projects/storefrontlib/src/cms-structure/page/slot/page-slot.module.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout.service.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout.component.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-template-style.service.ts","../../../projects/storefrontlib/src/cms-structure/page/page-layout/page-layout.module.ts","../../../projects/storefrontlib/src/cms-structure/pwa/pwa.module-config.ts","../../../projects/storefrontlib/src/cms-structure/pwa/services/add-to-home-screen.service.ts","../../../projects/storefrontlib/src/cms-structure/pwa/components/add-to-home-screen.component.ts","../../../projects/storefrontlib/src/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","../../../projects/storefrontlib/src/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","../../../projects/storefrontlib/src/cms-structure/pwa/pwa.module.ts","../../../projects/storefrontlib/src/cms-structure/seo/html-lang-provider.ts","../../../projects/storefrontlib/src/cms-structure/seo/seo-meta.service.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/json-ld-script.factory.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/json-ld.directive.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/tokens.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/structured-data.factory.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/structured-data.module.ts","../../../projects/storefrontlib/src/cms-structure/seo/seo.module.ts","../../../projects/storefrontlib/src/layout/main/storefront.component.ts","../../../projects/storefrontlib/src/layout/main/main.module.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-guards.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-i18n.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-routes-impl.service.ts","../../../projects/storefrontlib/src/cms-structure/services/cms-routes.service.ts","../../../projects/storefrontlib/src/cms-structure/guards/cms-page-guard.service.ts","../../../projects/storefrontlib/src/cms-structure/guards/cms-page.guard.ts","../../../projects/storefrontlib/src/cms-structure/routing/cms-route/add-cms-route.ts","../../../projects/storefrontlib/src/cms-structure/routing/cms-route/cms-route.module.ts","../../../projects/storefrontlib/src/cms-structure/routing/default-routing-config.ts","../../../projects/storefrontlib/src/cms-structure/routing/routing.module.ts","../../../projects/storefrontlib/src/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","../../../projects/storefrontlib/src/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","../../../projects/storefrontlib/src/cms-components/content/banner-carousel/banner-carousel.component.ts","../../../projects/storefrontlib/src/cms-components/content/banner-carousel/banner-carousel.module.ts","../../../projects/storefrontlib/src/cms-components/content/banner/banner.component.ts","../../../projects/storefrontlib/src/cms-components/content/banner/banner.module.ts","../../../projects/storefrontlib/src/cms-components/content/link/link.component.ts","../../../projects/storefrontlib/src/cms-components/content/link/link.module.ts","../../../projects/storefrontlib/src/cms-components/content/paragraph/paragraph.component.ts","../../../projects/storefrontlib/src/cms-components/content/paragraph/paragraph.module.ts","../../../projects/storefrontlib/src/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","../../../projects/storefrontlib/src/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/address-book/address-book.component.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/address-book/address-book.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/address-book/address-book.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/close-account/close-account.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/forgot-password/forgot-password.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/forgot-password/forgot-password.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order.model.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-approval-details/order-detail-approval-details.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-details/order-details.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-history/order-history.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order-history/order-history.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/order/order.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/payment-methods/payment-methods.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/payment-methods/payment-methods.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/reset-password/reset-password-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/reset-password/reset-password.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-email/update-email.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-email/update-email.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-password/update-password.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-profile/update-profile.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/update-profile/update-profile.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/my-coupons.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-coupons/my-coupons.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/notification-preference/notification-preference.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/notification-preference/notification-preference.module.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-interests/my-interests.component.ts","../../../projects/storefrontlib/src/cms-components/myaccount/my-interests/my-interests.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/breadcrumb/breadcrumb.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/breadcrumb/breadcrumb.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation.service.ts","../../../projects/storefrontlib/src/cms-components/navigation/category-navigation/category-navigation.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation-ui.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/navigation/navigation.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/category-navigation/category-navigation.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/footer-navigation/footer-navigation.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/footer-navigation/footer-navigation.module.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/search-box-component.service.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/search-box.component.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/highlight.pipe.ts","../../../projects/storefrontlib/src/cms-components/navigation/search-box/search-box.module.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/guards/order-confirmation.guard.ts","../../../projects/storefrontlib/src/cms-components/order-confirmation/order-confirmation.module.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-carousel.service.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-carousel/product-carousel.component.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-carousel/product-carousel.module.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-references/product-references.component.ts","../../../projects/storefrontlib/src/cms-components/product/carousel/product-references/product-references.module.ts","../../../projects/storefrontlib/src/cms-components/product/config/default-scroll-config.ts","../../../projects/storefrontlib/src/cms-components/product/product-images/product-images.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-images/product-images.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-intro/product-intro.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-intro/product-intro.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/container/product-list-component.service.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-view/product-view.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/container/product-list.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet.model.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-list-item/product-list-item.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/product-variants.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/guards/product-variant.guard.ts","../../../projects/storefrontlib/src/cms-components/product/product-variants/product-variants.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-list/product-list.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-outlets.model.ts","../../../projects/storefrontlib/src/cms-components/product/product-summary/product-summary.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-summary/product-summary.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","../../../projects/storefrontlib/src/cms-components/product/product-tabs/product-tabs.module.ts","../../../projects/storefrontlib/src/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","../../../projects/storefrontlib/src/cms-components/product/stock-notification/stock-notification.component.ts","../../../projects/storefrontlib/src/cms-components/product/stock-notification/stock-notification.module.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/schedule-component/schedule.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder/store-finder.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","../../../projects/storefrontlib/src/cms-components/storefinder/store-finder.module.ts","../../../projects/storefrontlib/src/cms-components/user/checkout-login/checkout-login.component.ts","../../../projects/storefrontlib/src/cms-components/user/checkout-login/checkout-login.module.ts","../../../projects/storefrontlib/src/cms-components/user/login-form/login-form.component.ts","../../../projects/storefrontlib/src/cms-components/user/login-form/login-form.module.ts","../../../projects/storefrontlib/src/cms-components/user/login/login.component.ts","../../../projects/storefrontlib/src/cms-components/user/login/login.module.ts","../../../projects/storefrontlib/src/cms-components/user/logout/logout-guard.ts","../../../projects/storefrontlib/src/cms-components/user/logout/logout.module.ts","../../../projects/storefrontlib/src/cms-components/user/register/register.component.ts","../../../projects/storefrontlib/src/cms-components/user/register/register.module.ts","../../../projects/storefrontlib/src/cms-components/user/login-register/login-register.component.ts","../../../projects/storefrontlib/src/cms-components/user/login-register/login-register.module.ts","../../../projects/storefrontlib/src/cms-components/user/user.module.ts","../../../projects/storefrontlib/src/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","../../../projects/storefrontlib/src/cms-components/wish-list/components/wish-list/wish-list.component.ts","../../../projects/storefrontlib/src/cms-components/wish-list/wish-list.module.ts","../../../projects/storefrontlib/src/cms-components/cms-lib.module.ts","../../../projects/storefrontlib/src/cms-pages/product-details-page/product-details-url-matcher.ts","../../../projects/storefrontlib/src/cms-pages/product-details-page/product-details-page.module.ts","../../../projects/storefrontlib/src/cms-pages/product-listing-page/product-listing-url-matcher.ts","../../../projects/storefrontlib/src/cms-pages/product-listing-page/product-listing-page.module.ts","../../../projects/storefrontlib/src/events/page/page.events.ts","../../../projects/storefrontlib/src/events/cart/cart-page.events.ts","../../../projects/storefrontlib/src/events/cart/cart-page-event.builder.ts","../../../projects/storefrontlib/src/events/cart/cart-page-event.module.ts","../../../projects/storefrontlib/src/events/page/page-event.builder.ts","../../../projects/storefrontlib/src/events/page/page-event.module.ts","../../../projects/storefrontlib/src/events/product/product-page.events.ts","../../../projects/storefrontlib/src/events/product/product-page-event.builder.ts","../../../projects/storefrontlib/src/events/product/product-page-event.module.ts","../../../projects/storefrontlib/src/recipes/config/default-media.config.ts","../../../projects/storefrontlib/src/recipes/config/layout-config.ts","../../../projects/storefrontlib/src/recipes/config/static-cms-structure/default-header.config.ts","../../../projects/storefrontlib/src/recipes/config/static-cms-structure/default-cms-content.config.ts","../../../projects/storefrontlib/src/events/events.module.ts","../../../projects/storefrontlib/src/recipes/storefront-foundation.module.ts","../../../projects/storefrontlib/src/recipes/storefront.module.ts","../../../projects/storefrontlib/src/recipes/b2c-storefront.module.ts","../../../projects/storefrontlib/src/utils/form-utils.ts","../../../projects/storefrontlib/src/public_api.ts","../../../projects/storefrontlib/src/spartacus-storefront.ts"],"sourcesContent":["import { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\n\nexport interface LaunchConfig {\n  [key: string]: LaunchOptions;\n}\n\nexport type LaunchOptions =\n  | LaunchOutletDialog\n  | LaunchInlineDialog\n  | LaunchRoute;\n\n/**\n * Parent type for configurations that render components\n */\nexport interface LaunchDialog {\n  component: any;\n  /**\n   * Can the element be rendered multiple times\n   */\n  multi?: boolean;\n  /**\n   * Dialog type is used to apply CSS classes\n   */\n  dialogType?: DIALOG_TYPE;\n}\n\n/**\n * Configuration type to render a component in an outlet\n */\nexport interface LaunchOutletDialog extends LaunchDialog {\n  /**\n   * The outlet to render the element in\n   */\n  outlet: string;\n  /**\n   * Default: OutletPosition.BEFORE\n   */\n  position?: OutletPosition;\n}\n\n/**\n * Configuration type to render a component inline (next to the trigger)\n */\nexport interface LaunchInlineDialog extends LaunchDialog {\n  inline: boolean;\n}\n\n/**\n * Configuration type to render as link\n */\nexport interface LaunchRoute {\n  /**\n   * The route for the url\n   */\n  cxRoute: string;\n  /**\n   * The parameters for the route\n   */\n  params?: { [param: string]: any };\n}\n\n/**\n * Types of dialog openings supported\n */\nexport enum DIALOG_TYPE {\n  POPOVER = 'POPOVER',\n  DIALOG = 'DIALOG',\n  SIDEBAR_START = 'SIDEBAR_START',\n  SIDEBAR_END = 'SIDEBAR_END',\n}\n\n/**\n * List of available callers\n */\nexport enum LAUNCH_CALLER {\n  ASM = 'ASM',\n  SKIP_LINKS = 'SKIP_LINKS',\n  ANONYMOUS_CONSENT = 'ANONYMOUS_CONSENT',\n}\n","import { Injectable } from '@angular/core';\nimport { Config, DeferLoadingStrategy } from '@spartacus/core';\nimport { LaunchConfig } from '../launch-dialog/index';\n\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n\n  /**\n   * The page fold identifies the last expected page slot above-the-fold.\n   * It's perfectly fine to specify this by indication, but keep in mind that\n   * a more precise indication will gain a more positive impact on performance.\n   */\n  pageFold?: string;\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breakpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class LayoutConfig {\n  /**\n   * The breakpoint configuration is used when the DOM is (re)rendered in specific view.\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints.\n   */\n  breakpoints?: {\n    [BREAKPOINT.xs]?: number;\n    [BREAKPOINT.sm]?: number;\n    [BREAKPOINT.md]?: number;\n    [BREAKPOINT.lg]?: number;\n  };\n  layoutSlots?: LayoutSlotConfig;\n\n  /**\n   * Deferred loading is a technique to hold of with the loading / creation\n   * of DOM elements which are not not in the initial view port.\n   * This technique wil increase performance.\n   */\n  deferredLoading?: {\n    /**\n     * The global strategy will be used as a fallback strategy for all DOM creation,\n     * but can be overridden by local configuration, i.e. for cms components.\n     */\n    strategy?: DeferLoadingStrategy;\n    /**\n     * The intersection margin contains the offset used by the Intersection Observer\n     * to observe elements outside the view port.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\n     */\n    intersectionMargin?: string;\n  };\n\n  launch?: LaunchConfig;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentRef,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Applicable, Priority } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  DIALOG_TYPE,\n  LaunchDialog,\n  LaunchOptions,\n  LAUNCH_CALLER,\n} from '../config';\n\nexport abstract class LaunchRenderStrategy implements Applicable {\n  // List of called references; only used for rendered elements\n  protected renderedCallers: Array<{\n    caller: LAUNCH_CALLER | string;\n    element?: any;\n    component?: ComponentRef<any>;\n  }> = [];\n\n  /**\n   * Classes to apply to the component when the dialog is a DIALOG\n   */\n  protected dialogClasses = ['d-block', 'fade', 'modal', 'show'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER\n   */\n  protected popoverClasses = ['cx-dialog-popover'];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_END\n   */\n  protected sidebarEndClasses = ['cx-sidebar-end'];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_START\n   */\n  protected sidebarStartClasses = ['cx-sidebar-start'];\n\n  protected renderer: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2\n  ) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /**\n   * Render method to implement based on the strategy\n   *\n   * @param config Launch configuration\n   */\n  abstract render(\n    config: LaunchOptions,\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef\n  ): void | Observable<ComponentRef<any>>;\n\n  /**\n   * Determines if the strategy is the right one for the provided configuration\n   *\n   * @param config\n   */\n  abstract hasMatch(config: LaunchOptions): boolean;\n\n  /**\n   * Determines if element should render\n   *\n   * @param caller\n   * @param config\n   */\n  protected shouldRender(\n    caller: LAUNCH_CALLER | string,\n    config: LaunchDialog\n  ): boolean {\n    return (\n      Boolean(config.component) &&\n      (this.renderedCallers.some((el) => el.caller === caller)\n        ? !!config.multi\n        : true)\n    );\n  }\n\n  protected applyClasses(\n    component: ComponentRef<any>,\n    dialogType: DIALOG_TYPE\n  ): void {\n    let classes = [];\n\n    // TODO: make classes configurable\n    switch (dialogType) {\n      case DIALOG_TYPE.DIALOG:\n        classes = this.dialogClasses;\n        this.renderer.addClass(this.document.body, 'modal-open');\n        break;\n      case DIALOG_TYPE.POPOVER:\n        classes = this.popoverClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_END:\n        classes = this.sidebarEndClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_START:\n        classes = this.sidebarStartClasses;\n        break;\n    }\n\n    for (const newClass of classes) {\n      this.renderer.addClass(component.location.nativeElement, newClass);\n    }\n  }\n\n  /**\n   * Method to call when rendered element is destroyed\n   * The element will be removed from the list of rendered elements\n   *\n   * @param caller\n   * @param _config optional parameters used in children strategies\n   */\n  public remove(caller: LAUNCH_CALLER | string, config: LaunchOptions): void {\n    this.renderedCallers = this.renderedCallers.filter(\n      (el) => el.caller !== caller\n    );\n\n    if ((config as LaunchDialog)?.dialogType === DIALOG_TYPE.DIALOG) {\n      this.renderer.removeClass(this.document.body, 'modal-open');\n    }\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW; // low, as it's a default matcher\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the component from the configuration in the view container ref\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchInlineDialog,\n    caller: LAUNCH_CALLER | string,\n    vcr: ViewContainerRef\n  ): Observable<ComponentRef<any>> {\n    // Only render if a ViewContainerRef is provided\n    if (vcr && this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n\n      const component = vcr.createComponent(template);\n\n      if (config?.dialogType) {\n        this.applyClasses(component, config?.dialogType);\n      }\n\n      this.renderedCallers.push({ caller, element: vcr.element, component });\n\n      return of(component);\n    } else if (isDevMode()) {\n      if (!vcr) {\n        console.warn(`No view container ref provided for ${caller}`);\n      } else {\n        console.warn(\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\n        );\n      }\n    }\n  }\n\n  hasMatch(config: LaunchInlineDialog) {\n    return Boolean(config.inline);\n  }\n}\n","import {\n  ComponentRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  ViewContainerRef,\n} from '@angular/core';\nimport { resolveApplicable } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LayoutConfig } from '../../config/layout-config';\nimport { LaunchOptions, LAUNCH_CALLER } from '../config/launch-config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class LaunchDialogService {\n  private _dialogClose = new BehaviorSubject<string>(undefined);\n  private _dataSubject = new BehaviorSubject<any>(undefined);\n\n  get data$(): Observable<any> {\n    return this._dataSubject.asObservable();\n  }\n\n  constructor(\n    @Inject(LaunchRenderStrategy)\n    protected renderStrategies: LaunchRenderStrategy[],\n    protected layoutConfig: LayoutConfig\n  ) {\n    this.renderStrategies = this.renderStrategies || [];\n  }\n\n  /**\n   * Render the element based on the strategy from the launch configuration\n   *\n   * @param caller LAUNCH_CALLER\n   * @param vcr View Container Ref of the container for inline rendering\n   */\n  launch(\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef,\n    data?: any\n  ): void | Observable<ComponentRef<any>> {\n    const config = this.findConfiguration(caller);\n    if (config) {\n      const renderer = this.getStrategy(config);\n\n      // Render if the strategy exists\n      if (renderer) {\n        this._dialogClose.next(undefined);\n        this._dataSubject.next(data);\n\n        return renderer.render(config, caller, vcr);\n      }\n    } else if (isDevMode()) {\n      console.warn('No configuration provided for caller ' + caller);\n    }\n  }\n\n  /**\n   * Util method to remove element from rendered elements list\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  clear(caller: LAUNCH_CALLER | string): void {\n    const config = this.findConfiguration(caller);\n    const renderer = this.getStrategy(config);\n\n    // Render if the strategy exists\n    if (renderer) {\n      renderer.remove(caller, config);\n    }\n  }\n\n  get dialogClose(): Observable<string> {\n    return this._dialogClose.asObservable();\n  }\n\n  closeDialog(reason: string) {\n    this._dialogClose.next(reason);\n  }\n\n  /**\n   * Returns the configuration for the caller\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  protected findConfiguration(caller: LAUNCH_CALLER | string): LaunchOptions {\n    if (this.layoutConfig?.launch) {\n      return this.layoutConfig.launch[caller];\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the render strategy based on the configuration\n   *\n   * @param config Configuration for launch\n   */\n  protected getStrategy(config: LaunchOptions): LaunchRenderStrategy {\n    return resolveApplicable(this.renderStrategies, [config]);\n  }\n}\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n\n/**\n * Token for injecting outlet related context to the component rendered in the outlet\n */\nexport abstract class OutletContextData<T = any> {\n  /**\n   * Provides reference of the outlet where component is rendered in\n   */\n  reference: string;\n  /**\n   * Provides position of the outlet\n   */\n  position: OutletPosition;\n  /**\n   * Provides outlet context\n   */\n  context: T;\n}\n","import { ComponentFactory, Injectable, TemplateRef } from '@angular/core';\nimport { FeatureConfigService } from '@spartacus/core';\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService<T = TemplateRef<any> | ComponentFactory<any>> {\n  /**\n   * @deprecated since 2.1, see #8116\n   */\n  constructor();\n  // tslint:disable-next-line: unified-signatures\n  constructor(features: FeatureConfigService);\n  constructor(protected features?: FeatureConfigService) {}\n\n  private templatesRefs = {\n    [OutletPosition.BEFORE]: new Map<string, T[]>(),\n    [OutletPosition.REPLACE]: new Map<string, T[]>(),\n    [OutletPosition.AFTER]: new Map<string, T[]>(),\n  };\n\n  /**\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\n   * The UI position where this template or ComponentFactory is inserted is given by a\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\n   * is either before or after, or replaces the entire UI.\n   *\n   * @param outlet the UI location represented by a string\n   * @param template the `TemplateRef` that will be used to insert UI\n   * @param position the `OutletPosition` in the UI\n   */\n  add(outlet: string, template: T, position?: OutletPosition): void;\n  /**\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\n   */\n  add(\n    outlet: string,\n    // tslint:disable-next-line: unified-signatures\n    factory: T,\n    position?: OutletPosition\n  ): void;\n  /**\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\n   */\n  add(\n    outlet: string,\n    templateOrFactory: T,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    const store = this.templatesRefs[position];\n    if (store) {\n      const existing = store.get(outlet) || [];\n      const newValue: T[] = existing.concat([templateOrFactory]);\n      store.set(outlet, newValue);\n    }\n  }\n\n  /**\n   *\n   * Returns a single object or multiple objects for the given outlet reference,\n   * depending on the `stacked` argument.\n   *\n   * @param outlet The outlet reference\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\n   * @param stacked Indicates whether an array of outlet components is returned\n   */\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    stacked = AVOID_STACKED_OUTLETS\n  ): T[] | T {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    const templateRef: T[] = store.get(outlet);\n    if (templateRef && !stacked) {\n      return templateRef[0];\n    }\n    return templateRef;\n  }\n\n  remove(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    value?: T\n  ): void {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    this.removeValueOrAll(store, outlet, value);\n  }\n\n  protected removeValueOrAll(\n    store: Map<string, T[]>,\n    outlet: string,\n    value?: T\n  ): void {\n    if (!value && store.has(outlet)) {\n      store.delete(outlet);\n    } else if (value && store.has(outlet)) {\n      let existing = store.get(outlet);\n\n      if (this.features?.isLevel('2.1')) {\n        existing = existing.filter((val) => val !== value);\n      } else {\n        // deprecated since 2.1, see #8116:\n        existing = existing.filter((val) => val === value);\n      }\n\n      store.set(outlet, existing);\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { FeatureConfigService } from '@spartacus/core';\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit, OnDestroy {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  /**\n   * @deprecated since 2.1, see #8201\n   */\n  constructor(tpl: TemplateRef<any>, outletService: OutletService);\n  constructor(\n    tpl: TemplateRef<any>,\n    outletService: OutletService,\n    // tslint:disable-next-line: unified-signatures\n    features: FeatureConfigService\n  );\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService,\n    private features?: FeatureConfigService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n\n  ngOnDestroy() {\n    if (this.features?.isLevel('2.1')) {\n      this.outletService.remove(this.cxOutletRef, this.cxOutletPos, this.tpl);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { OutletDirective } from './outlet.directive';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletRendererService {\n  private outletRefs = new BehaviorSubject(new Map<string, OutletDirective>());\n\n  /**\n   * Dynamically render the templates in the specified array\n   *\n   * @param outlet\n   */\n  render(outlet: string): void {\n    if (this.outletRefs.value.size !== 0) {\n      this.outletRefs.value.get(outlet).render();\n    }\n  }\n\n  /**\n   * Register outlet to be available to render dynamically\n   *\n   * @param cxOutlet\n   * @param context\n   */\n  register(cxOutlet: string, context: OutletDirective): void {\n    this.outletRefs.next(this.outletRefs.value.set(cxOutlet, context));\n  }\n  /**\n   * Returns map of outlets\n   *\n   */\n  getOutletRef(outlet: string): Observable<OutletDirective> {\n    return this.outletRefs.asObservable().pipe(\n      map((val) => val.get(outlet)),\n      filter((val) => Boolean(val))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\n\n/**\n * The IntersectionService uses the native IntersectionObserver (v2), which\n * can be used to implement pre-loading and deferred loading of DOM content.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntersectionService {\n  constructor(protected config: LayoutConfig) {}\n\n  /**\n   * Returns an Observable that emits only once a boolean value whenever\n   * the given element has shown in the view port.\n   *\n   * The returned observable will only emit the first value. The\n   * observable must be cleaned up either way, since the value might never emit; it\n   *  depends on whether the element appears in the view port.\n   */\n  isIntersected(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    return this.intersects(element, options).pipe(first((v) => v === true));\n  }\n\n  /**\n   * Indicates whenever the element intersects the view port. An optional margin\n   * is used to intersects before the element shows up in the viewport.\n   * A value is emitted each time the element intersects.\n   *\n   * This is private for now, but could be exposed as a public API\n   * to introduce additional (css) render effects to the UI.\n   */\n  private intersects(\n    element: HTMLElement,\n    options: IntersectionOptions = {}\n  ): Observable<boolean> {\n    const elementVisible$ = new Observable((observer) => {\n      const rootMargin = this.getRootMargin(options);\n      const intersectOptions = { rootMargin, threshold: options.threshold };\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        observer.next(entries);\n      }, intersectOptions);\n      intersectionObserver.observe(element);\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    }).pipe(\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\n      distinctUntilChanged()\n    );\n\n    return elementVisible$;\n  }\n\n  private getRootMargin(options: IntersectionOptions = {}): string {\n    if (options.rootMargin) {\n      return options.rootMargin;\n    }\n    const layoutConfig = this.config as LayoutConfig;\n    if (\n      layoutConfig.deferredLoading &&\n      layoutConfig.deferredLoading.intersectionMargin\n    ) {\n      return layoutConfig.deferredLoading.intersectionMargin;\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\nimport { IntersectionService } from './intersection.service';\n\n/**\n * The defer loading serivce is used to defer loading of DOM elements\n * until the elements are required for the user experience.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeferLoaderService {\n  globalLoadStrategy: DeferLoadingStrategy;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected config: LayoutConfig,\n    protected intersectionService: IntersectionService\n  ) {\n    this.globalLoadStrategy = config.deferredLoading\n      ? config.deferredLoading.strategy\n      : DeferLoadingStrategy.INSTANT;\n  }\n\n  /**\n   * Defer loading till the element intersects the viewport.\n   *\n   * We evaluate whether we instantly load the element for different reasons:\n   * - we run in SSR mode\n   * - there's no global strategy given\n   * - the global loading strategy is set to INSTANT loading,\n   *   and the loading strategy in the given is not set to DEFER\n   * - the loading strategy in the given options is set to INSTANT\n   */\n  load(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\n      return of(true);\n    } else {\n      return this.intersectionService.isIntersected(element, options);\n    }\n  }\n\n  private shouldLoadInstantly(\n    elementLoadingStrategy: DeferLoadingStrategy\n  ): boolean {\n    return (\n      isPlatformServer(this.platformId) ||\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\n    );\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\nimport { OutletRendererService } from './outlet-renderer.service';\nimport {\n  OutletContextData,\n  OutletPosition,\n  USE_STACKED_OUTLETS,\n} from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective implements OnDestroy, OnChanges {\n  private renderedTemplate = [];\n  public renderedComponents = new Map<\n    OutletPosition,\n    Array<ComponentRef<any> | EmbeddedViewRef<any>>\n  >();\n\n  @Input() cxOutlet: string;\n\n  @Input() cxOutletContext: any;\n\n  /**\n   * Defers loading options for the the templates of this outlet.\n   */\n  @Input() cxOutletDefer: IntersectionOptions;\n\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\n\n  subscription = new Subscription();\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService,\n    private deferLoaderService: DeferLoaderService,\n    private outletRendererService: OutletRendererService\n  ) {}\n\n  public render(): void {\n    this.vcr.clear();\n    this.renderedTemplate = [];\n    this.renderedComponents.clear();\n    this.subscription.unsubscribe();\n    this.subscription = new Subscription();\n\n    if (this.cxOutletDefer) {\n      this.deferLoading();\n    } else {\n      this.build();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.cxOutlet) {\n      this.render();\n      this.outletRendererService.register(this.cxOutlet, this);\n    }\n  }\n\n  private deferLoading(): void {\n    this.loaded.emit(false);\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\n    // Although the deferLoaderService might emit only once, as long as the hostElement\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\n    // the subscription on destroy.\n    this.subscription.add(\n      this.deferLoaderService\n        .load(hostElement, this.cxOutletDefer)\n        .subscribe(() => {\n          this.build();\n          this.loaded.emit(true);\n        })\n    );\n  }\n\n  private build() {\n    this.buildOutlet(OutletPosition.BEFORE);\n    this.buildOutlet(OutletPosition.REPLACE);\n    this.buildOutlet(OutletPosition.AFTER);\n  }\n\n  private buildOutlet(position: OutletPosition): void {\n    let templates: any[] = <any[]>(\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\n    );\n\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\n\n    if (!templates && position === OutletPosition.REPLACE) {\n      templates = [this.templateRef];\n    }\n\n    // Just in case someone extended the `OutletService` and\n    // returns a singular object.\n    if (!Array.isArray(templates)) {\n      templates = [templates];\n    }\n\n    const components = [];\n    templates.forEach((obj) => {\n      const component = this.create(obj, position);\n      components.push(component);\n    });\n\n    this.renderedComponents.set(position, components);\n  }\n\n  private create(\n    tmplOrFactory: any,\n    position: OutletPosition\n  ): ComponentRef<any> | EmbeddedViewRef<any> {\n    this.renderedTemplate.push(tmplOrFactory);\n\n    if (tmplOrFactory instanceof ComponentFactory) {\n      const component = this.vcr.createComponent(\n        tmplOrFactory,\n        undefined,\n        this.getComponentInjector(position)\n      );\n      return component;\n    } else if (tmplOrFactory instanceof TemplateRef) {\n      const view = this.vcr.createEmbeddedView(\n        <TemplateRef<any>>tmplOrFactory,\n        {\n          $implicit: this.cxOutletContext,\n        }\n      );\n\n      // we do not know if content is created dynamically or not\n      // so we apply change detection anyway\n      view.markForCheck();\n      return view;\n    }\n  }\n\n  /**\n   * Returns injector with OutletContextData that can be injected to the component\n   * rendered in the outlet\n   */\n  private getComponentInjector(position: OutletPosition): Injector {\n    const contextData: OutletContextData = {\n      reference: this.cxOutlet,\n      position,\n      context: this.cxOutletContext,\n    };\n\n    return Injector.create({\n      providers: [\n        {\n          provide: OutletContextData,\n          useValue: contextData,\n        },\n      ],\n      parent: this.vcr.injector,\n    });\n  }\n\n  /**\n   * Returns the closest `HtmlElement`, by iterating over the\n   * parent nodes of the given element.\n   *\n   * We avoid traversing the parent _elements_, as this is blocking\n   * ie11 implementations. One of the spare exclusions we make to not\n   * supporting ie11.\n   *\n   * @param element\n   */\n  private getHostElement(element: Node): HTMLElement {\n    if (element instanceof HTMLElement) {\n      return element;\n    }\n    return this.getHostElement(element.parentNode);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  RendererFactory2,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport {\n  OutletPosition,\n  OutletService,\n} from '../../../cms-structure/outlet/index';\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected outletService: OutletService<ComponentFactory<any>>,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected outletRendererService: OutletRendererService\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the element in the configured outlet\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchOutletDialog,\n    caller: LAUNCH_CALLER | string\n  ): Observable<ComponentRef<any>> {\n    if (this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n      this.outletService.add(\n        config.outlet,\n        template,\n        config.position ? config.position : OutletPosition.BEFORE\n      );\n      this.outletRendererService.render(config.outlet);\n      this.renderedCallers.push({ caller });\n\n      return this.outletRendererService.getOutletRef(config.outlet).pipe(\n        map((outletDirective) => {\n          const components = outletDirective.renderedComponents.get(\n            config.position ? config.position : OutletPosition.BEFORE\n          ) as ComponentRef<any>[];\n\n          return components\n            .reverse()\n            .find(\n              (component) => component.componentType === template.componentType\n            );\n        }),\n        tap((component) => {\n          if (config?.dialogType) {\n            this.applyClasses(component, config?.dialogType);\n          }\n        })\n      );\n    }\n  }\n\n  hasMatch(config: LaunchOutletDialog) {\n    return Boolean(config.outlet);\n  }\n\n  remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void {\n    const template = this.componentFactoryResolver.resolveComponentFactory(\n      config.component\n    );\n\n    this.outletService.remove(\n      config.outlet,\n      config.position ? config.position : OutletPosition.BEFORE,\n      template\n    );\n\n    super.remove(caller, config);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, RendererFactory2 } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected routingService: RoutingService\n  ) {\n    super(document, rendererFactory);\n  }\n  /**\n   * Navigates to the route configured for the caller\n   */\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER | string) {\n    this.routingService.go(config);\n  }\n\n  hasMatch(config: LaunchRoute) {\n    return Boolean(config.cxRoute);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { LayoutConfig } from '../config/layout-config';\nimport {\n  InlineRenderStrategy,\n  LaunchRenderStrategy,\n  OutletRenderStrategy,\n  RoutingRenderStrategy,\n} from './services/index';\n\n@NgModule({\n  providers: [\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: OutletRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: InlineRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: RoutingRenderStrategy,\n      multi: true,\n    },\n  ],\n})\nexport class LaunchDialogModule {\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\n    return {\n      ngModule: LaunchDialogModule,\n      providers: [{ provide: LayoutConfig, useExisting: Config }],\n    };\n  }\n}\n","import { ElementRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport {\n  LaunchDialogService,\n  LAUNCH_CALLER,\n} from '../../layout/launch-dialog/index';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentLaunchDialogService {\n  constructor(protected launchDialogService: LaunchDialogService) {}\n\n  openDialog(\n    openElement?: ElementRef,\n    vcr?: ViewContainerRef\n  ): Observable<any> | undefined {\n    const component = this.launchDialogService.launch(\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\n      vcr\n    );\n\n    if (component) {\n      return combineLatest([\n        component,\n        this.launchDialogService.dialogClose,\n      ]).pipe(\n        filter(([, close]) => close && close !== undefined),\n        tap(([comp]) => {\n          openElement?.nativeElement.focus();\n          this.launchDialogService.clear(LAUNCH_CALLER.ANONYMOUS_CONSENT);\n          comp.destroy();\n        }),\n        map(([comp]) => comp)\n      );\n    }\n  }\n}\n","/** The element attribute used to store the focus state */\nexport const FOCUS_ATTR = 'data-cx-focus';\n/** The element attribute used to store the focus group state */\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\n\nexport const enum MOVE_FOCUS {\n  NEXT = 1,\n  PREV = -1,\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface BaseFocusConfig {}\n\nexport interface VisibleFocusConfig {\n  /**\n   * When set to true, the `mouse-focus` class is added to the host element,\n   * indicating that the element focus should not be made visible.\n   */\n  disableMouseFocus?: boolean;\n}\n\nexport interface BlockFocusConfig extends VisibleFocusConfig {\n  block?: boolean;\n}\n\nexport interface PersistFocusConfig extends BlockFocusConfig {\n  /**\n   * A key to maintain the focus of an element in case the component is\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\n   */\n  key?: string;\n\n  /**\n   * Optional group identifier that can be used to persist the focus. This allows\n   * to have separate persisted focus available when the DOM is partially rebuild.\n   */\n  group?: string;\n}\n\nexport interface EscapeFocusConfig extends PersistFocusConfig {\n  focusOnEscape?: boolean;\n  /**\n   * Force an autofocus in case of double-escape\n   */\n  focusOnDoubleEscape?: boolean;\n}\n\nexport interface AutoFocusConfig extends EscapeFocusConfig {\n  /**\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\n   * In case the focus is explicitly set to `true`, the first accessible element\n   * is focussed in case there is no _autofocus_ element found.\n   * If the focus is set to false, autofocus will be disabled completely.\n   *\n   * If a string value is given, the autofocus will be restored based on the persisted\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\n   *\n   * Defaults to `true`.\n   */\n  autofocus?: boolean | string;\n}\n\nexport interface TabFocusConfig extends AutoFocusConfig {\n  tab?: boolean | 'scroll' | string;\n}\n\n/**\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\n * for the nested focusable elements. This means that the focus can not\n * \"leave\" the elements. If the last element is focused, the keyboard will\n * navigate to the first element and visa versa.\n */\nexport interface TrapFocusConfig extends TabFocusConfig {\n  /** traps the focus */\n  trap?: boolean | 'start' | 'end';\n}\n\nexport interface LockFocusConfig extends TrapFocusConfig {\n  /**\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\n   */\n  lock?: boolean;\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface FocusConfig extends LockFocusConfig {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseFocusService {}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { BaseFocusConfig } from '../keyboard-focus.model';\nimport { BaseFocusService } from './base-focus.service';\n\n/**\n * Abstract directive that provides a common interface for all focus directives:\n * - Block Focus\n * - Persist Focus\n * - Escape Focus\n * - Auto Focus\n * - Tab Focus\n * - Trap Focus\n * - Lock Focus\n */\n@Directive()\nexport abstract class BaseFocusDirective implements OnInit {\n  /**\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\n   * focus directive.\n   */\n  protected config: BaseFocusConfig;\n\n  /**\n   * A default config can be provided for each directive if a specific focus directive\n   * is used directly. i.e. `<div cxAutoFocus></div>`\n   */\n  protected defaultConfig: BaseFocusConfig = {};\n\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected service: BaseFocusService\n  ) {}\n\n  ngOnInit() {\n    this.setDefaultConfiguration();\n    this.requiredTabindex = -1;\n  }\n\n  /**\n   * Override the (input) config if it undefined or an empty string, with the\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\n   * specific (inherited) defaultConfig will be used.\n   */\n  protected setDefaultConfiguration(): void {\n    if ((!this.config || this.config === '') && this.defaultConfig) {\n      this.config = this.defaultConfig;\n    }\n  }\n\n  /**\n   * Helper method to return the host element for the directive\n   * given by the `elementRef`.\n   */\n  protected get host(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /**\n   * Force a tabindex on the host element if it is _requried_ to make the element\n   * focusable. If the element is focusable by nature or by a given tabindex, the\n   * `tabindex` is not applied.\n   *\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\n   */\n  protected set requiredTabindex(tabindex: number) {\n    if (this.requiresExplicitTabIndex) {\n      this.tabindex = tabindex;\n    }\n  }\n\n  /**\n   * Returns true if the host element does not have a tabindex defined\n   * and it also doesn't get focus by browsers nature (i.e. button or\n   * active link).\n   */\n  protected get requiresExplicitTabIndex(): boolean {\n    return (\n      this.tabindex === undefined &&\n      ['button', 'input', 'select', 'textarea'].indexOf(\n        this.host.tagName.toLowerCase()\n      ) === -1 &&\n      !(\n        this.host.tagName === 'A' &&\n        (this.host.hasAttribute('href') || this.host.hasAttribute('routerlink'))\n      )\n    );\n  }\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\nimport { BaseFocusDirective } from '../base/base-focus.directive';\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\n\n/**\n * Directive implementation that adds a CSS class to the host element\n * when the moused is used to focus an element. As soon as the keyboard\n * is used, the class is removed.\n *\n * This feature must be explicitly enabled with the `disableMouseFocus` config.\n *\n * The appearance of the visual focus depends on the CSS implementation to\n * begin with. Spartacus styles add a blue border around each focusable element.\n * This can be considered annoying by keyboard users, as they won't need such a\n * strong indication of the selected element.\n */\n@Directive() // selector: '[cxVisibleFocus]'\nexport class VisibleFocusDirective extends BaseFocusDirective {\n  protected defaultConfig: VisibleFocusConfig = {\n    disableMouseFocus: true,\n  };\n\n  // @Input('cxVisibleFocus')\n  protected config: VisibleFocusConfig;\n\n  /** Controls a css class to hide focus visible CSS rules */\n  @HostBinding('class.mouse-focus') mouseFocus = false;\n\n  @HostListener('mousedown') handleMousedown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = true;\n    }\n  }\n\n  @HostListener('keydown', ['$event']) handleKeydown(event: KeyboardEvent) {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = !this.isNavigating(event);\n    }\n  }\n\n  /**\n   * Indicates whether the configurations setup to disable visual focus.\n   */\n  protected get shouldFocusVisible(): boolean {\n    return this.config?.disableMouseFocus;\n  }\n\n  /**\n   * Indicates whether the event is used to navigate the storefront. Some keyboard events\n   * are used by mouse users to fill a form or interact with the OS or browser.\n   */\n  protected isNavigating(event: KeyboardEvent): boolean {\n    // when the cmd or ctrl keys are used, the user doesn't navigate the storefront\n    if (event.metaKey) {\n      return false;\n    }\n    // when the tab key is used, users are for navigating away from the current (form) element\n    if (event.code === 'Tab') {\n      return true;\n    }\n    // If the user fill in a form, we don't considering it part of storefront navigation.\n    if (['INPUT', 'TEXTAREA'].includes((event.target as HTMLElement).tagName)) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { BlockFocusConfig } from '../keyboard-focus.model';\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\n\n@Directive()\n// { selector: '[cxBlockFocus]' }\nexport class BlockFocusDirective\n  extends VisibleFocusDirective\n  implements OnInit {\n  protected defaultConfig: BlockFocusConfig = { block: true };\n\n  // @Input('cxBlockFocus')\n  protected config: BlockFocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: BaseFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.config.block) {\n      this.tabindex = -1;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\n\nconst GLOBAL_GROUP = '_g_';\n\n/**\n * Shared service to persist the focus for an element or a group\n * of elements. The persisted element focus can be used to persist\n * the focus for a DOM tree, so that the focus remains after a repaint\n * or reoccurs when a DOM tree is \"unlocked\".\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersistFocusService extends BaseFocusService {\n  // this is going to fail as we have sub services. They will al have their own map.\n  // We must bring this to a singleton map.\n  protected focus = new Map<string, string>();\n\n  get(group?: string): string {\n    return this.focus.get(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Persist the keyboard focus state for the given key. The focus is stored globally\n   * or for the given group.\n   */\n  set(key: string, group?: string) {\n    if (key) {\n      this.focus.set(group || GLOBAL_GROUP, key);\n    }\n  }\n\n  /**\n   * Clears the persisted keyboard focus state globally or for the given group.\n   */\n  clear(group?: string) {\n    this.focus.delete(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Returns the group for the host element based on the configured group or\n   * by the `data-cx-focus-group` attribute stored on the host.\n   */\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { BlockFocusDirective } from '../block/block-focus.directive';\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from './persist-focus.service';\n\n/**\n * Directive that provides persistence of the focused state. This is useful\n * when a group of focusable elements got refocused or even recreated. That\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\n *\n * The focus state is based on a configured _key_, which can be passed in the\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\n *\n * ```html\n * <button cxPersistFocus=\"myKey\"></button>\n * <button cxFocus=\"myKey\"></button>\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\n * ```\n *\n * The focus state can be part of a focus _group_, so that the state is shared\n * and remember for the given group. In order to detect the persistence for a\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\n *\n * ```html\n * <button data-cx-focus=\"myKey\"></button>\n * ```\n *\n * Other keyboard focus directives can read the key to understand whether the element\n * should retrieve focus.\n *\n */\n@Directive() // selector: '[cxPersistFocus]',\nexport class PersistFocusDirective\n  extends BlockFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: PersistFocusConfig = {};\n\n  /**\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\n   * While this could be considered a global key, the likeliness of conflicts\n   * is very small since the key is cleared when the focus is changed.\n   */\n  // @Input('cxPersistFocus')\n  protected config: PersistFocusConfig = {};\n\n  /**\n   * The persistence key is maintained in an element attribute for other\n   * implementations. This is needed to ensure that we can resolve the focus\n   * state in case of a repaint.\n   */\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\n\n  @HostListener('focus', ['$event'])\n  handleFocus(event?: KeyboardEvent) {\n    this.service.set(this.key, this.group);\n\n    event?.preventDefault();\n    event?.stopPropagation();\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: PersistFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.attr = this.key ? this.key : undefined;\n  }\n\n  protected setDefaultConfiguration() {\n    if (typeof this.config === 'string' && this.config !== '') {\n      this.config = { key: this.config };\n    }\n    super.setDefaultConfiguration();\n  }\n\n  /**\n   * Focus the element explicitly if it was focused before.\n   */\n  ngAfterViewInit() {\n    if (this.isPersisted) {\n      this.host.focus({ preventScroll: true });\n    }\n  }\n\n  protected get isPersisted(): boolean {\n    return !!this.key && this.service.get(this.group) === this.key;\n  }\n\n  /**\n   * Returns the key for the host element, which is used to persist the\n   * focus state. This is useful in cases where the DOM is rebuild.\n   */\n  protected get key(): string {\n    return (this.config as PersistFocusConfig)?.key;\n  }\n\n  /**\n   * returns the persistence group (if any) for the focusable elements.\n   */\n  protected get group(): string {\n    return this.service.getPersistenceGroup(\n      this.host,\n      this.config as PersistFocusConfig\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectFocusUtility {\n  /**\n   * Query selectors used to query focusable child elements of the host element.\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\n   */\n  protected focusableSelectors: string[] = [\n    'a[href]',\n    'button',\n    '[tabindex]',\n    'input',\n    'select',\n    'textarea',\n  ];\n\n  // like to leave out the following as we don't use it, and make this list exensible.\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\n  //   `iframe`, // we really don't like iframes...\n  //   `area[href]`, // very debatable!\n\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\n\n  query(host: HTMLElement, selector: string): HTMLElement[] {\n    if (!selector || selector === '') {\n      return [];\n    }\n    return Array.from(\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\n    );\n  }\n\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    const selector =\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\n    // fallback to first focusable\n    return (\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\n      this.findFocusable(host).find((el) => Boolean(el))\n    );\n  }\n\n  /**\n   * returns all focusable child elements of the host element. The element selectors\n   * are build from the `focusableSelectors`.\n   *\n   * @param host the `HTMLElement` used to query focusable elements\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\n   * @param invisible indicates whether hidden focusable elements should be returned\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    let suffix = this.focusableSelectorSuffix;\n    if (!locked) {\n      suffix += `:not([tabindex='-1'])`;\n    }\n    const selector = this.focusableSelectors\n      .map((s) => (s += suffix))\n      .join(',');\n    return this.query(host, selector).filter((el) =>\n      !invisible ? !this.isHidden(el) : Boolean(el)\n    );\n  }\n\n  /**\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\n   *\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\n   * phyisical location on the element itself or any of it's anchestor elements. Those\n   * technique require to work with the _computed styles_, which will cause a performance\n   * downgrade. We don't do this in the standard implementaton.\n   */\n  protected isHidden(el: HTMLElement): boolean {\n    return el.offsetParent === null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from '../persist/persist-focus.service';\nimport { SelectFocusUtility } from '../services/select-focus.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EscapeFocusService extends PersistFocusService {\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\n    super();\n  }\n\n  shouldFocus(config: EscapeFocusConfig): boolean {\n    return !!config?.focusOnEscape;\n  }\n\n  handleEscape(\n    host: HTMLElement,\n    config: EscapeFocusConfig,\n    event: KeyboardEvent\n  ): void {\n    if (this.shouldFocus(config)) {\n      if (host !== event.target) {\n        host.focus({ preventScroll: true });\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        if (config?.focusOnDoubleEscape) {\n          this.selectFocusUtil\n            .findFirstFocusable(host, { autofocus: true })\n            ?.focus();\n        }\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\nimport { EscapeFocusService } from './escape-focus.service';\n\n/**\n * Directive to focus the host element whenever the `escape` key is captured.\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\n * on a tree of elements. Each time the escape key is used, the focus will\n * move up in the DOM tree.\n *\n */\n@Directive() // selector: '[cxEscFocus]',\nexport class EscapeFocusDirective\n  extends PersistFocusDirective\n  implements OnInit {\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\n\n  // @Input('cxEscFocus')\n  protected config: EscapeFocusConfig;\n\n  @Output() esc = new EventEmitter<boolean>();\n\n  /**\n   * Handles the escape key event.\n   * @param event the native keyboard event which contains the escape keydown event\n   */\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    if (this.service.shouldFocus(this.config)) {\n      this.service.handleEscape(this.host, this.config, event);\n    }\n    this.esc.emit(this.service.shouldFocus(this.config));\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: EscapeFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    if (this.service.shouldFocus(this.config)) {\n      this.requiredTabindex = -1;\n    }\n    super.ngOnInit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusService } from '../escape/escape-focus.service';\nimport {\n  AutoFocusConfig,\n  FOCUS_ATTR,\n  PersistFocusConfig,\n} from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutoFocusService extends EscapeFocusService {\n  /**\n   * Returns the first focusable child element of the host element.\n   */\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    if (config?.autofocus === ':host') {\n      return host;\n    } else if (this.hasPersistedFocus(host, config)) {\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\n    } else {\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\n    }\n  }\n\n  /**\n   * Indicates whether any of the focusabe child elements is focused.\n   */\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\n  }\n\n  /**\n   * Returns the element that has a persisted focus state.\n   *\n   * @param host the `HTMLElement` used to query for focusable children\n   * @param group the optional group for the persistent state, to separate different focus\n   *   groups and remain the persistence\n   */\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\n    if (!this.get(group)) {\n      return;\n    }\n    const focussed = Array.from(\n      host.querySelectorAll(\n        `[${FOCUS_ATTR}='${this.get(group)}']`\n      ) as NodeListOf<HTMLElement>\n    );\n    return focussed.length > 0 ? focussed[0] : null;\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\nimport { AutoFocusService } from './auto-focus.service';\n\n/**\n * Directive that focus the first nested _focusable_ element based on state and configuration:\n *\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\n * 4. first focusable element\n * 5. the host element, in case the configured CSS selector is `:host`.\n *\n * Example configurations:\n *\n * `<div cxAutoFocus>[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\n *\n */\n@Directive() // selector: '[cxAutoFocus]'\nexport class AutoFocusDirective\n  extends EscapeFocusDirective\n  implements AfterViewInit {\n  /** The AutoFocusDirective will be using autofocus by default  */\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\n\n  // @Input('cxAutoFocus')\n  protected config: AutoFocusConfig;\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: AutoFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Focus the element explicitly if it was focussed before.\n   */\n  ngAfterViewInit(): void {\n    if (this.shouldAutofocus) {\n      this.handleFocus();\n    }\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\n      super.ngAfterViewInit();\n    }\n  }\n\n  /**\n   * Mimic the focus without setting the actual focus on the host. The first\n   * focusable child element will be focussed.\n   */\n  handleFocus(event?: KeyboardEvent) {\n    if (this.shouldAutofocus) {\n      if (!event?.target || event.target === this.host) {\n        this.firstFocusable?.focus();\n      } else {\n        (event.target as HTMLElement).focus();\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  /**\n   * Helper function to get the first focusable child element\n   */\n  protected get hasPersistedFocus() {\n    return this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Helper function to indicate whether we should use autofocus for the\n   * child elements.\n   */\n  protected get shouldAutofocus(): boolean {\n    return !!this.config?.autofocus;\n  }\n\n  /**\n   * Helper function to get the first focusable child element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get firstFocusable(): HTMLElement {\n    return this.service.findFirstFocusable(this.host, this.config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TabFocusService extends AutoFocusService {\n  /**\n   * Moves to the next (or previous) tab.\n   */\n  moveTab(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS,\n    event: KeyboardEvent\n  ): void {\n    if (config?.tab) {\n      const next =\n        config.tab === 'scroll'\n          ? this.findNextScrollable(host, config, increment)\n          : this.findNext(host, config, increment);\n\n      next?.focus();\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * builds out virtual slides out of the full scrollable area, to allow\n   * for maximum flexibility for the underlying layout without using hardcoded\n   * slide sizes.\n   */\n  protected findNextScrollable(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const active = this.getActiveChild(host, config);\n\n    if (!active) {\n      return;\n    }\n    // slide count\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\n\n    // find current virtual slide\n    const currentVirtualSlide = Math.round(\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\n    );\n\n    let nextVirtualSlide = currentVirtualSlide + increment;\n    if (\n      increment === MOVE_FOCUS.NEXT &&\n      nextVirtualSlide >= virtualSlideCount\n    ) {\n      nextVirtualSlide = 0;\n    }\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\n      nextVirtualSlide = virtualSlideCount - 1;\n    }\n\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\n      (tab) =>\n        tab.offsetLeft >=\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\n    );\n\n    return firstItemOnNextSlide;\n  }\n\n  protected findNext(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const childs = this.getChildren(host, config);\n    let activeIndex = childs?.findIndex(\n      (c) => c === this.getActiveChild(host, config)\n    );\n\n    if (!activeIndex || activeIndex === -1) {\n      activeIndex = 0;\n    }\n    activeIndex += increment;\n\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\n      activeIndex = childs.length - 1;\n    }\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\n      activeIndex = 0;\n    }\n    return childs ? childs[activeIndex] : undefined;\n  }\n\n  /**\n   * Returns the active focusable child element. If there's no active\n   * focusable child element, the first focusable child is returned.\n   */\n  protected getActiveChild(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement {\n    const persisted = this.getPersisted(host, config?.group);\n    if (persisted) {\n      return persisted;\n    }\n    const children = this.getChildren(host, config);\n    let index = children.findIndex((tab) => this.isActive(tab));\n    if (!index || index === -1) {\n      index = 0;\n    }\n    return children[index];\n  }\n\n  protected getChildren(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement[] {\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\n      return this.selectFocusUtil.query(host, config.tab);\n    } else {\n      return this.findFocusable(host, true);\n    }\n  }\n\n  /**\n   * Returns all focusable child elements of the host element.\n   *\n   * @param host The host element is used to query child focusable elements.\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\n  }\n\n  protected isActive(el: HTMLElement): boolean {\n    const child = document.activeElement;\n    const selector = child.tagName;\n\n    return (\n      el === child ||\n      !!Array.from(el.querySelectorAll(selector)).find((e) => e === child)\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from './tab-focus.service';\n\n/**\n * Directive to move the focus of (\"locked\") child elements. This is useful\n * for a nested list of tabs, carousel slides or any group of elements that\n * requires horizontal navigation.\n */\n@Directive() // selector: '[cxTabFocus]'\nexport class TabFocusDirective extends AutoFocusDirective {\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\n  protected defaultConfig: TabFocusConfig = { tab: true };\n\n  // @Input('cxTabFocus')\n  protected config: TabFocusConfig = {};\n\n  @HostListener('keydown.arrowRight', ['$event'])\n  handleNextTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\n    }\n  }\n\n  @HostListener('keydown.arrowLeft', ['$event'])\n  handlePreviousTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TabFocusService\n  ) {\n    super(elementRef, service);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from '../tab/tab-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrapFocusService extends TabFocusService {\n  /**\n   * Indicates whether any of the child elements of the host are focusable.\n   *\n   * @param host `HTMLElement` that is used to query the focusable elements.\n   */\n  hasFocusableChildren(host: HTMLElement): boolean {\n    return this.findFocusable(host).length > 0;\n  }\n\n  /**\n   * Focus the next or previous element of all available focusable elements.\n   * The focus is _trapped_ in case there's no next or previous available element.\n   * The focus will automatically move the start or end of the list.\n   */\n  moveFocus(\n    host: HTMLElement,\n    config: TrapFocusConfig,\n    increment: MOVE_FOCUS,\n    event: UIEvent\n  ): void {\n    const focusable: HTMLElement[] = this.findFocusable(host);\n\n    let index = focusable.findIndex((v) => v === event.target) + increment;\n\n    const shouldMoveFocus =\n      (index >= 0 && index < focusable.length) ||\n      (index < 0 && this.getTrapStart(config.trap)) ||\n      (index >= focusable.length && this.getTrapEnd(config.trap));\n\n    if (shouldMoveFocus) {\n      if (index >= focusable.length) {\n        index = 0;\n      }\n      if (index < 0) {\n        index = focusable.length - 1;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const el = focusable[index];\n\n      el.focus();\n    }\n  }\n\n  protected getTrapStart(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'start';\n  }\n\n  protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean {\n    return trap === true || trap === 'end';\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\nimport { TrapFocusService } from './trap-focus.service';\n\n/**\n * Directive that keeps the focus inside the focussable child elements,\n * also known as a _focus trap_.\n */\n@Directive() // selector: '[cxTrapFocus]'\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\n  protected defaultConfig: TrapFocusConfig = { trap: true };\n\n  // @Input('cxTrapFocus')\n  protected config: TrapFocusConfig = {};\n\n  @HostListener('keydown.arrowdown', ['$event'])\n  @HostListener('keydown.tab', ['$event'])\n  handleTrapDown = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\n    }\n  };\n\n  @HostListener('keydown.arrowup', ['$event'])\n  @HostListener('keydown.shift.tab', ['$event'])\n  handleTrapUp = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.PREV);\n    }\n  };\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TrapFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Moves the focus of the element reference up or down, depending on the increment.\n   * The focus of the element is trapped to avoid it from going out of the group.\n   *\n   * @param event UIEvent that is used to get the target element. The event is blocked\n   *   from standard execution and further bubbling.\n   * @param increment indicates whether the next or previous is focussed.\n   */\n  protected moveFocus(event: UIEvent, increment: number) {\n    if (this.service.hasFocusableChildren(this.host)) {\n      this.service.moveFocus(\n        this.host,\n        this.config,\n        increment,\n        event as UIEvent\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TrapFocusService } from '../trap/trap-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LockFocusService extends TrapFocusService {}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\nimport { LockFocusService } from './lock-focus.service';\n\n/**\n * Focusable elements exclude hidden elements by default, but this contradicts with\n * unlocking (hidden) elements.\n */\nconst UNLOCK_HIDDEN_ELEMENTS = true;\n/**\n * Directive that adds persistence for focussed element in case\n * the elements are being rebuild. This happens often when change\n * detection kicks in because of new data set from the backend.\n */\n@Directive() // selector: '[cxLockFocus]'\nexport class LockFocusDirective\n  extends TrapFocusDirective\n  implements OnInit, AfterViewInit {\n  protected defaultConfig: LockFocusConfig = { lock: true };\n\n  // @Input('cxLockFocus')\n  protected config: LockFocusConfig = {};\n\n  /**\n   * Indicates that the host is configured to use locking. This is available as a\n   * CSS class `focus-lock`.\n   */\n  @HostBinding('class.focus-lock') shouldLock: boolean;\n\n  /**\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\n   */\n  @HostBinding('class.is-locked') isLocked: boolean;\n\n  /**\n   * Emits an event when the host is unlocked.\n   */\n  @Output() unlock = new EventEmitter<boolean>();\n\n  /**\n   * When the user selects enter or space, the focusable childs are\n   * unlocked, which means that the tabindex is set to 0.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handleEnter(event: KeyboardEvent) {\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\n      this.unlockFocus(event);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * In case any of the children elements is touched by the mouse,\n   * we unlock the group to not break the mouse-experience.\n   */\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if (this.shouldLock && this.isLocked) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: LockFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service);\n  }\n\n  protected lockFocus() {\n    this.addTabindexToChildren(-1);\n  }\n\n  protected unlockFocus(event?: UIEvent) {\n    this.unlock.emit(true);\n    this.addTabindexToChildren(0);\n    // we focus the host if the event was triggered from a child\n    if (event?.target === this.host) {\n      // we wait a few milliseconds, mainly because firefox will otherwise apply\n      // the mouse event on the new focused child element\n      setTimeout(() => {\n        super.handleFocus(event as KeyboardEvent);\n      }, 100);\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.shouldLock = this.config?.lock;\n\n    if (this.shouldLock) {\n      this.tabindex = 0;\n\n      // Locked elements will be set to `autofocus` by default if it's not\n      // been configured. This will ensure that autofocus kicks in upon unlock.\n      if (!this.config.hasOwnProperty('autofocus')) {\n        this.config.autofocus = true;\n      }\n      // Locked elements will be set to `focusOnEscape` by default if it's not\n      // been configured. This will ensure that  the host gets locked again when\n      // `escape` is pressed.\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.shouldLock) {\n      /**\n       * If the component hosts a group of focusable children elements,\n       * we persist the group key to the children, so that they can taken this\n       * into account when they persist their focus state.\n       */\n      if (!!this.group) {\n        this.service.findFocusable(this.host).forEach((el) =>\n          // we must do this in after view init as\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\n        );\n      }\n\n      if (this.shouldAutofocus) {\n        this.handleFocus();\n      }\n    }\n    super.ngAfterViewInit();\n  }\n\n  handleFocus(event?: KeyboardEvent): void {\n    if (this.shouldLock) {\n      if (this.shouldUnlockAfterAutofocus(event)) {\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\n        setTimeout(() => this.unlockFocus(event));\n      } else {\n        setTimeout(() => this.lockFocus());\n        event?.stopPropagation();\n        return;\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  handleEscape(event: KeyboardEvent): void {\n    if (this.shouldLock) {\n      this.service.clear(this.config.group);\n    }\n    super.handleEscape(event);\n  }\n\n  /**\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\n   * In this case we unlock the focusable children in case there's a focusable child that\n   * was unlocked before.\n   *\n   * We keep this private to not polute the API.\n   */\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Add the tabindex attribute to the focusable children elements\n   */\n  protected addTabindexToChildren(i = 0): void {\n    if (this.shouldLock) {\n      this.isLocked = i === -1;\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\n        this.focusable.forEach((el) =>\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\n        );\n      }\n    }\n  }\n\n  /**\n   * Utility method, returns all focusable children for the host element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get hasFocusableChildren(): boolean {\n    return this.service.hasFocusableChildren(this.host);\n  }\n\n  /**\n   * Returns the focusable children of the host element. If the host element\n   * is configured to be locked, the query is restricted to child elements\n   * with a tabindex !== `-1`.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get focusable(): HTMLElement[] {\n    return this.service.findFocusable(\n      this.host,\n      this.shouldLock,\n      UNLOCK_HIDDEN_ELEMENTS\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LockFocusService } from '../lock/lock-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeyboardFocusService extends LockFocusService {}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\nimport { LockFocusDirective } from './lock/lock-focus.directive';\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class FocusDirective extends LockFocusDirective {\n  protected defaultConfig: FocusConfig = {};\n  // tslint:disable-next-line: no-input-rename\n  @Input('cxFocus') protected config: FocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: KeyboardFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service, renderer);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\n\nconst directives = [\n  // PersistFocusDirective,\n  // VisibleFocusDirective,\n  // BlockFocusDirective,\n  // AutoFocusDirective,\n  // EscapeFocusDirective,\n  // LockFocusDirective,\n  // TrapFocusDirective,\n  // TabFocusDirective,\n  FocusDirective,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...directives],\n  exports: [...directives],\n})\nexport class KeyboardFocusModule {}\n","// given that we're likely going to refactor the directives, we're\n// NOT exposing all it to the public API.\nexport * from './focus.directive';\nexport { FocusConfig } from './keyboard-focus.model';\nexport * from './keyboard-focus.module';\nexport * from './services/index';\n\n// export * from './autofocus/index';\n// export * from './base/index';\n// export * from './block/index';\n// export * from './escape/index';\n// export * from './lock/index';\n// export * from './persist/index';\n// export * from './tab/index';\n// export * from './trap/index';\n// export * from './visible/index';\n// export * from './keyboard-focus.model';\n","import { Component, OnDestroy, ViewContainerRef } from '@angular/core';\nimport { AnonymousConsentsService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-management-banner',\n  templateUrl: './anonymous-consent-management-banner.component.html',\n})\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\n  private subscriptions = new Subscription();\n\n  bannerVisible$: Observable<\n    boolean\n  > = this.anonymousConsentsService.isBannerVisible();\n\n  constructor(\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  viewDetails(): void {\n    this.hideBanner();\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\n      null,\n      this.vcr\n    );\n    if (dialog) {\n      this.subscriptions.add(dialog.subscribe());\n    }\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      this.anonymousConsentsService\n        .giveAllConsents()\n        .pipe(tap(() => this.hideBanner()))\n        .subscribe()\n    );\n  }\n\n  hideBanner(): void {\n    this.anonymousConsentsService.toggleBannerDismissed(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\n\nexport enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n  HEART = 'HEART',\n  EMPTY_HEART = 'EMPTY_HEART',\n  FILTER = 'FILTER',\n  PENCIL = 'PENCIL',\n  TRASH = 'TRASH',\n\n  ACTIVE = 'ACTIVE',\n  SORT_DOWN = 'SORT_DOWN',\n  SORT = 'SORT',\n\n  ON = 'ON',\n  OFF = 'OFF',\n\n  LINK_OUT = 'LINK_OUT',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class IconConfig {\n  icon?: IconOptions;\n}\n\nexport interface IconOptions {\n  /**\n   * Each icon type can be configured with a so-called symbol. The symbol will\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n   * a font based icon. The following configuration would map to a fontawesome\n   * icon:\n   *\n   * icon: {\n   *   symbols: {\n   *     CART: 'fas fa-shopping-cart'\n   *   }\n   * }\n   */\n  symbols?: {\n    [ICON_TYPE: string]: string;\n  };\n\n  /**\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n   * is used for the SVG xlink reference.\n   */\n  resources?: IconConfigResource[];\n\n  /**\n   * Lists icons that should be flipped for a specific direction.\n   */\n  flipDirection?: {\n    [ICON_TYPE: string]: DirectionMode;\n  };\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: (ICON_TYPE | string)[];\n}\n\n/**\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\n * The resources will be automatically loaded in case they're required for the `ICON_TYPE`.\n */\nexport enum IconResourceType {\n  /**\n   * An svg based icon requires an SVG resource that must be loaded,\n   * this is typically a sprite svg file.\n   */\n  SVG = 'svg',\n\n  /**\n   * A font based ICON might require an additional CSS file to be loaded.\n   */\n  LINK = 'link',\n  /**\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\n   */\n  TEXT = 'text',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n      HEART: 'fas fa-heart',\n      EMPTY_HEART: 'far fa-heart',\n      FILTER: 'fas fa-filter',\n      PENCIL: 'fas fa-pencil-alt',\n      TRASH: 'fas fa-trash',\n      ACTIVE: 'fas fa-check',\n      ON: 'fas fa-toggle-on',\n      OFF: 'fas fa-toggle-off',\n      LINK_OUT: 'fas fa-external-link-alt',\n      SORT_DOWN: 'fas fa-sort-down',\n      SORT: 'fas fa-sort',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconOptions,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(\n    protected winRef: WindowRef,\n    protected iconConfig: IconConfig,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  /**\n   * Returns an html fragment which can be added to the DOM in a safe way.\n   */\n  getHtml(type: ICON_TYPE | string): SafeHtml {\n    if (this.isResourceType(type, IconResourceType.SVG)) {\n      return this.sanitizer.bypassSecurityTrustHtml(\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\n      );\n    }\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\n    }\n  }\n\n  /**\n   * Return the direction for which the icon should mirror (ltr vs rtl). The icon direction\n   * is configurable, but optional, as only a few icons should be flipped for rtl direction.\n   */\n  getFlipDirection(type: ICON_TYPE | string): DirectionMode {\n    return this.config?.flipDirection?.[type];\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Indicates whether the given `ICON_TYPE` is configured for\n   * the given `IconResourceType`.\n   */\n  private isResourceType(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): boolean {\n    return (\n      this.config.resources &&\n      !!this.config.resources.find(\n        (res) =>\n          res.types && res.type === resourceType && res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config a[[s been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  private getSvgPath(iconType: ICON_TYPE | string): string {\n    const svgResource = this.config.resources.find(\n      (res) =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE | string): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (\n      resource &&\n      resource.url &&\n      !this.loadedResources.includes(resource.url)\n    ) {\n      this.loadedResources.push(resource.url);\n      const head = this.winRef.document.getElementsByTagName('head')[0];\n      const link = this.winRef.document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = 'text/css';\n      link.href = resource.url;\n      head.appendChild(link);\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.resources) {\n      return;\n    }\n\n    let resource = this.config.resources.find(\n      (res) =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.resources.find(\n        (res) => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  getSymbol(iconType: ICON_TYPE | string) {\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\n      return this.config.symbols[iconType];\n    }\n  }\n\n  private get config(): IconOptions {\n    return this.iconConfig.icon;\n  }\n}\n","/**\n * The ltr and rtl directions can be used to configure the storefront for a certain direction, both statically\n * or dynamically.\n *\n * The HTML5 \"auto\" value is not supported in Spartacus, as it's considered to be too fragile for the global\n * direction.\n */\nexport enum DirectionMode {\n  /**\n   * Indicates Left to Right direction.\n   */\n  LTR = 'ltr',\n  /**\n   * Indicates Right to Left direction.\n   */\n  RTL = 'rtl',\n}\n\n/**\n * Contains the configuration mode for language driven directionality. The detect mode is recommended\n * for a multi-site or multi-lingual setup where the active language should dictate the direction mode.\n */\nexport interface Direction {\n  /**\n   * The default direction mode is used for the direction mode of the overall storefront. The default mode\n   * can be used for all languages, but can be further enhanced dynamically by using the language detect mode.\n   * The default mode will also be used in detect mode for those languages that are not listed in either\n   * `rtlLanguages` or `ltrLanguages`.\n   */\n  default?: DirectionMode;\n\n  /**\n   * If detect is enabled, the direction is driven by the active language. The language is compared to the\n   * list of configured `rtlLanguages` vs `ltrLanguages`. If no language is resolved, the default direction\n   * mode is used.\n   *\n   * If no direction can be resolved, the direction is removed.\n   */\n  detect?: boolean;\n\n  /**\n   * The language isoCodes that are used to detect Right to Left languages.\n   */\n  rtlLanguages?: string[];\n\n  /**\n   * The language isoCodes that are used to detect Left to Right languages.\n   */\n  ltrLanguages?: string[];\n}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE } from './icon.model';\n\n/**\n *\n * The icon component can be added in different ways:\n *\n * With the component selector:\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\n *\n * With the attribute selector:\n * `<span cxIcon=\"STAR\"></span>`\n *\n * Additionally, content can be projected to the icon:\n *\n * `<button cxIcon=\"HAPPY\">happy label</button>`\n *\n * The above button would become (based on a TEXT resource type):\n * `<button>😊happy label</button>`\n *\n * While the content is projected, the icon itself doesn't require an\n * additional DOM node which is an advantage over the component selector.\n */\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set cxIcon(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set type(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * the icon provides an html fragment that is used to add SVG or text based icons.\n   */\n  icon: SafeHtml;\n\n  /**\n   * The `flip-at-rtl` class is added to the DOM for the style layer to flip the icon in RTL direction.\n   */\n  @HostBinding('class.flip-at-rtl') flipAtRtl: boolean;\n\n  /**\n   * The `flip-at-ltr` class is added to the DOM for the style layer to flip the icon in LTR direction.\n   */\n  @HostBinding('class.flip-at-ltr') flipAtLtr: boolean;\n\n  /**\n   * Maintains the applied style classes so we can remove them when the\n   * icon type changes at run time.\n   */\n  protected styleClasses: string[];\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected renderer: Renderer2\n  ) {}\n\n  protected setIcon(type: ICON_TYPE): void {\n    if (!type || <string>type === '') {\n      return;\n    }\n    this.icon = this.iconLoader.getHtml(type);\n    this.addStyleClasses(type);\n    this.iconLoader.addLinkResource(type);\n    this.flipIcon(type);\n  }\n\n  /**\n   * The icons supports flipping for some icons to support rtl and ltr directions.\n   */\n  protected flipIcon(type: ICON_TYPE) {\n    // TODO: this can be dropped with the next major release.\n    if (!this.iconLoader.getFlipDirection) {\n      return;\n    }\n    const iconDirection = this.iconLoader.getFlipDirection(type);\n    this.flipAtLtr = iconDirection === DirectionMode.LTR;\n    this.flipAtRtl = iconDirection === DirectionMode.RTL;\n  }\n\n  /**\n   * Adds the style classes and the link resource (if available).\n   */\n  protected addStyleClasses(type: ICON_TYPE): void {\n    this.renderer.addClass(this.host, 'cx-icon');\n\n    this.styleClasses?.forEach((cls) =>\n      this.renderer.removeClass(this.host, cls)\n    );\n\n    this.styleClasses = this.iconLoader.getStyleClasses(type)?.split(' ');\n    this.styleClasses?.forEach((cls) => {\n      if (cls !== '') {\n        this.renderer.addClass(this.host, cls);\n      }\n    });\n  }\n\n  protected get host() {\n    return this.elementRef.nativeElement;\n  }\n}\n","import { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconConfig } from './icon.model';\n\nexport const defaultIconConfig: IconConfig = {\n  icon: {\n    flipDirection: {\n      CARET_RIGHT: DirectionMode.RTL,\n      CARET_LEFT: DirectionMode.RTL,\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultIconConfig } from './default-icon.config';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultIconConfig),\n    // TODO: move the opinionated fontawesome config to a recipe\n    provideDefaultConfig(fontawesomeIconConfig),\n  ],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog',\n  templateUrl: './anonymous-consent-dialog.component.html',\n})\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\n  @HostBinding('attr.role') role = 'dialog';\n  @HostBinding('attr.aria-modal') modal = true;\n\n  private subscriptions = new Subscription();\n\n  showLegalDescription = true;\n  iconTypes = ICON_TYPE;\n  requiredConsents: string[] = [];\n\n  loading$: Observable<boolean>;\n  templates$: Observable<ConsentTemplate[]>;\n  consents$: Observable<AnonymousConsent[]>;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'input[type=\"checkbox\"]',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    // Close on click outside the dialog window\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected config: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected el: ElementRef,\n    protected launchDialogService: LaunchDialogService\n  ) {\n    if (Boolean(this.config.anonymousConsents)) {\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.templates$ = this.anonymousConsentsService.getTemplates();\n    this.consents$ = this.anonymousConsentsService.getConsents();\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\n  }\n\n  close(reason?: any): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  rejectAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.withdrawConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('rejectAll');\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                (consent && consent.consentState == null) ||\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.giveConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('allowAll');\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.config.anonymousConsents) &&\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\n    );\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.anonymousConsentsService.giveConsent(template.id);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(template.id);\n    }\n  }\n\n  getCorrespondingConsent(\n    template: ConsentTemplate,\n    consents: AnonymousConsent[] = []\n  ): AnonymousConsent {\n    for (const consent of consents) {\n      if (template.id === consent.templateCode) {\n        return consent;\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { LayoutConfig } from '../../layout/config/layout-config';\nimport { DIALOG_TYPE } from '../../layout/launch-dialog/index';\nimport { AnonymousConsentDialogComponent } from '../../shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component';\n\nexport const defaultAnonymousConsentLayoutConfig: LayoutConfig = {\n  launch: {\n    ANONYMOUS_CONSENT: {\n      inline: true,\n      component: AnonymousConsentDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { AnonymousConsentLaunchDialogService } from '../anonymous-consent-launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-open-dialog',\n  templateUrl: './anonymous-consent-open-dialog.component.html',\n})\nexport class AnonymousConsentOpenDialogComponent {\n  @ViewChild('open') openElement: ElementRef;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected anonymousConsentLaunchDialogService: AnonymousConsentLaunchDialogService\n  ) {}\n\n  openDialog(): void {\n    const dialog = this.anonymousConsentLaunchDialogService.openDialog(\n      this.openElement,\n      this.vcr\n    );\n    if (dialog) {\n      dialog.pipe(take(1)).subscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  DeferLoadingStrategy,\n  FeaturesConfigModule,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../layout/a11y/keyboard-focus/index';\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\nimport { defaultAnonymousConsentLayoutConfig } from './default-anonymous-consent-layout.config';\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideConfig(defaultAnonymousConsentLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AnonymousConsentManagementBannerComponent: {\n          component: AnonymousConsentManagementBannerComponent,\n          deferLoading: DeferLoadingStrategy.INSTANT,\n        },\n        AnonymousConsentOpenDialogComponent: {\n          component: AnonymousConsentOpenDialogComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  exports: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  entryComponents: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n})\nexport class AnonymousConsentManagementBannerModule {}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  consentGiven = false;\n\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Input()\n  requiredConsents: string[] = [];\n\n  @Input()\n  consent: AnonymousConsent;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.consent) {\n      this.consentGiven = Boolean(\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    } else {\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n          this.consentGiven = false;\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n          this.consentGiven = true;\n        }\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentGiven = !this.consentGiven;\n\n    this.consentChanged.emit({\n      given: this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n\n  isRequired(templateId: string): boolean {\n    return this.requiredConsents.includes(templateId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  AuthService,\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserConsentService,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concat,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  skipWhile,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  requiredConsents: string[] = [];\n\n  constructor(\n    protected userConsentService: UserConsentService,\n    protected globalMessageService: GlobalMessageService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n      this.authService.isUserLoggedIn(),\n      this.allConsentsLoading,\n    ]).pipe(\n      map(\n        ([\n          consentLoading,\n          giveConsentLoading,\n          withdrawConsentLoading,\n          isUserLoggedIn,\n          allConsentsLoading,\n        ]) =>\n          consentLoading ||\n          giveConsentLoading ||\n          withdrawConsentLoading ||\n          !isUserLoggedIn ||\n          allConsentsLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      withLatestFrom(\n        this.anonymousConsentsService.getTemplates(),\n        this.authService.isUserLoggedIn()\n      ),\n      filter(\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\n      ),\n      tap(([templateList, _anonymousTemplates]) => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      }),\n      map(([templateList, anonymousTemplates]) => {\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n            )\n          ) {\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\n          }\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents\n                .consentManagementPage\n            )\n          ) {\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\n          }\n        }\n\n        return templateList;\n      })\n    );\n  }\n\n  private hideAnonymousConsents(\n    templateList: ConsentTemplate[],\n    anonymousTemplates: ConsentTemplate[] = []\n  ): ConsentTemplate[] {\n    let hideTemplateIds: string[] = [];\n\n    if (\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .showAnonymousConsents\n    ) {\n      hideTemplateIds = anonymousTemplates.map((template) => template.id);\n      return this.userConsentService.filterConsentTemplates(\n        templateList,\n        hideTemplateIds\n      );\n    }\n\n    if (\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents.length > 0\n    ) {\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\n        .consentManagementPage.hideConsents;\n    }\n\n    return this.userConsentService.filterConsentTemplates(\n      templateList,\n      hideTemplateIds\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe((success) => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap((withdrawalSuccess) => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe((withdrawalSuccess) =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  rejectAll(templates: ConsentTemplate[] = []): void {\n    const consentsToWithdraw: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n        consentsToWithdraw.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupWithdrawalStream(consentsToWithdraw)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupWithdrawalStream(\n    consentsToWithdraw: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getWithdrawConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const withdraw$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToWithdraw.length) {\n          this.userConsentService.withdrawConsent(\n            consentsToWithdraw[i].currentConsent.code\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = withdraw$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  allowAll(templates: ConsentTemplate[] = []): void {\n    const consentsToGive: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n\n        consentsToGive.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupGiveStream(consentsToGive)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupGiveStream(\n    consentsToGive: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getGiveConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const giveConsent$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToGive.length) {\n          this.userConsentService.giveConsent(\n            consentsToGive[i].id,\n            consentsToGive[i].version\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = giveConsent$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n        template.id\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.allConsentsLoading.unsubscribe();\n\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\n  entryComponents: [ConsentManagementComponent],\n})\nexport class ConsentManagementModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/index';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { AnonymousConsentDialogComponent } from './anonymous-consent-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConsentManagementModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [AnonymousConsentDialogComponent],\n  entryComponents: [AnonymousConsentDialogComponent],\n  exports: [AnonymousConsentDialogComponent],\n})\nexport class AnonymousConsentsDialogModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  paragraphs?: Array<{ title?: string; text?: Array<string> }>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n  @Input()\n  fitToContainer = false;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { CardComponent } from './card.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the items can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\n\nconst DEFAULT_BREAKPOINTS = {\n  [BREAKPOINT.xs]: 576,\n  [BREAKPOINT.sm]: 768,\n  [BREAKPOINT.md]: 992,\n  [BREAKPOINT.lg]: 1200,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\n\n  get breakpoint$(): Observable<BREAKPOINT> {\n    if (!this.window) {\n      return of(BREAKPOINT.xs);\n    }\n    return this.winRef.resize$.pipe(\n      map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpint, given by the `LayoutConfig.breakpoints`\n   * configuration. If no configuration is available for the given breakpoint, the\n   * method will return the default values:\n   * - xs: 567\n   * - sm: 768\n   * - md: 992\n   * - lg: 1200\n   */\n  getSize(breakpoint: BREAKPOINT): number {\n    return this.config.breakpoints?.hasOwnProperty(breakpoint)\n      ? this.config.breakpoints[breakpoint]\n      : DEFAULT_BREAKPOINTS[breakpoint];\n  }\n\n  /**\n   * Returns all available breakpoints for the system.\n   */\n  get breakpoints(): BREAKPOINT[] {\n    return [\n      BREAKPOINT.xs,\n      BREAKPOINT.sm,\n      BREAKPOINT.md,\n      BREAKPOINT.lg,\n      BREAKPOINT.xl,\n    ];\n  }\n\n  /**\n   * Indicates whether the current screen size is smaller than the maximum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\n   */\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is larger than the minimum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\n   */\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(this.breakpoints.indexOf(breakpoint))\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size fits to the given breakpoint\n   */\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\n  }\n\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    const breakpoint = this.getClosest(windowWidth);\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\n  }\n\n  protected getClosest(windowWidth?: number): BREAKPOINT {\n    if (!windowWidth) {\n      windowWidth = this.window.innerWidth;\n    }\n\n    return windowWidth > this.getSize(BREAKPOINT.lg)\n      ? BREAKPOINT.xl\n      : this.breakpoints.find((br) => windowWidth <= this.getSize(br));\n  }\n\n  get window(): Window {\n    return this.winRef.nativeWindow;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Config, Image, OccConfig } from '@spartacus/core';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { StorefrontConfig } from '../../../storefront-config';\nimport { MediaConfig } from './media.config';\nimport { Media, MediaContainer, MediaFormatSize } from './media.model';\n\n/**\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\n * that URLs and sizes are generated for the same media. This helps to improve performance\n * across difference devices and layouts.\n *\n * Media formats are optional, but highly recommended. The format will help the browser to\n * identify the right media for the right experience.\n *\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\n * `occConfig.backend.occ.baseUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  /**\n   * The media formats sorted by size. The media format representing the smallest\n   * size is sorted on top.\n   */\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\n\n  constructor(\n    @Inject(Config) protected config: StorefrontConfig,\n    /**\n     * The BreakpointService is no longer used in version 2.0 as the different size formats are\n     * driven by configuration only. There's however a change that this service will play a role\n     * in the near future, which is why we keep the constructor as-is.\n     */\n    protected breakpointService: BreakpointService\n  ) {}\n\n  /**\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\n   * for specific formats.\n   */\n  getMedia(\n    mediaContainer: MediaContainer | Image,\n    format?: string,\n    alt?: string\n  ): Media {\n    if (!mediaContainer) {\n      return;\n    }\n\n    const mainMedia: Image = mediaContainer.url\n      ? mediaContainer\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\n\n    return {\n      src: this.resolveAbsoluteUrl(mainMedia?.url),\n      alt: alt || mainMedia?.altText,\n      srcset: this.resolveSrcSet(mediaContainer),\n    };\n  }\n\n  /**\n   * Creates the media formats in a logical sorted order. The map contains the\n   * format key and the format size information. We do this only once for performance\n   * benefits.\n   */\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._sortedFormats) {\n      this._sortedFormats = Object.keys(\n        (this.config as MediaConfig).mediaFormats\n      )\n        .map((key) => ({\n          code: key,\n          size: (this.config as MediaConfig).mediaFormats[key],\n        }))\n        .sort((a, b) => (a.size.width > b.size.width ? 1 : -1));\n    }\n    return this._sortedFormats;\n  }\n\n  /**\n   * Creates the media formats in a reversed sorted order.\n   */\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._reversedFormats) {\n      this._reversedFormats = this.sortedFormats.slice().reverse();\n    }\n    return this._reversedFormats;\n  }\n\n  /**\n   * Resolves the right media for the given format. The fo\n   */\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\n    return media[this.resolveFormat(media, format)];\n  }\n\n  /**\n   * Validates the format against the given mediaContainer. If there is no format available,\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\n   * format is resolved. If even that is not possible, the first format is returned.\n   */\n  protected resolveFormat(\n    mediaContainer: MediaContainer,\n    format?: string\n  ): string {\n    if (format && mediaContainer[format]) {\n      return format;\n    }\n    return (\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\n    );\n  }\n\n  /**\n   * Returns the media format code with the best size.\n   */\n  protected resolveBestFormat(media: MediaContainer | Image): string {\n    return this.reversedFormats.find((format) =>\n      media.hasOwnProperty(format.code)\n    )?.code;\n  }\n\n  /**\n   * Returns a set of media for the available media formats. Additionally, the congiured media\n   * format width is added to the srcset, so that browsers can select the appropriate media.\n   */\n  protected resolveSrcSet(media: MediaContainer | Image): string {\n    if (!media) {\n      return undefined;\n    }\n\n    const srcset = this.sortedFormats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.resolveAbsoluteUrl(media[format.code].url)} ${\n          format.size.width\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  /**\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\n   */\n  protected resolveAbsoluteUrl(url: string): string {\n    if (!url) {\n      return null;\n    }\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\n  }\n\n  /**\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\n   * `backend.occ.baseUrl`.\n   *\n   * The `backend.media.baseUrl` can be used to load media from a different location.\n   *\n   * In Commerce Cloud, a differnt location could mean a different \"aspect\".\n   */\n  protected getBaseUrl(): string {\n    return (\n      (this.config as OccConfig).backend.media.baseUrl ||\n      (this.config as OccConfig).backend.occ.baseUrl ||\n      ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Media, MediaContainer } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container: MediaContainer;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  protected create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container,\n      this.format,\n      this.alt\n    );\n    if (!this.media?.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  protected handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {\n  static forRoot(): ModuleWithProviders<MediaModule> {\n    return {\n      ngModule: MediaModule,\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatePickerFormatterService {\n  constructor() {}\n\n  toNative(value: string): string {\n    return value ? new Date(value).toISOString().split('T')[0] : null;\n  }\n\n  toModel(value: string, endOfDay: boolean): string {\n    if (value) {\n      let date = new Date(value)\n        .toISOString()\n        .replace('.', '+')\n        .replace('Z', '0');\n\n      if (endOfDay) {\n        date = date.replace('00:00:00', '23:59:59');\n      }\n      return date;\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  Validator,\n} from '@angular/forms';\nimport { DatePickerFormatterService } from './date-picker-formatter.service';\n\n@Component({\n  selector: 'cx-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class DatePickerComponent implements ControlValueAccessor, Validator {\n  value: string;\n  nativeValue: string = null;\n\n  @ViewChild('inputElement', { static: false, read: ElementRef })\n  input: ElementRef;\n\n  @Input()\n  min?: string;\n\n  @Input()\n  max?: string;\n\n  @Input()\n  endOfDay = false;\n\n  @Input()\n  required?: boolean;\n\n  @Input()\n  invalid?: boolean;\n\n  constructor(protected dateFormatterService: DatePickerFormatterService) {}\n\n  onInput(event) {\n    this.value = this.dateFormatterService.toModel(\n      event.target.value,\n      this.endOfDay\n    );\n    this.nativeValue = event.target.value;\n    this.onChange(this.value);\n  }\n\n  onChange(_event: any) {}\n\n  onTouched() {}\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: string): void {\n    if (value) {\n      this.value = value;\n      this.nativeValue = this.dateFormatterService.toNative(value);\n    }\n  }\n\n  getMin(): string {\n    return this.dateFormatterService.toNative(this.min);\n  }\n\n  getMax(): string {\n    return this.dateFormatterService.toNative(this.max);\n  }\n\n  validate(): { [key: string]: any } {\n    if (this.input && !this.input.nativeElement.validity.valid) {\n      const validity = this.input.nativeElement.validity;\n      const validators: { [key: string]: boolean } = {};\n      if (validity.rangeOverflow) {\n        validators.cxDateMax = true;\n      }\n      if (validity.rangeUnderflow) {\n        validators.cxDateMin = true;\n      }\n      return validators;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DatePickerComponent } from './date-picker.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DatePickerComponent],\n  exports: [DatePickerComponent],\n})\nexport class DatePickerModule {}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service responsible for converting date-like strings to/from formats compatible with the `<input type=\"datetime-local\">`\n * HTML element and valid strings compatible with the `Date` object.\n *\n * Date values used are relative to the local timezone of the user.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateTimePickerFormatterService {\n  /**\n   * Convert date string into a string format compatable with the browser's native `<input type=\"datetime-local\">` HTML element.\n   * @param value: date string to convert\n   *\n   * @example\n   * With UTC-0 local offset, `toNative('2010-01-01T00:00+0000')` returns `'2010-01-01T00:00'`.\n   */\n  toNative(value: string): string {\n    return value\n      ? this.formatDateStringWithTimezone(\n          value,\n          this.getLocalTimezoneOffset(true)\n        )\n      : null;\n  }\n\n  /**\n   * Convert datetime-local native string into a valid datetime string.\n   * @param value: datetime-local string to convert\n   *\n   * @example\n   * With UTC-0 locale offset, `toModel('2010-01-01T00:00')` returns `'2010-01-01T00:00:00+00:00'`.\n   */\n  toModel(value: string): string {\n    return value ? `${value}:00${this.getLocalTimezoneOffset()}` : null;\n  }\n\n  /**\n   * Returns the local timezone in a format that can be appended to a date-like string.\n   * @param invert (default: false): returns the opposite operator relative to the local timezone\n   *\n   * @example\n   * When locale is set to a CEST timezone, `getLocalTimezoneOffset()` returns '+02:00'\n   * and `getLocalTimezoneOffset(true)` returns '-02:00'\n   */\n  protected getLocalTimezoneOffset(invert?: boolean): string {\n    const offset = new Date().getTimezoneOffset() * -1;\n    const hours = Math.abs(Math.floor(offset / 60))\n      .toString()\n      .padStart(2, '0');\n    const minutes = (offset % 60).toString().padStart(2, '0');\n    const sign = offset >= 0 ? (invert ? `-` : `+`) : invert ? `+` : `-`;\n    return `${sign}${hours}:${minutes}`;\n  }\n\n  /**\n   * Format date string into a format compatable with the browser's native `<input type=\"datetime-local\">` HTML element.\n   * @param dateString: date string to convert\n   * @param offset: offset to append to date string\n   *\n   * @example\n   * With UTC-0 local offset, `formatDateStringWithTimezone('2010-01-01T00:00+0000', '+00:00')` returns `'2010-01-01T00:00+00:00'`.\n   */\n  protected formatDateStringWithTimezone(\n    dateString: string,\n    offset: string\n  ): string {\n    return new Date(dateString.replace('+0000', offset))\n      .toISOString()\n      .substring(0, 16);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  Validator,\n} from '@angular/forms';\nimport { DateTimePickerFormatterService } from './date-time-picker-formatter.service';\n\n/**\n * This component serves the browser's native `<input type=\"datetime-local\">` HTML element\n * in whilst projecting the value in the standard date format with regards to timezone offsets.\n */\n@Component({\n  selector: 'cx-date-time-picker',\n  templateUrl: './date-time-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DateTimePickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DateTimePickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class DateTimePickerComponent\n  implements ControlValueAccessor, Validator {\n  value: string;\n  nativeValue: string = null;\n\n  /**\n   * Reference to input element of type 'datetime-local'.\n   */\n  @ViewChild('inputElement', { static: false, read: ElementRef })\n  input: ElementRef;\n\n  /**\n   * Minimum value allowed for input element.\n   */\n  @Input()\n  min?: string;\n\n  /**\n   * Maximum value allowed for input element.\n   */\n  @Input()\n  max?: string;\n\n  /**\n   * Whether to use `required` validator.\n   */\n  @Input()\n  required?: boolean;\n\n  /**\n   * Condition to display as invalid.\n   */\n  @Input()\n  invalid?: boolean;\n\n  constructor(protected dateFormatterService: DateTimePickerFormatterService) {}\n\n  /**\n   * Handler method for input interactions.\n   * @param event: Input event.\n   */\n  onInput(event) {\n    this.value = this.dateFormatterService.toModel(event.target.value);\n    this.nativeValue = event.target.value;\n    this.onChange(this.value);\n  }\n\n  /**\n   * Handler method for when the value is modified.\n   * @param event: Change event.\n   */\n  onChange(_event: any) {}\n\n  /**\n   * Handler method for when the element is interacted with.\n   */\n  onTouched() {}\n\n  /**\n   * Register the `onChange()` handler method.\n   */\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Register the `onTouched()` handler method.\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Set the value of the input element.\n   * @param value: Date-like string to be set\n   */\n  writeValue(value: string): void {\n    if (value) {\n      this.value = value;\n      this.nativeValue = this.dateFormatterService.toNative(value);\n    }\n  }\n\n  /**\n   * Get the minimum value allowed for the input.\n   */\n  getMin(): string {\n    return this.dateFormatterService.toNative(this.min);\n  }\n\n  /**\n   * Get the maximum value allowed for the input.\n   */\n  getMax(): string {\n    return this.dateFormatterService.toNative(this.max);\n  }\n\n  /**\n   * Returns failing validators if input value is invalid\n   */\n  validate(): { [key: string]: any } {\n    if (this.input && !this.input.nativeElement.validity.valid) {\n      const validity = this.input.nativeElement.validity;\n      const validators: { [key: string]: boolean } = {};\n      if (validity.rangeOverflow) {\n        validators.cxDateMax = true;\n      }\n      if (validity.rangeUnderflow) {\n        validators.cxDateMin = true;\n      }\n      return validators;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DateTimePickerComponent],\n  exports: [DateTimePickerComponent],\n})\nexport class DateTimePickerModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n/**\n * This component renders form errors.\n */\n@Component({\n  selector: 'cx-form-errors',\n  templateUrl: './form-errors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormErrorsComponent {\n  _control: FormControl;\n  errors$: Observable<string[]>;\n\n  @Input()\n  translationParams: { [key: string]: string };\n\n  @Input()\n  set control(control: FormControl) {\n    this._control = control;\n\n    this.errors$ = control?.statusChanges.pipe(\n      startWith({}),\n      map(() => control.errors || {}),\n      map((errors) =>\n        Object.entries(errors)\n          .filter((error) => error[1])\n          .map((error) => error[0])\n      )\n    );\n  }\n\n  get control(): FormControl {\n    return this._control;\n  }\n\n  @HostBinding('class.control-invalid') get invalid() {\n    return this.control?.invalid;\n  }\n  @HostBinding('class.control-dirty') get dirty() {\n    return this.control?.dirty;\n  }\n  @HostBinding('class.control-touched') get touched() {\n    return this.control?.touched;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormErrorsComponent } from './form-errors.component';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [FormErrorsComponent],\n  exports: [FormErrorsComponent],\n})\nexport class FormErrorsModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Params, Router } from '@angular/router';\n\n// private\ninterface RouteParts {\n  /** Path in the Angular-like array format */\n  path?: string[];\n\n  /** Query params */\n  queryParams?: Params;\n\n  /** Hash fragment */\n  fragment?: string;\n}\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent implements OnChanges {\n  constructor(protected router: Router) {}\n\n  /**\n   * Pattern matching string starting with `http://` or `https://`.\n   */\n  private readonly PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\n\n  /**\n   * Used to split url into 2 parts:\n   * 1. the path\n   * 2. query params + hash fragment\n   */\n  private readonly URL_SPLIT = /(^[^#?]*)(.*)/;\n\n  /**\n   * Parsed parts of the @Input `url`, when it's a local URL.\n   * It should not be used when the `url` is external.\n   * @see `url`\n   */\n  private routeParts: RouteParts = {};\n\n  @Input() url: string | any[];\n  @Input() target: string;\n  @Input() class: string;\n  @Input() id: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  /**\n   * Returns true when the @Input `url` is a string starting with `http://` or `https://`.\n   */\n  isExternalUrl(): boolean {\n    return typeof this.url === 'string' && this.PROTOCOL_REGEX.test(this.url);\n  }\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['url']) {\n      this.setUrlParts(changes['url'].currentValue);\n    }\n  }\n\n  /**\n   * The part with the path of the local url.\n   */\n  get routerUrl(): any[] {\n    return this.routeParts.path;\n  }\n\n  /**\n   * The part with the query params of the local url.\n   */\n  get queryParams(): Params {\n    return this.routeParts.queryParams;\n  }\n\n  /**\n   * The part with the hash fragment of the local url.\n   */\n  get fragment(): string {\n    return this.routeParts.fragment;\n  }\n\n  /**\n   * Parses the given url and sets the property `urlParts` accordingly.\n   */\n  private setUrlParts(url: string | any[]) {\n    if (typeof url === 'string') {\n      url = this.getAbsoluteUrl(url); // string links in CMS sometimes don't have the leading slash, so fix it here\n      this.routeParts = this.splitUrl(url as string);\n    } else {\n      this.routeParts = { path: url };\n    }\n  }\n\n  /**\n   * Parses the given string into 3 parts:\n   * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\n   * - query params (as an object)\n   * - hash fragment (string)\n   */\n  private splitUrl(url: string = ''): RouteParts {\n    const { queryParams, fragment } = this.router.parseUrl(url);\n    const [, path] = url.match(this.URL_SPLIT);\n\n    // wrap path in an array, to have the Angular-like path format\n    return { path: [path], queryParams, fragment };\n  }\n\n  /**\n   * Prepends a leading slash to the given URL string, in case it doesn't have it.\n   */\n  private getAbsoluteUrl(url: string): string {\n    return url.startsWith('/') ? url : '/' + url;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n/**\n * Provides a UI to manage the count of the quantity, typically by using\n * increase and decrease functionality. The item counter expects an input `FormControl`\n * so that the state of the control can be managed outside of this component.\n */\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  // do not use OnPush change detection strategy as we would not\n  // get updates of other form control state (disabled). We want to have a\n  // disabled state in order to ensure that the control cannot be used while\n  // the cart is updated.\n})\nexport class ItemCounterComponent implements OnInit, OnDestroy {\n  /**\n   * Holds the value of the counter, the state of the `FormControl`\n   * can be managed outside of the item counter.\n   */\n  @Input() control: FormControl;\n\n  /**\n   * This can be used in case an item has a minmum order quantity.\n   * @default 1\n   */\n  @Input() min = 1;\n\n  /**\n   * This can be used in case an item has a maximum order quantity.\n   */\n  @Input() max: number;\n\n  /**\n   * The step is used to increment the count. It is supposed to be a\n   * positive integer or float.\n   * @default 1\n   */\n  @Input() step = 1;\n\n  /**\n   * Indicates that the input can be manually set to zero,\n   * despite the fact that the input controls will be limited to\n   * the minimum. The zero value can be used to remove an item.\n   */\n  @Input() allowZero = false;\n\n  /**\n   * In readonly mode the item counter will only be shown as a label,\n   * the form controls are not rendered.\n   * Please not that readonly is different from the `disabled` form state.\n   * @default false\n   */\n  @HostBinding('class.readonly') @Input() readonly = false;\n\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\n\n  /**\n   * Subscription responsible for auto-correcting control's value when it's invalid.\n   */\n  private sub: Subscription;\n\n  @HostListener('click') handleClick() {\n    this.input.nativeElement.focus();\n  }\n\n  ngOnInit() {\n    this.sub = this.control.valueChanges\n      .pipe(startWith(this.control.value))\n      .subscribe((value) =>\n        this.control.setValue(this.getValidCount(value), { emitEvent: false })\n      );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  increment() {\n    // it's too early to use the `stepUp` and `stepDown` API...\n    // let's wait for FF: https://caniuse.com/#search=stepUp\n    this.control.setValue(this.control.value + this.step);\n    this.control.markAsDirty();\n  }\n\n  decrement() {\n    this.control.setValue(this.control.value - this.step);\n    this.control.markAsDirty();\n  }\n\n  /**\n   * Validate that the given value is in between\n   * the `min` and `max` value. If the value is out\n   * of  the min/max range, it will be altered.\n   * If `allowZero` is set to true, the 0 value is ignored.\n   *\n   */\n  private getValidCount(value: number) {\n    if (value < this.min && !(value === 0 && this.allowZero)) {\n      value = this.min;\n    }\n    if (this.max && value > this.max) {\n      value = this.max;\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ItemCounterComponent } from './item-counter.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { PaginationConfig } from './pagination.config';\n\nexport const defaultPaginationConfig: PaginationConfig = {\n  pagination: {\n    addStart: true,\n    addEnd: true,\n  },\n};\n","import { PaginationOptions } from '../pagination.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PaginationConfig {\n  pagination?: PaginationOptions;\n}\n","/**\n * Represents a page item for a pagination system. This is used\n * to store the model of each page.\n */\nexport interface PaginationItem {\n  label?: string;\n  type?: PaginationItemType;\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\n  number?: number;\n}\n\n/**\n * The item type is used to add semantic structure to the\n * PaginationItem, so that the UI understands the usage.\n */\nexport enum PaginationItemType {\n  GAP = 'gap',\n  FIRST = 'first',\n  LAST = 'last',\n  PREVIOUS = 'previous',\n  NEXT = 'next',\n  START = 'start',\n  END = 'end',\n  PAGE = 'page',\n}\n\nexport interface PaginationOptions {\n  /**\n   * The range of direct accessible pages in the pagination.\n   *\n   * `« 4 (5) 6 »`\n   *\n   * Defaults to 3.\n   */\n  rangeCount?: number;\n\n  /** Adds a link to skip to the start of the pages, defaults to false. */\n  addStart?: boolean;\n  /** A link to skip to the end of the pages, defaults to false. */\n  addEnd?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addPrevious?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addNext?: boolean;\n\n  navigationPosition?: PaginationNavigationPosition;\n\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\n  addFirst?: boolean;\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\n  addLast?: boolean;\n\n  /**\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\n   *\n   * `1 ...  4 (5) 6 ... 18`\n   *\n   * Defaults to false.\n   */\n  addDots?: boolean;\n\n  /**\n   * If the page dots only represents a single page, we rather add the page\n   * as this would take the same amount of space. Some UX might want to use\n   * the dots for consistency reasons, which why this option is configurable.\n   *\n   * This typically happens on the 4th page (in case the range is 3):\n   * Instead of having:\n   *\n   *  `1 ...  3 (4) 5`\n   *\n   * we'd have\n   *\n   * `1 2 3 (4) 5`.\n   *\n   * Defaults to false.\n   */\n  substituteDotsForSingularPage?: boolean;\n\n  /** Custom label for the start link, defaults to `«`. */\n  startLabel?: string;\n  /** Custom label for the previous link, defaults to `‹`. */\n  previousLabel?: string;\n  /** Custom label for the next link, defaults to `›`. */\n  nextLabel?: string;\n  /** Custom label for the end link, defaults to `»`. */\n  endLabel?: string;\n  /** Custom label for the dots, defaults to `...`. */\n  dotsLabel?: string;\n}\n\nexport enum PaginationNavigationPosition {\n  ASIDE = 'aside',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","import { Injectable } from '@angular/core';\nimport { PaginationConfig } from './config/pagination.config';\nimport {\n  PaginationItem,\n  PaginationItemType,\n  PaginationNavigationPosition,\n  PaginationOptions,\n} from './pagination.model';\n\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\n  rangeCount: 3,\n  dotsLabel: '...',\n  startLabel: '«',\n  previousLabel: '‹',\n  nextLabel: '›',\n  endLabel: '»',\n};\n\n/**\n * Builds a pagination structures based on a pageCount and current page number.\n * There are various {@link PaginationConfig} options which can be used to configure\n * the behaviour of the build. Alternatively, CSS can be used to further customise\n * the pagination.\n *\n * Examples:\n * The full blown pagination items contain the follow elements:\n *\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\n *\n * This includes pagination items to the following pages:\n * - start page\n * - previous page\n * - first page\n * - page range\n * - last page\n * - next page\n * - end page\n *\n * All of those links are configurable, including the size of the page range.\n * The current page will always be centered in the page range to provide direct access\n * to the previous and next page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaginationBuilder {\n  constructor(protected paginationConfig: PaginationConfig) {}\n\n  /**\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\n   * to build out the full pagination. There are various {@link PaginationConfig} options\n   * which can be used to configure the behaviour of the build. Alternatively, CSS\n   * can be used to further specialize visibility of the pagination.\n   *\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   * @returns An array of `PaginationItem`\n   */\n  paginate(pageCount: number, current: number): PaginationItem[] {\n    const pages: PaginationItem[] = [];\n    if (pageCount < 2) {\n      return pages;\n    }\n    this.addPages(pages, pageCount, current);\n    this.addDots(pages, pageCount);\n    this.addFirstLast(pages, pageCount);\n    this.addNavigation(pages, pageCount, current);\n\n    return pages;\n  }\n\n  /**\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\n   * The current page is always centered to provide direct access to the previous and next page.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   */\n  protected addPages(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const start = this.getStartOfRange(pageCount, current);\n    const max = Math.min(this.config.rangeCount, pageCount);\n    Array.from(Array(max)).forEach((_, i) => {\n      pages.push({\n        number: i + start,\n        label: String(i + start + 1),\n        type: PaginationItemType.PAGE,\n      });\n    });\n  }\n\n  /**\n   * Adds dots before and after the given pages, if configured (defaults to true).\n   * If the dots only represent a single page, the page number is added instead of\n   * the dots, unless the configuration requires dots always.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   */\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\n    if (!this.config.addDots) {\n      return;\n    }\n\n    const addFirstGap = () => {\n      const firstItemNumber = pages[0].number;\n      const gapNumber = this.config.addFirst ? 1 : 0;\n      if (firstItemNumber > gapNumber) {\n        const isGap =\n          !this.config.substituteDotsForSingularPage ||\n          firstItemNumber !== gapNumber + 1;\n        const isSubstitued =\n          this.config.addFirst &&\n          this.config.substituteDotsForSingularPage &&\n          gapNumber === 0;\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstitued\n          ? PaginationItemType.FIRST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\n              type,\n            },\n            isGap ? null : { number: gapNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    const addLastGap = () => {\n      const nextPageNumber = pages[pages.length - 1].number + 1;\n      const last = pageCount - (this.config.addLast ? 2 : 1);\n      if (nextPageNumber <= last) {\n        const isSubstitued =\n          this.config.addLast &&\n          this.config.substituteDotsForSingularPage &&\n          nextPageNumber === last;\n        const isGap =\n          nextPageNumber <\n          pageCount -\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\n            (this.config.addLast ? 1 : 0);\n\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstitued\n          ? PaginationItemType.LAST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\n              type,\n            },\n            isGap ? null : { number: nextPageNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    pages.unshift(...addFirstGap());\n    pages.push(...addLastGap());\n  }\n\n  /**\n   * Add links to the first and last page, if configured to do so.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   *\n   */\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\n    if (this.config.addFirst && pages[0].number !== 0) {\n      pages.unshift({\n        number: 0,\n        label: '1',\n        type: PaginationItemType.FIRST,\n      });\n    }\n    if (\n      this.config.addLast &&\n      pages[pages.length - 1].number !== pageCount - 1\n    ) {\n      pages.push({\n        number: pageCount - 1,\n        label: String(pageCount),\n        type: PaginationItemType.LAST,\n      });\n    }\n  }\n\n  /**\n   * Add links to the start, previous, next and last page, if configured to do so.\n   * The order of the links can be configured by using the {@link PaginationConfig},\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\n   * The `PaginationNavigationPosition` allows for 3 flavours:\n   *\n   * - by default the pagination starts with start and previous and ends with the next and end links\n   * - BEFORE – all navigation links are added in the front of the pagination list\n   * - AFTER – all navigation links are pushed to the end of the pagination list\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   *\n   */\n  protected addNavigation(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const before = this.getBeforeLinks(current);\n    const after = this.getAfter(pageCount, current);\n    const pos = this.config.navigationPosition;\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\n      pages.unshift(...before);\n      pages.push(...after);\n    } else {\n      if (pos === PaginationNavigationPosition.BEFORE) {\n        pages.unshift(...before, ...after);\n      }\n      if (pos === PaginationNavigationPosition.AFTER) {\n        pages.push(...before, ...after);\n      }\n    }\n  }\n\n  /**\n   * Returns the start and previous links, if applicable.\n   */\n  private getBeforeLinks(current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addStart) {\n      const start = () => {\n        return Object.assign(\n          {\n            label: this.config.startLabel,\n            type: PaginationItemType.START,\n          },\n          current > 0 ? { number: 0 } : null\n        );\n      };\n      list.push(start());\n    }\n    if (this.config.addPrevious) {\n      const previous = () => {\n        return Object.assign(\n          {\n            label: this.config.previousLabel,\n            type: PaginationItemType.PREVIOUS,\n          },\n          current > 0 ? { number: current - 1 } : null\n        );\n      };\n      list.push(previous());\n    }\n    return list;\n  }\n\n  /**\n   * Returns the next and end links, if applicable.\n   */\n  private getAfter(pageCount: number, current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addNext) {\n      const next = () => {\n        return Object.assign(\n          {\n            label: this.config.nextLabel,\n            type: PaginationItemType.NEXT,\n          },\n          current < pageCount - 1 ? { number: current + 1 } : null\n        );\n      };\n      list.push(next());\n    }\n    if (this.config.addEnd) {\n      const end = () => {\n        return Object.assign(\n          {\n            label: this.config.endLabel,\n            type: PaginationItemType.END,\n          },\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\n        );\n      };\n      list.push(end());\n    }\n\n    return list;\n  }\n  /**\n   * Resolves the first page of the range we need to build.\n   * This is the page that is leading up to the range of the\n   * current page.\n   *\n   * @param pageCount The total number of pages.\n   * @param current The current page number, 0-index based.\n   */\n  private getStartOfRange(pageCount: number, current: number): number {\n    const count = this.config.rangeCount - 1;\n    // the least number of pages before and after the current\n    const delta = Math.round(count / 2);\n\n    // ensure that we start with at least the first page\n    const minStart = Math.max(0, current - delta);\n    // ensures that we start with at least 1 and do not pass the last range\n    const maxStart = Math.max(0, pageCount - count - 1);\n\n    // ensure that we get at least a full range at the end\n    return Math.min(maxStart, minStart);\n  }\n\n  private get config(): PaginationOptions {\n    return Object.assign(\n      FALLBACK_PAGINATION_OPTIONS,\n      this.paginationConfig.pagination\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PaginationModel } from '@spartacus/core';\nimport { PaginationBuilder } from './pagination.builder';\nimport { PaginationItem, PaginationItemType } from './pagination.model';\n\n/**\n * The `PaginationComponent` is a generic component that is used for\n * all lists in Spartacus that require pagination. The component supports\n * all common features, which can be configured or hidden by CSS.\n */\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\n  @Input() pageRoute: string;\n\n  /** The (optional) query parameter which is added to the page route.  */\n  @Input() queryParam: string;\n\n  /**\n   * Whenever there's a default page specified, the routing logic\n   * will omit the page number in routeLink or parameters.\n   */\n  @Input() defaultPage;\n\n  private _pagination: PaginationModel;\n  get pagination(): PaginationModel {\n    return this._pagination;\n  }\n  @Input() set pagination(value: PaginationModel) {\n    this._pagination = value;\n    this.render(value);\n  }\n\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  pages: PaginationItem[] = [];\n\n  constructor(\n    private paginationBuilder: PaginationBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  private render(pagination: PaginationModel) {\n    this.pages = this.paginationBuilder.paginate(\n      pagination.totalPages,\n      pagination.currentPage\n    );\n  }\n\n  /**\n   * Inidicates whether the given item is the current item.\n   *\n   * @param item PaginationItem\n   * @returns boolean\n   */\n  isCurrent(item: PaginationItem): boolean {\n    return (\n      item.type === PaginationItemType.PAGE &&\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  /**\n   * Indicates whether the pagination item is inactive. This is used\n   * to disabled a link or set the tabindex to `-1`.\n   *\n   * Defaults to true\n   *\n   * @param item PaginationItem\n   * @returns returns -1 in case of a disabled\n   */\n  isInactive(item: PaginationItem): boolean {\n    return (\n      !item.hasOwnProperty('number') ||\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  getQueryParams(item: PaginationItem): Params {\n    const queryParams = Object.assign(\n      {},\n      this.activatedRoute.snapshot.queryParams\n    );\n    if (\n      this.queryParam &&\n      item.number < this.pagination.totalPages &&\n      !this.isCurrent(item)\n    ) {\n      queryParams[this.queryParam] = item.number;\n    }\n    // omit the page number from the query parameters in case it's the default\n    // to clean up the experience and avoid unnecessary polluting of the URL\n    if (queryParams[this.queryParam] === this.defaultPage) {\n      delete queryParams[this.queryParam];\n    }\n    return queryParams;\n  }\n\n  pageChange(page: PaginationItem): void {\n    this.viewPageEvent.emit(page.number);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultPaginationConfig } from './config/index';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class PaginationModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { PaginationComponent, PaginationModule } from './pagination/index';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IconModule,\n    PaginationModule,\n  ],\n  declarations: [SortingComponent],\n  exports: [SortingComponent, PaginationComponent],\n})\nexport class ListNavigationModule {}\n","import { MediaFormatSize } from './media.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n/**\n * Provides configuration specific to Media, such as images. This is used to optimize\n * rendering of the media, SEO and performance.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class MediaConfig {\n  /**\n   * Media _format_ configuration holds the size of the media's assigned to\n   * a format.\n   */\n  mediaFormats?: {\n    /**\n     * Represents the media format code, that is the key to distinguish different\n     * media in a container.\n     */\n    [format: string]: MediaFormatSize;\n  };\n}\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalOptions } from './modal-options';\nimport { ModalRef } from './modal-ref';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n    this.handleModalRemoveEvents(activeModal);\n\n    return activeModal;\n  }\n\n  protected handleModalRemoveEvents(modal: ModalRef): void {\n    modal.result.finally(() => {\n      this.modals = this.modals.filter((m) => m !== modal);\n    });\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Guard that can be used in split-view based child routes. This guard\n * delays the guard to be removed with 300ms, so that any css transition can be\n * finished before the DOM is destroyed.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SplitViewDeactivateGuard implements CanDeactivate<boolean> {\n  canDeactivate(): Observable<boolean> {\n    // TODO: this might cause an issue with e2e\n    return timer(300).pipe(map(() => true));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { SplitViewState } from './split/split-view.model';\n\n/**\n * Supposed to be injected in the split view component, so that the split view state\n * is maintained for a single split view.\n */\n@Injectable()\nexport class SplitViewService {\n  /**\n   * Newly added views are hidden by default, unless it is the first view of the split view.\n   * The default hide mode can be overridden.\n   */\n  defaultHideMode = true;\n\n  protected splitViewCount = 1;\n\n  protected _views$: BehaviorSubject<any[]> = new BehaviorSubject([]);\n\n  /**\n   * Adds a view to the list of views. The view is initialized with the `SplitViewState`\n   * state. If no state is provided, the state is created with the hidden property. The hidden\n   * property is provided by the `defaultHideMode`, unless it's the first view (position: 0).\n   */\n  add(position: number, initialState?: SplitViewState) {\n    const state: SplitViewState = {\n      ...{ hidden: position === 0 ? false : this.defaultHideMode },\n      ...initialState,\n    };\n    if (!this.views[position]) {\n      this.views[position] = state;\n      this.updateState(position, state.hidden);\n      this._views$.next(this.views);\n    }\n  }\n\n  /**\n   * The split view is based on a number of views that can be used next to each other.\n   * When the number changes (i.e. if the screen goes from wide to small), the visibility state\n   * of the views should be updated.\n   */\n  updateSplitView(splitViewCount: number) {\n    if (splitViewCount !== this.splitViewCount) {\n      this.splitViewCount = splitViewCount;\n      this.updateState();\n    }\n  }\n\n  /**\n   * Returns an observable with the active view number. The active view number\n   * represents the last visible view.\n   */\n  getActiveView(): Observable<number> {\n    return this._views$.pipe(\n      map((views) => this.getActive(views)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns an observable with the SplitViewState for the given view position.\n   */\n  getViewState(position: number): Observable<SplitViewState> {\n    return this._views$.pipe(\n      map((views) => views[position]),\n      // we must filter here, since outlet driven views will destroyed the view\n      filter((view) => Boolean(view))\n    );\n  }\n\n  /**\n   * Removes a view from the list of views.\n   *\n   * Removing a view is different from hiding a view. Removing a view is typically done\n   * when a component is destroyed.\n   *\n   * When the view is removed, the SplitViewState is updated to reflect that new organization\n   * of views.\n   */\n  remove(position: number) {\n    const activePosition = this.getActive(this.views);\n    this._views$.next(this.views.splice(0, position));\n    if (activePosition >= position) {\n      this.updateState(position);\n    }\n  }\n\n  /**\n   * Returns the next view position. This is useful for views that do not want to be bothered\n   * with controlling view numbers.\n   */\n  get nextPosition(): number {\n    return this.views.length || 0;\n  }\n\n  /**\n   * Toggles the visibility of the views based on the given view position. If the view\n   * is already visible, we close the view and active the former view. Unless the hide flag\n   * is used, to force the view.\n   *\n   * The view state of other views in the split view are updated as well.\n   *\n   * @param position The zero-based position number of the view.\n   * @param forceHide The (optional) hide state for the view position.\n   */\n  toggle(position: number, forceHide?: boolean) {\n    // add the view if it hasn't been added before.\n    if (!this.views[position]) {\n      this.add(position, { hidden: forceHide ?? false });\n    }\n\n    // If the position is already visible, we move to a previous position. Only if the hide\n    // state is forced, we keep the current position.\n    if (\n      this.views[position] &&\n      forceHide === undefined &&\n      !this.views[position].hidden\n    ) {\n      position--;\n    }\n\n    this.updateState(position, forceHide === true);\n  }\n\n  /**\n   * Updates the hidden state of all the views.\n   */\n  protected updateState(position?: number, hide?: boolean) {\n    const views = [...this.views];\n    if (hide !== undefined && views[position]) {\n      views[position].hidden = hide;\n    }\n    let lastVisible =\n      views.length - [...views].reverse().findIndex((view) => !view.hidden) - 1;\n\n    if (lastVisible === views.length) {\n      if (position) {\n        // When there's only 1 view (mobile), we might not find any active\n        // if the user navigates back.\n        lastVisible = position - 1;\n      } else {\n        lastVisible = views.length - 1;\n      }\n    }\n\n    views.forEach((view, pos) => {\n      if (view && pos !== position) {\n        // hide other views that are outside the split view\n        view.hidden =\n          pos > lastVisible || pos < lastVisible - (this.splitViewCount - 1);\n      }\n    });\n\n    this._views$.next(views);\n  }\n\n  /**\n   * Returns the active view count for the list of views.\n   */\n  protected getActive(views: SplitViewState[]): number {\n    // we reverse the list to find the last visible view\n    const l = [...views]\n      .reverse()\n      .findIndex((view: SplitViewState) => !view.hidden);\n    const last = l === -1 ? 0 : views.length - l - 1;\n    return last;\n  }\n\n  /**\n   * Utility method that resolves all views from the subject.\n   */\n  protected get views(): SplitViewState[] {\n    return this._views$.value;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The split-view component supports an unlimited number of nested views. The component\n * is a host to those view components and doesn't add any restrictions to it's content;\n * content is projected as-is.\n *\n * ```html\n * <cx-split-view>\n *   <cx-view></cx-view>\n *   <cx-view></cx-view>\n *   <any-wrapper>\n *     <cx-view></cx-view>\n *   </any-wrapper>\n * </cx-split-view>\n * ```\n *\n * The split view component is only concerned with tracking the underlying _visible_\n * view components, so that the `lastVisibleView` can be updated accordingly. The actual\n * visibility of views is controlled by CSS. To allow for maximum flexibility, the CSS\n * implementation is using CSS variables. The `lastVisibleView` is bind to the\n * `--cx-active-view` on the host, so that all descendants views will inherit the\n * property conveniently.\n */\n@Component({\n  selector: 'cx-split-view',\n  templateUrl: './split-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [SplitViewService],\n})\nexport class SplitViewComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  /**\n   * Sets the default hide mode for views. This mode is useful in case views are dynamically being created,\n   * for example when they are created by router components.\n   *\n   * The mode defaults to true, unless this is the first view; the first view is never hidden.\n   */\n  @Input()\n  set hideMode(mode: boolean) {\n    this.splitService.defaultHideMode = mode;\n  }\n\n  /**\n   * Indicates the last visible view in the range of views that is visible. This\n   * is bind to a css variable `--cx-active-view` so that the experience\n   * can be fully controlled by css.\n   */\n  @HostBinding('style.--cx-active-view')\n  @HostBinding('attr.active-view')\n  lastVisibleView = 1;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected breakpointService: BreakpointService,\n    protected elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.splitService\n        .getActiveView()\n        .subscribe(\n          (lastVisible: number) => (this.lastVisibleView = lastVisible + 1)\n        )\n    );\n    this.subscription.add(\n      this.breakpointService.breakpoint$.subscribe(() => {\n        this.splitService.updateSplitView(this.splitViewCount);\n      })\n    );\n  }\n\n  /**\n   * Returns the maximum number of views per split-view. The number is based on the\n   * CSS custom property `--cx-max-views`.\n   */\n  protected get splitViewCount(): number {\n    return Number(\n      getComputedStyle(this.elementRef.nativeElement).getPropertyValue(\n        '--cx-max-views'\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { delayWhen } from 'rxjs/operators';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The view component is part of the `SplitViewComponent`. The view\n * contains the navigable content that should be split up. It maintains\n * a view position and allows to show or hide the view.\n *\n * The ViewComponent interacts with the `SplitViewService` for handing over the\n * view state, so that the overarching `SplitViewComponent` can manage the\n * overall experience.\n */\n@Component({\n  selector: 'cx-view',\n  templateUrl: './view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewComponent implements OnInit, OnDestroy {\n  protected _hidden;\n\n  @Input()\n  @HostBinding('attr.position')\n  @HostBinding('style.--cx-view-position')\n  position: string;\n\n  /**\n   * The disappeared flag is added to the\n   */\n  @HostBinding('attr.disappeared') disappeared = true;\n\n  /**\n   * The hidden input is used to set the initial visible state of the view.\n   * The hidden state defaults to false.\n   *\n   * The hidden input supports 2-way binding, see `hiddenChange` property.\n   */\n  @Input()\n  set hidden(hidden: boolean) {\n    this._hidden = hidden;\n    this.splitService.toggle(this.viewPosition, hidden);\n  }\n\n  /**\n   * An update of the view visibility is emitted to the hiddenChange output.\n   */\n  @Output()\n  hiddenChange = new EventEmitter();\n\n  protected subscription: Subscription;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected elementRef: ElementRef,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    const hidden = this._hidden ? { hidden: this._hidden } : {};\n    this.splitService.add(this.viewPosition, hidden);\n\n    this.subscription = this.splitService\n      .getViewState(this.viewPosition)\n      // delay the disappeared state, so that the (CSS driven) animation has time to finish\n      .pipe(delayWhen((view) => timer(view.hidden ? this.duration * 1.25 : 0)))\n      .subscribe((view) => {\n        this.hiddenChange.emit(view.hidden);\n        this._hidden = view.hidden;\n\n        this.disappeared = view.hidden;\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Toggles the visibility of the view.\n   *\n   * An optional force flag can be used to explicitly show or hide view component.\n   */\n  toggle(force?: boolean) {\n    this.splitService.toggle(this.viewPosition, force);\n  }\n\n  /**\n   * Returns the position for the view.\n   *\n   * The position is either taken from the input `position` or generated by the `SplitService`.\n   */\n  protected get viewPosition(): number {\n    if (!(Number(this.position) >= 0)) {\n      this.position = this.splitService.nextPosition.toString();\n    }\n    return Number(this.position);\n  }\n\n  /**\n   * Returns the duration in milliseconds. The duration is based on the CSS custom property\n   * `--cx-transition-duration`. Defaults to 300 milliseconds.\n   */\n  protected get duration(): number {\n    const duration: string = getComputedStyle(this.elementRef.nativeElement)\n      .getPropertyValue('--cx-transition-duration')\n      .trim();\n\n    if (duration.indexOf('ms') > -1) {\n      return Number(duration.split('ms')[0]);\n    } else if (duration.indexOf('s') > -1) {\n      return Number(duration.split('s')[0]) * 1000;\n    } else {\n      return 300;\n    }\n  }\n\n  /**\n   * The view is removed from the `SplitService` so that the view no longer\n   * plays a role in the overall split view.\n   */\n  ngOnDestroy() {\n    this.splitService.remove(this.viewPosition);\n    this.subscription?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SplitViewComponent } from './split/split-view.component';\nimport { ViewComponent } from './view/view.component';\n\n/**\n * The split-view component supports an unlimited number of nested views. Nested views are rendered\n * next to each other. The views can be rendered next to each other, but the max number of visible\n * views can be limisted as well. This is configurable in the CSS layer, so that the max number of views\n * per split-view can be different for each component.\n *\n * The basic structure of the split-view component is shown below:\n *\n *\n * ```\n * <cx-split-view>\n * </cx-split-view>\n * ```\n *\n * The UX pattern used for the split-view is driven by an initial view, which gets splitted into\n * more views as soon as the user starts interacting with the initial and subsequantial views.\n * The views can be driven by routes, which means that you can navigate through the splitted views\n * by using the browser history as well as share or bookmark splitted views.\n *\n * The UI is implemented in the style layer, with only a few generic style rules. Most of the split\n * view style is driven by CSS properties, so that alternative split-view styles can be introduced\n * per page or component.\n *\n * The max number of views per split-view on mobile is limited to 1 by default, where as on tablet\n * (and higher) it is set to 2. Spartacus has a pretty narrow layout, which is why 2 is maximum,\n * but customers could alter the layout to bring in more views in the same split-view at the time.\n *\n */\n\n@NgModule({\n  declarations: [SplitViewComponent, ViewComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [SplitViewComponent, ViewComponent],\n})\nexport class SplitViewModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n/**\n * Configuration options for the Qualtrics integration, which allows you to\n * specify the qualtrics project and deployment script.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class QualtricsConfig {\n  /**\n   * Holds the qualtrics integration options.\n   */\n  qualtrics?: {\n    /**\n     * Deployment script, loaded from a resource, to integrate the deployment of the qualtrics project.\n     * You would typically store the file in the local assets folder.\n     *\n     * Defaults to `assets/qualtricsIntegration.js`\n     */\n    scriptSource?: string;\n  };\n}\n","import {\n  Injectable,\n  isDevMode,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { fromEvent, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\n\nexport const QUALTRICS_EVENT_NAME = 'qsi_js_loaded';\n\n/**\n * Service to integration Qualtrics.\n *\n * The integration observes the Qualtrics API, and when available, it runs the QSI API\n * to let Qualtrics evaluate the application.\n *\n * The service supports an additional _hook_ (`isDataLoaded()`) that can be used to load application\n * data before pulling the QSI API. This is beneficial in a single page application when additional\n * data is required before the Qualtrics _creatives_ run.\n *\n * This service also supports the creation of the Qualtrics deployment script. This is optional, as\n * the script can be added in alternatives ways.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class QualtricsLoaderService {\n  /**\n   * Reference to the QSI API.\n   */\n  protected qsiApi: any;\n\n  /**\n   * QSI load event that happens when the QSI JS file is loaded.\n   */\n  private qsiLoaded$: Observable<any> = this.winRef?.nativeWindow\n    ? fromEvent(this.winRef.nativeWindow, QUALTRICS_EVENT_NAME)\n    : of();\n\n  /**\n   * Emits the Qualtrics Site Intercept (QSI) JavaScript API whenever available.\n   *\n   * The API is emitted when the JavaScript resource holding this API is fully loaded.\n   * The API is also stored locally in the service, in case it's required later on.\n   */\n  protected qsi$: Observable<any> = this.qsiLoaded$.pipe(\n    switchMap(() => this.isDataLoaded()),\n    map(() => this.winRef?.nativeWindow['QSI']),\n    filter((api) => Boolean(api)),\n    tap((qsi) => (this.qsiApi = qsi))\n  );\n\n  constructor(\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2\n  ) {\n    this.initialize();\n  }\n\n  /**\n   * Starts observing the Qualtrics integration. The integration is based on a\n   * Qualtrics specific event (`qsi_js_loaded`). As soon as this events happens,\n   * we run the API.\n   */\n  protected initialize() {\n    this.qsi$.subscribe(() => this.run());\n  }\n\n  /**\n   * Evaluates the Qualtrics project code for the application.\n   *\n   * In order to reload the evaluation in Qualtrics, the API requires to unload the API before\n   * running it again. We don't do this by default, but offer a flag to conditionally unload the API.\n   */\n  protected run(reload = false): void {\n    if (!this.qsiApi?.API) {\n      if (isDevMode()) {\n        console.log('The QSI api is not available');\n      }\n      return;\n    }\n\n    if (reload) {\n      // Removes any currently displaying creatives\n      this.qsiApi.API.unload();\n    }\n\n    // Starts the intercept code evaluation right after loading the Site Intercept\n    // code for any defined intercepts or creatives\n    this.qsiApi.API.load().done(this.qsiApi.API.run());\n  }\n\n  /**\n   * Adds the deployment script to the DOM.\n   *\n   * The script will not be added twice if it was loaded before. In that case, we use\n   * the Qualtrics API directly to _unload_ and _run_ the project.\n   */\n  addScript(scriptSource: string): void {\n    if (this.hasScript(scriptSource)) {\n      this.run(true);\n    } else {\n      const script: HTMLScriptElement = this.renderer.createElement('script');\n      script.type = 'text/javascript';\n      script.defer = true;\n      script.src = scriptSource;\n      this.renderer.appendChild(this.winRef.document.body, script);\n    }\n  }\n\n  /**\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data.\n   * You can observe any data in this method.\n   *\n   * Defaults to true.\n   */\n  protected isDataLoaded(): Observable<boolean> {\n    return of(true);\n  }\n\n  /**\n   * Indicates if the script is already added to the DOM.\n   */\n  protected hasScript(source?: string): boolean {\n    return !!this.winRef.document.querySelector(`script[src=\"${source}\"]`);\n  }\n\n  protected get renderer(): Renderer2 {\n    return this.rendererFactory.createRenderer(null, null);\n  }\n}\n","import { Component, isDevMode } from '@angular/core';\nimport { QualtricsConfig } from './config/qualtrics-config';\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\n/**\n * Adds the Qualtrics deployment script whenever the component is loaded. The\n * deployment script is loaded from the global configuration (`qualtrics.scriptSource`).\n */\n@Component({\n  selector: 'cx-qualtrics',\n  template: ``,\n})\nexport class QualtricsComponent {\n  constructor(\n    protected qualtricsLoader: QualtricsLoaderService,\n    protected config: QualtricsConfig\n  ) {\n    if (this.config.qualtrics?.scriptSource) {\n      this.qualtricsLoader.addScript(this.config.qualtrics.scriptSource);\n    } else if (isDevMode()) {\n      console.warn(\n        `We're unable to add the Qualtrics deployment code as there is no script source defined in config.qualtrics.scriptSource.`\n      );\n    }\n  }\n}\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\nimport { QualtricsComponent } from './qualtrics.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [QualtricsComponent],\n  entryComponents: [QualtricsComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        QualtricsComponent: {\n          component: QualtricsComponent,\n        },\n      },\n    }),\n    provideDefaultConfig(defaultQualtricsConfig),\n  ],\n})\nexport class QualtricsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap((items) =>\n        this.getContext(context).pipe(\n          switchMap((ctx) => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map((ctx) => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe((service) => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map((ctx: string) => (ctx ? this.getInjectedService(ctx) : undefined)),\n      filter((s) => !!s)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map((data) => data?.context),\n        map((ctx) => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ContextServiceMap,\n  provideDefaultConfig,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextComponentService,\n  ],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent implements OnInit {\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interation is not provided.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = false;\n\n  /**\n   * The rating will be used to render some colorful stars in the UI.\n   */\n  @Input() rating: number;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  // tslint:disable-next-line:no-output-native\n  @Output() change = new EventEmitter<number>();\n\n  private initialRate = 0;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(protected el: ElementRef, protected renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.setRate(this.rating, true);\n  }\n\n  setRate(value: number, force?: boolean): void {\n    if (!this.disabled || force) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'style',\n        `--star-fill:${value || this.initialRate};`\n      );\n    }\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n\n  setRateOnEvent(event: any, rating: number) {\n    if (event.code === 'Space') {\n      event.preventDefault();\n      this.setRate(rating);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport { TableHeaderOutletContext } from '../table.model';\n\n@Component({\n  template: `{{ value }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableDataCellComponent {\n  @HostBinding('class.content-wrapper') cls = true;\n\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  get value(): string {\n    return this.model[this.field];\n  }\n\n  protected get model(): any {\n    return this.outlet?.context;\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport {\n  TableFieldOptions,\n  TableHeader,\n  TableHeaderOutletContext,\n} from '../table.model';\n\n@Component({\n  template: `{{ header || (localizedHeader | cxTranslate) }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableHeaderCellComponent {\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  /**\n   * Returns the static label for the given field, if available.\n   */\n  get header(): string {\n    if (typeof this.fieldOptions?.label === 'string') {\n      return <string>this.fieldOptions.label;\n    }\n  }\n\n  /**\n   * Returns the localized label for the given field.\n   *\n   * The localized label is either driven by the configured `label.i18nKey`\n   * or concatenated by the table `type` and field `key`:\n   *\n   * `[tableType].[fieldKey]`\n   *\n   * The localized header can be translated with the `cxTranslate` pipe or `TranslationService`.\n   */\n  get localizedHeader(): string {\n    return (\n      (this.fieldOptions?.label as TableHeader)?.i18nKey ||\n      `${this.type}.${this.field}`\n    );\n  }\n\n  protected get fieldOptions(): TableFieldOptions {\n    return this.outlet?.context._options?.cells?.[this.field];\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n\n  protected get type(): string {\n    return this.outlet?.context?._type;\n  }\n}\n","import { TableDataCellComponent } from '../table-data-cell/table-data-cell.component';\nimport { TableHeaderCellComponent } from '../table-header-cell/table-header-cell.component';\nimport { TableConfig } from './table.config';\n\nexport const defaultTableConfig: TableConfig = {\n  tableOptions: {\n    headerComponent: TableHeaderCellComponent,\n    dataComponent: TableDataCellComponent,\n  },\n};\n","import { Injectable, Type } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { BREAKPOINT } from '../../../../layout/config/layout-config';\nimport { TableStructureConfiguration } from '../table.model';\n\n/**\n * The `TableConfig` provides a table configurations for specific table types. You can define\n * an all-screen table structure as well as a breakpoint specific table structure. The various\n * table structures are merged from small to large screen configurations, depending on the users\n * screen size.\n *\n * The `table.type` is used as a key to distinguish the various table configurations in the application.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class TableConfig {\n  table?: {\n    [tableType: string]: ResponsiveTableConfiguration;\n  };\n  tableOptions?: {\n    /**\n     * Global component to render table header _content_ (`<th>...</th>`). A specific component\n     * can be configured alternatively per table or table field.\n     */\n    headerComponent?: Type<any>;\n\n    /**\n     * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n     * field can be configured alternatively.\n     *\n     * If no component is available, the table content will render as-is.\n     */\n    dataComponent?: Type<any>;\n  };\n}\n\n/**\n * Helper configuration to introduce breakpoint specific table configuration.\n */\nexport interface ResponsiveTableConfiguration\n  extends TableStructureConfiguration {\n  /** The table configurations for all screens */\n  [BREAKPOINT.xl]?: TableStructureConfiguration;\n  /** The table configurations for large screens and smaller */\n  [BREAKPOINT.lg]?: TableStructureConfiguration;\n  /** The table configurations for medium screens and smaller */\n  [BREAKPOINT.md]?: TableStructureConfiguration;\n  /** The table configurations for small screens and smaller */\n  [BREAKPOINT.sm]?: TableStructureConfiguration;\n  /** The table configurations for extra small screens */\n  [BREAKPOINT.xs]?: TableStructureConfiguration;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TableDataCellComponent } from './table-data-cell.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableDataCellComponent],\n})\nexport class TableDataCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { TableHeaderCellComponent } from './table-header-cell.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [TableHeaderCellComponent],\n})\nexport class TableHeaderCellModule {}\n","import { ComponentFactoryResolver, Injectable, Type } from '@angular/core';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { TableConfig } from './config/table.config';\nimport {\n  Table,\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableOptions,\n} from './table.model';\n\n/**\n * The table renderer service adds a component for each table cells (th and td)\n * based on a fine grained configuration. Each table type can configure both global\n * components for headers and cells as well as individual components for field\n * specific cells.\n *\n * The components are added to the outlet slots for the corresponding cells. The table\n * structure and data is added to the outlet context.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableRendererService {\n  // keep a list of outletRefs to avoid recreation\n  protected outletRefs = new Map();\n\n  constructor(\n    protected outletService: OutletService,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Adds the configured table component for the header and data.\n   */\n  add(dataset: Table): void {\n    dataset.structure?.cells?.forEach((field) => {\n      const thRenderer = this.getHeaderRenderer(dataset, field);\n      if (thRenderer) {\n        const ref = this.getHeaderOutletRef(dataset.structure.type, field);\n        this.render(ref, thRenderer);\n      }\n      const tdRenderer = this.getDataRenderer(dataset, field);\n      if (tdRenderer) {\n        const ref = this.getDataOutletRef(dataset.structure.type, field);\n        this.render(ref, tdRenderer);\n      }\n    });\n  }\n\n  protected render(outletRef: string, renderer: Type<any>) {\n    if (this.outletRefs.has(outletRef)) {\n      return;\n    }\n    this.outletRefs.set(outletRef, true);\n    const template = this.componentFactoryResolver.resolveComponentFactory(\n      renderer\n    );\n    this.outletService.add(outletRef, <any>template);\n  }\n\n  /**\n   * Returns the header render component for the given field.\n   */\n  protected getHeaderRenderer(dataset: Table, field: string): Type<any> {\n    return (\n      dataset.structure.options?.cells?.[field]?.headerComponent ||\n      dataset.structure.options?.headerComponent ||\n      this.config.tableOptions?.headerComponent\n    );\n  }\n\n  /**\n   * Returns the data render component for the given field.\n   */\n  protected getDataRenderer(dataset: Table, field: string): Type<any> {\n    return (\n      dataset.structure.options?.cells?.[field]?.dataComponent ||\n      dataset.structure.options?.dataComponent ||\n      this.config.tableOptions?.dataComponent\n    );\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   *\n   * The outlet reference is generated as:\n   * `table.[tableType].header.[field]`\n   */\n  getHeaderOutletRef(type: string, field: string): string {\n    return `table.${type}.header.${field}`;\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(\n    type: string,\n    options: TableOptions,\n    field: string\n  ): TableHeaderOutletContext {\n    return { _type: type, _options: options, _field: field };\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   *\n   * The field is generated as:\n   * `table.[tableType].data.[tableField]`\n   */\n  getDataOutletRef(type: string, field: string): string {\n    return `table.${type}.data.${field}`;\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(\n    type: string,\n    options: TableOptions,\n    field: string,\n    data: any\n  ): TableDataOutletContext {\n    return { ...data, _type: type, _options: options, _field: field };\n  }\n}\n","import { Type } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n/**\n * Contains the table data and structure for the `TableComponent`.\n */\nexport interface Table<T = any> {\n  /**\n   * The table structure provides details about the headers of the table.\n   */\n  structure: TableStructure;\n\n  /**\n   * The data that is listed in the table component.\n   */\n  data: T[];\n\n  /**\n   * The pagination component is used to paginate through the data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The sort options for the table.\n   */\n  sorts?: any[];\n}\n\nexport interface TableStructureConfiguration {\n  /**\n   * Provide the bare structure of the table.\n   */\n  cells?: string[];\n\n  /**\n   * Global table structure options.\n   */\n  options?: TableOptions;\n}\n\nexport interface TableOptions {\n  /**\n   * Default pagination for the table that is used for the initial load of the table data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The layout for the table component can be used for horizontal, vertical and vertical stacked\n   * table layouts.\n   */\n  layout?: TableLayout;\n\n  /**\n   * Global component to render table header _content_ (`<th>...</th>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table component will render a static label or use the\n   * configured i18n label.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table content will render as-is.\n   */\n  dataComponent?: Type<any>;\n\n  // field specific options\n  cells?: {\n    [fieldKey: string]: TableFieldOptions;\n  };\n}\n\n/**\n * Layout orientation for the table configuration.\n */\nexport enum TableLayout {\n  /**\n   * Renders the table vertically, with a heading on top of the table.\n   *\n   * Vertical layout is most common and the default layout.\n   */\n  VERTICAL = 1,\n\n  /**\n   * Stacks items in a tables by generating a `tbody` for each item.\n   */\n  VERTICAL_STACKED,\n\n  /**\n   * Horizontal oriented table layout renders the table headers in the first column of the table.\n   */\n  HORIZONTAL,\n}\n\nexport interface TableFieldOptions {\n  /**\n   * Optional label to add static or localized headers. If the label is not present, the\n   * field key is mapped to a i18n property.\n   */\n  label?: string | TableHeader;\n\n  /**\n   * Indicates wether the cell is linkable.\n   *\n   * If the cells is linkable, an anchor link can be generated in the table data element.\n   */\n  linkable?: boolean;\n\n  /**\n   * Component to render table header _content_ (`<th>...</th>`) for the table field.\n   *\n   * If no component is configured, the global table component for the header will be used\n   * instead.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Component to render table data _content_ (`<td>...</td>`) for the table field.\n   *\n   * If no component is configured, the global table component for the cell data will be used\n   * instead.\n   */\n  dataComponent?: Type<any>;\n}\n\n/**\n * The TableStructure holds the header structure of the table.\n */\nexport interface TableStructure extends TableStructureConfiguration {\n  /**\n   * The table type is a mandatory property. The type is used to identify the table\n   * configuration and is used to generate a unique outlet reference.\n   */\n  type: string;\n\n  /**\n   * Indicates that the table is loading. This is useful to add a loading indicator or skeleton\n   */\n  isLoading?: boolean;\n}\n\n/**\n * Provides the core table structure, typically being used to render table columns.\n */\nexport interface TableHeader {\n  /**\n   * The header key is used to:\n   * - generate a unique class on each table row\n   * - generate a template for each table header cell and data cell\n   * - translate the key using the translate module\n   *   (fallback in case there is no label available)\n   */\n  i18nKey?: string;\n\n  // deprecated\n  sortCode?: string;\n}\n\nexport interface TableHeaderOutletContext {\n  _type: string;\n  _field: string;\n  _options?: TableOptions;\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface TableDataOutletContext extends TableHeaderOutletContext {\n  [property: string]: any;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  isDevMode,\n  Output,\n} from '@angular/core';\nimport { TableRendererService } from './table-renderer.service';\nimport {\n  Table,\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableLayout,\n} from './table.model';\n\n/**\n * The table component provides a generic DOM structure based on the `dataset` input.\n * The `Table` dataset contains a type, table structure and table data.\n *\n * The table component only supports horizontal, vertical and stacked table layout.\n *\n * The implementation is fairly \"dumb\" and only renders string based content for TH and TD elements.\n * The actual cell rendering is delegated to a (configurable) cell component. Additionally, each cell\n * is registered as an outlet, so that customizations can be done by both outlet templates\n * and components.\n *\n * The outlet references are concatenated from the table `type` and header `key`. The following\n * snippet shows an outlet generated for a table header, for the table type \"cost-center\" with\n * a header key \"name\":\n *\n * ```\n * <th>\n *   <template cxOutlet=\"table.cost-center.header.name\">\n *   </template>\n * </th>\n * ```\n *\n * Similarly, the data cells (`<td>`) are generated with the outlet template reference\n * `table.cost-center.data.name`.\n */\n@Component({\n  selector: 'cx-table',\n  templateUrl: './table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent {\n  @HostBinding('attr.__cx-table-type') tableType: string;\n  @HostBinding('class.horizontal') horizontalLayout: boolean;\n  @HostBinding('class.vertical') verticalLayout: boolean;\n  @HostBinding('class.vertical-stacked') verticalStackedLayout: boolean;\n\n  private _dataset: Table;\n  @Input() set dataset(value) {\n    this._dataset = value;\n    this.init(value);\n  }\n  get dataset(): Table {\n    return this._dataset;\n  }\n\n  /**\n   * Provides a mechanism to compare a matching value for each item.\n   *\n   * The `property` refers to the dataset.value property, and the value tot the\n   * matching property value.\n   */\n  @Input() currentItem: { value: any; property: string };\n\n  @Output() launch = new EventEmitter();\n\n  constructor(protected rendererService: TableRendererService) {}\n\n  init(dataset: Table) {\n    this.verticalLayout = !this.layout || this.layout === TableLayout.VERTICAL;\n    this.verticalStackedLayout = this.layout === TableLayout.VERTICAL_STACKED;\n    this.horizontalLayout = this.layout === TableLayout.HORIZONTAL;\n\n    this.rendererService.add(dataset);\n\n    this.addTableDebugInfo();\n  }\n\n  launchItem(item: any): void {\n    this.launch.emit(item);\n  }\n\n  /**\n   * Indicates whether the given item is the current item.\n   *\n   * The current item is driven by the `currentItem`, that holds a\n   * property and value to compare.\n   */\n  isCurrentItem(item: any): boolean {\n    if (!this.currentItem || !this.currentItem.value) {\n      return false;\n    }\n    return this.currentItem?.value === item?.[this.currentItem?.property];\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   */\n  getHeaderOutletRef(field: string): string {\n    return this.rendererService.getHeaderOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(field: string): TableHeaderOutletContext {\n    return this.rendererService.getHeaderOutletContext(\n      this.type,\n      this.options,\n      field\n    );\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   */\n  getDataOutletRef(field: string): string {\n    return this.rendererService.getDataOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(field: string, data: any): TableDataOutletContext {\n    return this.rendererService.getDataOutletContext(\n      this.type,\n      this.options,\n      field,\n      data\n    );\n  }\n\n  trackData(_i: number, item: any): any {\n    return JSON.stringify(item);\n  }\n\n  /**\n   * Generates the table type into the UI in devMode, so that developers\n   * can easily get the notion of the table type.\n   */\n  protected addTableDebugInfo() {\n    if (isDevMode() && this.type) {\n      this.tableType = this.type;\n    }\n  }\n\n  /**\n   * Helper method to return the deeply nested orientation configuration.\n   */\n  private get layout() {\n    return this.dataset?.structure?.options?.layout;\n  }\n\n  /**\n   * Helper method to return the deeply nested type.\n   */\n  private get type() {\n    return this.dataset?.structure?.type;\n  }\n\n  private get options() {\n    return this.dataset?.structure?.options;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { defaultTableConfig } from './config/default-table.config';\nimport { TableDataCellModule } from './table-data-cell/table-data-cell.module';\nimport { TableHeaderCellModule } from './table-header-cell/table-header-cell.module';\nimport { TableComponent } from './table.component';\n\n/**\n * The TableModule provides a table component that is driven by (responsible) configuration.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    OutletModule,\n    TableHeaderCellModule,\n    TableDataCellModule,\n  ],\n  declarations: [TableComponent],\n  exports: [TableComponent],\n  providers: [provideConfig(defaultTableConfig)],\n})\nexport class TableModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport {\n  ResponsiveTableConfiguration,\n  TableConfig,\n} from './config/table.config';\nimport { TableStructure, TableStructureConfiguration } from './table.model';\n\n/**\n * Responsive table service.\n *\n * The `TableService` is used to build a `TableStructure` by configuration. The configuration\n * allows for breakpoint specific configuration, so that the table can differentiate for\n * various screen sizes.\n *\n * While there are some global options, the configuration is mainly driven by the table _type_.\n *\n * If there is no table configuration for the given type found, a table header structure\n * is generated based on the actual data (if available) or randomly by generating 5 random headers.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableService {\n  constructor(\n    protected breakpointService: BreakpointService,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Builds the table structure.\n   *\n   * @param tableType The table type is used  to find the specific table configuration.\n   * @param defaultStructure (optional) Default table structure that contains fallback options. More specific options are merged with the default structure.\n   * @param data$ (optional) The actual data can be passed in to generate the table structure based on actual data.\n   */\n  buildStructure(\n    tableType: string,\n    defaultStructure?: ResponsiveTableConfiguration,\n    data$?: Observable<any>\n  ): Observable<TableStructure> {\n    if (this.hasTableConfig(tableType)) {\n      return this.buildStructureFromConfig(tableType, defaultStructure);\n    } else {\n      if (data$) {\n        return this.buildStructureFromData(tableType, data$);\n      } else {\n        return this.buildRandomStructure(tableType);\n      }\n    }\n  }\n\n  /**\n   * Returns the table structure by configuration. The configuration can be\n   * breakpoint-driven, which means that an alternative header structure can\n   * be created per screen size.\n   *\n   * The breakpoint is resolved by teh `BreakpointService`.\n   */\n  protected buildStructureFromConfig(\n    type: string,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): Observable<TableStructure> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => ({\n        ...this.getTableConfig(type, breakpoint, defaultStructure),\n        type,\n      }))\n    );\n  }\n\n  /**\n   * Finds all applicable table configuration for the given type and breakpoint.\n   * The default table configuration is merged with all relevant breakpoint\n   * configurations.\n   *\n   * This allows to have some default configurations that apply to all screens, and\n   * add configuration options for some screens.\n   */\n  protected getTableConfig(\n    type: string,\n    breakpoint: BREAKPOINT,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): TableStructureConfiguration {\n    if (!this.config.table?.[type]) {\n      return null;\n    }\n\n    const relevant = this.findRelevantBreakpoints(breakpoint);\n\n    const closestBreakpoint = [...relevant]\n      .reverse()\n      .find((br) => !!this.config.table[type][br]?.cells);\n    const cells =\n      this.config.table[type][closestBreakpoint]?.cells ||\n      this.config.table[type].cells ||\n      defaultStructure?.cells;\n\n    // add all default table configurations\n    let options = {\n      ...defaultStructure?.options,\n      ...this.config.table[type].options,\n    };\n\n    // We merge all table options for smaller breakpoints into the global\n    // options, so we inherit options.\n    relevant.forEach((br) => {\n      options = {\n        ...options,\n        ...defaultStructure?.[br]?.options,\n        ...this.config.table[type]?.[br]?.options,\n      };\n    });\n\n    return { cells, options };\n  }\n\n  /**\n   * Generates the table structure by the help of the first data row.\n   */\n  protected buildStructureFromData(\n    type: string,\n    data$: Observable<any>\n  ): Observable<TableStructure> {\n    this.logWarning(\n      `No table configuration found to render table with type \"${type}\". The table header for \"${type}\" is generated by the help of the first data item`\n    );\n    return data$.pipe(\n      map((data: any[]) => {\n        const cells = Object.keys(data?.[0]).map((key) => key);\n        return { type, cells } as TableStructure;\n      })\n    );\n  }\n\n  /**\n   * As a last resort, the table structure is randomly created. The random structure\n   * contains 5 headers, so that some of the unknown data is visualized.\n   */\n  protected buildRandomStructure(type: string): Observable<TableStructure> {\n    this.logWarning(\n      `No data available for \"${type}\", a random structure is generated (with hidden table headers).`\n    );\n    return of({\n      type,\n      cells: ['unknown', 'unknown', 'unknown', 'unknown', 'unknown'],\n    });\n  }\n\n  /**\n   * Finds all the breakpoints can contribute to the table configuration, from small\n   * to current.\n   *\n   * For example, if the current breakpoint is `MD`, this returns `[XS, SM, MD]`.\n   */\n  protected findRelevantBreakpoints(breakpoint: BREAKPOINT): BREAKPOINT[] {\n    const current = this.breakpointService.breakpoints.indexOf(breakpoint);\n    return this.breakpointService.breakpoints.slice(0, current + 1);\n  }\n\n  /**\n   * Indicates if the there is a configuration for the table available.\n   */\n  protected hasTableConfig(tableType: string): boolean {\n    return !!this.config.table?.[tableType];\n  }\n\n  /**\n   * Logs a message in the console to increase developer experience.\n   *\n   * The message is only logged in dev mode.\n   */\n  private logWarning(message) {\n    if (isDevMode()) {\n      console.warn(message);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ViewConfig {\n  view?: {\n    /**\n     * Configurations related to the view of the application\n     */\n    infiniteScroll?: {\n      active?: boolean;\n      productLimit?: number;\n      showMoreButton?: boolean;\n    };\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({})\nexport class ViewConfigModule {\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\n    return {\n      ngModule: ViewConfigModule,\n      providers: [\n        provideDefaultConfig({\n          view: {},\n        }),\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService\n  ) {\n    this.orderCode$ = this.routingService\n      .getRouterState()\n      .pipe(map((routingData) => routingData.state.params.orderCode));\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap((orderCode) => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CheckoutService,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PromotionService {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected checkoutService: CheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  getOrderPromotions(\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.getOrderPromotionsFromCart();\n      case PromotionLocation.Checkout:\n        return this.getOrderPromotionsFromCheckout();\n      case PromotionLocation.Order:\n        return this.getOrderPromotionsFromOrder();\n      default:\n        return of([]);\n    }\n  }\n\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\n    return this.activeCartService\n      .getActive()\n      .pipe(map((cart) => this.getOrderPromotionsFromCartHelper(cart)));\n  }\n\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\n    const potentialPromotions = [];\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\n\n    const appliedPromotions = [];\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\n\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\n    return this.checkoutService\n      .getOrderDetails()\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\n    return this.orderDetailsService\n      .getOrderDetails()\n      .pipe(map((order) => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\n    const appliedOrderPromotions = [];\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\n\n    return appliedOrderPromotions;\n  }\n\n  getProductPromotionForEntry(\n    item: OrderEntry,\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.activeCartService\n          .getActive()\n          .pipe(\n            map((cart) =>\n              this.getProductPromotion(\n                item,\n                cart.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Checkout:\n        return this.checkoutService\n          .getOrderDetails()\n          .pipe(\n            map((order) =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Order:\n        return this.orderDetailsService\n          .getOrderDetails()\n          .pipe(\n            map((order) =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n    }\n  }\n\n  private getProductPromotion(\n    item: OrderEntry,\n    promotions: PromotionResult[]\n  ): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    if (promotions && promotions.length > 0) {\n      for (const promotion of promotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumedEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumedEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { AbstractControl, FormGroup, ValidationErrors } from '@angular/forms';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\n\nexport class CustomFormValidators {\n  /**\n   * Checks control's value with predefined email regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email && (!email.length || email.match(EMAIL_PATTERN))\n      ? null\n      : { cxInvalidEmail: true };\n  }\n\n  /**\n   * Checks control's value with predefined password regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n\n    return password && (!password.length || password.match(PASSWORD_PATTERN))\n      ? null\n      : { cxInvalidPassword: true };\n  }\n\n  /**\n   * Checks if control's value is between 1 and 5\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\n   * @memberof CustomFormValidators\n   */\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\n    const rating = control.value as number;\n\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\n  }\n\n  /**\n   * Checks if two password controls match\n   *\n   * NOTE: Use it as a form validator and pass password control names as parameters\n   *\n   * @static\n   * @param {string} password First password control name\n   * @param {string} passwordConfirmation Second password control name\n   * @returns Uses 'cxPasswordsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordsMustMatch(\n    password: string,\n    passwordConfirmation: string\n  ): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        password,\n        passwordConfirmation,\n        'cxPasswordsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if two email controls match\n   *\n   * NOTE: Use it as a form validator and pass email control names as parameters\n   *\n   * @static\n   * @param {string} email First email control name\n   * @param {string} emailConfirmation Second email control name\n   * @returns Uses 'cxEmailsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        email,\n        emailConfirmation,\n        'cxEmailsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if control's value is euqal or greater than 0\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxNegativeAmount' validator error\n   * @memberof CustomFormValidators\n   */\n  static mustBePositive(control: AbstractControl): ValidationErrors | null {\n    const amount = control.value as number;\n\n    return amount >= 0 ? null : { cxNegativeAmount: true };\n  }\n\n  /**\n   * Checks if control's value does not contain any special characters\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxContainsSpecialCharacters' validator error\n   * @memberof CustomFormValidators\n   */\n  static noSpecialCharacters(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const forbiddenChars = ['/'];\n    const str = String(control.value);\n    const containsSpecialChars = forbiddenChars.some((char) =>\n      str.includes(char)\n    );\n\n    return !containsSpecialChars ? null : { cxContainsSpecialCharacters: true };\n  }\n}\n\n/**\n * Generic function for validators, which checks if two passed controls match.\n *\n * @param formGroup\n * @param firstControlName First control to check\n * @param secondControlName Second control to check\n * @param errorName Error which will be returned by validator\n */\nexport function controlsMustMatch(\n  formGroup: FormGroup,\n  firstControlName: string,\n  secondControlName: string,\n  errorName: string\n): void {\n  const firstControl = formGroup.controls[firstControlName];\n  const secondControl = formGroup.controls[secondControlName];\n\n  if (secondControl.errors && !secondControl.errors[errorName]) {\n    return;\n  }\n\n  secondControl.setErrors(\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\n  );\n}\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import {\n  Compiler,\n  Injectable,\n  InjectFlags,\n  Injector,\n  NgModuleFactory,\n  NgModuleRef,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  CMSComponentConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  ConfigChunk,\n  ConfigInitializerService,\n  createFrom,\n  deepMerge,\n  DefaultConfigChunk,\n  EventService,\n  FeatureModuleConfig,\n  ModuleInitializedEvent,\n} from '@spartacus/core';\nimport {\n  combineLatest,\n  defer,\n  forkJoin,\n  from,\n  merge,\n  Observable,\n  of,\n  queueScheduler,\n} from 'rxjs';\nimport {\n  map,\n  observeOn,\n  pluck,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\ninterface FeatureInstance extends FeatureModuleConfig {\n  moduleRef?: NgModuleRef<any>;\n  depsModules?: any[];\n  componentsMappings?: CMSComponentConfig;\n}\n\n/**\n * Service responsible for resolving cms config based feature modules.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureModulesService implements OnDestroy {\n  // feature modules configuration\n  private featureModulesConfig?: {\n    [featureName: string]: FeatureModuleConfig;\n  };\n\n  // maps componentType to feature\n  private componentFeatureMap: Map<string, string> = new Map();\n\n  /*\n   * Contains either FeatureInstance or FeatureInstance resolver for not yet\n   * resolved feature modules\n   */\n  private features: Map<string, Observable<FeatureInstance>> = new Map();\n\n  private dependencyModules = new Map<any, NgModuleRef<any>>();\n\n  constructor(\n    protected configInitializer: ConfigInitializerService,\n    protected compiler: Compiler,\n    protected injector: Injector,\n    protected events: EventService\n  ) {\n    this.initFeatureMap();\n  }\n\n  private async initFeatureMap(): Promise<void> {\n    const config: CmsConfig = await this.configInitializer.getStableConfig(\n      'featureModules'\n    );\n\n    this.featureModulesConfig = config.featureModules ?? {};\n\n    for (const [featureName, featureConfig] of Object.entries(\n      this.featureModulesConfig\n    )) {\n      if (featureConfig?.cmsComponents?.length) {\n        for (const component of featureConfig.cmsComponents) {\n          this.componentFeatureMap.set(component, featureName);\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if there is feature module configuration that covers specified\n   * component type\n   */\n  hasFeatureFor(componentType: string): boolean {\n    return this.componentFeatureMap.has(componentType);\n  }\n\n  /**\n   * Return full CmsComponent mapping defined in feature module\n   */\n  getCmsMapping(componentType: string): Observable<CmsComponentMapping> {\n    const feature = this.componentFeatureMap.get(componentType);\n\n    return this.resolveFeature(feature).pipe(\n      map(\n        (featureInstance) => featureInstance.componentsMappings[componentType]\n      )\n    );\n  }\n\n  /**\n   * Get all injectors for feature and its dependencies\n   *\n   * As it's a synchronous method, it works only for already resolved features,\n   * returning undefined otherwise\n   */\n  getInjectors(componentType: string): Injector[] | undefined {\n    const feature = this.componentFeatureMap.get(componentType);\n    let injectors;\n\n    // we are returning injectors only for already resolved features\n    this.features\n      .get(feature)\n      ?.subscribe((featureInstance) => {\n        injectors = [\n          // feature module injector\n          featureInstance.moduleRef.injector,\n          // injectors from dependency modules\n          ...featureInstance.depsModules.map(\n            (module) => this.dependencyModules.get(module).injector\n          ),\n        ];\n      })\n      .unsubscribe();\n    return injectors;\n  }\n\n  /**\n   * Resolve feature based on feature name, if feature was not yet resolved\n   *\n   * It will first resolve all module dependencies if defined\n   */\n  private resolveFeature(featureName: string): Observable<FeatureInstance> {\n    return defer(() => {\n      if (!this.features.has(featureName)) {\n        const featureConfig = this.featureModulesConfig[featureName];\n\n        if (!featureConfig?.module) {\n          throw new Error(\n            'No module defined for Feature Module ' + featureName\n          );\n        }\n\n        // resolve dependencies first (if any)\n        const depsResolve = featureConfig.dependencies?.length\n          ? forkJoin(\n              featureConfig.dependencies.map((depModuleFunc) =>\n                this.resolveDependencyModule(depModuleFunc)\n              )\n            )\n          : of(undefined);\n\n        this.features.set(\n          featureName,\n          depsResolve.pipe(\n            switchMap((deps) => this.resolveFeatureModule(featureConfig, deps)),\n            tap((featureInstance) =>\n              this.events.dispatch(\n                createFrom(ModuleInitializedEvent, {\n                  featureName,\n                  moduleRef: featureInstance.moduleRef,\n                })\n              )\n            ),\n            shareReplay()\n          )\n        );\n      }\n\n      return this.features.get(featureName);\n    });\n  }\n\n  /**\n   * Initialize feature module by returning feature instance\n   */\n  private resolveFeatureModule(\n    featureConfig: FeatureModuleConfig,\n    depsModules: any[] = []\n  ): Observable<FeatureInstance> {\n    return this.resolveModuleFactory(featureConfig?.module).pipe(\n      map(([moduleFactory]) => {\n        const moduleRef = moduleFactory.create(this.injector);\n\n        const featureInstance: FeatureInstance = {\n          ...featureConfig,\n          moduleRef,\n          depsModules,\n          componentsMappings: {},\n        };\n\n        // resolve configuration for feature module\n        const resolvedConfiguration = this.resolveFeatureConfiguration(\n          moduleRef.injector\n        );\n\n        // extract cms components configuration from feature config\n        for (const componentType of featureInstance.cmsComponents) {\n          featureInstance.componentsMappings[componentType] =\n            resolvedConfiguration.cmsComponents[componentType];\n        }\n        return featureInstance;\n      })\n    );\n  }\n\n  /**\n   * Returns configuration provided in feature module\n   */\n  private resolveFeatureConfiguration(featureInjector: Injector): CmsConfig {\n    // get config chunks from feature lib\n    const featureConfigChunks = featureInjector.get<any[]>(\n      ConfigChunk,\n      [],\n      InjectFlags.Self\n    );\n    // get default config chunks from feature lib\n    const featureDefaultConfigChunks = featureInjector.get<any[]>(\n      DefaultConfigChunk,\n      [],\n      InjectFlags.Self\n    );\n\n    return deepMerge(\n      {},\n      ...(featureDefaultConfigChunks ?? []),\n      ...(featureConfigChunks ?? [])\n    ) as CmsConfig;\n  }\n\n  /**\n   * Resolves dependency module and initializes single module instance\n   */\n  private resolveDependencyModule(\n    moduleFunc: () => Promise<any>\n  ): Observable<any> {\n    // We grab moduleFactory symbol from module function and if there is no\n    // such a module created yet, we create it and store it in a\n    // dependencyModules map\n    return this.resolveModuleFactory(moduleFunc).pipe(\n      tap(([moduleFactory, module]) => {\n        if (!this.dependencyModules.has(module)) {\n          const moduleRef = moduleFactory.create(this.injector);\n          this.dependencyModules.set(module, moduleRef);\n\n          this.events.dispatch(\n            createFrom(ModuleInitializedEvent, {\n              moduleRef,\n            })\n          );\n        }\n      }),\n      pluck(1)\n    );\n  }\n\n  /**\n   * Resolve any Angular module from an function that return module or moduleFactory\n   */\n  private resolveModuleFactory(\n    moduleFunc: () => Promise<any>\n  ): Observable<[NgModuleFactory<any>, any]> {\n    return from(moduleFunc()).pipe(\n      switchMap((module) =>\n        module instanceof NgModuleFactory\n          ? (of([module, module]) as Observable<[NgModuleFactory<any>, any]>)\n          : combineLatest([\n              // using compiler here is for jit compatibility, there is no overhead\n              // for aot production builds as it will be stubbed\n              from(this.compiler.compileModuleAsync(module as any)),\n              of(module),\n            ])\n      ),\n      observeOn(queueScheduler)\n    );\n  }\n\n  ngOnDestroy(): void {\n    // clean up all initialized features\n    merge(...Array.from(this.features.values())).subscribe((featureInstance) =>\n      featureInstance.moduleRef?.destroy()\n    );\n\n    // clean up all initialized dependency modules\n    this.dependencyModules.forEach((dependency) => dependency.destroy());\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  CmsComponentChildRoutesConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  deepMerge,\n  DeferLoadingStrategy,\n} from '@spartacus/core';\nimport { defer, forkJoin, Observable, of } from 'rxjs';\nimport { mapTo, share, tap } from 'rxjs/operators';\nimport { FeatureModulesService } from './feature-modules.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsComponentsService {\n  private missingComponents: string[] = [];\n  private mappings: { [componentType: string]: CmsComponentMapping } = {};\n\n  // contains\n  private mappingResolvers: Map<\n    string,\n    Observable<CmsComponentMapping>\n  > = new Map();\n\n  /**\n   * @deprecated since 2.1\n   * constructor(config: CmsConfig, platformId: Object);\n   */\n  constructor(\n    protected config: CmsConfig,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected featureModules?: FeatureModulesService\n  ) {}\n\n  /**\n   * Should be called to make sure all component mappings are determined,\n   * especially lazy loaded ones.\n   *\n   * It's recommended way to make sure all other methods of CmsComponentService\n   * will be able to work synchronously for asked component types and avoid risk\n   * of potential errors that could be thrown otherwise.\n   */\n  determineMappings(componentTypes: string[]): Observable<string[]> {\n    return defer(() => {\n      // we use defer, to be sure the logic below used to compose final observable\n      // will be executed at subscription time (with up to date state at the time,\n      // when it will be needed)\n      const featureResolvers = [];\n\n      for (const componentType of componentTypes) {\n        if (!this.mappings[componentType]) {\n          const staticConfig = this.config.cmsComponents[componentType];\n\n          // check if this component type is managed by feature module\n          if (this.featureModules.hasFeatureFor(componentType)) {\n            featureResolvers.push(\n              // we delegate populating this.mappings to feature resolver\n              this.getFeatureMappingResolver(componentType, staticConfig)\n            );\n          } else {\n            // simply use only static config\n            this.mappings[componentType] = staticConfig;\n          }\n        }\n      }\n\n      if (featureResolvers.length) {\n        return forkJoin(featureResolvers).pipe(mapTo(componentTypes));\n      } else {\n        return of(componentTypes);\n      }\n    });\n  }\n\n  private getFeatureMappingResolver(\n    componentType: string,\n    staticConfig?: CmsComponentMapping\n  ): Observable<CmsComponentMapping> {\n    if (!this.mappingResolvers.has(componentType)) {\n      const mappingResolver$ = this.featureModules\n        .getCmsMapping(componentType)\n        .pipe(\n          tap((featureComponentMapping) => {\n            // We treat cms mapping configuration from a feature as a default,\n            // that can be overridden by app/static configuration\n            this.mappings[componentType] = deepMerge(\n              {},\n              featureComponentMapping,\n              staticConfig\n            );\n            this.mappingResolvers.delete(componentType);\n          }),\n          share()\n        );\n      this.mappingResolvers.set(componentType, mappingResolver$);\n    }\n    return this.mappingResolvers.get(componentType);\n  }\n\n  getInjectors(componentType: string): Injector[] {\n    return (\n      (this.featureModules.hasFeatureFor(componentType) &&\n        this.featureModules.getInjectors(componentType)) ??\n      []\n    );\n  }\n\n  /**\n   * Return collection of component mapping configuration for specified list of\n   * component types.\n   *\n   * If component mapping can't be determined synchronously, for example, lazy\n   * loaded one, it will throw an error.\n   *\n   * To make sure component mapping is available, determineMappings()\n   * should be called and completed first.\n   */\n  getMapping(componentType: string): CmsComponentMapping {\n    const componentConfig =\n      this.mappings[componentType] ??\n      this.config.cmsComponents?.[componentType];\n\n    if (!componentConfig) {\n      if (!this.missingComponents.includes(componentType)) {\n        this.missingComponents.push(componentType);\n        console.warn(\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n\n    return componentConfig;\n  }\n\n  /**\n   * Checks, if component should be rendered as some components\n   * could be disabled for server side renderings\n   */\n  shouldRender(componentType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\n  }\n\n  /**\n   * Return DeferLoadingStrategy for component type.\n   */\n  getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\n    return this.config.cmsComponents?.[componentType]?.deferLoading;\n  }\n\n  /**\n   * Get cms driven child routes for components\n   */\n  getChildRoutes(componentTypes: string[]): CmsComponentChildRoutesConfig {\n    const configs = [];\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        configs.push(this.getMapping(componentType)?.childRoutes ?? []);\n      }\n    }\n\n    return this.standardizeChildRoutes(configs);\n  }\n\n  /**\n   * Standardizes the format of `childRoutes` config.\n   *\n   * Some `childRoutes` configs are simple arrays of Routes (without the notion of the parent route).\n   * But some configs can be an object with children routes and their parent defined in separate property.\n   */\n  protected standardizeChildRoutes(\n    childRoutesConfigs: (Route[] | CmsComponentChildRoutesConfig)[]\n  ): CmsComponentChildRoutesConfig {\n    const result: CmsComponentChildRoutesConfig = { children: [] };\n\n    (childRoutesConfigs || []).forEach((config) => {\n      if (Array.isArray(config)) {\n        result.children.push(...config);\n      } else {\n        result.children.push(...(config.children || []));\n        if (config.parent) {\n          result.parent = config.parent;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Get cms driven guards for components\n   */\n  getGuards(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  /**\n   * Get i18n keys associated with components\n   */\n  getI18nKeys(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n}\n","import {\n  AbstractType,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  Type,\n} from '@angular/core';\n\nconst NOT_FOUND_SYMBOL = {};\n\n/**\n * CombinedInjector is able to combine more than one injector together in a way\n * that main injector is supported by complementary injectors.\n *\n * Should be used as a parent injector for components, when we want to have access\n * to both providers from component hierarchical injectors and providers from any\n * number of additional injectors (lazy loaded modules for example).\n */\nexport class CombinedInjector implements Injector {\n  /**\n   * @param mainInjector Component hierarchical injector\n   * @param complementaryInjectors Additional injector that will be taken into an account when resolving dependencies\n   */\n  constructor(\n    private mainInjector: Injector,\n    private complementaryInjectors: Injector[]\n  ) {}\n\n  get<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags\n  ): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token, notFoundValue?: any, flags?: InjectFlags): any {\n    // tslint:disable-next-line:no-bitwise\n    if (flags & InjectFlags.Self) {\n      if (notFoundValue !== undefined) {\n        return notFoundValue;\n      }\n      throw new Error(\n        \"CombinedInjector should be used as a parent injector / doesn't support self dependencies\"\n      );\n    }\n\n    for (const injector of [\n      this.mainInjector,\n      ...this.complementaryInjectors,\n    ]) {\n      // First we are resolving providers provided at Self level in all injectors,\n      // starting with main injector and going through complementary ones...\n      const service = injector.get(token, NOT_FOUND_SYMBOL, InjectFlags.Self);\n      if (service !== NOT_FOUND_SYMBOL) {\n        return service;\n      }\n    }\n    // ...and then fallback to main injector passing the flag\n    return this.mainInjector.get(token, notFoundValue, flags);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { CmsComponentData } from '../../model/cms-component-data';\nimport { CmsComponent, CmsService } from '@spartacus/core';\nimport { CmsComponentsService } from '../../../services/cms-components.service';\nimport { CombinedInjector } from '../../../../shared/utils/combined-injector';\n\n/**\n * Used to prepare injector for CMS components.\n *\n * Injector will take into account configured providers and provides CmsComponentData\n * for specified component's uid\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsInjectorService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  private getCmsData<T extends CmsComponent>(\n    uid: string,\n    parentInjector?: Injector\n  ): CmsComponentData<T> {\n    return {\n      uid: uid,\n      data$: (parentInjector ?? this.injector)\n        .get(CmsService)\n        .getComponentData<T>(uid),\n    };\n  }\n\n  public getInjector(\n    type: string,\n    uid: string,\n    parentInjector?: Injector\n  ): Injector {\n    const configProviders =\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\n\n    const complementaryInjectors = this.cmsComponentsService.getInjectors(type);\n\n    if (complementaryInjectors?.length) {\n      parentInjector = new CombinedInjector(\n        parentInjector ?? this.injector,\n        complementaryInjectors\n      );\n    }\n\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useValue: this.getCmsData(uid),\n        },\n        ...configProviders,\n      ],\n      parent: parentInjector ?? this.injector,\n    });\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * ComponentHandler implementations can be used for instantiating and launching\n * different types of CMS mapped components\n */\nexport abstract class ComponentHandler implements Applicable {\n  /**\n   * Returns component resource - an observable stream used to launch and dispose\n   * component.\n   *\n   * Instantiate and launch component by subscribing to launcher.\n   * Successful component launch will be followed by emission of ElementRef\n   * (and in case of native Angular component, also ComponentRef).\n   * Unsubscribing from the launcher will remove and tear down the component.\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  abstract launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\n\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\n  abstract getPriority?(): Priority;\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  Injector,\n  isDevMode,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from '../handlers/component-handler';\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Responsible for obtaining component handler for specified component mapping\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentHandlerService {\n  constructor(\n    @Optional()\n    @Inject(ComponentHandler)\n    protected handlers: ComponentHandler[]\n  ) {}\n\n  protected invalidMappings = new Set<CmsComponentMapping>();\n\n  /**\n   * Get best matching component handler\n   *\n   * @param componentMapping\n   */\n  protected resolve(componentMapping: CmsComponentMapping): ComponentHandler {\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\n\n    if (isDevMode() && !handler) {\n      if (!this.invalidMappings.has(componentMapping)) {\n        this.invalidMappings.add(componentMapping);\n        console.warn(\n          \"Can't resolve handler for component mapping: \",\n          componentMapping\n        );\n      }\n    }\n\n    return handler;\n  }\n\n  /**\n   * Get launcher for specified component mapping\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  getLauncher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return this.resolve(componentMapping)?.launcher(\n      componentMapping,\n      viewContainerRef,\n      elementInjector\n    );\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ContentSlotComponentData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nimport { CmsInjectorService } from './services/cms-injector.service';\nimport { ComponentHandlerService } from './services/component-handler.service';\n\n/**\n * Directive used to facilitate instantiation of CMS driven dynamic components\n */\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n\n  /**\n   * @deprecated since 2.0\n   *\n   * This property in unsafe, i.e.\n   * - cmpRef can be set later because of lazy loading or deferred loading\n   * - cmpRef can be not set at all if for example, web components are used as cms components\n   */\n  cmpRef?: ComponentRef<any>;\n\n  private launcherResource?: Subscription;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected componentHandler: ComponentHandlerService,\n    protected cmsInjector: CmsInjectorService\n  ) {}\n\n  ngOnInit() {\n    this.cmsComponentsService\n      .determineMappings([this.cxComponentWrapper.flexType])\n      .subscribe(() => {\n        if (\n          this.cmsComponentsService.shouldRender(\n            this.cxComponentWrapper.flexType\n          )\n        ) {\n          this.launchComponent();\n        }\n      });\n  }\n\n  private launchComponent() {\n    const componentMapping = this.cmsComponentsService.getMapping(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (!componentMapping) {\n      return;\n    }\n\n    this.launcherResource = this.componentHandler\n      .getLauncher(\n        componentMapping,\n        this.vcr,\n        this.cmsInjector.getInjector(\n          this.cxComponentWrapper.flexType,\n          this.cxComponentWrapper.uid,\n          this.injector\n        )\n      )\n      ?.subscribe(({ elementRef, componentRef }) => {\n        this.cmpRef = componentRef;\n        this.decorate(elementRef);\n        this.injector.get(ChangeDetectorRef).markForCheck();\n      });\n  }\n\n  private decorate(elementRef: ElementRef): void {\n    this.dynamicAttributeService.addDynamicAttributes(\n      elementRef.nativeElement,\n      this.renderer,\n      { componentData: this.cxComponentWrapper }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.launcherResource) {\n      this.launcherResource.unsubscribe();\n    }\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from './component-handler';\nimport { Observable } from 'rxjs';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * Default component handler used for dynamically launching cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DefaultComponentHandler implements ComponentHandler {\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return typeof componentMapping.component === 'function';\n  }\n\n  getPriority(): Priority {\n    return Priority.FALLBACK;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return new Observable<{\n      elementRef: ElementRef;\n      componentRef?: ComponentRef<any>;\n    }>((subscriber) => {\n      let componentRef: ComponentRef<any>;\n\n      const injector = elementInjector ?? viewContainerRef.injector;\n\n      const dispose = () => {\n        if (componentRef) {\n          componentRef.destroy();\n        }\n      };\n\n      const factory = this.getComponentFactory(\n        injector,\n        componentMapping.component\n      );\n\n      if (factory) {\n        componentRef = viewContainerRef.createComponent(\n          factory,\n          undefined,\n          injector\n        );\n        subscriber.next({ elementRef: componentRef.location, componentRef });\n      }\n\n      return dispose;\n    });\n  }\n\n  protected getComponentFactory(injector: Injector, component: any): any {\n    if (!component) {\n      return null;\n    }\n    const factory = injector\n      .get(ComponentFactoryResolver)\n      .resolveComponentFactory(component);\n\n    return factory;\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\nimport { from, Observable } from 'rxjs';\nimport { DefaultComponentHandler } from './default-component.handler';\nimport { switchMap } from 'rxjs/operators';\nimport { ComponentHandler } from './component-handler';\n\n/**\n * Lazy component handler used for launching lazy loaded cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyComponentHandler implements ComponentHandler {\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\n\n  /**\n   * We want to mach dynamic import signature () => import('')\n   */\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return (\n      typeof componentMapping.component === 'function' &&\n      this.isNotClass(componentMapping.component)\n    );\n  }\n\n  private isNotClass(symbol: any): boolean {\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\n    return signature.startsWith('function()') || signature.startsWith('()=>');\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return from(componentMapping.component()).pipe(\n      switchMap((component) =>\n        this.defaultHandler.launcher(\n          { ...componentMapping, component },\n          viewContainerRef,\n          elementInjector\n        )\n      )\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\nimport { ComponentHandler } from './handlers/component-handler';\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: ComponentHandler,\n      useExisting: DefaultComponentHandler,\n      multi: true,\n    },\n    {\n      provide: ComponentHandler,\n      useExisting: LazyComponentHandler,\n      multi: true,\n    },\n  ],\n  declarations: [ComponentWrapperDirective],\n  exports: [ComponentWrapperDirective],\n})\nexport class PageComponentModule {}\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/index';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n/**\n * The AsmEnablerService is used to enable ASM for those scenario's\n * where it's actually used. This service is added to avoid any polution\n * of the UI and runtime performance for the ordinary production user.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmEnablerService {\n  constructor(\n    protected location: Location,\n    protected winRef: WindowRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  /**\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\n   * existence of a URL parameter or previous usage given by local storage.\n   */\n  load(): void {\n    if (this.isEnabled()) {\n      this.addUi();\n    }\n  }\n\n  /**\n   * Indicates whether the ASM module is enabled.\n   */\n  isEnabled(): boolean {\n    if (this.isLaunched() && !this.isUsedBefore()) {\n      if (this.winRef.localStorage) {\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\n      }\n    }\n    return this.isLaunched() || this.isUsedBefore();\n  }\n\n  /**\n   * Indicates whether ASM is launched through the URL,\n   * using the asm flag in the URL.\n   */\n  protected isLaunched(): boolean {\n    const params = this.location.path().split('?')[1];\n    return params && params.split('&').includes('asm=true');\n  }\n\n  /**\n   * Evaluates local storage where we persist the usage of ASM.\n   */\n  protected isUsedBefore(): boolean {\n    return (\n      this.winRef.localStorage &&\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\n    );\n  }\n\n  /**\n   * Adds the ASM UI by using the `cx-storefront` outlet.\n   */\n  protected addUi(): void {\n    this.launchDialogService.launch(LAUNCH_CALLER.ASM);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { PageComponentModule } from '../../cms-structure/page/component/page-component.module';\nimport { AsmEnablerService } from './services/asm-enabler.service';\n\n/**\n * The ASM loader module takes care of loading the ASM UI\n * only in case there's a reason to do so.\n */\n@NgModule({\n  imports: [CommonModule, PageComponentModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: asmFactory,\n      deps: [AsmEnablerService],\n      multi: true,\n    },\n  ],\n})\nexport class AsmLoaderModule {}\n\n/**\n *\n * We do not like to block the UI, which is why we delgate loading of ASM\n * to a real component; the router and state aren't available in an optimized\n * way during the APP_INITIALIZER.\n */\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\n  const isReady = () => {\n    asmEnablerService.load();\n  };\n  return isReady;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmComponentService {\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected routingService: RoutingService,\n    protected winRef: WindowRef\n  ) {}\n\n  logoutCustomerSupportAgentAndCustomer(): void {\n    this.authService\n      .getUserToken()\n      .pipe(take(1))\n      .subscribe((token) => {\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\n          this.logoutCustomer();\n        }\n        this.asmAuthService.logoutCustomerSupportAgent();\n      });\n  }\n\n  logoutCustomer(): void {\n    this.authService.logout();\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\n    return this.authService\n      .getUserToken()\n      .pipe(\n        mergeMap((userToken) =>\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\n        )\n      );\n  }\n\n  /**\n   * We're currently only removing the persisted storage in the browser\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\n   * optimsiations we could think of:\n   * - drop the `asm` parameter from the URL, in case it's still there\n   * - remove the generated UI from the DOM (outlets currently do not support this)\n   */\n  unload() {\n    if (this.winRef.localStorage) {\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\n    }\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AsmAuthService,\n  AsmService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  User,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-main-ui',\n  templateUrl: './asm-main-ui.component.html',\n  styleUrls: ['./asm-main-ui.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmMainUiComponent implements OnInit {\n  csAgentToken$: Observable<UserToken>;\n  csAgentTokenLoading$: Observable<boolean>;\n  customer$: Observable<User>;\n  isCollapsed$: Observable<boolean>;\n\n  @HostBinding('class.hidden') disabled = false;\n\n  private startingCustomerSession = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected userService: UserService,\n    protected asmComponentService: AsmComponentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    protected asmService: AsmService\n  ) {}\n\n  ngOnInit(): void {\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\n    this.customer$ = this.authService.getUserToken().pipe(\n      switchMap((token) => {\n        if (token && !!token.access_token) {\n          this.handleCustomerSessionStartRedirection(token);\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n    this.isCollapsed$ = this.asmService\n      .getAsmUiState()\n      .pipe(map((uiState) => uiState.collapsed));\n  }\n\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\n    if (\n      this.startingCustomerSession &&\n      this.asmAuthService.isCustomerEmulationToken(token)\n    ) {\n      this.startingCustomerSession = false;\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n      this.routingService.go('/');\n    }\n  }\n\n  loginCustomerSupportAgent({\n    userId,\n    password,\n  }: {\n    userId: string;\n    password: string;\n  }): void {\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\n  }\n\n  logout(): void {\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n  }\n\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\n    this.asmAuthService\n      .getCustomerSupportAgentToken()\n      .pipe(take(1))\n      .subscribe((customerSupportAgentToken) =>\n        this.asmAuthService.startCustomerEmulationSession(\n          customerSupportAgentToken,\n          customerId\n        )\n      )\n      .unsubscribe();\n    this.startingCustomerSession = true;\n  }\n\n  hideUi(): void {\n    this.disabled = true;\n    this.asmComponentService.unload();\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-session-timer',\n  templateUrl: './asm-session-timer.component.html',\n  styleUrls: ['./asm-session-timer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private interval: any;\n  private maxStartDelayInSeconds = 60000;\n  timeLeft: number;\n\n  constructor(\n    private config: AsmConfig,\n    private asmComponentService: AsmComponentService,\n    private authService: AuthService,\n    private routingService: RoutingService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.timeLeft = this.getTimerStartDelayInSeconds();\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        clearInterval(this.interval);\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n      }\n      this.changeDetectorRef.markForCheck();\n    }, 1000);\n\n    this.resetOnNavigate();\n    this.resetOnCustomerSessionChange();\n  }\n\n  private resetOnNavigate(): void {\n    this.subscriptions.add(\n      this.routingService.isNavigating().subscribe((isNavigating) => {\n        if (isNavigating) {\n          this.resetTimer();\n        }\n      })\n    );\n  }\n\n  private resetOnCustomerSessionChange(): void {\n    this.subscriptions.add(\n      this.authService\n        .getOccUserId()\n        .pipe(distinctUntilChanged())\n        .subscribe(() => this.resetTimer())\n    );\n  }\n\n  resetTimer(): void {\n    if (this.timeLeft > 0) {\n      this.timeLeft = this.getTimerStartDelayInSeconds();\n    }\n  }\n\n  private getTimerStartDelayInSeconds(): number {\n    if (\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\n      this.maxStartDelayInSeconds\n    ) {\n      return this.maxStartDelayInSeconds;\n    } else {\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AsmService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-asm-toggle-ui',\n  templateUrl: './asm-toggle-ui.component.html',\n  styleUrls: ['./asm-toggle-ui.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmToggleUiComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  isCollapsed: boolean;\n\n  constructor(protected asmService: AsmService) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.asmService.getAsmUiState().subscribe((uiState) => {\n        this.isCollapsed = uiState.collapsed;\n      })\n    );\n  }\n\n  toggleUi(): void {\n    this.asmService.updateAsmUiState({ collapsed: !this.isCollapsed });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'cx-csagent-login-form',\n  templateUrl: './csagent-login-form.component.html',\n  styleUrls: ['./csagent-login-form.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CSAgentLoginFormComponent implements OnInit {\n  csAgentLoginForm: FormGroup;\n\n  @Input()\n  csAgentTokenLoading = false;\n\n  @Output()\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.csAgentLoginForm = this.fb.group({\n      userId: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.csAgentLoginForm.valid) {\n      this.submitEvent.emit({\n        userId: this.csAgentLoginForm.get('userId').value,\n        password: this.csAgentLoginForm.get('password').value,\n      });\n    } else {\n      this.csAgentLoginForm.markAllAsTouched();\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { User, UserService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-customer-emulation',\n  templateUrl: './customer-emulation.component.html',\n  styleUrls: ['./customer-emulation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\n  customer: User;\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  constructor(\n    protected asmComponentService: AsmComponentService,\n    protected userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.userService.get().subscribe((user) => (this.customer = user))\n    );\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\n  }\n\n  logoutCustomer() {\n    this.asmComponentService.logoutCustomer();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AsmConfig,\n  AsmService,\n  CustomerSearchPage,\n  User,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-customer-selection',\n  templateUrl: './customer-selection.component.html',\n  styleUrls: ['./customer-selection.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    '(document:click)': 'onDocumentClick($event)',\n  },\n})\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\n  customerSelectionForm: FormGroup;\n  private subscription = new Subscription();\n  searchResultsLoading$: Observable<boolean>;\n  searchResults: Observable<CustomerSearchPage>;\n  selectedCustomer: User;\n\n  @Output()\n  submitEvent = new EventEmitter<{ customerId: string }>();\n\n  @ViewChild('resultList') resultList: ElementRef;\n  @ViewChild('searchTerm') searchTerm: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private asmService: AsmService,\n    private config: AsmConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.customerSelectionForm = this.fb.group({\n      searchTerm: ['', Validators.required],\n    });\n    this.asmService.customerSearchReset();\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\n    this.searchResults = this.asmService.getCustomerSearchResults();\n\n    this.subscription.add(\n      this.customerSelectionForm.controls.searchTerm.valueChanges\n        .pipe(debounceTime(300))\n        .subscribe((searchTermValue) => {\n          this.handleSearchTerm(searchTermValue);\n        })\n    );\n  }\n\n  private handleSearchTerm(searchTermValue: string) {\n    if (\n      Boolean(this.selectedCustomer) &&\n      searchTermValue !== this.selectedCustomer.name\n    ) {\n      this.selectedCustomer = undefined;\n    }\n    if (Boolean(this.selectedCustomer)) {\n      return;\n    }\n    this.asmService.customerSearchReset();\n    if (searchTermValue.trim().length >= 3) {\n      this.asmService.customerSearch({\n        query: searchTermValue,\n        pageSize: this.config.asm.customerSearch.maxResults,\n      });\n    }\n  }\n\n  selectCustomerFromList(customer: User) {\n    this.selectedCustomer = customer;\n    this.customerSelectionForm.controls.searchTerm.setValue(\n      this.selectedCustomer.name\n    );\n    this.asmService.customerSearchReset();\n  }\n\n  onSubmit(): void {\n    if (this.customerSelectionForm.valid && Boolean(this.selectedCustomer)) {\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\n    } else {\n      this.customerSelectionForm.markAllAsTouched();\n    }\n  }\n\n  onDocumentClick(event) {\n    if (Boolean(this.resultList)) {\n      if (\n        this.resultList.nativeElement.contains(event.target) ||\n        this.searchTerm.nativeElement.contains(event.target)\n      ) {\n        return;\n      } else {\n        this.asmService.customerSearchReset();\n      }\n    }\n  }\n\n  closeResults() {\n    this.asmService.customerSearchReset();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.asmService.customerSearchReset();\n  }\n}\n","import { LayoutConfig } from '../../layout/config/layout-config';\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\n\nexport const defaultAsmLayoutConfig: LayoutConfig = {\n  launch: {\n    ASM: {\n      outlet: 'cx-storefront',\n      component: AsmMainUiComponent,\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AsmModule as AsmCoreModule,\n  I18nModule,\n  provideConfig,\n} from '@spartacus/core';\nimport { FormErrorsModule } from '../../shared/index';\nimport { AsmLoaderModule } from './asm-loader.module';\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\nimport { AsmToggleUiComponent } from './asm-toggle-ui/asm-toggle-ui.component';\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\nimport { defaultAsmLayoutConfig } from './default-asm-layout.config';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    AsmCoreModule.forRoot(),\n    AsmLoaderModule,\n    FormErrorsModule,\n  ],\n  declarations: [\n    AsmMainUiComponent,\n    CSAgentLoginFormComponent,\n    CustomerSelectionComponent,\n    AsmSessionTimerComponent,\n    FormatTimerPipe,\n    CustomerEmulationComponent,\n    AsmToggleUiComponent,\n  ],\n  providers: [provideConfig(defaultAsmLayoutConfig)],\n  entryComponents: [AsmMainUiComponent],\n})\nexport class AsmModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductScope,\n  ProductService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\n\n  /**\n   * Will emit current product or null, if there is no current product (i.e. we are not on PDP)\n   *\n   * @param scopes\n   */\n  getProduct(\n    scopes?: (ProductScope | string)[] | ProductScope | string\n  ): Observable<Product | null> {\n    return this.routingService.getRouterState().pipe(\n      map((state) => state.state.params['productCode']),\n      switchMap((productCode: string) => {\n        return productCode\n          ? this.productService.get(\n              productCode,\n              scopes || this.DEFAULT_PRODUCT_SCOPE\n            )\n          : of(null);\n      }),\n      filter((x) => x !== undefined),\n      distinctUntilChanged()\n    );\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  Cart,\n  ActiveCartService,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n  increment: boolean;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  quantity = 0;\n  modalIsOpen = false;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = new FormGroup({});\n\n  private quantityControl$: Observable<FormControl>;\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: ActiveCartService,\n    protected promotionService: PromotionService\n  ) {}\n  /**\n   * Returns an observable formControl with the quantity of the cartEntry,\n   * but also updates the entry in case of a changed value.\n   * The quantity can be set to zero in order to remove the entry.\n   */\n  getQuantityControl(): Observable<FormControl> {\n    if (!this.quantityControl$) {\n      this.quantityControl$ = this.entry$.pipe(\n        filter((e) => !!e),\n        map((entry) => this.getFormControl(entry)),\n        switchMap(() =>\n          this.form.valueChanges.pipe(\n            // tslint:disable-next-line:deprecation\n            startWith(null),\n            tap((valueChange) => {\n              if (valueChange) {\n                this.cartService.updateEntry(\n                  valueChange.entryNumber,\n                  valueChange.quantity\n                );\n                if (valueChange.quantity === 0) {\n                  this.dismissModal('Removed');\n                }\n              } else {\n                this.form.markAsPristine();\n              }\n            })\n          )\n        ),\n        map(() => <FormControl>this.form.get('quantity'))\n      );\n    }\n    return this.quantityControl$;\n  }\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  private getFormControl(entry: OrderEntry): FormControl {\n    if (!this.form.get('quantity')) {\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\n      this.form.addControl('quantity', quantity);\n\n      const entryNumber = new FormControl(entry.entryNumber);\n      this.form.addControl('entryNumber', entryNumber);\n    }\n    return <FormControl>this.form.get('quantity');\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActiveCartService, OrderEntry, Product } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  /**\n   * As long as we do not support #5026, we require product input, as we need\n   *  a reference to the product model to fetch the stock data.\n   */\n  @Input() product: Product;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock = false;\n  quantity = 1;\n  increment = false;\n  cartEntry$: Observable<OrderEntry>;\n\n  subscription: Subscription;\n\n  addToCartForm = new FormGroup({\n    quantity: new FormControl(1),\n  });\n\n  constructor(\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    private cd: ChangeDetectorRef,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.product) {\n      this.productCode = this.product.code;\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n      this.setStockInfo(this.product);\n      this.cd.markForCheck();\n    } else if (this.productCode) {\n      this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n      // force hasStock and quantity for the time being, as we do not have more info:\n      this.quantity = 1;\n      this.hasStock = true;\n      this.cd.markForCheck();\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(Boolean))\n        .subscribe((product: Product) => {\n          this.productCode = product.code;\n          this.setStockInfo(product);\n          this.cartEntry$ = this.activeCartService.getEntry(this.productCode);\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  private setStockInfo(product: Product): void {\n    this.quantity = 1;\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n    if (this.hasStock && product.stock.stockLevel) {\n      this.maxQuantity = product.stock.stockLevel;\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    const quantity = this.addToCartForm.get('quantity').value;\n    if (!this.productCode || quantity <= 0) {\n      return;\n    }\n    // check item is already present in the cart\n    // so modal will have proper header text displayed\n    this.activeCartService\n      .getEntry(this.productCode)\n      .subscribe((entry) => {\n        if (entry) {\n          this.increment = true;\n        }\n        this.openModal();\n        this.activeCartService.addEntry(this.productCode, quantity);\n        this.increment = false;\n      })\n      .unsubscribe();\n  }\n\n  private openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.entry$ = this.cartEntry$;\n    modalInstance.cart$ = this.activeCartService.getActive();\n    modalInstance.loaded$ = this.activeCartService.isStable();\n    modalInstance.quantity = this.quantity;\n    modalInstance.increment = this.increment;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Voucher, CartVoucherService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-applied-coupons',\n  templateUrl: './applied-coupons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppliedCouponsComponent {\n  @Input()\n  vouchers: Voucher[];\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isReadOnly = false;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(private cartVoucherService: CartVoucherService) {}\n\n  public get sortedVouchers(): Voucher[] {\n    this.vouchers = this.vouchers || [];\n    return this.vouchers.slice().sort((a, b) => {\n      return a.code.localeCompare(b.code);\n    });\n  }\n\n  removeVoucher(voucherId: string) {\n    this.cartVoucherService.removeVoucher(voucherId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ActiveCartService,\n  Cart,\n  CartVoucherService,\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-coupon',\n  templateUrl: './cart-coupon.component.html',\n})\nexport class CartCouponComponent implements OnInit, OnDestroy {\n  MAX_CUSTOMER_COUPON_PAGE = 100;\n  couponForm: FormGroup;\n  cartIsLoading$: Observable<boolean>;\n  cart$: Observable<Cart>;\n  cartId: string;\n  applicableCoupons: CustomerCoupon[];\n\n  private ignoreCloseEvent = false;\n\n  private subscription = new Subscription();\n\n  couponBoxIsActive = false;\n\n  constructor(\n    protected cartVoucherService: CartVoucherService,\n    protected formBuilder: FormBuilder,\n    protected customerCouponService: CustomerCouponService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.customerCouponService) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n    }\n\n    this.cart$ = combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.getActiveCartId(),\n      this.customerCouponService.getCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      ),\n    ]).pipe(\n      tap(\n        ([cart, activeCardId, customerCoupons]: [\n          Cart,\n          string,\n          CustomerCouponSearchResult\n        ]) => {\n          this.cartId = activeCardId;\n          this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\n        }\n      ),\n      map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\n    );\n\n    this.cartIsLoading$ = this.activeCartService\n      .isStable()\n      .pipe(map((loaded) => !loaded));\n\n    this.cartVoucherService.resetAddVoucherProcessingState();\n\n    this.couponForm = this.formBuilder.group({\n      couponCode: ['', [Validators.required]],\n    });\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService\n        .getAddVoucherResultSuccess()\n        .subscribe((success) => {\n          this.onSuccess(success);\n        })\n    );\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService.getAddVoucherResultError().subscribe((error) => {\n        this.onError(error);\n      })\n    );\n  }\n\n  protected onError(error: boolean) {\n    if (error) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  onSuccess(success: boolean) {\n    if (success) {\n      this.couponForm.reset();\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  protected getApplicableCustomerCoupons(\n    cart: Cart,\n    coupons: CustomerCoupon[]\n  ): void {\n    this.applicableCoupons = coupons || [];\n    if (cart.appliedVouchers) {\n      cart.appliedVouchers.forEach((appliedVoucher) => {\n        this.applicableCoupons = this.applicableCoupons.filter(\n          (coupon) => coupon.couponId !== appliedVoucher.code\n        );\n      });\n    }\n  }\n\n  applyVoucher(): void {\n    if (this.couponForm.valid) {\n      this.cartVoucherService.addVoucher(\n        this.couponForm.value.couponCode,\n        this.cartId\n      );\n    } else {\n      this.couponForm.markAllAsTouched();\n    }\n  }\n\n  applyCustomerCoupon(couponId: string): void {\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\n    this.couponBoxIsActive = false;\n  }\n\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.couponBoxIsActive = false;\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.cartVoucherService.resetAddVoucherProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\nimport { CartCouponComponent } from './cart-coupon.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\n  exports: [CartCouponComponent, AppliedCouponsComponent],\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    I18nModule,\n    IconModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartApplyCouponComponent: {\n          component: CartCouponComponent,\n        },\n      },\n    }),\n  ],\n\n  entryComponents: [CartCouponComponent],\n})\nexport class CartCouponModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  ConsignmentEntry,\n  PromotionLocation,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport {\n  CartItemComponentOptions,\n  Item,\n} from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemListComponent {\n  @Input() readonly = false;\n\n  @Input() hasHeader = true;\n\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  private _items: Item[] = [];\n  form: FormGroup;\n\n  @Input('items')\n  // TODO: currently we're getting a new array of items if the cart changes.\n  // pretty annoying as it forces a repaint on the screen,\n  // which is noticable in the UI.\n  set items(items: Item[]) {\n    this.resolveItems(items);\n    this.createForm();\n  }\n  get items(): Item[] {\n    return this._items;\n  }\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  @Input('cartIsLoading') set setLoading(value: boolean) {\n    if (!this.readonly) {\n      // Whenver the cart is loading, we disable the complete form\n      // to avoid any user interaction with the cart.\n      value\n        ? this.form.disable({ emitEvent: false })\n        : this.form.enable({ emitEvent: false });\n    }\n  }\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  /**\n   * The items we're getting form the input do not have a consistent model.\n   * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\n   */\n  private resolveItems(items: Item[]): void {\n    if (items.every((item) => item.hasOwnProperty('orderEntry'))) {\n      this._items = items.map((consignmentEntry) => {\n        const entry = Object.assign(\n          {},\n          (consignmentEntry as ConsignmentEntry).orderEntry\n        );\n        entry.quantity = consignmentEntry.quantity;\n        return entry;\n      });\n    } else {\n      this._items = items;\n    }\n  }\n\n  private createForm(): void {\n    this.form = new FormGroup({});\n    this._items.forEach((item) => {\n      const { code } = item.product;\n      const group = new FormGroup({\n        entryNumber: new FormControl((<any>item).entryNumber),\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\n      });\n      if (!item.updateable || this.readonly) {\n        group.disable();\n      }\n      this.form.addControl(code, group);\n    });\n  }\n\n  removeEntry(item: Item): void {\n    if (this.selectiveCartService && this.options.isSaveForLater) {\n      this.selectiveCartService.removeEntry(item);\n    } else {\n      this.activeCartService.removeEntry(item);\n    }\n    delete this.form.controls[item.product.code];\n  }\n\n  getControl(item: Item): Observable<FormGroup> {\n    return this.form.get(item.product.code).valueChanges.pipe(\n      // tslint:disable-next-line:deprecation\n      startWith(null),\n      map((value) => {\n        if (value && this.selectiveCartService && this.options.isSaveForLater) {\n          this.selectiveCartService.updateEntry(\n            value.entryNumber,\n            value.quantity\n          );\n        } else if (value) {\n          this.activeCartService.updateEntry(value.entryNumber, value.quantity);\n        }\n      }),\n      map(() => <FormGroup>this.form.get(item.product.code))\n    );\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { PromotionLocation, PromotionResult } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\nexport interface Item {\n  product?: any;\n  quantity?: any;\n  basePrice?: any;\n  totalPrice?: any;\n  updateable?: boolean;\n}\n\nexport interface CartItemComponentOptions {\n  isSaveForLater?: boolean;\n  optionalBtn?: any;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n})\nexport class CartItemComponent implements OnInit {\n  @Input() compact = false;\n  @Input() item: Item;\n  @Input() readonly = false;\n  @Input() quantityControl: FormControl;\n\n  @Output() view = new EventEmitter<any>();\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  // TODO: evaluate whether this is generic enough\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  appliedProductPromotions$: Observable<PromotionResult[]>;\n\n  constructor(protected promotionService: PromotionService) {}\n\n  ngOnInit() {\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\n      this.item,\n      this.promotionLocation\n    );\n  }\n\n  isProductOutOfStock(product: any) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  removeItem() {\n    this.quantityControl.setValue(0);\n    this.quantityControl.markAsDirty();\n  }\n\n  viewItem() {\n    this.view.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CartCouponModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CartSharedModule,\n    RouterModule,\n    SpinnerModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  AuthService,\n  Cart,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n  RoutingService,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  loggedIn = false;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n  promotions$: Observable<PromotionResult[]>;\n  selectiveCartEnabled: boolean;\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected promotionService: PromotionService,\n    protected selectiveCartService: SelectiveCartService,\n    protected authService: AuthService,\n    protected routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\n\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n\n    this.selectiveCartEnabled = this.selectiveCartService.isEnabled();\n\n    this.cartLoaded$ = combineLatest([\n      this.activeCartService.isStable(),\n      this.selectiveCartEnabled\n        ? this.selectiveCartService.getLoaded()\n        : of(false),\n      this.authService.isUserLoggedIn(),\n    ]).pipe(\n      tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\n      map(([cartLoaded, sflLoaded, loggedIn]) =>\n        loggedIn && this.selectiveCartEnabled\n          ? cartLoaded && sflLoaded\n          : cartLoaded\n      )\n    );\n\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  saveForLater(item: Item) {\n    if (this.loggedIn) {\n      this.activeCartService.removeEntry(item);\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\n    } else {\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartDetailsComponent } from './cart-details.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    CartCouponModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n  entryComponents: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { ActiveCartService, Cart, RoutingService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.isStable(),\n    ]).pipe(\n      filter(([_, loaded]) => loaded),\n      map(([cart]) => {\n        if (this.isEmpty(cart)) {\n          this.routingService.go({ cxRoute: 'home' });\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActiveCartService, Cart, SelectiveCartService } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      return combineLatest([\n        slots$,\n        this.activeCartService.getActive(),\n        this.selectiveCartService.isEnabled()\n          ? this.selectiveCartService.getCart()\n          : of({} as Cart),\n        this.activeCartService.getLoading(),\n      ]).pipe(\n        map(([slots, cart, selectiveCart, loadingCart]) => {\n          const exclude = (arr, args) =>\n            arr.filter((item) => args.every((arg) => arg !== item));\n          return Object.keys(cart).length === 0 && loadingCart\n            ? exclude(slots, [\n                'TopContent',\n                'CenterRightContentSlot',\n                'EmptyCartMiddleContent',\n              ])\n            : cart.totalItems\n            ? exclude(slots, ['EmptyCartMiddleContent'])\n            : selectiveCart.totalItems\n            ? exclude(slots, [\n                'EmptyCartMiddleContent',\n                'CenterRightContentSlot',\n              ])\n            : exclude(slots, ['TopContent', 'CenterRightContentSlot']);\n        })\n      );\n    }\n    return slots$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n\n  constructor(protected activeCartService: ActiveCartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartTotalsComponent } from './cart-totals.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    CartSharedModule,\n    I18nModule,\n    CartCouponModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n  entryComponents: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\n    startWith({ deliveryItemsQuantity: 0 }),\n    map((cart) => cart.deliveryItemsQuantity || 0)\n  );\n\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\n    filter((cart) => !!cart.totalPrice),\n    map((cart) => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected activeCartService: ActiveCartService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [MiniCartComponent],\n  exports: [MiniCartComponent],\n  entryComponents: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AuthService,\n  OrderEntry,\n  Product,\n  WishListService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CurrentProductService } from '../../product/current-product.service';\n\n@Component({\n  selector: 'cx-add-to-wishlist',\n  templateUrl: './add-to-wish-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToWishListComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\n    filter((product) => Boolean(product)),\n    tap((product) => this.setStockInfo(product))\n  );\n\n  wishListEntries$: Observable<\n    OrderEntry[]\n  > = this.wishListService.getWishList().pipe(\n    filter((wishlist) => Boolean(wishlist)),\n    map((wishList) => wishList.entries)\n  );\n\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  hasStock = false;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected wishListService: WishListService,\n    protected currentProductService: CurrentProductService,\n    protected authService: AuthService\n  ) {}\n\n  add(product: Product): void {\n    this.wishListService.addEntry(product.code);\n  }\n\n  remove(entry: OrderEntry): void {\n    this.wishListService.removeEntry(entry);\n  }\n\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\n    const item = entries.find((entry) => entry.product.code === product.code);\n    return item;\n  }\n\n  private setStockInfo(product: Product): void {\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { AddToWishListComponent } from './add-to-wish-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AddToWishListComponent: {\n          component: AddToWishListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToWishListComponent],\n  entryComponents: [AddToWishListComponent],\n  exports: [AddToWishListComponent],\n})\nexport class AddToWishListModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CmsParagraphComponent,\n  CmsService,\n  OrderEntry,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-save-for-later',\n  templateUrl: './save-for-later.component.html',\n})\nexport class SaveForLaterComponent implements OnInit {\n  saveForLater$: Observable<Cart>;\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  data$: Observable<CmsParagraphComponent>;\n  isCartEmpty$: Observable<boolean>;\n\n  constructor(\n    protected cmsService: CmsService,\n    protected cartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isCartEmpty$ = this.cartService\n      .getActive()\n      .pipe(map((cart) => !(cart && cart.totalItems && cart.totalItems > 0)));\n    this.saveForLater$ = this.selectiveCartService.getCart();\n    this.entries$ = this.selectiveCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n    this.cartLoaded$ = combineLatest([\n      this.cartService.isStable(),\n      this.selectiveCartService.getLoaded(),\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\n    this.data$ = this.cmsService.getComponentData(\n      'EmptyCartParagraphComponent'\n    );\n  }\n\n  moveToCart(item: Item) {\n    this.selectiveCartService.removeEntry(item);\n    this.cartService.addEntry(item.product.code, item.quantity);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  FeaturesConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { SaveForLaterComponent } from './save-for-later.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        SaveForLaterComponent: {\n          component: SaveForLaterComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SaveForLaterComponent],\n  exports: [SaveForLaterComponent],\n  entryComponents: [SaveForLaterComponent],\n})\nexport class SaveForLaterModule {}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n  PAYMENT_TYPE = 'paymentType',\n}\n\nexport const checkoutShippingSteps = [\n  CheckoutStepType.SHIPPING_ADDRESS,\n  CheckoutStepType.DELIVERY_MODE,\n];\n\nexport const checkoutPaymentSteps = [\n  CheckoutStepType.PAYMENT_DETAILS,\n  CheckoutStepType.PAYMENT_TYPE,\n  CheckoutStepType.SHIPPING_ADDRESS,\n];\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n  disabled?: boolean;\n}\n","import { CheckoutStep } from '../model/checkout-step.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\nexport enum DeliveryModePreferences {\n  FREE = 'FREE',\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CheckoutConfig {\n  checkout?: {\n    /**\n     * Set checkout steps as ordered array of pages.\n     */\n    steps?: Array<CheckoutStep>;\n    /**\n     * Allow for express checkout when default shipping method and payment method are available.\n     */\n    express?: boolean;\n    /**\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\n     */\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\n    /**\n     * Allow for guest checkout.\n     */\n    guest?: boolean;\n  };\n}\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\nimport {\n  CheckoutConfig,\n  DeliveryModePreferences,\n} from '../config/checkout-config';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\n  private express: boolean = this.checkoutConfig.checkout.express;\n  private guest: boolean = this.checkoutConfig.checkout.guest;\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\n\n  constructor(\n    private checkoutConfig: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\n    return this.getCheckoutStep(currentStepType).routeName;\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  getFirstCheckoutStepRoute(): string {\n    return this.steps[0].routeName;\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\n      : null;\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\n      : null;\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    let stepIndex: number;\n    let index = 0;\n    for (const step of this.steps) {\n      if (\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n      ) {\n        stepIndex = index;\n      } else {\n        index++;\n      }\n    }\n\n    return stepIndex >= 0 ? stepIndex : null;\n  }\n\n  protected compareDeliveryCost(\n    deliveryMode1: DeliveryMode,\n    deliveryMode2: DeliveryMode\n  ): number {\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\n      return 1;\n    } else if (\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\n    ) {\n      return -1;\n    }\n    return 0;\n  }\n\n  protected findMatchingDeliveryMode(\n    deliveryModes: DeliveryMode[],\n    index = 0\n  ): string {\n    switch (this.defaultDeliveryMode[index]) {\n      case DeliveryModePreferences.FREE:\n        if (deliveryModes[0].deliveryCost.value === 0) {\n          return deliveryModes[0].code;\n        }\n        break;\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\n        const leastExpensiveFound = deliveryModes.find(\n          (deliveryMode) => deliveryMode.deliveryCost.value !== 0\n        );\n        if (leastExpensiveFound) {\n          return leastExpensiveFound.code;\n        }\n        break;\n      case DeliveryModePreferences.MOST_EXPENSIVE:\n        return deliveryModes[deliveryModes.length - 1].code;\n      default:\n        const codeFound = deliveryModes.find(\n          (deliveryMode) =>\n            deliveryMode.code === this.defaultDeliveryMode[index]\n        );\n        if (codeFound) {\n          return codeFound.code;\n        }\n    }\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\n    return lastMode\n      ? deliveryModes[0].code\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\n  }\n\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\n    deliveryModes.sort(this.compareDeliveryCost);\n    return this.findMatchingDeliveryMode(deliveryModes);\n  }\n\n  isExpressCheckout(): boolean {\n    return this.express;\n  }\n\n  isGuestCheckout(): boolean {\n    return this.guest;\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  private getStepUrlFromStepRoute(stepRoute: string): string {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  /**\n   * will be removed, there is same function in checkout-step.service\n   */\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthRedirectService,\n  AuthService,\n  RoutingService,\n  User,\n  UserToken,\n  UserService,\n  B2BUser,\n  GlobalMessageService,\n  GlobalMessageType,\n  B2BUserGroup,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activeCartService: ActiveCartService,\n    protected userService: UserService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.authService.getUserToken(),\n      this.activeCartService.getAssignedUser(),\n      this.userService.get(),\n    ]).pipe(\n      map(([token, cartUser, user]: [UserToken, User, User | B2BUser]) => {\n        if (!token.access_token) {\n          if (this.activeCartService.isGuestCart()) {\n            return Boolean(cartUser);\n          }\n          if (this.checkoutConfigService.isGuestCheckout()) {\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\n          } else {\n            this.routingService.go({ cxRoute: 'login' });\n          }\n          this.authRedirectService.reportAuthGuard();\n        } else if ('roles' in user) {\n          const roles = (<B2BUser>user).roles;\n          if (roles.includes(B2BUserGroup.B2B_CUSTOMER_GROUP)) {\n            return true;\n          } else {\n            this.globalMessageService.add(\n              { key: 'checkout.invalid.accountType' },\n              GlobalMessageType.MSG_TYPE_WARNING\n            );\n            return false;\n          }\n        }\n        return !!token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RoutingConfigService, RoutingService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from './checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepService {\n  // initial enabled steps\n  allSteps: CheckoutStep[];\n\n  readonly steps$: BehaviorSubject<CheckoutStep[]> = new BehaviorSubject<\n    CheckoutStep[]\n  >(undefined);\n\n  readonly activeStepIndex$: Observable<\n    number\n  > = this.routingService.getRouterState().pipe(\n    switchMap((router) => {\n      const activeStepUrl = router.state.context.id;\n      return this.steps$.pipe(\n        map((steps) => {\n          let activeIndex;\n          steps.forEach((step, index) => {\n            const routeUrl = `/${\n              this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n            }`;\n            if (routeUrl === activeStepUrl) {\n              activeIndex = index;\n            }\n          });\n          return activeIndex;\n        })\n      );\n    })\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected routingConfigService: RoutingConfigService\n  ) {\n    this.resetSteps();\n  }\n\n  back(activatedRoute: ActivatedRoute): void {\n    const previousUrl = this.getPreviousCheckoutStepUrl(activatedRoute);\n    this.routingService.go(previousUrl === null ? 'cart' : previousUrl);\n  }\n\n  next(activatedRoute: ActivatedRoute): void {\n    const nextUrl = this.getNextCheckoutStepUrl(activatedRoute);\n    this.routingService.go(nextUrl);\n  }\n\n  goToStepWithIndex(stepIndex: number): void {\n    this.routingService.go(\n      this.getStepUrlFromStepRoute(this.allSteps[stepIndex].routeName)\n    );\n  }\n\n  getBackBntText(activatedRoute: ActivatedRoute): string {\n    if (this.getPreviousCheckoutStepUrl(activatedRoute) === null) {\n      return 'checkout.backToCart';\n    }\n    return 'common.back';\n  }\n\n  resetSteps(): void {\n    this.allSteps = this.checkoutConfigService.steps\n      .filter((step) => !step.disabled)\n      .map((x) => Object.assign({}, x));\n    this.steps$.next(this.allSteps);\n  }\n\n  disableEnableStep(\n    currentStepType: CheckoutStepType,\n    disabled: boolean\n  ): void {\n    const currentStep = this.allSteps.find((step) =>\n      step.type.includes(currentStepType)\n    );\n    if (currentStep && currentStep.disabled !== disabled) {\n      currentStep.disabled = disabled;\n      this.steps$.next(this.allSteps.filter((step) => !step.disabled));\n    }\n  }\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.allSteps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\n    return this.getCheckoutStep(currentStepType).routeName;\n  }\n\n  getFirstCheckoutStepRoute(): string {\n    return this.allSteps[0].routeName;\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex + i] &&\n        this.allSteps[stepIndex + i].disabled\n      ) {\n        i++;\n      }\n      const nextStep = this.allSteps[stepIndex + i];\n      if (nextStep) {\n        return this.getStepUrlFromStepRoute(nextStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex - i] &&\n        this.allSteps[stepIndex - i].disabled\n      ) {\n        i++;\n      }\n      const previousStep = this.allSteps[stepIndex - i];\n      if (previousStep) {\n        return this.getStepUrlFromStepRoute(previousStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    return this.allSteps.findIndex(\n      (step) =>\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n    );\n  }\n\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string): string {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.allSteps.findIndex((step: CheckoutStep) =>\n          step[key].includes(value)\n        )\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  OCC_USER_ID_ANONYMOUS,\n  PaymentDetails,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.cartId$ = this.activeCartService.getActive().pipe(\n      map((cartData) => {\n        if (\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\n          this.activeCartService.isGuestCart()\n        ) {\n          return cartData.guid;\n        }\n        return cartData.code;\n      }),\n      filter((cartId) => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap((cartId) => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile((loaded) => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, of, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\n\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n  UserPaymentService,\n  PaymentDetails,\n  DeliveryMode,\n  CheckoutPaymentService,\n  StateUtils,\n} from '@spartacus/core';\nimport { CheckoutConfigService } from './checkout-config.service';\nimport { CheckoutDetailsService } from './checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExpressCheckoutService {\n  private shippingAddressSet$: Observable<boolean>;\n  private deliveryModeSet$: Observable<boolean>;\n  private paymentMethodSet$: Observable<boolean>;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected checkoutConfigService: CheckoutConfigService\n  ) {\n    this.setShippingAddress();\n    this.setDeliveryMode();\n    this.setPaymentMethod();\n  }\n\n  protected setShippingAddress() {\n    this.shippingAddressSet$ = combineLatest([\n      this.userAddressService.getAddresses(),\n      this.userAddressService.getAddressesLoadedSuccess(),\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!addressesLoadedSuccess) {\n            this.userAddressService.loadAddresses();\n          }\n        }\n      ),\n      filter(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => addressesLoadedSuccess\n      ),\n      switchMap(\n        ([addresses, , setDeliveryAddressProcess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          const defaultAddress =\n            addresses.find((address) => address.defaultAddress) || addresses[0];\n          if (defaultAddress && Object.keys(defaultAddress).length) {\n            if (\n              !(\n                setDeliveryAddressProcess.success ||\n                setDeliveryAddressProcess.error ||\n                setDeliveryAddressProcess.loading\n              )\n            ) {\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\n            }\n            return of(setDeliveryAddressProcess).pipe(\n              filter(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    (setDeliveryAddressProcessState.success ||\n                      setDeliveryAddressProcessState.error) &&\n                    !setDeliveryAddressProcessState.loading\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setDeliveryAddressProcessState.success) {\n                    return this.checkoutDetailsService.getDeliveryAddress();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setPaymentMethod() {\n    this.paymentMethodSet$ = combineLatest([\n      this.userPaymentService.getPaymentMethods(),\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, paymentMethodsLoadedSuccess]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!paymentMethodsLoadedSuccess) {\n            this.userPaymentService.loadPaymentMethods();\n          }\n        }\n      ),\n      filter(\n        ([, success]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => success\n      ),\n      switchMap(\n        ([payments, , setPaymentDetailsProcess]: [\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          const defaultPayment =\n            payments.find((address) => address.defaultPayment) || payments[0];\n          if (defaultPayment && Object.keys(defaultPayment).length) {\n            if (\n              !(\n                setPaymentDetailsProcess.success ||\n                setPaymentDetailsProcess.error ||\n                setPaymentDetailsProcess.loading\n              )\n            ) {\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\n            }\n            return of(setPaymentDetailsProcess).pipe(\n              filter(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    (setPaymentDetailsProcessState.success ||\n                      setPaymentDetailsProcessState.error) &&\n                    !setPaymentDetailsProcessState.loading\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setPaymentDetailsProcessState.success) {\n                    return this.checkoutDetailsService.getPaymentDetails();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setDeliveryMode() {\n    this.deliveryModeSet$ = combineLatest([\n      this.shippingAddressSet$,\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\n    ]).pipe(\n      debounceTime(0),\n      switchMap(\n        ([\n          addressSet,\n          supportedDeliveryModes,\n          setDeliveryModeStatusFlag,\n          loadSupportedDeliveryModeStatus,\n        ]: [\n          boolean,\n          DeliveryMode[],\n          StateUtils.LoaderState<void>,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (addressSet) {\n            return of([\n              supportedDeliveryModes,\n              setDeliveryModeStatusFlag,\n              loadSupportedDeliveryModeStatus,\n            ]).pipe(\n              filter(\n                ([, , supportedDeliveryModeStatus]: [\n                  DeliveryMode[],\n                  StateUtils.LoaderState<void>,\n                  StateUtils.LoaderState<void>\n                ]) => supportedDeliveryModeStatus.success\n              ),\n              switchMap(\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\n                  DeliveryMode[],\n                  StateUtils.LoaderState<void>,\n                  StateUtils.LoaderState<void>\n                ]) => {\n                  if (Boolean(deliveryModes.length)) {\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\n                      deliveryModes\n                    );\n                    return of([\n                      preferredDeliveryMode,\n                      setDeliveryModeStatus,\n                    ]).pipe(\n                      tap(\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          if (\n                            deliveryMode &&\n                            !(\n                              deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error ||\n                              deliveryModeLoadingStatus.loading\n                            )\n                          ) {\n                            this.checkoutDeliveryService.setDeliveryMode(\n                              deliveryMode\n                            );\n                          }\n                        }\n                      ),\n                      filter(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          return (\n                            (deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error) &&\n                            !deliveryModeLoadingStatus.loading\n                          );\n                        }\n                      ),\n                      switchMap(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          if (deliveryModeLoadingStatus.success) {\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\n                          }\n                          return of(false);\n                        }\n                      ),\n                      map((data) => Boolean(data))\n                    );\n                  }\n                  return of(false);\n                }\n              )\n            );\n          } else {\n            return of(false);\n          }\n        }\n      )\n    );\n  }\n\n  protected resetCheckoutProcesses() {\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\n  }\n\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\n    this.resetCheckoutProcesses();\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\n      map(([deliveryModeSet, paymentMethodSet]) =>\n        Boolean(deliveryModeSet && paymentMethodSet)\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  private readonly firstStep$: Observable<UrlTree>;\n\n  constructor(\n    protected router: Router,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected checkoutStepService: CheckoutStepService,\n    protected expressCheckoutService: ExpressCheckoutService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.firstStep$ = of(\n      this.router.parseUrl(\n        this.routingConfigService.getRouteConfig(\n          this.checkoutStepService.getFirstCheckoutStepRoute()\n        ).paths[0]\n      )\n    );\n  }\n\n  canActivate(): Observable<boolean | UrlTree> {\n    if (\n      this.checkoutConfigService.isExpressCheckout() &&\n      !this.activeCartService.isGuestCart()\n    ) {\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\n        switchMap((expressCheckoutPossible: boolean) => {\n          return expressCheckoutPossible\n            ? of(\n                this.router.parseUrl(\n                  this.routingConfigService.getRouteConfig(\n                    this.checkoutStepService.getCheckoutStepRoute(\n                      CheckoutStepType.REVIEW_ORDER\n                    )\n                  ).paths[0]\n                )\n              )\n            : this.firstStep$;\n        })\n      );\n    }\n    return this.firstStep$;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrchestratorComponent],\n  entryComponents: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected activeCartService: ActiveCartService) {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [CommonModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  entryComponents: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileBottomComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> = this.checkoutStepService\n    .steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<\n    number\n  > = this.checkoutStepService.activeStepIndex$.pipe(\n    tap((index) => (this.activeStepIndex = index))\n  );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport {\n  CheckoutCostCenterService,\n  PaymentTypeService,\n  RoutingConfigService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepsSetGuard implements CanActivate {\n  constructor(\n    protected paymentTypeService: PaymentTypeService,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutCostCenterService: CheckoutCostCenterService,\n    protected router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    _: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    let currentIndex = -1;\n    const currentRouteUrl = '/' + route.url.join('/');\n\n    // check whether the previous step is set\n    return combineLatest([\n      this.checkoutStepService.steps$,\n      this.paymentTypeService.isAccountPayment(),\n    ]).pipe(\n      tap(([, isAccount]) => {\n        this.checkoutStepService.disableEnableStep(\n          CheckoutStepType.PAYMENT_DETAILS,\n          isAccount\n        );\n      }),\n      take(1),\n      switchMap(([steps, isAccount]) => {\n        currentIndex = steps.findIndex((step) => {\n          const stepRouteUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          return stepRouteUrl === currentRouteUrl;\n        });\n        // get current step\n        let currentStep: CheckoutStep;\n        if (currentIndex >= 0) {\n          currentStep = steps[currentIndex];\n        }\n        if (Boolean(currentStep)) {\n          return this.isStepSet(steps[currentIndex - 1], isAccount);\n        } else {\n          if (isDevMode()) {\n            console.warn(\n              `Missing step with route '${currentRouteUrl}' in checkout configuration or this step is disabled.`\n            );\n          }\n          return of(this.getUrl('checkout'));\n        }\n      })\n    );\n  }\n\n  protected isStepSet(\n    step: CheckoutStep,\n    isAccountPayment\n  ): Observable<boolean | UrlTree> {\n    if (step && !step.disabled) {\n      switch (step.type[0]) {\n        case CheckoutStepType.PAYMENT_TYPE: {\n          return this.isPaymentTypeSet(step);\n        }\n        case CheckoutStepType.SHIPPING_ADDRESS: {\n          return this.isShippingAddressAndCostCenterSet(step, isAccountPayment);\n        }\n        case CheckoutStepType.DELIVERY_MODE: {\n          return this.isDeliveryModeSet(step);\n        }\n        case CheckoutStepType.PAYMENT_DETAILS: {\n          return this.isPaymentDetailsSet(step);\n        }\n        case CheckoutStepType.REVIEW_ORDER: {\n          break;\n        }\n      }\n    }\n    return of(true);\n  }\n\n  protected isPaymentTypeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.paymentTypeService.getSelectedPaymentType().pipe(\n      map((paymentType: string) => {\n        if (Boolean(paymentType)) {\n          return true;\n        } else {\n          return this.getUrl(step.routeName);\n        }\n      })\n    );\n  }\n\n  protected isShippingAddressAndCostCenterSet(\n    step: CheckoutStep,\n    isAccountPayment: boolean\n  ): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.checkoutDetailsService.getDeliveryAddress(),\n      this.checkoutCostCenterService.getCostCenter(),\n    ]).pipe(\n      map(([deliveryAddress, costCenter]) => {\n        if (isAccountPayment) {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            Boolean(costCenter)\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        } else {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            costCenter === undefined\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        }\n      })\n    );\n  }\n\n  protected isDeliveryModeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length ? true : this.getUrl(step.routeName)\n        )\n      );\n  }\n\n  protected isPaymentDetailsSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map((paymentDetails) =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.getUrl(step.routeName)\n        )\n      );\n  }\n\n  private getUrl(routeName: string): UrlTree {\n    return this.router.parseUrl(\n      this.routingConfigService.getRouteConfig(routeName).paths[0]\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\nimport { CheckoutStepsSetGuard } from '../../../guards/checkout-steps-set.guard';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  entryComponents: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  private _steps$: BehaviorSubject<CheckoutStep[]> = this.checkoutStepService\n    .steps$;\n\n  constructor(\n    protected checkoutStepService: CheckoutStepService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  cart$: Observable<Cart>;\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<\n    number\n  > = this.checkoutStepService.activeStepIndex$.pipe(\n    tap((index) => (this.activeStepIndex = index))\n  );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n\n  ngOnInit(): void {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\nimport { CheckoutStepsSetGuard } from '../../../guards/checkout-steps-set.guard';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  entryComponents: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStep } from '../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> = this.checkoutStepService\n    .steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<\n    number\n  > = this.checkoutStepService.activeStepIndex$.pipe(\n    tap((index) => (this.activeStepIndex = index))\n  );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n\n  getTabIndex(stepIndex: number): number {\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\n  }\n\n  isActive(index: number): boolean {\n    return index === this.activeStepIndex;\n  }\n\n  isDisabled(index: number): boolean {\n    return index > this.activeStepIndex;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cxMultiLine',\n})\nexport class MultiLinePipe implements PipeTransform {\n  transform(value: string): string {\n    const lastIndex = value.lastIndexOf(' ');\n\n    if (lastIndex === -1) return value;\n\n    return (\n      value.substring(0, lastIndex) +\n      '<br />' +\n      value.substring(lastIndex, value.length).trim()\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../../guards/checkout-steps-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\nimport { MultiLinePipe } from './multiline-titles.pipe';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  declarations: [CheckoutProgressComponent, MultiLinePipe],\n  entryComponents: [CheckoutProgressComponent],\n  exports: [CheckoutProgressComponent],\n  providers: [\n    provideDefaultConfig(defaultCheckoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutProgressModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotCheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authService.getUserToken().pipe(\n      map((token) => {\n        if (token.access_token) {\n          this.routingService.go({ cxRoute: 'home' });\n        } else if (this.activeCartService.isGuestCart()) {\n          this.routingService.go({ cxRoute: 'cart' });\n          return false;\n        }\n        return !token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutStepService: CheckoutStepService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutStepService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    if (checkoutStep && checkoutStep.disabled) {\n      return of(true);\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentDetailsSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutStepService: CheckoutStepService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutStepService.getCheckoutStep(\n      CheckoutStepType.PAYMENT_DETAILS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map((paymentDetails) =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutStepService: CheckoutStepService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutStepService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    if (checkoutStep && checkoutStep.disabled) {\n      return of(true);\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CheckoutCostCenterService,\n  CostCenter,\n  PaymentTypeService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cost-center',\n  templateUrl: 'cost-center.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CostCenterComponent {\n  protected costCenterId: string;\n\n  cartCostCenter$: Observable<\n    string\n  > = this.checkoutCostCenterService.getCostCenter();\n\n  isAccountPayment$ = this.paymentTypeService.isAccountPayment();\n\n  costCenters$: Observable<\n    CostCenter[]\n  > = this.userCostCenterService.getActiveCostCenters().pipe(\n    filter((costCenters: CostCenter[]) => Boolean(costCenters)),\n    tap((costCenters: CostCenter[]) => {\n      if (!Boolean(this.costCenterId)) {\n        this.setCostCenter(costCenters[0].code);\n      }\n    })\n  );\n\n  constructor(\n    protected userCostCenterService: UserCostCenterService,\n    protected checkoutCostCenterService: CheckoutCostCenterService,\n    protected paymentTypeService: PaymentTypeService\n  ) {}\n\n  setCostCenter(selectCostCenter: string): void {\n    this.costCenterId = selectCostCenter;\n    this.checkoutCostCenterService.setCostCenter(this.costCenterId);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart';\nimport { CheckoutAuthGuard } from '../../guards';\nimport { CostCenterComponent } from './cost-center.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutCostCenterComponent: {\n          component: CostCenterComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CostCenterComponent],\n  entryComponents: [CostCenterComponent],\n})\nexport class CostCenterModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CheckoutDeliveryService, DeliveryMode } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, withLatestFrom, takeWhile } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  currentDeliveryModeId: string;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n  private allowRedirect = false;\n\n  backBtnText = this.checkoutStepService.getBackBntText(this.activatedRoute);\n\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutConfigService: CheckoutConfigService,\n    protected checkoutStepService: CheckoutStepService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\n\n    // Reload delivery modes on error\n    this.checkoutDeliveryService\n      .getLoadSupportedDeliveryModeProcess()\n      .pipe(takeWhile((state) => state?.success === false))\n      .subscribe((state) => {\n        if (state.error && !state.loading) {\n          this.checkoutDeliveryService.loadSupportedDeliveryModes();\n        }\n      });\n\n    this.deliveryModeSub = this.supportedDeliveryModes$\n      .pipe(\n        withLatestFrom(\n          this.checkoutDeliveryService\n            .getSelectedDeliveryMode()\n            .pipe(\n              map((deliveryMode: DeliveryMode) =>\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\n              )\n            )\n        )\n      )\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\n        if (!code && deliveryModes && deliveryModes.length) {\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\n            deliveryModes\n          );\n        }\n        if (\n          this.allowRedirect &&\n          !!code &&\n          code === this.currentDeliveryModeId\n        ) {\n          this.checkoutStepService.next(this.activatedRoute);\n        }\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n          if (code !== this.currentDeliveryModeId) {\n            this.checkoutDeliveryService.setDeliveryMode(code);\n          }\n        }\n        this.currentDeliveryModeId = code;\n      });\n  }\n\n  changeMode(code: string): void {\n    if (code !== this.currentDeliveryModeId) {\n      this.checkoutDeliveryService.setDeliveryMode(code);\n      this.currentDeliveryModeId = code;\n    }\n  }\n\n  next(): void {\n    this.allowRedirect = true;\n    if (this.mode.valid && this.mode.value) {\n      if (!this.currentDeliveryModeId) {\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\n      }\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\n    }\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  entryComponents: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  StateUtils,\n  UserAddressService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n  months: string[] = [];\n  years: number[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  loading$: Observable<StateUtils.LoaderState<void>>;\n  sameAsShippingAddress = true;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  showSameAsShippingAddressCheckbox$: Observable<boolean>;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  paymentForm: FormGroup = this.fb.group({\n    cardType: this.fb.group({\n      code: [null, Validators.required],\n    }),\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    expiryMonth: [null, Validators.required],\n    expiryYear: [null, Validators.required],\n    cvn: ['', Validators.required],\n    defaultPayment: [false],\n  });\n\n  billingAddressForm: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected modalService: ModalService,\n    protected userAddressService: UserAddressService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap((countries) => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap((cardTypes) => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\n\n    this.showSameAsShippingAddressCheckbox$ = combineLatest([\n      this.countries$,\n      this.shippingAddress$,\n    ]).pipe(\n      map(([countries, address]) => {\n        return (\n          address?.country &&\n          !!countries.filter(\n            (country: Country): boolean =>\n              country.isocode === address.country.isocode\n          ).length\n        );\n      }),\n      tap((shouldShowCheckbox) => {\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.next();\n        } else if (results.decision === 'REJECT') {\n          this.globalMessageService.add(\n            { key: 'addressForm.invalidAddress' },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions) => {\n        const regionControl = this.billingAddressForm.get(\n          'region.isocodeShort'\n        );\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n\n    for (let i = 0; i < 10; i++) {\n      this.years.push(year + i);\n    }\n\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push(`0${j}`);\n      } else {\n        this.months.push(j.toString());\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.paymentForm.value.defaultPayment = !this.paymentForm.value\n      .defaultPayment;\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    };\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.checkoutDeliveryService.verifyAddress(this.billingAddressForm.value);\n    }\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddressForm.get('country.isocode').setValue(country.isocode);\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  next(): void {\n    if (this.paymentForm.valid) {\n      if (this.sameAsShippingAddress) {\n        this.setPaymentDetails.emit({\n          paymentDetails: this.paymentForm.value,\n          billingAddress: null,\n        });\n      } else {\n        if (this.billingAddressForm.valid) {\n          this.setPaymentDetails.emit({\n            paymentDetails: this.paymentForm.value,\n            billingAddress: this.billingAddressForm.value,\n          });\n        } else {\n          this.billingAddressForm.markAllAsTouched();\n        }\n      }\n    } else {\n      this.paymentForm.markAllAsTouched();\n\n      if (!this.sameAsShippingAddress) {\n        this.billingAddressForm.markAllAsTouched();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { PaymentFormComponent } from './payment-form.component';\nimport { FormErrorsModule } from '../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  declarations: [PaymentFormComponent],\n  entryComponents: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\n  selectedMethod$: Observable<PaymentDetails>;\n  isGuestCheckout = false;\n  newPaymentFormManuallyOpened = false;\n\n  backBtnText = this.checkoutStepService.getBackBntText(this.activatedRoute);\n\n  protected shouldRedirect: boolean;\n  protected deliveryAddress: Address;\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  ngOnInit() {\n    this.shouldRedirect = false;\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n\n    if (!this.activeCartService.isGuestCart()) {\n      this.userPaymentService.loadPaymentMethods();\n    } else {\n      this.isGuestCheckout = true;\n    }\n\n    this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .pipe(take(1))\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n\n    this.selectedMethod$ = this.checkoutPaymentService.getPaymentDetails().pipe(\n      tap((paymentInfo) => {\n        if (paymentInfo && !!Object.keys(paymentInfo).length) {\n          if (paymentInfo['hasError']) {\n            Object.keys(paymentInfo).forEach((key) => {\n              if (key.startsWith('InvalidField')) {\n                this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\n              }\n            });\n            this.checkoutService.clearCheckoutStep(3);\n          } else if (this.shouldRedirect) {\n            this.next();\n          }\n        }\n      })\n    );\n\n    this.cards$ = combineLatest([\n      this.existingPaymentMethods$.pipe(\n        switchMap((methods) => {\n          return !methods?.length\n            ? of([])\n            : combineLatest(\n                methods.map((method) =>\n                  combineLatest([\n                    of(method),\n                    this.translation.translate('paymentCard.expires', {\n                      month: method.expiryMonth,\n                      year: method.expiryYear,\n                    }),\n                  ]).pipe(\n                    map(([payment, translation]) => ({\n                      payment,\n                      expiryTranslation: translation,\n                    }))\n                  )\n                )\n              );\n        })\n      ),\n      this.selectedMethod$,\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          paymentMethods,\n          selectedMethod,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          if (\n            paymentMethods.length &&\n            (!selectedMethod || Object.keys(selectedMethod).length === 0)\n          ) {\n            const defaultPaymentMethod = paymentMethods.find(\n              (paymentMethod) => paymentMethod.payment.defaultPayment\n            );\n            if (defaultPaymentMethod) {\n              selectedMethod = defaultPaymentMethod.payment;\n              this.checkoutPaymentService.setPaymentDetails(selectedMethod);\n            }\n          }\n          return paymentMethods.map((payment) => ({\n            content: this.createCard(\n              payment.payment,\n              {\n                textExpires: payment.expiryTranslation,\n                textUseThisPayment,\n                textDefaultPaymentMethod,\n                textSelected,\n              },\n              selectedMethod\n            ),\n            paymentMethod: payment.payment,\n          }));\n        }\n      )\n    );\n  }\n\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\n    this.checkoutPaymentService.setPaymentDetails(paymentDetails);\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n  }): void {\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress || this.deliveryAddress;\n    this.checkoutPaymentService.createPaymentDetails(details);\n    this.shouldRedirect = true;\n  }\n\n  ngOnDestroy(): void {\n    this.checkoutPaymentService.paymentProcessSuccess();\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n\n  protected sendPaymentMethodFailGlobalMessage(field: string) {\n    this.globalMessageService.add(\n      {\n        key: 'paymentMethods.invalidField',\n        params: { field },\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  protected createCard(\n    paymentDetails: PaymentDetails,\n    cardLabels: {\n      textDefaultPaymentMethod: string;\n      textExpires: string;\n      textUseThisPayment: string;\n      textSelected: string;\n    },\n    selected: PaymentDetails\n  ): Card {\n    return {\n      title: paymentDetails.defaultPayment\n        ? cardLabels.textDefaultPaymentMethod\n        : '',\n      textBold: paymentDetails.accountHolderName,\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\n      img: this.getCardIcon(paymentDetails.cardType.code),\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\n      header:\n        selected?.id === paymentDetails.id\n          ? cardLabels.textSelected\n          : undefined,\n    };\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard and others here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodComponent],\n  entryComponents: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  B2BPaymentTypeEnum,\n  PaymentType,\n  PaymentTypeService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\nimport { CheckoutStepType } from '../../model/checkout-step.model';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-payment-type',\n  templateUrl: './payment-type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentTypeComponent {\n  @ViewChild('poNumber', { static: false })\n  private _poNumberInput: ElementRef;\n\n  typeSelected: string;\n  cartPoNumber: string;\n\n  paymentTypes$: Observable<\n    PaymentType[]\n  > = this.paymentTypeService.getPaymentTypes();\n\n  typeSelected$: Observable<\n    string\n  > = this.paymentTypeService.getSelectedPaymentType().pipe(\n    filter((selected) => selected !== undefined),\n    distinctUntilChanged(),\n    tap((selected) => {\n      this.typeSelected = selected;\n      this.checkoutStepService.resetSteps();\n      this.checkoutStepService.disableEnableStep(\n        CheckoutStepType.PAYMENT_DETAILS,\n        selected === B2BPaymentTypeEnum.ACCOUNT_PAYMENT\n      );\n    })\n  );\n\n  cartPoNumber$: Observable<\n    string\n  > = this.paymentTypeService.getPoNumber().pipe(\n    filter((po) => po !== undefined),\n    tap((po) => {\n      return (this.cartPoNumber = po);\n    })\n  );\n\n  constructor(\n    protected paymentTypeService: PaymentTypeService,\n    protected checkoutStepService: CheckoutStepService,\n    protected activatedRoute: ActivatedRoute\n  ) {}\n\n  changeType(code: string): void {\n    this.paymentTypeService.setPaymentType(code);\n    this.typeSelected = code;\n  }\n\n  next(): void {\n    // set po number to cart\n    const poNumInput = this._poNumberInput.nativeElement.value;\n    if (this.typeSelected && poNumInput !== this.cartPoNumber) {\n      this.paymentTypeService.setPaymentType(this.typeSelected, poNumInput);\n    }\n\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentTypeComponent } from './payment-type.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentType: {\n          component: PaymentTypeComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentTypeComponent],\n  entryComponents: [PaymentTypeComponent],\n  exports: [PaymentTypeComponent],\n})\nexport class PaymentTypeModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CheckoutService, RoutingService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  placeOrderSubscription: Subscription;\n\n  checkoutSubmitForm: FormGroup = this.fb.group({\n    termsAndConditions: [false, Validators.requiredTrue],\n  });\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected routingService: RoutingService,\n    protected fb: FormBuilder\n  ) {}\n\n  submitForm(): void {\n    if (this.checkoutSubmitForm.valid) {\n      this.checkoutService.placeOrder();\n    } else {\n      this.checkoutSubmitForm.markAllAsTouched();\n    }\n  }\n\n  ngOnInit(): void {\n    this.placeOrderSubscription = this.checkoutService\n      .getOrderDetails()\n      .pipe(filter((order) => Object.keys(order).length !== 0))\n      .subscribe(() => {\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.placeOrderSubscription) {\n      this.placeOrderSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PlaceOrderComponent } from './place-order.component';\nimport { FormErrorsModule } from '../../../../shared/index';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  entryComponents: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  ActiveCartService,\n  Address,\n  Cart,\n  CheckoutCostCenterService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CostCenter,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  PaymentTypeService,\n  PromotionLocation,\n  PromotionResult,\n  TranslationService,\n  UserAddressService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\nimport {\n  checkoutPaymentSteps,\n  checkoutShippingSteps,\n  CheckoutStep,\n} from '../../model/checkout-step.model';\nimport { CheckoutStepType } from '../../model/index';\nimport { CheckoutStepService } from '../../services/index';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent {\n  iconTypes = ICON_TYPE;\n  checkoutStepType = CheckoutStepType;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected userAddressService: UserAddressService,\n    protected activeCartService: ActiveCartService,\n    protected translation: TranslationService,\n    protected checkoutStepService: CheckoutStepService,\n    protected promotionService: PromotionService,\n    protected paymentTypeService: PaymentTypeService,\n    protected checkoutCostCenterService: CheckoutCostCenterService,\n    protected userCostCenterService: UserCostCenterService\n  ) {}\n\n  get cart$(): Observable<Cart> {\n    return this.activeCartService.getActive();\n  }\n\n  get entries$(): Observable<OrderEntry[]> {\n    return this.activeCartService.getEntries();\n  }\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this.checkoutStepService.steps$;\n  }\n\n  get deliveryAddress$(): Observable<Address> {\n    return this.checkoutDeliveryService.getDeliveryAddress();\n  }\n\n  get deliveryMode$(): Observable<DeliveryMode> {\n    return this.checkoutDeliveryService.getSelectedDeliveryMode().pipe(\n      tap((selected: DeliveryMode) => {\n        if (selected === null) {\n          this.checkoutDeliveryService.loadSupportedDeliveryModes();\n        }\n      })\n    );\n  }\n\n  get paymentDetails$(): Observable<PaymentDetails> {\n    return this.checkoutPaymentService.getPaymentDetails();\n  }\n\n  get orderPromotions$(): Observable<PromotionResult[]> {\n    return this.promotionService.getOrderPromotions(this.promotionLocation);\n  }\n\n  get countryName$(): Observable<string> {\n    return this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address?.country?.isocode)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  get poNumber$(): Observable<string> {\n    return this.paymentTypeService.getPoNumber();\n  }\n\n  get paymentType$(): Observable<string> {\n    return this.paymentTypeService.getSelectedPaymentType();\n  }\n\n  get isAccountPayment$(): Observable<boolean> {\n    return this.paymentTypeService.isAccountPayment();\n  }\n\n  get costCenter$(): Observable<CostCenter> {\n    return this.userCostCenterService.getActiveCostCenters().pipe(\n      filter((costCenters) => Boolean(costCenters)),\n      switchMap((costCenters) => {\n        return this.checkoutCostCenterService.getCostCenter().pipe(\n          map((code) => {\n            return costCenters.find((cc) => cc.code === code);\n          })\n        );\n      })\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress?.country?.isocode;\n        }\n\n        let region = '';\n        if (\n          deliveryAddress &&\n          deliveryAddress.region &&\n          deliveryAddress.region.isocode\n        ) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getCostCenterCard(costCenter: CostCenter): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutPO.costCenter'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: costCenter?.name,\n          text: ['(' + costCenter?.unit.name + ')'],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [\n            deliveryMode.description,\n            deliveryMode.deliveryCost?.formattedValue\n              ? deliveryMode.deliveryCost?.formattedValue\n              : '',\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n      this.translation.translate('paymentForm.billingAddress'),\n    ]).pipe(\n      map(([textTitle, textExpires, billingAddress]) => {\n        const region = paymentDetails.billingAddress?.region?.isocode\n          ? paymentDetails.billingAddress?.region?.isocode + ', '\n          : '';\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n          paragraphs: [\n            {\n              title: billingAddress + ':',\n              text: [\n                paymentDetails.billingAddress?.firstName +\n                  ' ' +\n                  paymentDetails.billingAddress?.lastName,\n                paymentDetails.billingAddress?.line1,\n                paymentDetails.billingAddress?.town +\n                  ', ' +\n                  region +\n                  paymentDetails.billingAddress?.country?.isocode,\n                paymentDetails.billingAddress?.postalCode,\n              ],\n            },\n          ],\n        };\n      })\n    );\n  }\n\n  getPoNumberCard(poNumber: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutReview.poNumber'),\n      this.translation.translate('checkoutPO.noPoNumber'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => {\n        return {\n          title: textTitle,\n          textBold: poNumber ? poNumber : noneTextTitle,\n        };\n      })\n    );\n  }\n\n  getPaymentTypeCard(paymentType: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutProgress.methodOfPayment'),\n      this.translation.translate('paymentTypes.paymentType', {\n        context: paymentType,\n      }),\n    ]).pipe(\n      map(([textTitle, paymentTypeTranslation]) => {\n        return {\n          title: textTitle,\n          textBold: paymentTypeTranslation,\n        };\n      })\n    );\n  }\n\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\n    const step = this.checkoutStepService.getCheckoutStep(stepType);\n    return step && step.routeName;\n  }\n\n  shippingSteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) => checkoutShippingSteps.includes(step.type[0]));\n  }\n\n  paymentSteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) => checkoutPaymentSteps.includes(step.type[0]));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PromotionsModule } from '../promotions/promotions.module';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard and others here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  entryComponents: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CheckoutDeliveryService,\n  Country,\n  ErrorModel,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  addresses$: Observable<Address[]>;\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField = true;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  regionsSub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  addressForm: FormGroup = this.fb.group({\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n    defaultAddress: [false],\n  });\n\n  constructor(\n    protected fb: FormBuilder,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    protected modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries: Country[]) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.userService.getTitles().pipe(\n      tap((titles: Title[]) => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map((titles) => {\n        titles.sort(sortTitles);\n        const noneTitle = { code: '', name: 'Title' };\n        return [noneTitle, ...titles];\n      })\n    );\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions: Region[]) => {\n        const regionControl = this.addressForm.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.submitAddress.emit(this.addressForm.value);\n        } else if (results.decision === 'REJECT') {\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n          if (\n            results.errors.errors.some(\n              (error: ErrorModel) => error.subject === 'titleCode'\n            )\n          ) {\n            this.globalMessageService.add(\n              { key: 'addressForm.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          } else {\n            this.globalMessageService.add(\n              { key: 'addressForm.invalidAddress' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\n      this.addressForm.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n\n    this.addresses$ = this.userAddressService.getAddresses();\n  }\n\n  countrySelected(country: Country): void {\n    this.addressForm['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.addressForm['controls'].region['controls'].isocode.setValue(\n      region.isocode\n    );\n  }\n\n  toggleDefaultAddress(): void {\n    this.addressForm['controls'].defaultAddress.setValue(\n      this.addressForm.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.addressForm.valid) {\n      if (this.addressForm.get('region').value.isocode) {\n        this.regionsSub = this.regions$.pipe(take(1)).subscribe((regions) => {\n          const obj = regions.find(\n            (region) =>\n              region.isocode ===\n              this.addressForm.controls['region'].value.isocode\n          );\n          Object.assign(this.addressForm.value.region, {\n            isocodeShort: obj.isocodeShort,\n          });\n        });\n      }\n\n      if (this.addressForm.dirty) {\n        this.checkoutDeliveryService.verifyAddress(this.addressForm.value);\n      } else {\n        // address form value not changed\n        // ignore duplicate address\n        this.submitAddress.emit(undefined);\n      }\n    } else {\n      this.addressForm.markAllAsTouched();\n    }\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.addressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then((address) => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.addressForm.value.titleCode,\n                phone: this.addressForm.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.addressForm.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.checkoutDeliveryService.clearAddressVerificationResults();\n\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n\n    if (this.regionsSub) {\n      this.regionsSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport { FormErrorsModule } from '../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  entryComponents: [SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\n})\nexport class AddressFormModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ActiveCartService,\n  Address,\n  B2BAddress,\n  CheckoutCostCenterService,\n  CheckoutDeliveryService,\n  PaymentTypeService,\n  TranslationService,\n  UserAddressService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit {\n  addressFormOpened = false;\n  forceLoader = false; // this helps with smoother steps transition\n  selectedAddress: Address;\n  doneAutoSelect = false;\n  isAccountPayment = false;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService,\n    protected paymentTypeService?: PaymentTypeService,\n    protected userCostCenterService?: UserCostCenterService,\n    protected checkoutCostCenterService?: CheckoutCostCenterService\n  ) {}\n\n  get isGuestCheckout(): boolean {\n    return this.activeCartService.isGuestCart();\n  }\n\n  get backBtnText(): string {\n    return this.checkoutStepService.getBackBntText(this.activatedRoute);\n  }\n\n  get isLoading$(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  get selectedAddress$(): Observable<Address> {\n    return this.checkoutDeliveryService.getDeliveryAddress().pipe(\n      tap((address) => {\n        if (\n          address &&\n          (this.selectedAddress === undefined ||\n            this.selectedAddress.id !== address.id)\n        ) {\n          this.selectedAddress = address;\n          if (this.forceLoader) {\n            this.next();\n          }\n        }\n      })\n    );\n  }\n\n  get cards$(): Observable<CardWithAddress[]> {\n    return combineLatest([\n      this.getSupportedAddresses(),\n      this.selectedAddress$,\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      tap(([addresses, selected]) =>\n        this.selectDefaultAddress(addresses, selected)\n      ),\n      map(([addresses, selected, textDefault, textShipTo, textSelected]) =>\n        (<any>addresses).map((address) => ({\n          address,\n          card: this.getCardContent(\n            address,\n            selected,\n            textDefault,\n            textShipTo,\n            textSelected\n          ),\n        }))\n      )\n    );\n  }\n\n  getSupportedAddresses(): Observable<Address[] | B2BAddress[]> {\n    if (this.isAccountPayment) {\n      return this.checkoutCostCenterService.getCostCenter().pipe(\n        distinctUntilChanged(),\n        switchMap((selected) => {\n          this.doneAutoSelect = false;\n          return this.userCostCenterService.getCostCenterAddresses(selected);\n        })\n      );\n    } else {\n      return this.userAddressService.getAddresses();\n    }\n  }\n\n  selectDefaultAddress(addresses: Address[], selected: Address) {\n    if (\n      !this.doneAutoSelect &&\n      addresses &&\n      addresses.length &&\n      (!selected || Object.keys(selected).length === 0)\n    ) {\n      if (this.isAccountPayment) {\n        if (addresses.length === 1) {\n          this.selectAddress(addresses[0]);\n        }\n      } else {\n        selected = addresses.find((address) => address.defaultAddress);\n        if (selected) {\n          this.selectAddress(selected);\n        }\n      }\n      this.doneAutoSelect = true;\n    }\n  }\n\n  ngOnInit(): void {\n    if (\n      this.paymentTypeService &&\n      this.userCostCenterService &&\n      this.checkoutCostCenterService\n    ) {\n      this.paymentTypeService\n        .isAccountPayment()\n        .pipe(take(1))\n        .subscribe((isAccount) => (this.isAccountPayment = isAccount));\n    }\n\n    if (!this.isGuestCheckout && !this.isAccountPayment) {\n      this.userAddressService.loadAddresses();\n    }\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    };\n  }\n\n  selectAddress(address: Address): void {\n    this.checkoutDeliveryService.setDeliveryAddress(address);\n  }\n\n  addAddress(address: Address): void {\n    this.forceLoader = true;\n    this.checkoutDeliveryService.createAndSetAddress(address);\n  }\n\n  showNewAddressForm(): void {\n    this.addressFormOpened = true;\n  }\n\n  hideNewAddressForm(goPrevious: boolean = false): void {\n    this.addressFormOpened = false;\n    if (goPrevious) {\n      this.back();\n    }\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  entryComponents: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { CostCenterModule } from './components/cost-center/cost-center.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PaymentTypeModule } from './components/payment-type/payment-type.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    PaymentTypeModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n    CostCenterModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SkipLinkConfig {\n  skipLinks?: SkipLink[];\n}\n\nexport abstract class SkipLink {\n  key: string;\n  i18nKey: string;\n  target?: HTMLElement;\n  position?: SkipLinkScrollPosition;\n}\n\nexport enum SkipLinkScrollPosition {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkipLinkService {\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\n\n  constructor(\n    protected config: SkipLinkConfig,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  getSkipLinks(): Observable<SkipLink[]> {\n    return this.skipLinks$;\n  }\n\n  add(key: string, target: HTMLElement): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      const existing: SkipLink[] = this.skipLinks$.value;\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\n        target,\n        i18nKey: found.i18nKey,\n        position: found.position,\n        key,\n      });\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  remove(key: string): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      let existing: SkipLink[] = this.skipLinks$.value;\n      existing = existing.filter((skipLink) => skipLink.key !== key);\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  scrollToTarget(skipLink: SkipLink): void {\n    const target =\n      skipLink.target instanceof HTMLElement\n        ? skipLink.target\n        : (skipLink.target as Element).parentElement;\n\n    // focus first focusable element in the\n    const firstFocusable =\n      this.keyboardFocusService.findFirstFocusable(target) || target;\n\n    // we force a tabindex if not available, to ensure we can focus into the element\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\n    if (!hasTabindex) {\n      firstFocusable.setAttribute('tabindex', '-1');\n    }\n\n    firstFocusable.focus();\n\n    // drop the tmp tabindex\n    if (!hasTabindex) {\n      firstFocusable.removeAttribute('tabindex');\n    }\n  }\n\n  protected getSkipLinkIndexInArray(key: string): number {\n    let index: number = this.config.skipLinks.findIndex(\n      (skipLink) => skipLink.key === key\n    );\n\n    while (index > 0) {\n      index--;\n      const previous: SkipLink = this.config.skipLinks[index];\n      if (previous) {\n        const existing: SkipLink[] = this.skipLinks$.value;\n        const found: number = existing.findIndex(\n          (skipLink) => skipLink.key === previous.key\n        );\n        if (found > -1) {\n          return found + 1;\n        }\n      }\n    }\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SkipLink } from '../config/skip-link.config';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Component({\n  selector: 'cx-skip-link',\n  templateUrl: './skip-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkipLinkComponent {\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\n\n  constructor(private skipLinkService: SkipLinkService) {}\n\n  scrollToTarget(skipLink: SkipLink): void {\n    this.skipLinkService.scrollToTarget(skipLink);\n  }\n}\n","import { SkipLinkConfig } from './skip-link.config';\n\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\n  skipLinks: [\n    {\n      key: 'cx-header',\n      i18nKey: 'skipLink.labels.header',\n    },\n    {\n      key: 'cx-main',\n      i18nKey: 'skipLink.labels.main',\n    },\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\n  ],\n};\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Directive({\n  selector: '[cxSkipLink]',\n})\nexport class SkipLinkDirective implements OnInit, OnDestroy {\n  @Input() cxSkipLink: string;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected skipLinkService: SkipLinkService\n  ) {}\n\n  ngOnInit(): void {\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.skipLinkService.remove(this.cxSkipLink);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\nimport {\n  ConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\nimport { SkipLinkComponent } from './component/skip-link.component';\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\nimport { SkipLinkDirective } from './directive/skip-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(defaultSkipLinkConfig),\n    KeyboardFocusModule,\n  ],\n  declarations: [SkipLinkComponent, SkipLinkDirective],\n  exports: [SkipLinkDirective],\n  entryComponents: [SkipLinkComponent],\n\n  providers: [\n    provideDefaultConfig(defaultSkipLinkConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: skipLinkFactory,\n      deps: [ComponentFactoryResolver, OutletService],\n      multi: true,\n    },\n  ],\n})\nexport class SkipLinkModule {}\n\n/**\n * Adds the skip link component before the cx-storefront.\n */\nexport function skipLinkFactory(\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService\n) {\n  const isReady = () => {\n    const factory = componentFactoryResolver.resolveComponentFactory(\n      SkipLinkComponent\n    );\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\n  };\n  return isReady;\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { Direction } from './direction.model';\n\n/**\n * The direction config provides an easy way to configure \"ltr\" versus \"rtl\" direction\n * for the storefront. The direction can be configured to detect the direction by language.\n *\n * The following configuration detects rtl languages by isoCode for Arabic and Hebrew:\n *\n * ```typescript\n * direction: {\n *   detect: true,\n *   default: DirectionMode.LTR,\n *   rtlLanguages: ['ar', 'he']\n * }\n * ```\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class DirectionConfig {\n  direction?: Direction;\n}\n","import { DirectionConfig } from './direction.config';\nimport { DirectionMode } from './direction.model';\n\nexport const defaultDirectionConfig: DirectionConfig = {\n  direction: {\n    detect: true,\n    default: DirectionMode.LTR,\n    // we're not polluting the system with all defaults for ltr, but add 2 common used\n    // languages (hebrew and arabic) to easily demo directionality\n    // see https://meta.wikimedia.org/wiki/Template:List_of_language_names_ordered_by_code\n    rtlLanguages: ['he', 'ar'],\n  },\n};\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  ConfigInitializerService,\n  LanguageService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { DirectionConfig } from './config/direction.config';\nimport { Direction, DirectionMode } from './config/direction.model';\n\n/**\n * The `DirectionService` can be used to add the direction to the overall storefront or individual elements.\n * By default, the direction is added to the `html` element (i.e. `<html dir=\"ltr\">`). The API of this service\n * does however provide methods to add direction to individual elements if needed.\n *\n * The direction is configurable and allows for language driven direction configuration.\n *\n * To react to the active language, the service subscribes to the active language in the initialize method. This\n * is called from an APP_INITIALIZER method and should only happen once.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DirectionService implements OnDestroy {\n  protected config: Direction;\n  protected startsDetecting = false;\n\n  protected subscription = new Subscription();\n\n  constructor(\n    protected configInit: ConfigInitializerService,\n    protected languageService: LanguageService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Initializes the layout direction for the storefront.\n   */\n  initialize(): Promise<void> {\n    return this.configInit\n      .getStableConfig('direction')\n      .then((config: DirectionConfig) => {\n        this.config = config?.direction;\n        if (this.config?.detect) {\n          this.detect();\n        } else {\n          this.setDirection(\n            this.winRef.document.documentElement,\n            this.config?.default\n          );\n        }\n      });\n  }\n\n  /**\n   * Observes the _active_ language and set the required direction for the given language.\n   * The method is guarded to ensure that the active language is observed only once.\n   */\n  protected detect() {\n    if (this.startsDetecting) {\n      return;\n    }\n    this.subscription.add(\n      this.languageService\n        .getActive()\n        .subscribe((isoCode: string) =>\n          this.setDirection(\n            this.winRef.document.documentElement,\n            this.getDirection(isoCode)\n          )\n        )\n    );\n    this.startsDetecting = true;\n  }\n\n  /**\n   * Sets the direction attribute for the given element. If the direction is undefined, the `dir`\n   * attribute is removed.\n   */\n  setDirection(el: HTMLElement, direction: DirectionMode): void {\n    if (direction) {\n      el.setAttribute('dir', direction);\n    } else {\n      el.removeAttribute('dir');\n    }\n  }\n\n  /**\n   * Gets the `DirectionMode` for the given language isoCode. The language isoCode is compared\n   * to the configured list of languages(`direction.rtlLanguages` vs `direction.ltrLanguages`).\n   *\n   * If no language is given, or no language mapping could be found, we fallback to the default\n   * `direction.mode`.\n   */\n  getDirection(language?: string): DirectionMode {\n    if (language && this.config?.rtlLanguages?.includes(language)) {\n      return DirectionMode.RTL;\n    }\n    if (language && this.config?.ltrLanguages?.includes(language)) {\n      return DirectionMode.LTR;\n    }\n    return this.config?.default;\n  }\n\n  ngOnDestroy(): void {\n    // Cleans up the subscription, to avoid memory leaks in SSR.\n    this.subscription.unsubscribe();\n  }\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FeatureConfigService, provideDefaultConfig } from '@spartacus/core';\nimport { defaultDirectionConfig } from './config/default-direction.config';\nimport { DirectionService } from './direction.service';\n\nexport function initHtmlDirAttribute(\n  directionService: DirectionService,\n  featureConfigService: FeatureConfigService\n) {\n  const result = () => {\n    if (featureConfigService.isLevel('2.1')) {\n      return directionService.initialize();\n    }\n  };\n  return result;\n}\n\n/**\n * Provides a configuration and APP_INITIALIZER to add the correct (language drive) html direction.\n */\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: initHtmlDirAttribute,\n      deps: [DirectionService, FeatureConfigService],\n    },\n    provideDefaultConfig(defaultDirectionConfig),\n  ],\n})\nexport class DirectionModule {}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter((event) => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  exports: [HamburgerMenuComponent],\n  entryComponents: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","import { NgModule } from '@angular/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { DirectionModule } from './direction/direction.module';\nimport { LaunchDialogModule } from './launch-dialog/index';\n\n@NgModule({\n  imports: [OutletRefModule, LaunchDialogModule.forRoot(), DirectionModule],\n  exports: [OutletRefModule],\n})\nexport class LayoutModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { CmsComponentsService } from '../../services/cms-components.service';\n\n/**\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\n *\n * The Page slot host element will be supplemented with css classes so that the layout\n * can be fully controlled by customers:\n * - The page slot _position_ is added as a css class by default.\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\n */\n@Component({\n  selector: 'cx-page-slot,[cx-page-slot]',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent implements OnInit, OnDestroy {\n  /**\n   * The position represents the unique key for a page slot on a single page, but can\n   * be reused cross pages.\n   *\n   * The position is used to find the CMS components for the page slot. It is also\n   * added as an additional CSS class so that layoutt can be applied.\n   */\n  @Input() set position(value: string) {\n    this.position$.next(value);\n  }\n  get position(): string {\n    return this.position$.value;\n  }\n\n  /**\n   * Maintains css classes introduced by the host and adds additional classes.\n   */\n  @Input() @HostBinding() class: string;\n\n  /**\n   * Indicates that the page slot is the last page slot above the fold.\n   */\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\n\n  /**\n   * Indicates that the components of the page slot haven't been loaded as long\n   * as the isPending state is true.\n   */\n  @HostBinding('class.cx-pending') isPending = true;\n\n  /**\n   * Indicates that the page slot doesn't contain any components. This is no\n   * longer used in spartacus, but kept for backwards compatibility.\n   */\n  @HostBinding('class.has-components') @Input() hasComponents = false;\n\n  protected position$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  components: ContentSlotComponentData[];\n\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap((position) => this.cmsService.getContentSlot(position)),\n    distinctUntilChanged(this.isDistinct)\n  );\n\n  /** Observes the components for the given page slot. */\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\n    map((slot) => slot?.components ?? [])\n  );\n\n  protected subscription: Subscription = new Subscription();\n\n  /** Keeps track of the pending components that must be loaded for the page slot */\n  private pendingComponentCount = 0;\n\n  /** Tracks the last used position, in case the page slot is used dynamically */\n  private lastPosition: string;\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected elementRef: ElementRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\n        this.components = value?.components || [];\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  protected decorate(slot: ContentSlotData): void {\n    let cls = this.class || '';\n\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\n      cls = cls.replace(this.lastPosition, '');\n    }\n    if (this.position$.value) {\n      cls += ` ${this.position$.value}`;\n      this.lastPosition = this.position$.value;\n    }\n\n    // host bindings\n    this.pending = slot?.components?.length || 0;\n    this.hasComponents = slot?.components?.length > 0;\n    if (cls && cls !== this.class) {\n      this.class = cls;\n    }\n\n    this.addSmartEditSlotClass(slot);\n  }\n\n  /**\n   * Sets the pending count for the page slot components. Once all pending components are\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\n   */\n  protected set pending(count: number) {\n    this.pendingComponentCount = count;\n    this.isPending = this.pendingComponentCount > 0;\n  }\n\n  protected get pending(): number {\n    return this.pendingComponentCount;\n  }\n\n  /*\n   * Is triggered when a component is added to the view. This is used to\n   * update the pending count\n   */\n  isLoaded(loadState: boolean) {\n    if (loadState) {\n      this.pending--;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * The `DeferLoadingStrategy` indicates whether the component should be\n   * rendered instantly or whether it should be deferred.\n   */\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\n    const deferLoading = this.cmsComponentsService.getDeferLoadingStrategy(\n      componentType\n    );\n    return { deferLoading };\n  }\n\n  protected isDistinct(old: ContentSlotData, current: ContentSlotData) {\n    return (\n      current.components &&\n      old.components?.length === current.components.length &&\n      !old.components.find(\n        (el, index) => el.uid !== current.components[index].uid\n      )\n    );\n  }\n\n  private addSmartEditSlotClass(slot: ContentSlotData): void {\n    if (slot) {\n      this.dynamicAttributeService.addDynamicAttributes(\n        this.elementRef.nativeElement,\n        this.renderer,\n        { slotData: slot }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  providers: [],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {}\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // Prints warn messages for missing layout configs.\n  // The warnings are only printed once per config\n  // to not pollute the console log.\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged((a, b) => {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n\n  /**\n   * Returns an observable with the last page slot above-the-fold\n   * for the given pageTemplate / breakpoint.\n   *\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\n   */\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => {\n        if (!this.config.layoutSlots) {\n          // no layout config available\n          return null;\n        }\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\n        const config = this.getResponsiveSlotConfig(\n          <LayoutSlotConfig>pageTemplateConfig,\n          'pageFold',\n          breakpoint\n        );\n        return config ? config.pageFold : null;\n      })\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      const pageSlots = Object.keys(page.slots);\n      return config.slots.filter((slot) => pageSlots.includes(slot));\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter((page) => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuratoin\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!layoutSlotConfig || !breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // tslint:disable-next-line: no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n  readonly templateName$: Observable<string> = this.pageLayoutService\n    .templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap((section) => (section ? of(section) : this.templateName$)),\n    tap((name) => {\n      this.styleClass = name;\n    })\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap((section) => this.pageLayoutService.getSlots(section))\n  );\n\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\n    switchMap((templateName) =>\n      this.pageLayoutService.getPageFoldSlot(templateName)\n    ),\n    distinctUntilChanged()\n  );\n\n  private currentClass;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private pageLayoutService: PageLayoutService\n  ) {}\n\n  set styleClass(cls: string) {\n    if (this.currentClass) {\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\n    }\n    this.renderer.addClass(this.el.nativeElement, cls);\n    this.currentClass = cls;\n  }\n}\n","import { ComponentRef, Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n/**\n * Service that adds the page template as a className to the application root element. If the root\n * element is cx-storefront, the resulting DOM would look like:\n *\n * ```html\n * <cx-storefront class=\"LandingPageTemplate\">\n *  [...]\n * <cx-storefront>\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class PageTemplateStyleService implements OnDestroy {\n  /**\n   * Keeps the subscriptions for this service so that we can unsubscribe on destroy.\n   */\n  protected subscription = new Subscription();\n\n  /**\n   * Holds the current page template, so we can remove previous page templates from the element classList.\n   */\n  protected currentTemplate: string;\n\n  constructor(protected pageLayoutService: PageLayoutService) {}\n\n  initialize(ref: ComponentRef<any>): void {\n    const el: HTMLElement = ref.location.nativeElement;\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$\n        .pipe(distinctUntilChanged())\n        .subscribe((template) => this.addStyleClass(el, template))\n    );\n  }\n\n  /**\n   * Adds the page template as a style class to the given element. If any page template\n   * was added before, we clean it up.\n   */\n  protected addStyleClass(el: HTMLElement, template: string): void {\n    // clean up previous template class binding\n    if (this.currentTemplate) {\n      el.classList?.remove(this.currentTemplate);\n    }\n    if (template) {\n      this.currentTemplate = template;\n      el.classList.add(this.currentTemplate);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_BOOTSTRAP_LISTENER, ComponentRef, NgModule } from '@angular/core';\nimport { FeatureConfigService } from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageTemplateStyleService } from './page-template-style.service';\n\nexport function initPageTemplateStyle(\n  service: PageTemplateStyleService,\n  featureConfigService: FeatureConfigService\n) {\n  const result = (componentRef: ComponentRef<any>) => {\n    if (featureConfigService.isLevel('2.1')) {\n      service.initialize(componentRef);\n    }\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent],\n  exports: [PageLayoutComponent],\n\n  providers: [\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      multi: true,\n      useFactory: initPageTemplateStyle,\n      deps: [PageTemplateStyleService, FeatureConfigService],\n    },\n  ],\n})\nexport class PageLayoutModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddToHomeScreenService {\n  protected deferredEvent: any;\n\n  protected canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    protected config: PWAModuleConfig,\n    protected globalMessageService: GlobalMessageService,\n    protected winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        (event) => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit, Directive } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ServiceWorkerModule.register('/ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultPWAModuleConfig),\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { LanguageService, WindowRef } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n) {\n  const result = () => {\n    languageService.getActive().subscribe((lang) => {\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\n    });\n  };\n  return result;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService implements OnDestroy {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  private subscription: Subscription;\n\n  init() {\n    this.subscription = this.pageMetaService\n      .getMeta()\n      .pipe(filter(Boolean))\n      .subscribe((meta: PageMeta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\n  }\n\n  protected set title(title: string) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string) {\n    this.addTag({ name: 'description', content: value });\n  }\n\n  protected set image(imageUrl: string) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[]) {\n    if (value) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  protected addTag(meta: MetaDefinition) {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { SchemaBuilder } from './builders/schema.interface';\nimport { SCHEMA_BUILDER } from './builders/tokens';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StructuredDataFactory implements OnDestroy {\n  constructor(\n    private scriptBuilder: JsonLdScriptFactory,\n    @Optional()\n    @Inject(SCHEMA_BUILDER)\n    private builders: SchemaBuilder[]\n  ) {}\n\n  private subscription: Subscription;\n\n  build() {\n    this.subscription = this.collectSchemas().subscribe((schema: {}[]) => {\n      this.scriptBuilder.build(schema);\n    });\n  }\n\n  private collectSchemas(): Observable<any[]> {\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\n      return of();\n    }\n    return combineLatest(\n      this.builders.map((builder) => builder.build())\n    ).pipe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  FocusConfig,\n  KeyboardFocusService,\n} from '../a11y/keyboard-focus/index';\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  // required by esc focus\n  @HostBinding('tabindex') tabindex = '0';\n\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\n\n  private keyboardFocusConfig: FocusConfig = {\n    focusOnEscape: true,\n    focusOnDoubleEscape: true,\n  };\n\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    this.keyboardFocusService.handleEscape(\n      this.elementRef.nativeElement,\n      this.keyboardFocusConfig,\n      event\n    );\n  }\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe((val) => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: MouseEvent) {\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FeaturesConfigModule } from '@spartacus/core';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\nimport { AnonymousConsentsDialogModule } from '../../shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module';\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\nimport { StorefrontComponent } from './storefront.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageSlotModule,\n    AnonymousConsentsDialogModule,\n    FeaturesConfigModule,\n\n    SkipLinkModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class MainModule {}\n","import { Injectable, Injector } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map((guardClass) => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected translation: TranslationService,\n    protected translationChunk: TranslationChunkService\n  ) {}\n\n  loadForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  CmsComponentChildRoutesConfig,\n  CmsRoute,\n  deepMerge,\n  PageContext,\n  PageType,\n} from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsComponentsService } from './cms-components.service';\n\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\n@Injectable({ providedIn: 'root' })\nexport class CmsRoutesImplService {\n  constructor(\n    private router: Router,\n    private cmsComponentsService: CmsComponentsService\n  ) {}\n\n  private cmsRouteExists(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean {\n    if (this.cmsRouteExists(currentPageLabel)) {\n      return true;\n    }\n\n    const childRoutesConfig = this.cmsComponentsService.getChildRoutes(\n      componentTypes\n    );\n\n    if (childRoutesConfig?.children?.length) {\n      if (\n        this.updateRouting(pageContext, currentPageLabel, childRoutesConfig)\n      ) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(\n    pageContext: PageContext,\n    pageLabel: string,\n    childRoutesConfig: CmsComponentChildRoutesConfig\n  ): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageLabel.startsWith('/') &&\n      pageLabel.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageLabel.substr(1),\n        component: PageLayoutComponent,\n        children: childRoutesConfig.children,\n        data: deepMerge({}, childRoutesConfig?.parent?.data ?? {}, {\n          cxCmsRouteContext: {\n            type: pageContext.type,\n            id: pageLabel,\n          },\n        }),\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PageContext } from '@spartacus/core';\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\n\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\n// After #7070, this class should be replaced with a real implementation.\n@Injectable({\n  providedIn: 'root',\n  useExisting: CmsRoutesImplService,\n})\nexport abstract class CmsRoutesService {\n  abstract handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  Page,\n  PageContext,\n  PageType,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CmsComponentsService } from '../services/cms-components.service';\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n/**\n * Helper service for `CmsPageGuard`\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuardService {\n  constructor(\n    protected semanticPathService: SemanticPathService,\n    protected cmsService: CmsService,\n    protected cmsRoutes: CmsRoutesService,\n    protected cmsI18n: CmsI18nService,\n    protected cmsGuards: CmsGuardsService,\n    protected cmsComponentsService: CmsComponentsService\n  ) {}\n\n  /**\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\n   *\n   * Based on `cmsComponents` config for the components in the page:\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\n   * - If all components' guards emitted true, then the route can be activated\n   * - Then we trigger loading of configured i18n chunks in parallel\n   * - And we register the configured children routes of cms components\n   *\n   * @param pageContext current cms page context\n   * @param pageData cms page data\n   * @param route activated route snapshot\n   * @param state router state snapshot\n   *\n   * @returns boolean observable - whether the route can be activated\n   */\n  canActivatePage(\n    pageContext: PageContext,\n    pageData: Page,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      take(1),\n      switchMap((componentTypes) =>\n        this.cmsComponentsService.determineMappings(componentTypes)\n      ),\n      switchMap((componentTypes) =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url,\n            pageLabel\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  /**\n   * Activates the \"NOT FOUND\" cms page.\n   *\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\n   */\n  canActivateNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\n      switchMap((notFoundPage) => {\n        if (notFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap((notFoundIndex) => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n            }),\n            switchMap((notFoundIndex) =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter((index) => index === notFoundIndex)\n              )\n            ),\n            switchMap(() =>\n              this.canActivatePage(pageContext, notFoundPage, route, state)\n            )\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  ProtectedRoutesGuard,\n  RouteLoadStrategy,\n  RoutingConfigService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\nimport { CmsPageGuardService } from './cms-page-guard.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected cmsService: CmsService,\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\n    protected service: CmsPageGuardService,\n    protected routingConfig: RoutingConfigService\n  ) {}\n\n  /**\n   * Tries to load the CMS page data for the anticipated route and returns:\n   * - `true` - if it can be activated\n   * - `false` - if it cannot be activated\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\n   *\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\n   * based on their configuration (`cmsComponents` config).\n   *\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\n   */\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.protectedRoutesGuard.canActivate(route).pipe(\n      switchMap((canActivate) =>\n        canActivate\n          ? this.routingService.getNextPageContext().pipe(\n              switchMap((pageContext) =>\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\n                  first(),\n                  switchMap((pageData) =>\n                    pageData\n                      ? this.service.canActivatePage(\n                          pageContext,\n                          pageData,\n                          route,\n                          state\n                        )\n                      : this.service.canActivateNotFoundPage(\n                          pageContext,\n                          route,\n                          state\n                        )\n                  )\n                )\n              )\n            )\n          : of(false)\n      )\n    );\n  }\n\n  /**\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\n   */\n  private shouldReload(): boolean {\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\n  }\n}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector) {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: { paths: ['login'], protected: false },\n  register: { paths: ['login/register'], protected: false },\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\n  resetPassword: { paths: ['login/pw/change'], protected: false },\n  logout: { paths: ['logout'] },\n  checkoutLogin: { paths: ['checkout-login'] },\n\n  checkout: { paths: ['checkout'] },\n  checkoutPaymentType: { paths: ['checkout/payment-type'] },\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\n  orderConfirmation: { paths: ['order-confirmation'] },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  orders: {\n    paths: ['my-account/orders'],\n  },\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderGuest: {\n    paths: ['guest/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturn: {\n    paths: ['my-account/order/return/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturnConfirmation: {\n    paths: ['my-account/order/return/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancel: {\n    paths: ['my-account/order/cancel/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancelConfirmation: {\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  returnRequestDetails: {\n    paths: ['my-account/return-request/:returnCode'],\n    paramsMapping: { returnCode: 'rma' },\n  },\n  coupons: { paths: ['my-account/coupons'] },\n  couponClaim: {\n    paths: ['my-account/coupon/claim/:couponCode'],\n    paramsMapping: { couponCode: 'code' },\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function getSuffixUrlMatcher({\n  marker,\n  paramName,\n  precedingParamName,\n}: {\n  marker: string;\n  paramName: string;\n  precedingParamName?: string;\n}) {\n  precedingParamName = precedingParamName || 'param';\n  const matcher = function suffixUrlMatcher(\n    segments: UrlSegment[]\n  ): UrlMatchResult | null {\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n    if (markerIndex === -1 || isMarkerLastSegment) {\n      return null;\n    }\n\n    const paramIndex = markerIndex + 1;\n    const posParams: { [name: string]: UrlSegment } = {\n      [paramName]: segments[paramIndex],\n    };\n\n    for (let i = 0; i < markerIndex; i++) {\n      posParams[`${precedingParamName}${i}`] = segments[i];\n    }\n\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\n  };\n\n  if (isDevMode()) {\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\n  }\n\n  return matcher;\n}\n\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { Injectable } from '@angular/core';\nimport { PageMeta, PageMetaService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaBuilder } from '../schema.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\n  constructor(protected pageMetaService: PageMetaService) {}\n\n  build(): Observable<any> {\n    return this.pageMetaService\n      .getMeta()\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\n  }\n\n  protected collect(pageMeta: PageMeta): any {\n    if (!pageMeta?.breadcrumbs) {\n      return;\n    }\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@id': crumb.link,\n          name: crumb.label,\n        },\n      };\n    });\n\n    if (pageMeta.title) {\n      crumbs.push({\n        '@type': 'ListItem',\n        position: crumbs.length + 1,\n        item: {\n          '@id': pageMeta.title,\n          name: pageMeta.title,\n        },\n      });\n    }\n\n    return {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: crumbs,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product reviews, see https://schema.org/Review.\n * The data includes the aggregated product rating and the individual reviews.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\n  constructor(private reviewService: ProductReviewService) {}\n\n  build(product: Product): Observable<any> {\n    return this.reviewService.getByProductCode(product.code).pipe(\n      filter(Boolean),\n      map((reviews: Review[]) => {\n        return {\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\n          review: reviews.map((review) => this.buildReviews(review)),\n        };\n      })\n    );\n  }\n\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\n    const aggregated: any = {\n      '@type': 'AggregateRating',\n    };\n    if (product.averageRating) {\n      aggregated.ratingValue = product.averageRating;\n    }\n    if (reviews) {\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\n    }\n    return aggregated;\n  }\n\n  private buildReviews(review: Review) {\n    const reviewSchema: any = {\n      '@type': 'review',\n    };\n\n    if (review.principal && review.principal.name) {\n      reviewSchema.author = review.principal.name;\n    }\n    if (review.date) {\n      const date = new Date(review.date);\n      reviewSchema.datePublished = `${date.getFullYear()}-${\n        date.getMonth() + 1\n      }-${date.getDate()}`;\n    }\n    if (review.headline) {\n      reviewSchema.name = review.headline;\n    }\n    if (review.comment) {\n      reviewSchema.description = review.comment;\n    }\n    if (review.rating) {\n      reviewSchema.reviewRating = {\n        '@type': 'Rating',\n        ratingValue: review.rating.toString(),\n      };\n    }\n\n    return reviewSchema;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\n\n/**\n * Adds the minimal structured data for the product, see https://schema.org/product.\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\n * using the `JSONLD_PRODUCT_BUILDER` token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSchemaBuilder implements SchemaBuilder {\n  constructor(\n    private currentProduct: CurrentProductService,\n    @Optional()\n    @Inject(JSONLD_PRODUCT_BUILDER)\n    protected builders: JsonLdBuilder<Product>[]\n  ) {}\n\n  build(): Observable<any> {\n    return this.currentProduct.getProduct().pipe(\n      switchMap((product: Product) => {\n        if (product) {\n          return combineLatest(this.collect(product)).pipe(\n            map((res: {}[]) => Object.assign({}, ...res))\n          );\n        }\n        return of({});\n      })\n    );\n  }\n\n  protected collect(product: Product): Observable<any>[] {\n    if (!product || !product.code) {\n      return [];\n    }\n    const builders = this.builders\n      ? this.builders.map((builder) => builder.build(product))\n      : [];\n    return [\n      of({\n        '@context': 'http://schema.org',\n        '@type': 'Product',\n      }),\n      ...builders,\n    ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<\n    Observable<ContentSlotComponentData>[]\n  > = this.componentData$.pipe(\n    map((data) => data.banners.trim().split(' ')),\n    map((codes) => codes.map((code) => this.cmsService.getComponentData(code)))\n  );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\n  providers: [\n    provideDefaultConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n  ],\n  declarations: [BannerCarouselComponent],\n  entryComponents: [BannerCarouselComponent],\n  exports: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  entryComponents: [BannerComponent],\n  exports: [BannerComponent],\n})\nexport class BannerModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n  entryComponents: [LinkComponent],\n})\nexport class LinkModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParagraphComponent } from './paragraph.component';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n  entryComponents: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  CmsService,\n  CMSTabParagraphContainer,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, take, switchMap } from 'rxjs/operators';\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  activeTabNum = 0;\n\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\n    ComponentWrapperDirective\n  >;\n\n  tabTitleParams: Observable<any>[] = [];\n\n  subscription: Subscription;\n\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService,\n    winRef?: WindowRef,\n    // tslint:disable-next-line:unified-signatures\n    breakpointService?: BreakpointService\n  );\n  /**\n   * @deprecated since 2.1\n   */\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService,\n    winRef?: WindowRef\n  );\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    protected cmsService: CmsService,\n    protected winRef?: WindowRef,\n    protected breakpointService?: BreakpointService\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    distinctUntilChanged((x, y) => x?.components === y?.components),\n    switchMap((data) =>\n      combineLatest(\n        (data?.components ?? '').split(' ').map((component) =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map((tab) => {\n              if (!tab) {\n                return undefined;\n              }\n\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n\n              return {\n                ...tab,\n                title: `${data.uid}.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number, event?: MouseEvent): void {\n    this.breakpointService\n      ?.isDown(BREAKPOINT.sm)\n      .pipe(take(1))\n      .subscribe((res) => {\n        if (res) {\n          this.activeTabNum = this.activeTabNum === tabNum ? -1 : tabNum;\n          if (event && event?.target) {\n            const target = event.target as HTMLElement;\n            const parentNode = target.parentNode as HTMLElement;\n            this.winRef?.nativeWindow?.scrollTo(0, parentNode.offsetTop);\n          }\n        } else {\n          this.activeTabNum = tabNum;\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.activeTabNum =\n      this.winRef?.nativeWindow?.history?.state?.activeTab ?? this.activeTabNum;\n  }\n\n  ngAfterViewInit(): void {\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\n    // In this case, the title parameters are directly pulled from them.\n    // If the sub cms components data does not exist, it should should be loaded first.\n    // In this case, listen to the changes to wait for them to be created.\n    if (this.children.length > 0) {\n      this.getTitleParams(this.children);\n    } else {\n      this.subscription = this.children.changes.subscribe(\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\n          this.getTitleParams(tabComps)\n      );\n    }\n  }\n\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\n    children.forEach((comp) => {\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\n      } else {\n        this.tabTitleParams.push(null);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [TabParagraphContainerComponent],\n  entryComponents: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressBookComponentService {\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  TranslationService,\n  UserAddressService,\n  CheckoutDeliveryService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { AddressBookComponentService } from './address-book.component.service';\nimport { Card } from '../../../shared/components/card';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  cards$: Observable<Card[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n  editCard: string;\n\n  constructor(\n    public service: AddressBookComponentService,\n    protected translation: TranslationService,\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryService\n  ) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n\n  getCardContent(address: Address) {\n    return combineLatest([\n      this.translation.translate('addressCard.default'),\n      this.translation.translate('addressCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('common.edit'),\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\n    ]).pipe(\n      map(\n        ([\n          defaultText,\n          setAsDefaultText,\n          textDelete,\n          textEdit,\n          textVerifyDeleteMsg,\n        ]) => {\n          let region = '';\n\n          if (address.region && address.region.isocode) {\n            region = address.region.isocode + ', ';\n          }\n\n          const actions: { name: string; event: string }[] = [];\n          if (!address.defaultAddress) {\n            actions.push({ name: setAsDefaultText, event: 'default' });\n          }\n          actions.push({ name: textEdit, event: 'edit' });\n          actions.push({ name: textDelete, event: 'delete' });\n\n          return {\n            textBold: address.firstName + ' ' + address.lastName,\n            text: [\n              address.line1,\n              address.line2,\n              address.town + ', ' + region + address.country.isocode,\n              address.postalCode,\n              address.phone,\n            ],\n            actions: actions,\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\n            deleteMsg: textVerifyDeleteMsg,\n          };\n        }\n      )\n    );\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  deleteAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n    this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n  }\n\n  setEdit(addressId: string): void {\n    if (this.editCard !== addressId) {\n      this.editCard = addressId;\n    } else {\n      this.deleteAddress(addressId);\n    }\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent],\n  exports: [AddressBookComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          providers: [\n            {\n              provide: AddressBookComponentService,\n              useClass: AddressBookComponentService,\n              deps: [UserAddressService],\n            },\n          ],\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    UserAddressService,\n  ],\n  entryComponents: [AddressBookComponent],\n})\nexport class AddressBookModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-close-account-modal',\n  templateUrl: './close-account-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private subscription = new Subscription();\n  userToken$: Observable<UserToken>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    protected modalService: ModalService,\n    private userService: UserService,\n    private authService: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private routingService: RoutingService,\n    private translationService: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.userToken$ = this.authService.getUserToken();\n    this.userService.resetRemoveUserProcessState();\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultError()\n        .subscribe((error) => this.onError(error))\n    );\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedSuccessfully')\n        .pipe(first())\n        .subscribe((text) => {\n          this.globalMessageService.add(\n            text,\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        });\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onError(error: boolean): void {\n    if (error) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedFailure')\n        .pipe(first())\n        .subscribe((text) => {\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\n        });\n    }\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  closeAccount() {\n    this.userService.remove();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CloseAccountComponent: {\n          component: CloseAccountComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\n})\nexport class CloseAccountModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.forgotPasswordForm = this.fb.group({\n      userEmail: [\n        '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n    });\n  }\n\n  requestForgotPasswordEmail() {\n    if (this.forgotPasswordForm.valid) {\n      this.userService.requestForgotPasswordEmail(\n        this.forgotPasswordForm.value.userEmail\n      );\n      this.routingService.go({ cxRoute: 'login' });\n    } else {\n      this.forgotPasswordForm.markAllAsTouched();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ForgotPasswordComponent],\n  exports: [ForgotPasswordComponent],\n  entryComponents: [ForgotPasswordComponent],\n})\nexport class ForgotPasswordModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'cx-amend-order-actions',\n  templateUrl: './amend-order-actions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmendOrderActionsComponent {\n  @Input() orderCode: string;\n  @Input() amendOrderForm: FormGroup;\n  @Input() backRoute: string;\n  @Input() forwardRoute: string;\n\n  @HostBinding('class') styles = 'row';\n\n  constructor(protected routingService: RoutingService) {}\n\n  continue(event: Event): void {\n    if (this.amendOrderForm.valid) {\n      this.routingService.go({\n        cxRoute: this.forwardRoute,\n        params: { code: this.orderCode },\n      });\n    } else {\n      this.amendOrderForm.markAllAsTouched();\n      event.stopPropagation();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Order, OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { AmendOrderType } from './amend-order.model';\n\nfunction ValidateQuantityToCancel(control: FormControl) {\n  if (!control.value) {\n    return null;\n  }\n  const quantity = Object.values(control.value).reduce(\n    (acc: number, val: number) => acc + val,\n    0\n  );\n  return quantity > 0 ? null : { cxNoSelectedItemToCancel: true };\n}\n\n@Injectable()\nexport abstract class OrderAmendService {\n  protected amendType: AmendOrderType;\n  protected form: FormGroup;\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  /**\n   * Returns entries for the given order.\n   */\n  abstract getEntries(): Observable<OrderEntry[]>;\n\n  /**\n   * Returns entries with an amended quantity.\n   */\n  getAmendedEntries(): Observable<OrderEntry[]> {\n    return this.getForm().pipe(\n      switchMap((form) => {\n        return this.getEntries().pipe(\n          map((entries) =>\n            entries.filter(\n              (entry) => this.getFormControl(form, entry).value > 0\n            )\n          )\n        );\n      })\n    );\n  }\n\n  /**\n   * Submits the amended order.\n   */\n  abstract save(): void;\n\n  getOrder(): Observable<Order> {\n    return this.orderDetailsService.getOrderDetails();\n  }\n\n  /**\n   * returns the form with form data at runtime\n   */\n  getForm(): Observable<FormGroup> {\n    return this.getOrder().pipe(\n      tap((order) => {\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\n          this.buildForm(order);\n        }\n      }),\n      map(() => this.form)\n    );\n  }\n\n  private buildForm(order: Order): void {\n    this.form = new FormGroup({});\n    this.form.addControl('orderCode', new FormControl(order.code));\n\n    const entryGroup = new FormGroup(\n      {},\n      { validators: [ValidateQuantityToCancel] }\n    );\n    this.form.addControl('entries', entryGroup);\n\n    (order.entries || []).forEach((entry) => {\n      const key = entry.entryNumber.toString();\n      entryGroup.addControl(\n        key,\n        new FormControl(0, {\n          validators: [\n            Validators.min(0),\n            Validators.max(this.getMaxAmendQuantity(entry)),\n          ],\n        })\n      );\n    });\n  }\n\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\n  }\n\n  /**\n   * As discussed, this calculation is moved to SPA side.\n   * The calculation and validation should be in backend facade layer.\n   */\n  getAmendedPrice(entry: OrderEntry): Price {\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\n    const amendedPrice = Object.assign({}, entry.basePrice);\n    amendedPrice.value =\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\n\n    amendedPrice.formattedValue = formatCurrency(\n      amendedPrice.value,\n      // TODO: user current language\n      'en',\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\n      amendedPrice.currencyIso\n    );\n\n    return amendedPrice;\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return (\n      (this.isCancellation()\n        ? entry.cancellableQuantity\n        : entry.returnableQuantity) || entry.quantity\n    );\n  }\n\n  isCancellation() {\n    return this.amendType === AmendOrderType.CANCEL;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Component({\n  selector: 'cx-amend-order-items',\n  templateUrl: './amend-order-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrReturnItemsComponent {\n  @Input() entries: OrderEntry[];\n  @Input() isConfirmation = false;\n\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\n    const control = <FormControl>(\n      form.get('entries').get(entry.entryNumber.toString())\n    );\n    return control;\n  }\n\n  setAll(form: FormGroup): void {\n    this.entries.forEach((entry) =>\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\n    );\n  }\n\n  getItemPrice(entry: OrderEntry): Price {\n    return this.orderAmendService.getAmendedPrice(entry);\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return this.orderAmendService.getMaxAmendQuantity(entry);\n  }\n\n  isCancellation() {\n    return this.orderAmendService.isCancellation();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  ItemCounterModule,\n  MediaModule,\n} from '../../../../../shared/index';\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  declarations: [CancelOrReturnItemsComponent],\n  exports: [CancelOrReturnItemsComponent],\n  entryComponents: [CancelOrReturnItemsComponent],\n})\nexport class AmendOrderItemsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order-confirmation',\n  templateUrl: './cancel-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup) {\n    if (form.valid) {\n      this.orderAmendService.save();\n    } else {\n      form.markAllAsTouched();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  RoutingService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationService extends OrderAmendService {\n  amendType = AmendOrderType.CANCEL;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected userOrderService: UserOrderService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n  /**\n   * Return cancellable order entries.\n   */\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order?.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.userOrderService.cancelOrder(orderCode, {\n      cancellationRequestEntryInputs: inputs,\n    });\n\n    this.userOrderService\n      .getCancelOrderSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave(orderCode));\n  }\n\n  private afterSave(orderCode: string): void {\n    this.userOrderService.resetCancelOrderProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\n        params: { orderCode },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routing.go({\n      cxRoute: 'orders',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderCancellationService } from './order-cancellation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderCancellationService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancelConfirmation',\n        },\n      },\n    ]),\n    ReactiveFormsModule,\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderConfirmationComponent: {\n          component: CancelOrderConfirmationComponent,\n          guards: [AuthGuard, OrderCancellationGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderConfirmationComponent],\n  exports: [CancelOrderConfirmationComponent],\n  entryComponents: [CancelOrderConfirmationComponent],\n})\nexport class CancelOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order',\n  templateUrl: './cancel-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderComponent {\n  orderCode: string;\n\n  form$: Observable<FormGroup> = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport {\n  CmsPageGuard,\n  PageLayoutComponent,\n} from '../../../../../../cms-structure/index';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderComponent } from './cancel-order.component';\nimport { FormErrorsModule } from '../../../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancel',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderComponent: {\n          component: CancelOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderComponent],\n  exports: [CancelOrderComponent],\n  entryComponents: [CancelOrderComponent],\n})\nexport class CancelOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  OrderReturnRequestService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnService extends OrderAmendService {\n  amendType = AmendOrderType.RETURN;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.returnableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.returnRequestService.createOrderReturnRequest({\n      orderCode,\n      returnRequestEntryInputs: inputs,\n    });\n\n    this.returnRequestService\n      .getReturnRequestSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave());\n  }\n\n  private afterSave(): void {\n    this.returnRequestService\n      .getOrderReturnRequest()\n      .pipe(first((r) => !!r))\n      .subscribe((returnRequest) => {\n        const rma = returnRequest.rma;\n        this.globalMessageService.add(\n          {\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\n            params: { rma },\n          },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n        this.routing.go({\n          cxRoute: 'returnRequestDetails',\n          params: { rma },\n        });\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderReturnService } from './order-return.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderReturnService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order-confirmation',\n  templateUrl: './return-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnGuard } from '../order-return.guard';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturnConfirmation',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderConfirmationComponent: {\n          component: ReturnOrderConfirmationComponent,\n          guards: [AuthGuard, OrderReturnGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderConfirmationComponent],\n  exports: [ReturnOrderConfirmationComponent],\n  entryComponents: [ReturnOrderConfirmationComponent],\n})\nexport class ReturnOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order',\n  templateUrl: './return-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderComponent {\n  orderCode: string;\n\n  form$: Observable<FormGroup> = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderComponent } from './return-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturn',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderComponent: {\n          component: ReturnOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderComponent],\n  exports: [ReturnOrderComponent],\n  entryComponents: [ReturnOrderComponent],\n})\nexport class ReturnOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-approval-details',\n  templateUrl: './order-detail-approval-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderDetailApprovalDetailsComponent {\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\nimport { OrderDetailsService } from '../order-details.service';\nimport {\n  cancelledValues,\n  completedValues,\n} from './order-consigned-entries/order-consigned-entries.model';\n\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected promotionService: PromotionService\n  ) {}\n\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n  orderPromotions$: Observable<PromotionResult[]>;\n  others$: Observable<Consignment[]>;\n  completed$: Observable<Consignment[]>;\n  cancel$: Observable<Consignment[]>;\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\n    this.completed$ = this.getExactStatus(completedValues);\n    this.cancel$ = this.getExactStatus(cancelledValues);\n  }\n\n  private getExactStatus(\n    consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter((consignment) =>\n            consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n\n  private getOtherStatus(\n    ...consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(\n            (consignment) => !consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-consigned-entries',\n  templateUrl: './order-consigned-entries.component.html',\n})\nexport class OrderConsignedEntriesComponent {\n  @Input() consignments: Consignment[];\n  @Input() order: Order;\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach((element) => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  CostCenter,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getOrderCodeCardContent(orderCode: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.orderNumber')\n      .pipe(\n        filter(() => Boolean(orderCode)),\n        map((textTitle) => ({\n          title: textTitle,\n          text: [orderCode],\n        }))\n      );\n  }\n\n  getOrderCurrentDateCardContent(isoDate: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.placedOn')\n      .pipe(\n        map((textTitle) => {\n          const date = this.getDate(new Date(isoDate));\n\n          return {\n            title: textTitle,\n            text: [date],\n          };\n        })\n      );\n  }\n\n  getOrderStatusCardContent(status: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutOrderConfirmation.status'),\n      this.translation.translate('orderDetails.statusDisplay', {\n        context: status,\n      }),\n    ]).pipe(\n      map(([textTitle, textStatus]) => ({\n        title: textTitle,\n        text: [textStatus],\n      }))\n    );\n  }\n\n  getPurchaseOrderNumber(poNumber: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutReview.poNumber'),\n      this.translation.translate('checkoutPO.noPoNumber'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => ({\n        title: textTitle,\n        text: [poNumber ? poNumber : noneTextTitle],\n      }))\n    );\n  }\n\n  getMethodOfPaymentCardContent(\n    hasPaymentInfo: PaymentDetails\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutProgress.methodOfPayment'),\n      this.translation.translate('paymentTypes.paymentType_ACCOUNT'),\n      this.translation.translate('paymentTypes.paymentType_CARD'),\n    ]).pipe(\n      map(([textTitle, textAccount, textCard]) => ({\n        title: textTitle,\n        text: [Boolean(hasPaymentInfo) ? textCard : textAccount],\n      }))\n    );\n  }\n\n  getCostCenterCardContent(costCenter: CostCenter): Observable<Card> {\n    return this.translation.translate('checkoutPO.costCenter').pipe(\n      filter(() => Boolean(costCenter)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: costCenter?.name,\n        text: ['(' + costCenter?.unit?.name + ')'],\n      }))\n    );\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      filter(() => Boolean(deliveryAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [deliveryAddress.formattedAddress, deliveryAddress.country.name],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      filter(() => Boolean(deliveryMode)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [\n          deliveryMode.description,\n          deliveryMode.deliveryCost?.formattedValue\n            ? deliveryMode.deliveryCost?.formattedValue\n            : '',\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: Boolean(payment) ? payment.expiryMonth : '',\n        year: Boolean(payment) ? payment.expiryYear : '',\n      }),\n    ]).pipe(\n      filter(() => Boolean(payment)),\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('paymentForm.billingAddress').pipe(\n      filter(() => Boolean(billingAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [billingAddress.formattedAddress, billingAddress.country.name],\n      }))\n    );\n  }\n\n  private getDate(givenDate: Date): string {\n    const date = givenDate.toDateString().split(' ');\n\n    const month = date[1];\n    const day = date[2];\n    const year = date[3];\n\n    return month + ' ' + day + ' ' + year;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\nimport { OrderDetailApprovalDetailsComponent } from './order-detail-approval-details/order-detail-approval-details.component';\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\n\nconst moduleComponents = [\n  OrderDetailActionsComponent,\n  OrderDetailHeadlineComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n  OrderDetailApprovalDetailsComponent,\n  TrackingEventsComponent,\n  ConsignmentTrackingComponent,\n  OrderConsignedEntriesComponent,\n];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    PromotionsModule,\n    UrlModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\n      },\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        AccountOrderDetailsActionsComponent: {\n          component: OrderDetailActionsComponent,\n        },\n        AccountOrderDetailsHeadlineComponent: {\n          component: OrderDetailHeadlineComponent,\n        },\n        AccountOrderDetailsApprovalDetailsComponent: {\n          component: OrderDetailApprovalDetailsComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n      features: {\n        consignmentTracking: '1.2',\n      },\n    }),\n    OrderDetailsService,\n  ],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderHistoryComponent implements OnDestroy {\n  constructor(\n    private routing: RoutingService,\n    private userOrderService: UserOrderService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  orders$: Observable<\n    OrderHistoryList\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\n    tap((orders: OrderHistoryList) => {\n      if (orders.pagination) {\n        this.sortType = orders.pagination.sort;\n      }\n    })\n  );\n\n  isLoaded$: Observable<\n    boolean\n  > = this.userOrderService.getOrderHistoryListLoaded();\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\n    map((order) => order.pagination.totalResults),\n    filter((totalResults) => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { OrderHistoryComponent } from './order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orders' },\n      },\n    ]),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  entryComponents: [OrderHistoryComponent],\n})\nexport class OrderHistoryModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-overview',\n  templateUrl: './return-request-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  rma: string;\n  subscription: Subscription;\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService\n    .getReturnRequest()\n    .pipe(tap((returnRequest) => (this.rma = returnRequest.rma)));\n\n  isCancelling$ = this.returnRequestService.isCancelling$;\n\n  ngOnInit(): void {\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\n      (success) => {\n        if (success) {\n          this.returnRequestService.cancelSuccess(this.rma);\n        }\n      }\n    );\n  }\n\n  cancelReturn(returnRequestCode: string): void {\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\n  }\n\n  back(): void {\n    this.returnRequestService.backToList();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { MediaModule } from '../../../../shared/index';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\n\nconst components = [\n  ReturnRequestOverviewComponent,\n  ReturnRequestItemsComponent,\n  ReturnRequestTotalsComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'returnRequestDetails' },\n      },\n    ]),\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    MediaModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnRequestOverviewComponent: {\n          component: ReturnRequestOverviewComponent,\n        },\n        ReturnRequestItemsComponent: {\n          component: ReturnRequestItemsComponent,\n        },\n        ReturnRequestTotalsComponent: {\n          component: ReturnRequestTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [...components],\n  exports: [...components],\n  entryComponents: [...components],\n})\nexport class ReturnRequestDetailModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  ReturnRequestList,\n  OrderReturnRequestService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { tap, map, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-return-request-list',\n  templateUrl: './order-return-request-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderReturnRequestListComponent implements OnDestroy {\n  constructor(\n    private returnRequestService: OrderReturnRequestService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  returnRequests$: Observable<\n    ReturnRequestList\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\n    tap((requestList: ReturnRequestList) => {\n      if (requestList.pagination) {\n        this.sortType = requestList.pagination.sort;\n      }\n    })\n  );\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\n    map((returnRequests) => returnRequests.pagination.totalResults),\n    filter((totalResults) => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.returnRequestService.clearOrderReturnRequestList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReturnRequests(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReturnRequests(event);\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.rma'),\n    ]).pipe(\n      map(([textByDate, textByRma]) => {\n        return {\n          byDate: textByDate,\n          byRMA: textByRma,\n        };\n      })\n    );\n  }\n\n  private fetchReturnRequests(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.returnRequestService.loadOrderReturnRequestList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderReturnRequestListComponent: {\n          component: OrderReturnRequestListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [OrderReturnRequestListComponent],\n  exports: [OrderReturnRequestListComponent],\n  entryComponents: [OrderReturnRequestListComponent],\n})\nexport class ReturnRequestListModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  iconTypes = ICON_TYPE;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap((paymentDetails) => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n    cardType,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n            img: this.getCardIcon(cardType.code),\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n\n  getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n  entryComponents: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n})\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\n  token: string;\n  subscription = new Subscription();\n\n  resetPasswordForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      repassword: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'repassword'\n      ),\n    }\n  );\n\n  constructor(\n    private fb: FormBuilder,\n    private routingService: RoutingService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.routingService\n        .getRouterState()\n        .subscribe((state) => (this.token = state.state.queryParams['token']))\n    );\n\n    this.subscription.add(\n      this.userService.isPasswordReset().subscribe((reset) => {\n        if (reset) {\n          this.routingService.go({ cxRoute: 'login' });\n        }\n      })\n    );\n  }\n\n  resetPassword() {\n    if (this.resetPasswordForm.valid) {\n      const password = this.resetPasswordForm.get('password').value;\n      this.userService.resetPassword(this.token, password);\n    } else {\n      this.resetPasswordForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ResetPasswordComponent: {\n          component: ResetPasswordFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ResetPasswordFormComponent],\n  exports: [ResetPasswordFormComponent],\n  entryComponents: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-update-email-form',\n  templateUrl: './update-email-form.component.html',\n})\nexport class UpdateEmailFormComponent {\n  @Output()\n  saveEmail = new EventEmitter<{\n    newUid: string;\n    password: string;\n  }>();\n\n  @Output()\n  cancelEmail = new EventEmitter<void>();\n\n  updateEmailForm: FormGroup = this.fb.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      confirmEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch('email', 'confirmEmail'),\n    }\n  );\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit(): void {\n    if (this.updateEmailForm.valid) {\n      const newUid = this.updateEmailForm.get('confirmEmail').value;\n      const password = this.updateEmailForm.get('password').value;\n\n      this.saveEmail.emit({ newUid, password });\n    } else {\n      this.updateEmailForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelEmail.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-email',\n  templateUrl: './update-email.component.html',\n})\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\n  constructor(\n    private routingService: RoutingService,\n    private globalMessageService: GlobalMessageService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  private subscription = new Subscription();\n  private newUid: string;\n  isLoading$: Observable<boolean>;\n\n  ngOnInit() {\n    this.userService.resetUpdateEmailResultState();\n    this.subscription.add(\n      this.userService\n        .getUpdateEmailResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\n    this.newUid = newUid;\n    this.userService.updateEmail(password, newUid);\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        {\n          key: 'updateEmailForm.emailUpdateSuccess',\n          params: { newUid: this.newUid },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.authService.logout();\n      this.routingService.go({ cxRoute: 'login' }, null, {\n        state: {\n          newUid: this.newUid,\n        },\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetUpdateEmailResultState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\nimport { UpdateEmailComponent } from './update-email.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          component: UpdateEmailComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\n  entryComponents: [UpdateEmailComponent],\n})\nexport class UpdateEmailModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-update-password-form',\n  templateUrl: './update-password-form.component.html',\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n  updatePasswordForm: FormGroup;\n\n  @Output()\n  submitted = new EventEmitter<{ oldPassword: string; newPassword: string }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.updatePasswordForm = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, CustomFormValidators.passwordValidator],\n        ],\n        newPasswordConfirm: ['', [Validators.required]],\n      },\n      {\n        validators: CustomFormValidators.passwordsMustMatch(\n          'newPassword',\n          'newPasswordConfirm'\n        ),\n      }\n    );\n  }\n\n  onSubmit(): void {\n    if (this.updatePasswordForm.valid) {\n      this.submitted.emit({\n        oldPassword: this.updatePasswordForm.value.oldPassword,\n        newPassword: this.updatePasswordForm.value.newPassword,\n      });\n    } else {\n      this.updatePasswordForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-password',\n  templateUrl: './update-password.component.html',\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.resetUpdatePasswordProcessState();\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\n    this.subscription.add(\n      this.userService\n        .getUpdatePasswordResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({\n    oldPassword,\n    newPassword,\n  }: {\n    oldPassword: string;\n    newPassword: string;\n  }): void {\n    this.userService.updatePassword(oldPassword, newPassword);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    this.userService.resetUpdatePasswordProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          component: UpdatePasswordComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  entryComponents: [UpdatePasswordComponent],\n})\nexport class UpdatePasswordModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Title, User } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n})\nexport class UpdateProfileFormComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Input()\n  titles: Title[];\n\n  @Output()\n  submitted = new EventEmitter<{ userUpdates: User }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  updateProfileForm: FormGroup = this.fb.group({\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    if (this.user) {\n      this.updateProfileForm.patchValue(this.user);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.updateProfileForm.valid) {\n      this.submitted.emit({\n        userUpdates: { ...this.updateProfileForm.value },\n      });\n    } else {\n      this.updateProfileForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-update-profile',\n  templateUrl: './update-profile.component.html',\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  titles$: Observable<Title[]>;\n  user$: Observable<User>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    // reset the previous form processing state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n\n    this.user$ = this.userService.get();\n    this.titles$ = this.userService.getTitles().pipe(\n      tap((titles) => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\n\n    this.subscription.add(\n      this.userService\n        .getUpdatePersonalDetailsResultSuccess()\n        .subscribe((success) => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updateProfileForm.profileUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\n    this.userService.updatePersonalDetails(userUpdates);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    // clean up the state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\nimport { UpdateProfileComponent } from './update-profile.component';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          component: UpdateProfileComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\n  entryComponents: [UpdateProfileComponent],\n})\nexport class UpdateProfileModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CustomerCoupon,\n  RoutingService,\n  TranslationService,\n} from '@spartacus/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyCouponsComponentService {\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  protected readonly RELEVANCE = ':relevance';\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected translation: TranslationService\n  ) {}\n\n  launchSearchPage(coupon: CustomerCoupon): void {\n    this.routingService.go(\n      {\n        cxRoute: 'search',\n        params: { query: this.buildSearchParam(coupon) },\n      },\n      { couponcode: coupon.couponId }\n    );\n  }\n\n  private buildSearchParam(coupon: CustomerCoupon): string {\n    return coupon.allProductsApplicable\n      ? this.RELEVANCE\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\n  }\n\n  getSortLabels(): Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('myCoupons.startDateAsc'),\n      this.translation.translate('myCoupons.startDateDesc'),\n      this.translation.translate('myCoupons.endDateAsc'),\n      this.translation.translate('myCoupons.endDateDesc'),\n    ]).pipe(\n      map(\n        ([\n          textByStartDateAsc,\n          textByStartDateDesc,\n          textByEndDateAsc,\n          textByEndDateDesc,\n        ]) => {\n          return {\n            byStartDateAsc: textByStartDateAsc,\n            byStartDateDesc: textByStartDateDesc,\n            byEndDateAsc: textByEndDateAsc,\n            byEndDateDesc: textByEndDateDesc,\n          };\n        }\n      )\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n  PaginationModel,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { MyCouponsComponentService } from './my-coupons.component.service';\n\n@Component({\n  selector: 'cx-my-coupons',\n  templateUrl: './my-coupons.component.html',\n})\nexport class MyCouponsComponent implements OnInit, OnDestroy {\n  couponResult$: Observable<CustomerCouponSearchResult>;\n  couponsLoading$: Observable<boolean>;\n  couponSubscriptionLoading$: Observable<boolean>;\n\n  iconTypes = ICON_TYPE;\n\n  private subscriptions = new Subscription();\n\n  private PAGE_SIZE = 10;\n  private sortMapping = {\n    byStartDateAsc: 'startDate:asc',\n    byStartDateDesc: 'startDate:desc',\n    byEndDateAsc: 'endDate:asc',\n    byEndDateDesc: 'endDate:desc',\n  };\n  sort = 'byStartDateAsc';\n\n  sortOptions = [\n    {\n      code: 'byStartDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byStartDateDesc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateDesc',\n      selected: false,\n    },\n  ];\n\n  pagination: PaginationModel;\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.couponResult$ = this.couponService\n      .getCustomerCoupons(this.PAGE_SIZE)\n      .pipe(\n        tap(\n          (coupons) =>\n            (this.pagination = {\n              currentPage: coupons.pagination.page,\n              pageSize: coupons.pagination.count,\n              totalPages: coupons.pagination.totalPages,\n              totalResults: coupons.pagination.totalCount,\n              sort: this.sort,\n            })\n        )\n      );\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\n    this.couponSubscriptionLoading$ = combineLatest([\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\n    ]).pipe(\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\n    );\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\n\n    this.subscriptions\n      .add(\n        this.couponService\n          .getSubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      )\n      .add(\n        this.couponService\n          .getUnsubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      );\n  }\n\n  private subscriptionFail(error: boolean) {\n    if (error) {\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    }\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      this.pagination.currentPage,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  notificationChange({\n    couponId,\n    notification,\n  }: {\n    couponId: string;\n    notification: boolean;\n  }): void {\n    if (notification) {\n      this.couponService.subscribeCustomerCoupon(couponId);\n    } else {\n      this.couponService.unsubscribeCustomerCoupon(couponId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { CustomerCoupon } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-coupon-dialog',\n  templateUrl: './coupon-dialog.component.html',\n})\nexport class CouponDialogComponent {\n  iconTypes = ICON_TYPE;\n  coupon: CustomerCoupon;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  constructor(protected modalService: ModalService) {}\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  RoutingService,\n  CustomerCouponService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './coupon-claim.component.html',\n  selector: 'cx-coupon-claim',\n})\nexport class CouponClaimComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected routingService: RoutingService,\n    protected messageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService\n      .getRouterState()\n      .subscribe((k) => {\n        const couponCode = k.state.params.couponCode;\n        if (couponCode) {\n          this.couponService.claimCustomerCoupon(couponCode);\n          this.subscription = this.couponService\n            .getClaimCustomerCouponResultSuccess()\n            .subscribe((success) => {\n              if (success) {\n                this.messageService.add(\n                  { key: 'myCoupons.claimCustomerCoupon' },\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\n                );\n              }\n              this.routingService.go({ cxRoute: 'coupons' });\n            });\n        } else {\n          this.routingService.go({ cxRoute: 'notFound' });\n        }\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyCouponsComponent } from './my-coupons.component';\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\n\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { IconModule } from '../../misc/icon/icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    IconModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'couponClaim' },\n      },\n    ]),\n  ],\n  declarations: [\n    MyCouponsComponent,\n    CouponCardComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyCouponsComponent: {\n          component: MyCouponsComponent,\n          guards: [AuthGuard],\n        },\n        CouponClaimComponent: {\n          component: CouponClaimComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyCouponsComponent, CouponClaimComponent],\n  entryComponents: [\n    MyCouponsComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n})\nexport class MyCouponsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  NotificationPreference,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-notification-preference',\n  templateUrl: './notification-preference.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPreferenceComponent implements OnInit {\n  preferences$: Observable<NotificationPreference[]>;\n  isLoading$: Observable<boolean>;\n\n  protected preferences: NotificationPreference[] = [];\n\n  constructor(\n    private notificationPreferenceService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.notificationPreferenceService.resetNotificationPreferences();\n    this.preferences$ = this.notificationPreferenceService\n      .getPreferences()\n      .pipe(tap((preferences) => (this.preferences = preferences)));\n    this.notificationPreferenceService.loadPreferences();\n\n    this.isLoading$ = combineLatest([\n      this.notificationPreferenceService.getPreferencesLoading(),\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\n    ]).pipe(\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\n    );\n  }\n\n  updatePreference(preference: NotificationPreference) {\n    const updatedPreferences = [];\n    this.preferences.forEach((p) => {\n      if (p.channel === preference.channel) {\n        updatedPreferences.push({\n          ...p,\n          enabled: !p.enabled,\n        });\n      } else {\n        updatedPreferences.push(p);\n      }\n    });\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { NotificationPreferenceComponent } from './notification-preference.component';\n\n@NgModule({\n  declarations: [NotificationPreferenceComponent],\n  imports: [CommonModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NotificationPreferenceComponent: {\n          component: NotificationPreferenceComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [NotificationPreferenceComponent],\n  entryComponents: [NotificationPreferenceComponent],\n})\nexport class NotificationPreferenceModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  PaginationModel,\n  Product,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n  ProductScope,\n  ProductService,\n  TranslationService,\n  UserInterestsService,\n} from '@spartacus/core';\nimport { map, tap } from 'rxjs/operators';\n\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\n  results?: (ProductInterestEntryRelation & {\n    product$?: Observable<Product>;\n  })[];\n}\n\n@Component({\n  selector: 'cx-my-interests',\n  templateUrl: './my-interests.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyInterestsComponent implements OnInit, OnDestroy {\n  private DEFAULT_PAGE_SIZE = 10;\n  private sortMapping = {\n    byNameAsc: 'name:asc',\n    byNameDesc: 'name:desc',\n  };\n\n  sort = 'byNameAsc';\n  sortOptions = [\n    {\n      code: 'byNameAsc',\n      selected: false,\n    },\n    {\n      code: 'byNameDesc',\n      selected: false,\n    },\n  ];\n  pagination: PaginationModel;\n\n  interests$: Observable<ProductInterestSearchResultUI>;\n  isRemoveDisabled$: Observable<boolean>;\n  getInterestsloading$: Observable<boolean>;\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\n\n  constructor(\n    private productInterestService: UserInterestsService,\n    private translationService: TranslationService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.interests$ = this.productInterestService\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\n      .pipe(\n        tap(\n          (interests) =>\n            (this.pagination = {\n              currentPage: interests.pagination.page,\n              pageSize: interests.pagination.count,\n              totalPages: interests.pagination.totalPages,\n              totalResults: interests.pagination.totalCount,\n              sort: 'byNameAsc',\n            })\n        ),\n        map((interest) => ({\n          ...interest,\n          results: interest.results\n            ? interest.results.map((result) => ({\n                ...result,\n                product$: this.getProduct(result),\n              }))\n            : interest.results,\n        }))\n      );\n\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\n    this.isRemoveDisabled$ = combineLatest([\n      this.getInterestsloading$,\n      this.productInterestService.getRemoveProdutInterestLoading(),\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\n\n    this.sortLabels = this.getSortLabels();\n  }\n\n  private getSortLabels(): Observable<{\n    byNameAsc: string;\n    byNameDesc: string;\n  }> {\n    return combineLatest([\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\n    ]).pipe(\n      map(([asc, desc]) => {\n        return {\n          byNameAsc: asc,\n          byNameDesc: desc,\n        };\n      })\n    );\n  }\n\n  private getProduct(\n    interest: ProductInterestEntryRelation\n  ): Observable<Product> {\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\n  }\n\n  removeInterest(\n    relation: ProductInterestEntryRelation & {\n      product$?: Observable<Product>;\n    }\n  ): void {\n    this.productInterestService.removeProdutInterest({\n      product: relation.product,\n      productInterestEntry: relation.productInterestEntry,\n    });\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      0,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.productInterestService.clearProductInterests();\n    this.productInterestService.resetRemoveInterestState();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { MyInterestsComponent } from './my-interests.component';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\n\n@NgModule({\n  declarations: [MyInterestsComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    RouterModule,\n    ListNavigationModule,\n    I18nModule,\n    UrlModule,\n    MediaModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyInterestsComponent: {\n          component: MyInterestsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyInterestsComponent],\n  entryComponents: [MyInterestsComponent],\n})\nexport class MyInterestsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMeta,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent implements OnInit {\n  title$: Observable<string>;\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n    this.setCrumbs();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(Boolean),\n      map((meta: PageMeta) => meta.heading || meta.title)\n    );\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  CmsPageTitleModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, CmsPageTitleModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BreadcrumbComponent],\n  exports: [BreadcrumbComponent],\n  entryComponents: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return data\n          ? {\n              title: data.name,\n              children: [nav],\n            }\n          : undefined;\n      })\n    );\n  }\n\n  /**\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n   * This function will load the navigation underlying entries and childs if they haven't been\n   * loaded so far.\n   */\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter((data) => !!data),\n      switchMap((data) => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap((items) => {\n            if (items === undefined) {\n              this.loadNavigationEntryItems(navigation, true);\n            } else {\n              // we should check whether the existing node items are what expected\n              const expectedItems = [];\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\n              const existingItems = Object.keys(items).map(\n                (key) => items[key].uid\n              );\n              const missingItems = expectedItems.filter(\n                (it) => !existingItems.includes(it.id)\n              );\n              if (missingItems.length > 0) {\n                this.cmsService.loadNavigationItems(\n                  navigation.uid,\n                  missingItems\n                );\n              }\n            }\n          }),\n          filter(Boolean),\n          map((items) => this.populateNavigationNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private loadNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ): void {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach((entry) => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      nodeData.children.forEach((child) =>\n        this.loadNavigationEntryItems(child, false, itemsList)\n      );\n    }\n\n    if (root) {\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for the view\n   * @param nodeData\n   * @param items\n   */\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    if (nodeData.title) {\n      // the node title will be populated by the first entry (if any)\n      // if there's no nodeData.title available\n      node.title = nodeData.title;\n    }\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.populateLink(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      const children = nodeData.children\n        .map((child) => this.populateNavigationNode(child, items))\n        .filter(Boolean);\n      if (children.length > 0) {\n        node.children = children;\n      }\n    }\n\n    // return null in case there are no children\n    return Object.keys(node).length === 0 ? null : node;\n  }\n\n  /**\n   * The node link is driven by the first entry.\n   */\n  private populateLink(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (item && entry.itemType === 'CMSLinkComponent') {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n      const url = this.getLink(item);\n      // only populate the node link if we have a visible node\n      if (node.title && url) {\n        node.url = url;\n        // the backend provide boolean value for the target\n        // in case the link should be opened in a new window\n        node.target = !!item.target ? '_blank' : '';\n      }\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category),\n   * also taking into account content pages (contentPageLabelOrId)\n   * and product pages (productCode)\n   */\n  protected getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.contentPageLabelOrId) {\n      return item.contentPageLabelOrId;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    } else if (item.productCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'product',\n        params: {\n          code: item.productCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navigation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event) => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  toggleOpen(event: UIEvent): void {\n    if (event.type === 'keydown') {\n      event.preventDefault();\n    }\n    const node = <HTMLElement>event.currentTarget;\n    if (this.openNodes.includes(node)) {\n      if (event.type === 'keydown') {\n        this.back();\n      } else {\n        this.openNodes = this.openNodes.filter((n) => n !== node);\n        this.renderer.removeClass(node, 'is-open');\n      }\n    } else {\n      this.openNodes.push(node);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    if (this.openNodes[this.openNodes.length - 1]) {\n      this.renderer.removeClass(\n        this.openNodes[this.openNodes.length - 1],\n        'is-open'\n      );\n      this.openNodes.pop();\n      this.updateClasses();\n    }\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getTotalDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\n      );\n    } else {\n      return depth;\n    }\n  }\n\n  getColumnCount(length: number): number {\n    return Math.round(length / (this.wrapAfter || length));\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\n      target.parentElement.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\n    const body = <HTMLElement>node.closest('body');\n    if (wrapper) {\n      this.renderer.removeStyle(wrapper, 'margin-left');\n      if (\n        wrapper.offsetLeft + wrapper.offsetWidth >\n        body.offsetLeft + body.offsetWidth\n      ) {\n        this.renderer.setStyle(\n          wrapper,\n          'margin-left',\n          `${node.offsetWidth - wrapper.offsetWidth}px`\n        );\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter((node) => node.tagName === 'NAV')\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  entryComponents: [NavigationComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, NavigationModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  entryComponents: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [FooterNavigationComponent],\n  entryComponents: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap((results) =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  /**\n   * For search results model, it returns true when:\n   * * there is any product OR\n   * * the is any search suggestion OR\n   * * there is a message.\n   *\n   * Otherwise it returns false.\n   */\n  protected hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  /**\n   * Emits product search results in case when the config property `displayProducts` is true.\n   * Otherwise it emits an empty object.\n   */\n  protected getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  protected getProductSuggestions(\n    config: SearchBoxConfig\n  ): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map((res) => res.map((suggestion) => suggestion.value)),\n        switchMap((suggestions) => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map((match) => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * Whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  protected getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap((productResult) => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  /**\n   * Emits a 'no match' message, in case the product search results and search suggestions are empty.\n   * Otherwise it emits null.\n   */\n  protected getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          suggestions &&\n          suggestions.length === 0\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { CmsSearchBoxComponent, WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent {\n  config: SearchBoxConfig;\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n\n  /**\n   * The component data is optional, so that this component\n   * can be reused without CMS integration.\n   */\n\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\n    protected winRef: WindowRef\n  ) {}\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    tap((c) => (this.config = c)),\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\n  );\n\n  /**\n   * Returns the backend configuration or default configuration for the searchbox.\n   */\n  private get config$(): Observable<SearchBoxConfig> {\n    if (this.componentData) {\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\n        // boolean values, we replace them with boolean values.\n        map((c) => {\n          return {\n            ...c,\n            displayProducts:\n              <any>c?.displayProducts === 'true' || c?.displayProducts === true,\n            displayProductImages:\n              <any>c?.displayProductImages === 'true' ||\n              c?.displayProductImages === true,\n            displaySuggestions:\n              <any>c?.displaySuggestions === 'true' ||\n              c?.displaySuggestions === true,\n          };\n        })\n      );\n    } else {\n      return of(DEFAULT_SEARCHBOX_CONFIG);\n    }\n  }\n\n  /**\n   * Closes the searchbox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchbox to open\n    this.open();\n  }\n\n  /**\n   * Opens the typeahead searchbox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Closes the typehead searchbox.\n   */\n  close(event: UIEvent, force?: boolean): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if ((!this.ignoreCloseEvent && !this.isSearchboxFocused()) || force) {\n        this.blurSearchBox(event);\n      }\n    });\n  }\n\n  protected blurSearchBox(event: UIEvent): void {\n    this.searchBoxComponentService.toggleBodyClass(\n      'searchbox-is-active',\n      false\n    );\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Check if focus is on searchbox or result list elements\n  private isSearchboxFocused(): boolean {\n    return (\n      this.getResultElements().includes(this.getFocusedElement()) ||\n      this.winRef.document.querySelector('input[aria-label=\"search\"]') ===\n        this.getFocusedElement()\n    );\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  // Return result list as HTMLElement array\n  private getResultElements(): HTMLElement[] {\n    return Array.from(\n      this.winRef.document.querySelectorAll('.products > a, .suggestions > a')\n    );\n  }\n\n  // Return focused element as HTMLElement\n  private getFocusedElement(): HTMLElement {\n    return <HTMLElement>this.winRef.document.activeElement;\n  }\n\n  private getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  // Focus on previous item in results list\n  focusPreviousChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  // Focus on next item in results list\n  focusNextChild(event) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a single product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    if (!query || query.trim().length === 0) {\n      return;\n    }\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  public clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  entryComponents: [SearchBoxComponent],\n  exports: [SearchBoxComponent],\n})\nexport class SearchBoxModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  CheckoutService,\n  Order,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\n  order$: Observable<Order>;\n  orderPromotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected promotionService: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  Address,\n  CheckoutService,\n  CostCenter,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n\n  getOrderCodeCardContent(orderCode: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.orderNumber')\n      .pipe(\n        filter(() => Boolean(orderCode)),\n        map((textTitle) => ({\n          title: textTitle,\n          text: [orderCode],\n        }))\n      );\n  }\n\n  getOrderCurrentDateCardContent(isoDate: string): Observable<Card> {\n    return this.translation\n      .translate('checkoutOrderConfirmation.placedOn')\n      .pipe(\n        map((textTitle) => {\n          const date = this.getDate(new Date(isoDate));\n\n          return {\n            title: textTitle,\n            text: [date],\n          };\n        })\n      );\n  }\n\n  getOrderStatusCardContent(status: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutOrderConfirmation.status'),\n      this.translation.translate('orderDetails.statusDisplay', {\n        context: status,\n      }),\n    ]).pipe(\n      map(([textTitle, textStatus]) => ({\n        title: textTitle,\n        text: [textStatus],\n      }))\n    );\n  }\n\n  getPurchaseOrderNumber(poNumber: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutReview.poNumber'),\n      this.translation.translate('checkoutPO.noPoNumber'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => ({\n        title: textTitle,\n        text: [poNumber ? poNumber : noneTextTitle],\n      }))\n    );\n  }\n\n  getMethodOfPaymentCardContent(\n    hasPaymentInfo: PaymentDetails\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutProgress.methodOfPayment'),\n      this.translation.translate('paymentTypes.paymentType_ACCOUNT'),\n      this.translation.translate('paymentTypes.paymentType_CARD'),\n    ]).pipe(\n      map(([textTitle, textAccount, textCard]) => ({\n        title: textTitle,\n        text: [Boolean(hasPaymentInfo) ? textCard : textAccount],\n      }))\n    );\n  }\n\n  getCostCenterCardContent(costCenter: CostCenter): Observable<Card> {\n    return this.translation.translate('checkoutPO.costCenter').pipe(\n      filter(() => Boolean(costCenter)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: costCenter?.name,\n        text: ['(' + costCenter?.unit?.name + ')'],\n      }))\n    );\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      filter(() => Boolean(deliveryAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [deliveryAddress.formattedAddress, deliveryAddress.country.name],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      filter(() => Boolean(deliveryMode)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [\n          deliveryMode.description,\n          deliveryMode.deliveryCost?.formattedValue\n            ? deliveryMode.deliveryCost?.formattedValue\n            : '',\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: Boolean(payment) ? payment.expiryMonth : '',\n        year: Boolean(payment) ? payment.expiryYear : '',\n      }),\n    ]).pipe(\n      filter(() => Boolean(payment)),\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('paymentForm.billingAddress').pipe(\n      filter(() => Boolean(billingAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [billingAddress.formattedAddress, billingAddress.country.name],\n      }))\n    );\n  }\n\n  private getDate(givenDate: Date): string {\n    const date = givenDate.toDateString().split(' ');\n\n    const month = date[1];\n    const day = date[2];\n    const year = date[3];\n\n    return month + ' ' + day + ' ' + year;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n  isGuestCustomer = false;\n  orderGuid: string;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\n      tap((order) => {\n        this.isGuestCustomer = order.guestCustomer;\n        this.orderGuid = order.guid;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-guest-register-form',\n  templateUrl: './guest-register-form.component.html',\n})\nexport class GuestRegisterFormComponent implements OnDestroy {\n  @Input() guid: string;\n  @Input() email: string;\n\n  subscription: Subscription;\n  guestRegisterForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'passwordconf'\n      ),\n    }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected fb: FormBuilder\n  ) {}\n\n  submit() {\n    if (this.guestRegisterForm.valid) {\n      this.userService.registerGuest(\n        this.guid,\n        this.guestRegisterForm.value.password\n      );\n      if (!this.subscription) {\n        this.subscription = this.authService\n          .getUserToken()\n          .subscribe((token) => {\n            if (token.access_token) {\n              this.routingService.go({ cxRoute: 'home' });\n            }\n          });\n      }\n    } else {\n      this.guestRegisterForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutService,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map((orderDetails) => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../shared/components/card/card.module';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\n// tslint:disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\nimport { FormErrorsModule } from '../../shared/index';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n  GuestRegisterFormComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n  entryComponents: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductReference,\n  ProductReferenceService,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected referenceService: ProductReferenceService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map((product) => this.convertProduct(product))\n    );\n  }\n\n  getProductReferences(\n    code: string,\n    referenceType: string,\n    displayTitle: boolean,\n    displayProductPrices: boolean\n  ): Observable<ProductCarouselItem[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) =>\n        refs.map((ref) =>\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\n        )\n      )\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  Product,\n  ProductScope,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\n\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean)\n  );\n\n  /**\n   * returns an Obervable string for the title.\n   */\n  title$: Observable<string> = this.componentData$.pipe(\n    map((data) => data.title)\n  );\n\n  /**\n   * Obervable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\n    map((data) => data.productCodes.trim().split(' ')),\n    map((codes) =>\n      codes.map((code) => this.productService.get(code, this.PRODUCT_SCOPE))\n    )\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  entryComponents: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  /**\n   * returns an Obervable string for the title\n   */\n  title$ = this.component.data$.pipe(map((d) => d?.title));\n\n  private currentProductCode$: Observable<\n    string\n  > = this.current.getProduct().pipe(\n    filter(Boolean),\n    map((p: Product) => p.code),\n    distinctUntilChanged(),\n    tap(() => this.referenceService.cleanReferences())\n  );\n\n  /**\n   * Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = combineLatest([\n    this.currentProductCode$,\n    this.component.data$,\n  ]).pipe(\n    switchMap(([code, data]) =>\n      this.getProductReferences(code, data?.productReferenceTypes)\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\n    protected current: CurrentProductService,\n    protected referenceService: ProductReferenceService\n  ) {}\n\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product>[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) => refs.map((ref) => of(ref.target)))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  entryComponents: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  private mainMediaContainer = new BehaviorSubject(null);\n\n  private product$: Observable<\n    Product\n  > = this.currentProductService.getProduct().pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap((p: Product) => {\n      this.mainMediaContainer.next(p.images?.PRIMARY ? p.images.PRIMARY : {});\n    })\n  );\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map((p: Product) => this.createThumbs(p))\n  );\n\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\n    map(([, container]) => container)\n  );\n\n  constructor(private currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          (t) =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    CarouselModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductImagesComponent],\n  entryComponents: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\n      .subscribe((reviewsTabLabel) => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through button tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const tabElements: HTMLCollectionOf<HTMLElement> = tabsComponent.getElementsByTagName(\n        'button'\n      );\n\n      // Look through button tab elements until finding tab with label\n      for (const buttonElement of Array.from(tabElements)) {\n        if (buttonElement.innerHTML.includes(label)) {\n          return buttonElement;\n        }\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, StarRatingModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  exports: [ProductIntroComponent],\n  entryComponents: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RouterState,\n  RoutingService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  pluck,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\nimport { ProductListRouteParams, SearchCriteria } from './product-list.model';\n\n/**\n * The `ProductListComponentService` is used to search products. The service is used\n * on the Product Listing Page, for listing products and the facet navigation.\n *\n * The service exposes the product search results based on the category and search\n * route parameters. The route parameters are used to query products by the help of\n * the `ProductSearchService`.\n */\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  /**\n   * @deprecated will be removed in version 3.0 as this is the\n   *   subscription is longer used\n   */\n  protected sub: Subscription;\n\n  // TODO: make it configurable\n  protected defaultPageSize = 10;\n\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router\n  ) {}\n\n  /**\n   * Emits the search results for the current search query.\n   *\n   * The `searchResults$` is _not_ concerned with querying, it only observes the\n   * `productSearchService.getResults()`\n   */\n  protected searchResults$: Observable<\n    ProductSearchPage\n  > = this.productSearchService\n    .getResults()\n    .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\n\n  /**\n   * Observes the route and performs a search on each route change.\n   *\n   * Context changes, such as language and currencies are also taken\n   * into account, so that the search is performed again.\n   */\n  protected searchByRouting$: Observable<\n    ActivatedRouterStateSnapshot\n  > = combineLatest([\n    this.routing.getRouterState().pipe(\n      distinctUntilChanged((x, y) => {\n        // router emits new value also when the anticipated `nextState` changes\n        // but we want to perform search only when current url changes\n        return x.state.url === y.state.url;\n      })\n    ),\n    ...this.siteContext,\n  ]).pipe(\n    map(([routerState, ..._context]) => (routerState as RouterState).state),\n    tap((state: ActivatedRouterStateSnapshot) => {\n      const criteria = this.getCriteriaFromRoute(\n        state.params,\n        state.queryParams\n      );\n      this.search(criteria);\n    })\n  );\n\n  /**\n   * This stream is used for the Product Listing and Product Facets.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\n    this.searchResults$,\n    this.searchByRouting$,\n  ]).pipe(pluck(0), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /**\n   * Expose the `SearchCriteria`. The search criteria are driven by the route parameters.\n   *\n   * This search route configuration is not yet configurable\n   * (see https://github.com/SAP/spartacus/issues/7191).\n   */\n  protected getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  /**\n   * Resolves the search query from the given `ProductListRouteParams`.\n   */\n  protected getQueryFromRouteParams({\n    query,\n    categoryCode,\n    brandCode,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\n    }\n\n    // TODO: drop support for brands as they should be treated\n    // similarly as any category.\n    if (brandCode) {\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\n    }\n  }\n\n  /**\n   * Performs a search based on the given search criteria.\n   *\n   * The search is delegated to the `ProductSearchService`.\n   */\n  protected search(criteria: SearchCriteria): void {\n    const currentPage = criteria.currentPage;\n    const pageSize = criteria.pageSize;\n    const sort = criteria.sortCode;\n\n    this.productSearchService.search(\n      criteria.query,\n      // TODO: consider dropping this complex passing of cleaned object\n      Object.assign(\n        {},\n        currentPage && { currentPage },\n        pageSize && { pageSize },\n        sort && { sort }\n      )\n    );\n  }\n\n  /**\n   * Get items from a given page without using navigation\n   */\n  getPageItems(pageNumber: number): void {\n    this.routing\n      .getRouterState()\n      .subscribe((route) => {\n        const routeCriteria = this.getCriteriaFromRoute(\n          route.state.params,\n          route.state.queryParams\n        );\n        const criteria = {\n          ...routeCriteria,\n          currentPage: pageNumber,\n        };\n        this.search(criteria);\n      })\n      .unsubscribe();\n  }\n\n  /**\n   * Sort the search results by the given sort code.\n   */\n  sort(sortCode: string): void {\n    this.route({ sortCode });\n  }\n\n  /**\n   * Routes to the next product listing page, using the given `queryParams`. The\n   * `queryParams` support sorting, pagination and querying.\n   *\n   * The `queryParams` are delegated to the Angular router `NavigationExtras`.\n   */\n  protected route(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  /**\n   * The site context is used to update the search query in case of a\n   * changing context. The context will typically influence the search data.\n   *\n   * We keep this private for now, as we're likely refactoring this in the next\n   * major version.\n   */\n  private get siteContext(): Observable<string>[] {\n    // TODO: we should refactor this so that custom context will be taken\n    // into account automatically. Ideally, we drop the specific context\n    // from the constructor, and query a ContextService for all contexts.\n\n    return [this.languageService.getActive(), this.currencyService.getActive()];\n  }\n\n  /**\n   * @deprecated will be dropped in version 3.0 as it's no longer in use\n   */\n  setQuery(query: string): void {\n    this.route({ query, currentPage: undefined });\n  }\n\n  /**\n   * @deprecated will be dropped in version 3.0 as it's no longer in use\n   */\n  viewPage(pageNumber: number): void {\n    this.route({ currentPage: pageNumber });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewConfig } from '../../../../shared/config/view-config';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  isInfiniteScroll: boolean;\n\n  model$: Observable<ProductSearchPage> = this.productListComponentService\n    .model$;\n\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService,\n    public scrollConfig: ViewConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$\n        .pipe(take(1))\n        .subscribe((template) => {\n          this.viewMode$.next(\n            template === 'ProductGridPageTemplate'\n              ? ViewModes.Grid\n              : ViewModes.List\n          );\n        })\n    );\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { ViewModes } from '../../product-view/product-view.component';\nimport { Subscription } from 'rxjs';\nimport { ProductListComponentService } from '../product-list-component.service';\nimport { ViewConfig } from '../../../../../shared/config/view-config';\n\n@Component({\n  selector: 'cx-product-scroll',\n  templateUrl: './product-scroll.component.html',\n})\nexport class ProductScrollComponent implements OnDestroy {\n  private subscription = new Subscription();\n\n  @Input('scrollConfig')\n  set setConfig(inputConfig: ViewConfig) {\n    this.setComponentConfigurations(inputConfig);\n  }\n\n  model: ProductSearchPage;\n  @Input('model')\n  set setModel(inputModel: ProductSearchPage) {\n    this.infiniteScrollOperations(inputModel);\n  }\n\n  inputViewMode: ViewModes;\n  @Input('inputViewMode')\n  set setViewMode(inputViewMode: ViewModes) {\n    this.inputViewMode = inputViewMode;\n    //If viewMode is already set (meaning it is not the first load)\n    //Reset the product list\n    if (this.viewMode) {\n      this.resetListOnViewModeChange();\n    } else {\n      //If viewMode is not set (meaning it is the first load)\n      //Set the viewMode\n      this.viewMode = inputViewMode;\n    }\n  }\n\n  viewMode: ViewModes;\n  productLimit: number;\n  maxProducts: number;\n\n  ViewModes = ViewModes;\n  appendProducts = false;\n  resetList = false;\n  isMaxProducts = false;\n  isLastPage = false;\n  isEmpty = false;\n\n  constructor(\n    private productListComponentService: ProductListComponentService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  scrollPage(pageNumber: number): void {\n    this.appendProducts = true;\n    this.ref.markForCheck();\n    this.productListComponentService.getPageItems(pageNumber);\n  }\n\n  loadNextPage(pageNumber: number): void {\n    this.isMaxProducts = false;\n    this.scrollPage(pageNumber);\n  }\n\n  scrollToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\n\n    //Display \"show more\" button every time when button configuration is true\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\n    this.productLimit = isButton ? 1 : configProductLimit;\n  }\n\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\n    if (this.appendProducts) {\n      this.model = {\n        ...inputModel,\n        products: this.model.products.concat(inputModel.products),\n      };\n    } else {\n      this.model = inputModel;\n      this.maxProducts = this.productLimit;\n    }\n    this.setConditions();\n    this.ref.markForCheck();\n  }\n\n  private resetListOnViewModeChange(): void {\n    this.scrollToTop();\n    this.resetList = true;\n    this.productListComponentService.getPageItems(0);\n  }\n\n  //Set booleans after model has been retrieved\n  private setConditions(): void {\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\n\n    this.isLastPage =\n      this.model.pagination.currentPage ===\n      this.model.pagination.totalPages - 1;\n\n    this.isMaxProducts =\n      this.productLimit &&\n      this.productLimit !== 0 &&\n      this.model.products.length >= this.maxProducts;\n\n    //Add the productLimit to the current number of products to determine the next max number of products\n    if (this.isMaxProducts) {\n      this.maxProducts = this.model.products.length + this.productLimit;\n    }\n\n    //Only change viewMode once the new model is set\n    //This prevents flickering issues\n    if (this.viewMode !== this.inputViewMode) {\n      this.viewMode = this.inputViewMode;\n    }\n\n    this.resetList = false;\n    this.appendProducts = false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Breadcrumb, Facet } from '@spartacus/core';\n\n/**\n * UI model that holds the full list of facet and active facets for\n * the product list.\n */\nexport interface FacetList {\n  facets: Facet[];\n  activeFacets?: Breadcrumb[];\n}\n\nexport interface FacetCollapseState {\n  /**\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\n   * Whether the toggle results in an expanded or collapsed state, depends on the\n   * experience, which is controlled in CSS.\n   */\n  toggled?: FacetGroupCollapsedState;\n\n  /**\n   * The top number of facet values that will be visible.\n   */\n  topVisible?: number;\n\n  /**\n   * The max number of facet values which will be visible. This includes\n   * the top visible number.\n   */\n  maxVisible?: number;\n}\n\nexport enum FacetGroupCollapsedState {\n  EXPANDED = 'EXPANDED',\n  COLLAPSED = 'COLLAPSED',\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  Breadcrumb,\n  PageType,\n  ProductSearchPage,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\nimport { ProductListComponentService } from '../../container/product-list-component.service';\nimport { FacetList } from '../facet.model';\n\n/**\n * Provides access to all the facets and active facets for the Product Listing Page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductFacetService {\n  protected readonly routeState$ = this.routing\n    .getRouterState()\n    .pipe(pluck('state'));\n\n  protected readonly searchResult$: Observable<\n    ProductSearchPage\n  > = this.routeState$.pipe(\n    switchMap((state) =>\n      this.productListComponentService.model$.pipe(\n        filter((page) => this.filterForPage(state, page)),\n        map((page) => this.mapResults(state, page))\n      )\n    )\n  );\n\n  constructor(\n    protected routing: RoutingService,\n    protected productListComponentService: ProductListComponentService\n  ) {}\n\n  /**\n   * Observes the facets and active facets for the given page. The facet data\n   * is provided in a `FacetList`.\n   */\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\n    map(\n      (result: ProductSearchPage) =>\n        ({\n          facets: result.facets,\n          activeFacets: result.breadcrumbs,\n        } as FacetList)\n    )\n  );\n\n  /**\n   * Filters the current result by verifying if the result is related to the page.\n   * This is done to avoid a combination of the next page and the current search results.\n   */\n  protected filterForPage(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): boolean {\n    if (state.context.type === PageType.CATEGORY_PAGE) {\n      return (\n        page.currentQuery?.query?.value?.indexOf(\n          `allCategories:${state.context.id}`\n        ) > -1\n      );\n    }\n\n    if (\n      state.context.type === PageType.CONTENT_PAGE &&\n      state.context.id === 'search'\n    ) {\n      return page.currentQuery.query.value.startsWith(`${state.params.query}:`);\n    }\n    return false;\n  }\n\n  private mapResults(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): ProductSearchPage {\n    return {\n      ...page,\n      breadcrumbs: this.filterBreadcrumbs(page.breadcrumbs, state.params),\n    };\n  }\n\n  /**\n   * filter breadcrumbs which are not actively selected\n   * but coming from the route navigation\n   */\n  private filterBreadcrumbs(\n    breadcrumbs: Breadcrumb[],\n    params: Params\n  ): Breadcrumb[] {\n    return breadcrumbs\n      ? breadcrumbs.filter(\n          (breadcrumb) => !this.hasBreadcrumb(breadcrumb, params)\n        )\n      : [];\n  }\n\n  /**\n   * Indicates whether the breadcrumb is related to navigation parameters,\n   * since either the category or brand code should match those codes.\n   */\n  private hasBreadcrumb(breadcrumb: Breadcrumb, params: Params): boolean {\n    return (\n      breadcrumb.facetCode === 'allCategories' &&\n      (breadcrumb.facetValueCode === params.categoryCode ||\n        breadcrumb.facetValueCode === params.brandCode)\n    );\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {\n  FacetCollapseState,\n  FacetGroupCollapsedState,\n  FacetList,\n} from '../facet.model';\nimport { ProductFacetService } from './product-facet.service';\n\n/**\n * Provides access to the facets as well as their UI state. The UI state\n * represents user related changes on the facets, such as expanding or\n * collapsing a facet group or expanding the number of _visible_ facet values.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacetService {\n  /**\n   * An internal map where we keep the UI state of the facets.\n   */\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\n\n  constructor(protected productFacetService: ProductFacetService) {}\n\n  /**\n   * Observes the facets for the given page and configures the initial UI state.\n   *\n   * Facets are configured on each emission so that we keep the facet UI state.\n   * This is mainly done to keep the state during usage of the facet, but also\n   * benefitial when the facets are rebuild while using them.\n   */\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\n    tap((facetList) => {\n      facetList.facets.forEach((facet) => this.initialize(facet));\n    })\n  );\n\n  /**\n   * Returns the observed UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  getState(facet: Facet): Observable<FacetCollapseState> {\n    this.initialize(facet);\n    return this.facetState.get(facet.name);\n  }\n\n  /**\n   * Returns the UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\n  }\n\n  /**\n   * Toggles the facet expanded state. If the expanded state becomes false,\n   * the visible values will decrease to the top values only.\n   *\n   * If the optional value argument is provided the expanded state will be set\n   * to this value, regardless of the current `expanded` state.\n   */\n  toggle(facet: Facet, isExpanded: boolean): void {\n    const state = this.getStateSnapshot(facet);\n\n    const toggledState = {\n      toggled: isExpanded\n        ? FacetGroupCollapsedState.COLLAPSED\n        : FacetGroupCollapsedState.EXPANDED,\n    } as FacetCollapseState;\n\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\n      toggledState.maxVisible = state.topVisible;\n    }\n\n    this.updateState(facet, toggledState);\n  }\n\n  /**\n   * Increases the visible values to the maximum values of the facet.\n   */\n  increaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.values.length });\n  }\n\n  /**\n   * Decreases the visible values to the topValueCount.\n   *\n   * The topValueCount defaults to 6, but can be controlled in\n   * the backend as well.\n   */\n  decreaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.topValueCount });\n  }\n\n  /**\n   * Persists the facet state and initializes the default values for the top\n   * and max visible values.\n   */\n  protected initialize(facet: Facet): void {\n    const topFacets =\n      facet.topValueCount > 0 ? facet.topValueCount : facet.values?.length || 0;\n    if (!this.hasState(facet)) {\n      this.facetState.set(\n        facet.name,\n        new BehaviorSubject({\n          topVisible: topFacets,\n          maxVisible: topFacets,\n        } as FacetCollapseState)\n      );\n    }\n  }\n\n  /**\n   * Updates the state of the facet in the local facet map.\n   */\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\n    const state = { ...this.getStateSnapshot(facet), ...property };\n    this.facetState.get(facet.name).next(state);\n  }\n\n  protected hasState(facet: Facet): boolean {\n    return this.facetState.has(facet.name);\n  }\n\n  getLinkParams(query: string): { [key: string]: string } {\n    return {\n      // to avoid encoding issues with facets that have space (' ') in their name,\n      // we replace the decoded '+' back to empty space ' '.\n      // For more, see https://github.com/SAP/spartacus/issues/7348\n      query: new HttpUrlEncodingCodec().decodeValue(query).replace(/\\+/g, ' '),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Breadcrumb } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FacetList } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n/**\n * Active facets render the applied facet values as a list of focusable buttons\n * which can be used to remove the applied facet value.\n */\n@Component({\n  selector: 'cx-active-facets',\n  templateUrl: './active-facets.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ActiveFacetsComponent {\n  /** Active facets which are applied to the product results. */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  /** Configurable icon which is used for the active facet close button */\n  @Input() closeIcon = ICON_TYPE.CLOSE;\n\n  constructor(protected facetService: FacetService) {}\n\n  getLinkParams(facet: Breadcrumb) {\n    return this.facetService.getLinkParams(facet.removeQuery?.query?.value);\n  }\n\n  /**\n   * The focus key is used to persist the focus on the facet when the DOM is being\n   * recreated. We only apply the focus key for the given _active_ facet when there\n   * the original facets is not available. This happens for non multi-valued facets.\n   *\n   * With this approach, the we keep the focus, either at the facet list or on the\n   * active facets.\n   */\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\n    return facetList.facets?.find((f) =>\n      f.values?.find((val) => val.name === facet.facetValueName)\n    )\n      ? ''\n      : facet.facetValueName;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ActiveFacetsComponent } from './active-facets.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [ActiveFacetsComponent],\n  exports: [ActiveFacetsComponent],\n})\nexport class ActiveFacetsModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\nimport { FacetComponent } from '../facet/facet.component';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet-list',\n  templateUrl: './facet-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetListComponent {\n  private _isDialog: boolean;\n  /**\n   * Indicates that the facet navigation is rendered in dialog.\n   */\n  @Input()\n  set isDialog(value: boolean) {\n    this._isDialog = value;\n    if (value) {\n      this.renderer.addClass(document.body, 'modal-open');\n    }\n  }\n\n  get isDialog(): boolean {\n    return this._isDialog;\n  }\n\n  /** Emits when the list must close */\n  @Output() closeList = new EventEmitter();\n\n  /** The list of all facet and values related to the products in the list */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  iconTypes = ICON_TYPE;\n\n  dialogFocusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    focusOnEscape: true,\n    autofocus: 'cx-facet',\n  };\n\n  @HostListener('click') handleClick() {\n    this.close();\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2\n  ) {}\n\n  /**\n   * Toggles the facet group in case it is not expanded.\n   */\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\n    if (!ref.isExpanded) {\n      this.facetService.toggle(facet, ref.isExpanded);\n    }\n  }\n\n  /**\n   * Indicates that the facet group has been expanded.\n   */\n  isExpanded(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\n      );\n  }\n\n  /**\n   * Indicates that the facet group has been collapsed.\n   */\n  isCollapsed(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\n      );\n  }\n\n  close(event?: boolean): void {\n    this.renderer.removeClass(document.body, 'modal-open');\n    this.closeList.emit(event);\n  }\n\n  block(event?: MouseEvent) {\n    event.stopPropagation();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { Facet, FacetValue } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\nimport { FacetCollapseState } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet',\n  templateUrl: './facet.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetComponent {\n  protected _facet: Facet;\n\n  state$: Observable<FacetCollapseState>;\n\n  /** configurable icon that is used to collapse the facet group  */\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\n\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\n\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\n\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\n\n  @Input()\n  set facet(value: Facet) {\n    this._facet = value;\n    this.isMultiSelect = !!value.multiSelect;\n    this.state$ = this.facetService.getState(value);\n  }\n\n  get facet(): Facet {\n    return this._facet;\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Handles clicking the heading of the facet group, which means toggling\n   * the visibility of the group (collapse / expand) and optionally focusing\n   * the group.\n   */\n  toggleGroup(event: UIEvent) {\n    const host: HTMLElement = this.elementRef.nativeElement;\n    const isLocked = this.keyboardFocus?.isLocked;\n\n    this.facetService.toggle(this.facet, this.isExpanded);\n\n    if (!isLocked || this.isExpanded) {\n      host.focus();\n      // we stop propagating the event as otherwise the focus on the host will trigger\n      // an unlock event from the LockFocus directive.\n      event.stopPropagation();\n    }\n  }\n\n  get isExpanded(): boolean {\n    return this.values.first.nativeElement.offsetParent !== null;\n  }\n\n  openLink(event: KeyboardEvent) {\n    (event.target as HTMLElement).click();\n    event.preventDefault();\n  }\n\n  /**\n   * Increases the number of visible values for the facet. This is delegated\n   * to `facetService.increaseVisibleValues`.\n   */\n  increaseVisibleValues(): void {\n    this.facetService.increaseVisibleValues(this.facet);\n  }\n\n  /**\n   * Decreases the number of visible values for the facet. This is delegated\n   * to `facetService.decreaseVisibleValues`.\n   */\n  decreaseVisibleValues(): void {\n    this.facetService.decreaseVisibleValues(this.facet);\n  }\n\n  getLinkParams(value: FacetValue) {\n    return this.facetService.getLinkParams(value.query?.query.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { FacetComponent } from './facet.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetComponent],\n  exports: [FacetComponent],\n})\nexport class FacetModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { FacetModule } from '../facet/facet.module';\nimport { FacetListComponent } from './facet-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    FacetModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetListComponent],\n  exports: [FacetListComponent],\n})\nexport class FacetListModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent {\n  iconTypes = ICON_TYPE;\n\n  /**\n   * We delay the removal of DOM so that animations can finish playing before the\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\n   * to be focused.\n   */\n  protected CLOSE_DELAY = 300;\n\n  /**\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\n   * on the availability of the trigger element, which is driven by CSS.\n   *\n   * The reference is also used to refocus the trigger after the dialog is closed.\n   */\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\n\n  protected open$ = new BehaviorSubject(false);\n\n  /**\n   * Emits the open state that indicates whether the facet list should be rendered.\n   * This is either done instantly, or after the user triggers this by using the trigger\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\n   * the behaviour. This can differ per breakpoint.\n   *\n   * There's a configurable delay for the closed state, so that the DOM is not removed\n   * before some CSS animations are done.\n   */\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\n    // method represents the actual UI state.\n    observeOn(asapScheduler),\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\n  );\n\n  /**\n   * Emits the active state that indicates whether the facet list is activated. Activation\n   * is related to the css, so that a animation or transition can visualize opening/closing\n   * the list (i.e. dialog).\n   */\n  isActive$ = this.open$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure the active class is\n    //  applied after the DOM is created\n    observeOn(asapScheduler)\n  );\n\n  constructor(protected breakpointService: BreakpointService) {}\n\n  launch() {\n    this.open$.next(true);\n  }\n\n  close() {\n    this.open$.next(false);\n    this.trigger.nativeElement.focus();\n  }\n\n  /**\n   * Indicates that the facet navigation should be open explicitely by a trigger.\n   * This is fully controlled by CSS, where the trigger button can be hidden\n   * (display:none) for certain screen sizes.\n   */\n  get hasTrigger() {\n    return this.trigger.nativeElement.offsetParent !== null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\nimport { FacetListModule } from './facet-list/facet-list.module';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FacetListModule,\n    ActiveFacetsModule,\n    IconModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductFacetNavigationComponent],\n  exports: [ProductFacetNavigationComponent],\n})\nexport class ProductFacetNavigationModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variants',\n  templateUrl: './product-variants.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsComponent implements OnInit {\n  constructor(private currentProductService: CurrentProductService) {}\n\n  variants: BaseOption[] = [];\n  variantType = VariantType;\n  product$: Observable<Product>;\n\n  ngOnInit(): void {\n    this.product$ = this.currentProductService.getProduct().pipe(\n      filter((product) => !!(product && product.baseOptions)),\n      distinctUntilChanged(),\n      tap((product) => {\n        product.baseOptions.forEach((option) => {\n          if (option && option.variantType) {\n            this.variants[option.variantType] = option;\n          }\n        });\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  OccConfig,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  Product,\n  ProductService,\n  ProductScope,\n  RoutingService,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-style-selector',\n  templateUrl: './variant-style-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleSelectorComponent {\n  constructor(\n    private config: OccConfig,\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  variantQualifier = VariantQualifier;\n\n  @Input()\n  variants: BaseOption;\n\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\n    return obj ? obj.value : '';\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\n    return qualifier\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\n      : '';\n  }\n\n  changeStyle(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Product,\n  RoutingService,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  ProductService,\n  ProductScope,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-size-selector',\n  templateUrl: './variant-size-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantSizeSelectorComponent {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeSize(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BaseOption,\n  Product,\n  RoutingService,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-color-selector',\n  templateUrl: './variant-color-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantColorSelectorComponent {\n  constructor(private routingService: RoutingService) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeColor(code: string, name: string): void {\n    if (code) {\n      this.routingService.go({\n        cxRoute: 'product',\n        params: { code, name },\n      });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {\n  OccConfig,\n  VariantOption,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-style-icons',\n  templateUrl: './variant-style-icons.component.html',\n  styleUrls: ['./variant-style-icons.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleIconsComponent implements OnInit {\n  constructor(private config: OccConfig) {}\n\n  @Input()\n  variants: VariantOption[];\n\n  variantNames: { [key: string]: string } = {};\n\n  ngOnInit() {\n    this.variants.forEach((variant) => {\n      this.variantNames[variant.code] = this.getVariantName(\n        variant.variantOptionQualifiers\n      );\n    });\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const thumbnail = variantOptionQualifiers.find(\n      (item) => item.qualifier === VariantQualifier.THUMBNAIL\n    );\n    return thumbnail\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\n      : '';\n  }\n\n  private getVariantName(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const rollupProperty = variantOptionQualifiers.find(\n      (item) => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\n    );\n    const property = rollupProperty\n      ? variantOptionQualifiers.find(\n          (item) => item.qualifier === rollupProperty.value\n        )\n      : null;\n    return property ? property.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, filter, take } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  VariantOption,\n  ProductService,\n  Product,\n  RoutingService,\n  ProductScope,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductVariantGuard implements CanActivate {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.routingService.getRouterState().pipe(\n      map((state) => state.nextState.params.productCode),\n      switchMap((productCode: string) => {\n        // if open pdp from smartedit\n        if (!productCode) {\n          return of(true);\n        }\n\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\n          filter(Boolean),\n          map((product: Product) => {\n            if (!product.purchasable) {\n              const variant = this.findVariant(product.variantOptions);\n              // below call might looks redundant but in fact this data is going to be loaded anyways\n              // we're just calling it earlier and storing\n              this.productService\n                .get(variant.code, ProductScope.LIST)\n                .pipe(filter(Boolean), take(1))\n                .subscribe((_product: Product) => {\n                  this.routingService.go({\n                    cxRoute: 'product',\n                    params: _product,\n                  });\n                });\n              return false;\n            } else {\n              return true;\n            }\n          })\n        );\n      })\n    );\n  }\n\n  findVariant(variants: VariantOption[]): VariantOption {\n    const results: VariantOption[] = variants.filter((variant) => {\n      return variant.stock && variant.stock.stockLevel ? variant : false;\n    });\n    return !results.length && variants.length ? variants[0] : results[0];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ProductVariantsComponent } from './product-variants.component';\nimport { RouterModule } from '@angular/router';\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\nimport { ProductVariantGuard } from './guards/product-variant.guard';\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    VariantStyleSelectorModule,\n    VariantSizeSelectorModule,\n    VariantColorSelectorModule,\n    VariantStyleIconsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductVariantSelectorComponent: {\n          component: ProductVariantsComponent,\n          guards: [ProductVariantGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ProductVariantsComponent],\n  entryComponents: [ProductVariantsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class ProductVariantsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ViewConfig } from '../../../shared/config/view-config';\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { defaultScrollConfig } from '../config/default-scroll-config';\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n    SpinnerModule,\n    InfiniteScrollModule,\n    ViewConfigModule,\n    ProductVariantsModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<ViewConfig>defaultScrollConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        ProductGridComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\n})\nexport class ProductListModule {}\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  entryComponents: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct(\n    ProductScope.ATTRIBUTES\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  entryComponents: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  entryComponents: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\nimport { CustomFormValidators } from '../../../../shared/index';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\n  @ViewChild('writeReviewButton', { static: false })\n  writeReviewButton: ElementRef;\n\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter((p) => !!p),\n    map((p) => p.code),\n    distinctUntilChanged(),\n    switchMap((productCode) =>\n      this.reviewService.getByProductCode(productCode)\n    ),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n\n    this.cd.detectChanges();\n\n    if (this.titleInput && this.titleInput.nativeElement) {\n      this.titleInput.nativeElement.focus();\n    }\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  setRating(rating: number): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product) {\n    if (this.reviewForm.valid) {\n      this.addReview(product);\n    } else {\n      this.reviewForm.markAllAsTouched();\n    }\n  }\n\n  addReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [null, CustomFormValidators.starRatingEmpty],\n      reviewerName: '',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductReviewsComponent } from './product-reviews.component';\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  entryComponents: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-stock-notification-dialog',\n  templateUrl: './stock-notification-dialog.component.html',\n})\nexport class StockNotificationDialogComponent implements OnDestroy {\n  subscribeSuccess$: Observable<boolean>;\n  enabledPrefs: NotificationPreference[] = [];\n\n  constructor(\n    private modalService: ModalService,\n    private interestsService: UserInterestsService\n  ) {}\n\n  close() {\n    this.modalService.dismissActiveModal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribeSuccess$) {\n      this.subscribeSuccess$\n        .subscribe((success) => {\n          if (success) {\n            this.interestsService.resetAddInterestState();\n          }\n        })\n        .unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  UserInterestsService,\n  UserNotificationPreferenceService,\n  AuthService,\n  OCC_USER_ID_ANONYMOUS,\n  NotificationPreference,\n  NotificationType,\n  Product,\n  GlobalMessageService,\n  TranslationService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { map, filter, tap, first } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\n\n@Component({\n  selector: 'cx-stock-notification',\n  templateUrl: './stock-notification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationComponent implements OnInit, OnDestroy {\n  hasProductInterests$: Observable<boolean>;\n  prefsEnabled$: Observable<boolean>;\n  outOfStock$: Observable<boolean>;\n  isRemoveInterestLoading$: Observable<boolean>;\n  anonymous = true;\n\n  private enabledPrefs: NotificationPreference[] = [];\n  private productCode: string;\n  private subscribeSuccess$: Observable<boolean>;\n  private subscriptions = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private currentProductService: CurrentProductService,\n    private globalMessageService: GlobalMessageService,\n    private translationService: TranslationService,\n    private interestsService: UserInterestsService,\n    private modalService: ModalService,\n    private notificationPrefService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.outOfStock$ = combineLatest([\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\n      this.authService.getOccUserId(),\n    ]).pipe(\n      tap(([product, userId]: [Product, String]) => {\n        this.productCode = product.code;\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\n          this.anonymous = false;\n          this.notificationPrefService.loadPreferences();\n          this.interestsService.loadProductInterests(\n            null,\n            null,\n            null,\n            product.code,\n            NotificationType.BACK_IN_STOCK\n          );\n        }\n      }),\n      map(\n        ([product]: [Product, String]) =>\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\n      )\n    );\n\n    this.hasProductInterests$ = this.interestsService\n      .getProductInterests()\n      .pipe(\n        map(\n          (interests) => !!interests.results && interests.results.length === 1\n        )\n      );\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\n    this.prefsEnabled$ = this.notificationPrefService\n      .getEnabledPreferences()\n      .pipe(\n        tap((prefs) => (this.enabledPrefs = prefs)),\n        map((prefs) => prefs.length > 0)\n      );\n\n    this.subscriptions.add(\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\n        if (error) {\n          this.onInterestAddingError();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.interestsService\n        .getRemoveProdutInterestSuccess()\n        .subscribe((success) => {\n          if (success) {\n            this.onInterestRemovingSuccess();\n          }\n        })\n    );\n  }\n\n  subscribe() {\n    this.openDialog();\n    this.interestsService.addProductInterest(\n      this.productCode,\n      NotificationType.BACK_IN_STOCK\n    );\n  }\n\n  unsubscribe() {\n    this.interestsService.removeProdutInterest(\n      {\n        product: {\n          code: this.productCode,\n        },\n        productInterestEntry: [\n          {\n            interestType: NotificationType.BACK_IN_STOCK,\n          },\n        ],\n      },\n      true\n    );\n  }\n\n  private onInterestRemovingSuccess() {\n    this.subscriptions.add(\n      this.translationService\n        .translate('stockNotification.unsubscribeSuccess')\n        .pipe(first())\n        .subscribe((text) =>\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\n        )\n    );\n    this.interestsService.resetRemoveInterestState();\n  }\n\n  private onInterestAddingError() {\n    this.modalService.dismissActiveModal();\n    this.interestsService.resetAddInterestState();\n  }\n\n  private openDialog() {\n    const modalInstance = this.modalService.open(\n      StockNotificationDialogComponent,\n      {\n        centered: true,\n        size: 'lg',\n      }\n    ).componentInstance;\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\n    modalInstance.enabledPrefs = this.enabledPrefs;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.interestsService.clearProductInterests();\n    this.notificationPrefService.clearPreferences();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockNotificationComponent } from './stock-notification.component';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        StockNotificationComponent: {\n          component: StockNotificationComponent,\n        },\n      },\n    }),\n  ],\n  entryComponents: [\n    StockNotificationComponent,\n    StockNotificationDialogComponent,\n  ],\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\n})\nexport class StockNotificationModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StoreFinderService, GeoPoint } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-grid',\n  templateUrl: './store-finder-grid.component.html',\n})\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\n  locations$: any;\n  isLoading$: Observable<boolean>;\n  defaultLocation: GeoPoint;\n  country: string;\n  region: string;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.defaultLocation = {};\n\n    if (this.route.snapshot.params.country) {\n      this.storeFinderService.findStoresAction(\n        '',\n        {\n          pageSize: -1,\n        },\n        undefined,\n        this.route.snapshot.params.country\n      );\n    }\n  }\n\n  ngOnDestroy() {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input, Directive } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\n// tslint:disable:directive-class-suffix\n@Directive()\nexport class AbstractStoreItemComponent {\n  @Input()\n  location;\n\n  constructor(protected storeDataService: StoreDataService) {}\n\n  getDirections(location: any): string {\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\n    const latitude = this.storeDataService.getStoreLatitude(location);\n    const longitude = this.storeDataService.getStoreLongitude(location);\n    return google_map_url + latitude + ',' + longitude;\n  }\n\n  getFormattedStoreAddress(addressParts: string[]): string {\n    return addressParts.filter(Boolean).join(', ');\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-list-item',\n  templateUrl: './store-finder-list-item.component.html',\n})\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\n  @Input()\n  locationIndex: number = null;\n  @Input()\n  listOrderLabel: any;\n  @Input()\n  displayDistance: boolean;\n  @Input()\n  useClickEvent: boolean;\n  @Output()\n  storeItemClick: EventEmitter<number> = new EventEmitter();\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n\n  handleStoreItemClick() {\n    if (this.locationIndex !== null) {\n      this.storeItemClick.emit(this.locationIndex);\n    }\n  }\n\n  onKey(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.handleStoreItemClick();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleMapRendererService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-map',\n  templateUrl: './store-finder-map.component.html',\n})\nexport class StoreFinderMapComponent implements OnChanges {\n  @ViewChild('mapElement', { static: true })\n  mapElement: ElementRef;\n  @Input()\n  locations: any[];\n  @Output()\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\n\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.locations && this.locations) {\n      this.renderMap();\n    }\n  }\n\n  /**\n   * Sets the center of the map to the given location\n   * @param latitude latitude of the new center\n   * @param longitude longitude of the new center\n   */\n  centerMap(latitude: number, longitude: number): void {\n    this.googleMapRendererService.centerMap(latitude, longitude);\n  }\n\n  renderMap(): void {\n    this.googleMapRendererService.renderMap(\n      this.mapElement.nativeElement,\n      this.locations,\n      (markerIndex) => {\n        this.selectStoreItemClickHandle(markerIndex);\n      }\n    );\n  }\n\n  private selectStoreItemClickHandle(markerIndex: number) {\n    this.selectedStoreItem.emit(markerIndex);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-store-finder-list',\n  templateUrl: './store-finder-list.component.html',\n})\nexport class StoreFinderListComponent {\n  @Input()\n  locations: any;\n  @Input()\n  useMylocation: boolean;\n  @ViewChild('storeMap')\n  storeMap: StoreFinderMapComponent;\n\n  selectedStore: PointOfService;\n  selectedStoreIndex: number;\n  isDetailsModeVisible: boolean;\n  storeDetails: PointOfService;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    private storeDataService: StoreDataService,\n    @Inject(DOCUMENT) private document: any\n  ) {\n    this.isDetailsModeVisible = false;\n  }\n\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\n    this.showStoreDetails(location);\n    this.selectedStoreIndex = index;\n    this.selectedStore = location;\n    this.storeMap.centerMap(\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\n    );\n  }\n\n  selectStoreItemList(index: number): void {\n    this.selectedStoreIndex = index;\n    const storeListItem = this.document.getElementById('item-' + index);\n    storeListItem.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n    });\n  }\n\n  showStoreDetails(location: PointOfService) {\n    this.isDetailsModeVisible = true;\n    this.storeDetails = location;\n  }\n\n  hideStoreDetails() {\n    this.isDetailsModeVisible = false;\n    this.selectedStoreIndex = undefined;\n    this.selectedStore = undefined;\n    this.storeMap.renderMap();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {\n  GeoPoint,\n  SearchConfig,\n  StoreFinderSearchQuery,\n  StoreFinderService,\n  StoreFinderConfig,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-search-result',\n  templateUrl: './store-finder-search-result.component.html',\n})\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\n  locations: any;\n  subscription: Subscription;\n  useMyLocation: boolean;\n  countryCode: string = null;\n  searchConfig: SearchConfig = {\n    currentPage: 0,\n  };\n  radius: number;\n  searchQuery: StoreFinderSearchQuery;\n  geolocation: GeoPoint;\n  locations$: Observable<any>;\n  isLoading$: Observable<any>;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    protected config: StoreFinderConfig\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.route.queryParams.subscribe((params) =>\n      this.initialize(params)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  viewPage(pageNumber: number) {\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation,\n      this.radius\n    );\n  }\n\n  private initialize(params: Params) {\n    this.searchQuery = this.parseParameters(params);\n    this.useMyLocation = params && params.useMyLocation ? true : false;\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\n    this.radius = this.config.googleMaps.radius;\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation,\n      this.radius\n    );\n\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\n  }\n\n  private parseParameters(queryParams: {\n    [key: string]: any;\n  }): StoreFinderSearchQuery {\n    let searchQuery: StoreFinderSearchQuery;\n\n    if (queryParams.query) {\n      searchQuery = { queryText: queryParams.query };\n    } else {\n      searchQuery = { queryText: '' };\n    }\n\n    searchQuery.useMyLocation =\n      queryParams.useMyLocation != null &&\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\n\n    return searchQuery;\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  StoreFinderCoreModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\nimport { IconModule } from './../misc/icon/icon.module';\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ListNavigationModule,\n    NgbTabsetModule,\n    SpinnerModule,\n    UrlModule,\n    StoreFinderCoreModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | LayoutConfig>{\n      cmsComponents: {\n        StoreFinderComponent: {\n          component: StoreFinderComponent,\n          childRoutes: [\n            {\n              path: 'find',\n              component: StoreFinderSearchResultComponent,\n            },\n            {\n              path: 'view-all',\n              component: StoreFinderStoresCountComponent,\n            },\n            {\n              path: 'country/:country',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region/:store',\n              component: StoreFinderStoreComponent,\n            },\n            {\n              path: 'country/:country/:store',\n              component: StoreFinderStoreComponent,\n            },\n          ],\n        },\n      },\n      layoutSlots: {\n        StoreFinderPageTemplate: {\n          slots: ['MiddleContent', 'SideContent'],\n        },\n      },\n    }),\n  ],\n  declarations: [\n    StoreFinderSearchComponent,\n    StoreFinderListComponent,\n    StoreFinderMapComponent,\n    StoreFinderListItemComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreDescriptionComponent,\n    ScheduleComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderStoreComponent,\n  ],\n  exports: [\n    ScheduleComponent,\n    StoreFinderComponent,\n    StoreFinderGridComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderListItemComponent,\n    StoreFinderMapComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderSearchComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderListComponent,\n    StoreFinderStoreDescriptionComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderStoreComponent,\n  ],\n  entryComponents: [\n    StoreFinderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreComponent,\n  ],\n})\nexport class StoreFinderModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-checkout-login',\n  templateUrl: './checkout-login.component.html',\n})\nexport class CheckoutLoginComponent implements OnDestroy {\n  checkoutLoginForm: FormGroup = this.formBuilder.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      emailConfirmation: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch(\n        'email',\n        'emailConfirmation'\n      ),\n    }\n  );\n  sub: Subscription;\n\n  constructor(\n    protected formBuilder: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  onSubmit() {\n    if (this.checkoutLoginForm.valid) {\n      const email = this.checkoutLoginForm.get('email').value;\n      this.activeCartService.addEmail(email);\n\n      if (!this.sub) {\n        this.sub = this.activeCartService.getAssignedUser().subscribe(() => {\n          if (this.activeCartService.isGuestCart()) {\n            this.authRedirectService.redirect();\n          }\n        });\n      }\n    } else {\n      this.checkoutLoginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CheckoutLoginComponent } from './checkout-login.component';\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        GuestCheckoutLoginComponent: {\n          component: CheckoutLoginComponent,\n          guards: [NotCheckoutAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutLoginComponent],\n  exports: [CheckoutLoginComponent],\n  entryComponents: [CheckoutLoginComponent],\n})\nexport class CheckoutLoginModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/index';\n\n@Component({\n  selector: 'cx-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  loginForm: FormGroup;\n\n  constructor(\n    protected auth: AuthService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngOnInit(): void {\n    const routeState = this.winRef.nativeWindow?.history?.state;\n    const prefilledEmail = routeState?.['newUid'];\n\n    this.loginForm = this.fb.group({\n      userId: [\n        prefilledEmail?.length ? prefilledEmail : '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n      password: ['', Validators.required],\n    });\n  }\n\n  submitForm(): void {\n    if (this.loginForm.valid) {\n      this.loginUser();\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  protected loginUser(): void {\n    const { userId, password } = this.loginForm.controls;\n    this.auth.authorize(\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\n      password.value\n    );\n\n    if (!this.sub) {\n      this.sub = this.auth.getUserToken().subscribe((data) => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { FormErrorsModule } from '../../../shared/index';\nimport { LoginFormComponent } from './login-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [LoginFormComponent],\n  exports: [LoginFormComponent],\n  entryComponents: [LoginFormComponent],\n})\nexport class LoginFormModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService, User, UserService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(private auth: AuthService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user$ = this.auth.isUserLoggedIn().pipe(\n      switchMap((isUserLoggedIn) => {\n        if (isUserLoggedIn) {\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  ProtectedRoutesService,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/**\n * Guards the _logout_ route.\n *\n * Takes care of routing the user to a logout page (if available) or redirects to\n * the homepage. If the homepage is protected, the user is redirected\n * to the login route instead.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected routing: RoutingService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutes: ProtectedRoutesService\n  ) {}\n\n  canActivate(): Observable<any> {\n    this.logout();\n\n    return this.cms\n      .hasPage({\n        id: this.semanticPathService.get('logout'),\n        type: PageType.CONTENT_PAGE,\n      })\n      .pipe(\n        tap((hasPage) => {\n          if (!hasPage) {\n            this.redirect();\n          }\n        })\n      );\n  }\n\n  /**\n   * Whenever there is no specific \"logout\" page configured in the CMS,\n   * we redirect after the user is logged out.\n   *\n   * The user gets redirected to the homepage, unless the homepage is protected\n   * (in case of a closed shop). We'll redirect to the login page instead.\n   */\n  protected redirect(): void {\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\n    this.routing.go({ cxRoute });\n  }\n\n  /**\n   * Log user out.\n   *\n   * This is delegated to the `AuthService`.\n   */\n  protected logout(): void {\n    this.auth.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  UserService,\n  UserSignUp,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { sortTitles, CustomFormValidators } from '../../../shared/index';\n\n@Component({\n  selector: 'cx-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  titles$: Observable<Title[]>;\n  loading$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  anonymousConsent$: Observable<{\n    consent: AnonymousConsent;\n    template: string;\n  }>;\n\n  registerForm: FormGroup = this.fb.group(\n    {\n      titleCode: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n      newsletter: new FormControl({\n        value: false,\n        disabled: this.isConsentRequired(),\n      }),\n      termsandconditions: [false, Validators.requiredTrue],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'passwordconf'\n      ),\n    }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected router: RoutingService,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig\n  ) {}\n\n  ngOnInit() {\n    this.titles$ = this.userService.getTitles().pipe(\n      tap((titles) => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map((titles) => {\n        return titles.sort(sortTitles);\n      })\n    );\n\n    this.loading$ = this.userService.getRegisterUserResultLoading();\n    this.registerUserProcessInit();\n\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n    this.subscription.add(\n      this.globalMessageService\n        .get()\n        .pipe(filter((messages) => !!Object.keys(messages).length))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          const messages =\n            globalMessageEntities &&\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\n\n          if (\n            messages &&\n            messages.some((message) => message === 'This field is required.')\n          ) {\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.globalMessageService.add(\n              { key: 'register.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n        })\n    );\n\n    const { registerConsent } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    this.anonymousConsent$ = combineLatest([\n      this.anonymousConsentsService.getConsent(registerConsent),\n      this.anonymousConsentsService.getTemplate(registerConsent),\n    ]).pipe(\n      map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\n        return {\n          consent,\n          template: template ? template.description : '',\n        };\n      })\n    );\n\n    this.subscription.add(\n      this.registerForm.get('newsletter').valueChanges.subscribe(() => {\n        this.toggleAnonymousConsent();\n      })\n    );\n  }\n\n  submitForm(): void {\n    if (this.registerForm.valid) {\n      this.registerUser();\n    } else {\n      this.registerForm.markAllAsTouched();\n    }\n  }\n\n  registerUser(): void {\n    this.userService.register(\n      this.collectDataFromRegisterForm(this.registerForm.value)\n    );\n  }\n\n  titleSelected(title: Title): void {\n    this.registerForm['controls'].titleCode.setValue(title.code);\n  }\n\n  collectDataFromRegisterForm(formData: any): UserSignUp {\n    const { firstName, lastName, email, password, titleCode } = formData;\n\n    return {\n      firstName,\n      lastName,\n      uid: email.toLowerCase(),\n      password,\n      titleCode,\n    };\n  }\n\n  isConsentGiven(consent: AnonymousConsent): boolean {\n    return this.anonymousConsentsService.isConsentGiven(consent);\n  }\n\n  private isConsentRequired(): boolean {\n    const {\n      requiredConsents,\n      registerConsent,\n    } = this.anonymousConsentsConfig?.anonymousConsents;\n\n    if (requiredConsents && registerConsent) {\n      return requiredConsents.includes(registerConsent);\n    }\n\n    return false;\n  }\n\n  private onRegisterUserSuccess(success: boolean): void {\n    if (success) {\n      this.router.go('login');\n      this.globalMessageService.add(\n        { key: 'register.postRegisterMessage' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  toggleAnonymousConsent(): void {\n    const { registerConsent } = this.anonymousConsentsConfig.anonymousConsents;\n\n    if (Boolean(this.registerForm.get('newsletter').value)) {\n      this.anonymousConsentsService.giveConsent(registerConsent);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(registerConsent);\n    }\n  }\n\n  private registerUserProcessInit(): void {\n    this.userService.resetRegisterUserProcessState();\n    this.subscription.add(\n      this.userService.getRegisterUserResultSuccess().subscribe((success) => {\n        this.onRegisterUserSuccess(success);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetRegisterUserProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule, FormErrorsModule } from '../../../shared/index';\nimport { LoginModule } from '../login/login.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          component: RegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [RegisterComponent],\n  exports: [RegisterComponent],\n  entryComponents: [RegisterComponent],\n})\nexport class RegisterComponentModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CheckoutConfigService } from '../../checkout/services/index';\n\n@Component({\n  selector: 'cx-login-register',\n  templateUrl: './login-register.component.html',\n})\nexport class LoginRegisterComponent implements OnInit {\n  loginAsGuest = false;\n\n  constructor(\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    if (this.checkoutConfigService.isGuestCheckout()) {\n      this.loginAsGuest = this.activatedRoute?.snapshot?.queryParams?.[\n        'forced'\n      ];\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CheckoutModule,\n  CmsConfig,\n  I18nModule,\n  NotAuthGuard,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginRegisterComponent } from './login-register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    PageSlotModule,\n    I18nModule,\n    CheckoutModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerRegisterComponent: {\n          component: LoginRegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [LoginRegisterComponent],\n  entryComponents: [LoginRegisterComponent],\n  exports: [LoginRegisterComponent],\n})\nexport class LoginRegisterModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\nimport { LoginRegisterModule } from './login-register/login-register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LoginRegisterModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../shared/index';\nimport { AddToCartModule } from '../cart/index';\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\nimport { WishListComponent } from './components/wish-list/wish-list.component';\n\n@NgModule({\n  imports: [\n    AddToCartModule,\n    CommonModule,\n    I18nModule,\n    MediaModule,\n    RouterModule,\n    StarRatingModule,\n    UrlModule,\n    ItemCounterModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        WishListComponent: {\n          component: WishListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [WishListComponent, WishListItemComponent],\n  entryComponents: [WishListComponent],\n  exports: [WishListComponent, WishListItemComponent],\n})\nexport class WishListModule {}\n","import { NgModule } from '@angular/core';\nimport { HamburgerMenuModule } from '../layout/index';\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\nimport { AsmModule } from './asm/asm.module';\nimport { CartComponentModule } from './cart/cart.module';\nimport { CheckoutComponentModule } from './checkout/checkout.module';\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\nimport {\n  BannerModule,\n  CmsParagraphModule,\n  LinkModule,\n  TabParagraphContainerModule,\n} from './content/index';\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\nimport {\n  AddressBookModule,\n  CloseAccountModule,\n  ConsentManagementModule,\n  ForgotPasswordModule,\n  MyCouponsModule,\n  MyInterestsModule,\n  NotificationPreferenceModule,\n  OrderCancellationModule,\n  OrderDetailsModule,\n  OrderHistoryModule,\n  OrderReturnModule,\n  PaymentMethodsModule,\n  ResetPasswordModule,\n  ReturnRequestDetailModule,\n  ReturnRequestListModule,\n  UpdateEmailModule,\n  UpdatePasswordModule,\n  UpdateProfileModule,\n} from './myaccount/index';\nimport {\n  BreadcrumbModule,\n  CategoryNavigationModule,\n  FooterNavigationModule,\n  NavigationModule,\n  SearchBoxModule,\n} from './navigation/index';\nimport { OrderConfirmationModule } from './order-confirmation/index';\nimport {\n  ProductCarouselModule,\n  ProductFacetNavigationModule,\n  ProductIntroModule,\n  ProductListModule,\n  ProductReferencesModule,\n  ProductTabsModule,\n  StockNotificationModule,\n} from './product/index';\nimport { ProductImagesModule } from './product/product-images/product-images.module';\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\nimport { StoreFinderModule } from './storefinder/store-finder.module';\nimport { UserComponentModule } from './user/user.module';\nimport { WishListModule } from './wish-list/wish-list.module';\n\n@NgModule({\n  imports: [\n    AnonymousConsentManagementBannerModule,\n    AsmModule,\n    HamburgerMenuModule,\n    CmsParagraphModule,\n    LinkModule,\n    BannerModule,\n    CategoryNavigationModule,\n    NavigationModule,\n    FooterNavigationModule,\n    BreadcrumbModule,\n    SearchBoxModule,\n    SiteContextSelectorModule,\n    QualtricsModule,\n    AddressBookModule,\n    OrderHistoryModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n    ProductListModule,\n    ProductFacetNavigationModule,\n    ProductTabsModule,\n    ProductCarouselModule,\n    ProductReferencesModule,\n    OrderDetailsModule,\n    PaymentMethodsModule,\n    UpdateEmailModule,\n    UpdatePasswordModule,\n    UpdateProfileModule,\n    ConsentManagementModule,\n    CloseAccountModule,\n    CartComponentModule,\n    TabParagraphContainerModule,\n    OrderConfirmationModule,\n    StoreFinderModule,\n    ProductImagesModule,\n    ProductSummaryModule,\n    ProductVariantsModule,\n    ProductIntroModule,\n    CheckoutComponentModule,\n    ForgotPasswordModule,\n    ResetPasswordModule,\n    BannerCarouselModule,\n    UserComponentModule,\n    MyCouponsModule,\n    WishListModule,\n    NotificationPreferenceModule,\n    MyInterestsModule,\n    StockNotificationModule,\n  ],\n})\nexport class CmsLibModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductDetailsUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPDPMatcher = getSuffixUrlMatcher({\n      marker: 'p',\n      paramName: 'productCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PDP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / p / :productCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_DETAILS_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_DETAILS_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductDetailsUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          product: {\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductListingUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPLPMatcher = getSuffixUrlMatcher({\n      marker: 'c',\n      paramName: 'categoryCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PLP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / c / :categoryCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_LISTING_URL_MATCHER = new InjectionToken<\n  UrlMatcherFactory\n>('PRODUCT_LISTING_URL_MATCHER', {\n  providedIn: 'root',\n  factory: () =>\n    getProductListingUrlMatcherFactory(\n      inject(UrlMatcherService),\n      inject(DEFAULT_URL_MATCHER)\n    ),\n});\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          category: {\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { Params } from '@angular/router';\nimport { PageContext } from '@spartacus/core';\n\n/**\n * Indicates that a user visited an arbitrary page.\n */\nexport class PageEvent {\n  context: PageContext;\n  semanticRoute?: string;\n  url: string;\n  params: Params;\n}\n\n/**\n * Indicates that a user visited the home page.\n */\nexport class HomePageEvent extends PageEvent {}\n","import { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a cart page.\n */\nexport class CartPageEvent extends PageEvent {}\n","import { Injectable } from '@angular/core';\nimport { ActionsSubject } from '@ngrx/store';\nimport { createFrom, EventService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { PageEvent } from '../page/page.events';\nimport { CartPageEvent } from './cart-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageEventBuilder {\n  constructor(\n    protected actions: ActionsSubject,\n    protected eventService: EventService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(CartPageEvent, this.buildCartPageEvent());\n  }\n\n  protected buildCartPageEvent(): Observable<CartPageEvent> {\n    return this.eventService.get(PageEvent).pipe(\n      filter((pageEvent) => pageEvent.semanticRoute === 'cart'),\n      map((pageEvent) => createFrom(CartPageEvent, pageEvent))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CartPageEventBuilder } from './cart-page-event.builder';\n\n@NgModule({})\nexport class CartPageEventModule {\n  constructor(_cartPageEventBuilder: CartPageEventBuilder) {}\n}\n","import { Injectable } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { RouterNavigatedAction, ROUTER_NAVIGATED } from '@ngrx/router-store';\nimport { ActionsSubject } from '@ngrx/store';\nimport {\n  ActivatedRouterStateSnapshot,\n  createFrom,\n  EventService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HomePageEvent, PageEvent } from './page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageEventBuilder {\n  constructor(\n    protected actions: ActionsSubject,\n    protected eventService: EventService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(PageEvent, this.buildPageEvent());\n    this.eventService.register(HomePageEvent, this.buildHomePageEvent());\n  }\n\n  protected buildPageEvent(): Observable<PageEvent> {\n    return this.getNavigatedEvent().pipe(\n      map((state) =>\n        createFrom(PageEvent, {\n          context: state.context,\n          semanticRoute: state.semanticRoute,\n          url: state.url,\n          params: state.params,\n        })\n      )\n    );\n  }\n\n  protected buildHomePageEvent(): Observable<HomePageEvent> {\n    return this.buildPageEvent().pipe(\n      filter((pageEvent) => pageEvent.semanticRoute === 'home'),\n      map((pageEvent) => createFrom(HomePageEvent, pageEvent))\n    );\n  }\n\n  private getNavigatedEvent(): Observable<ActivatedRouterStateSnapshot> {\n    return this.actions.pipe(\n      ofType<RouterNavigatedAction<ActivatedRouterStateSnapshot>>(\n        ROUTER_NAVIGATED\n      ),\n      map((event) => event.payload.routerState)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PageEventBuilder } from './page-event.builder';\n\n@NgModule({})\nexport class PageEventModule {\n  constructor(_pageEventBuilder: PageEventBuilder) {}\n}\n","import { Category, Price } from '@spartacus/core';\nimport { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a product details page.\n */\nexport class ProductDetailsPageEvent extends PageEvent {\n  categories?: Category[];\n  code?: string;\n  name?: string;\n  price?: Price;\n}\n\n/**\n * Indicates that a user visited a category page.\n */\nexport class CategoryPageResultsEvent extends PageEvent {\n  categoryCode: string;\n  categoryName?: string;\n  numberOfResults: Number;\n}\n\n/**\n * Indicates that the a user visited the search results page,\n * and that the search results have been retrieved.\n */\nexport class SearchPageResultsEvent extends PageEvent {\n  searchTerm: string;\n  numberOfResults: Number;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  createFrom,\n  EventService,\n  ProductSearchService,\n  ProductService,\n} from '@spartacus/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { filter, map, skip, switchMap, take } from 'rxjs/operators';\nimport { PageEvent } from '../page/page.events';\nimport {\n  CategoryPageResultsEvent,\n  ProductDetailsPageEvent,\n  SearchPageResultsEvent,\n} from './product-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductPageEventBuilder {\n  constructor(\n    protected eventService: EventService,\n    protected productService: ProductService,\n    protected productSearchService: ProductSearchService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(\n      SearchPageResultsEvent,\n      this.buildSearchPageResultsEvent()\n    );\n    this.eventService.register(\n      ProductDetailsPageEvent,\n      this.buildProductDetailsPageEvent()\n    );\n    this.eventService.register(\n      CategoryPageResultsEvent,\n      this.buildCategoryResultsPageEvent()\n    );\n  }\n\n  protected buildProductDetailsPageEvent(): Observable<\n    ProductDetailsPageEvent\n  > {\n    return this.eventService.get(PageEvent).pipe(\n      filter((pageEvent) => pageEvent.semanticRoute === 'product'),\n      switchMap((pageEvent) =>\n        this.productService.get(pageEvent.context.id).pipe(\n          filter((product) => Boolean(product)),\n          take(1),\n          map((product) =>\n            createFrom(ProductDetailsPageEvent, {\n              ...pageEvent,\n              categories: product.categories,\n              code: product.code,\n              name: product.name,\n              price: product.price,\n            })\n          )\n        )\n      )\n    );\n  }\n\n  protected buildCategoryResultsPageEvent(): Observable<\n    CategoryPageResultsEvent\n  > {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(PageEvent).pipe(\n      switchMap((pageEvent) => {\n        if (pageEvent?.semanticRoute !== 'category') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) => ({\n            ...pageEvent,\n            ...{\n              categoryCode: pageEvent?.context?.id,\n              numberOfResults: searchResults?.pagination?.totalResults,\n              categoryName: searchResults.breadcrumbs?.[0].facetValueName,\n            },\n          })),\n          map((categoryPage) =>\n            createFrom(CategoryPageResultsEvent, categoryPage)\n          )\n        );\n      })\n    );\n  }\n\n  protected buildSearchPageResultsEvent(): Observable<SearchPageResultsEvent> {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(PageEvent).pipe(\n      switchMap((pageEvent) => {\n        if (pageEvent?.semanticRoute !== 'search') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) => ({\n            ...pageEvent,\n            ...{\n              searchTerm: searchResults?.freeTextSearch,\n              numberOfResults: searchResults?.pagination?.totalResults,\n            },\n          })),\n          map((searchPage) => createFrom(SearchPageResultsEvent, searchPage))\n        );\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ProductPageEventBuilder } from './product-page-event.builder';\n\n@NgModule({})\nexport class ProductPageEventModule {\n  constructor(_productPageEventBuilder: ProductPageEventBuilder) {}\n}\n","import { MediaConfig } from '../../shared/components/media/media.config';\n\nexport const mediaConfig: MediaConfig = {\n  mediaFormats: {\n    mobile: {\n      width: 400,\n    },\n    tablet: {\n      width: 770,\n    },\n    desktop: {\n      width: 1140,\n    },\n    widescreen: {\n      width: 1400,\n    },\n    // product media\n    cartIcon: {\n      width: 65,\n    },\n    thumbnail: {\n      width: 96,\n    },\n    product: {\n      width: 284,\n    },\n    zoom: {\n      width: 515,\n    },\n  },\n};\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\n/**\n * The layout configuration is used to define the overall layout of the storefront.\n * The configuration includes the following aspects:\n * - breakpoint layout (AKA screen layout)\n * - Page sections slot configuration (i.e. header vs footer)\n * - page template slot configuration (i.e. landing page template vs PDP page template)\n * - deferred loading configuration\n *\n * The page slot configurations is directly related to the data in the backend. If you use the\n * Spartacus sample-data, you will have an aligned setup. However, if you introduce custom page\n * templates and/or slots, you most likely need to further adjust or replace this configuration.\n */\nexport const layoutConfig: LayoutConfig = {\n  // deferredLoading: {\n  //   strategy: DeferLoadingStrategy.DEFER,\n  //   intersectionMargin: '50px',\n  // },\n  layoutSlots: {\n    header: {\n      lg: {\n        slots: [\n          'PreHeader',\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n    },\n    navigation: {\n      lg: { slots: [] },\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      pageFold: 'Section2B',\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      pageFold: 'Section2',\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\n    },\n    ProductGridPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsListSlot',\n        'Section4',\n      ],\n    },\n    SearchResultsGridPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsGridSlot',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      lg: {\n        pageFold: 'UpSelling',\n      },\n      pageFold: 'Summary',\n      slots: [\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n    CheckoutLoginPageTemplate: {\n      slots: ['RightContentSlot'],\n    },\n  },\n};\n\n/**\n * @deprecated the b2cLayoutConfig will be dropped with version 4.0.\n *\n * With Spartacus 3.0 we started to align various layout configurations. Moreover, we move\n * into a pattern where layout configurations are shattered through various (lazy loaded) modules.\n */\nexport const b2cLayoutConfig: LayoutConfig = layoutConfig;\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CartPageEventModule } from './cart/cart-page-event.module';\nimport { PageEventModule } from './page/page-event.module';\nimport { ProductPageEventModule } from './product/product-page-event.module';\n\n@NgModule({\n  imports: [CartPageEventModule, PageEventModule, ProductPageEventModule],\n})\nexport class EventsModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  AnonymousConsentsModule,\n  AuthModule,\n  CartModule,\n  CheckoutModule,\n  CmsModule,\n  ConfigInitializerModule,\n  ConfigModule,\n  ConfigValidatorModule,\n  FeaturesConfigModule,\n  GlobalMessageModule,\n  I18nModule,\n  ProcessModule,\n  ProductModule,\n  provideConfigFromMetaTags,\n  StateModule,\n  UserModule,\n} from '@spartacus/core';\nimport { EventsModule } from '../events/events.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MediaModule } from '../shared/components/media/media.module';\nimport { ViewConfigModule } from '../shared/config/view-config.module';\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\n\n@NgModule({\n  imports: [\n    StateModule.forRoot(),\n    AuthModule.forRoot(),\n    AnonymousConsentsModule.forRoot(),\n    ConfigModule.forRoot(),\n    ConfigInitializerModule.forRoot(),\n    ConfigValidatorModule.forRoot(),\n    RoutingModule.forRoot(),\n    I18nModule.forRoot(),\n    CmsModule.forRoot(),\n    GlobalMessageModule.forRoot(),\n    ProcessModule.forRoot(),\n    CartModule.forRoot(),\n    CheckoutModule.forRoot(),\n    UserModule.forRoot(),\n    ProductModule.forRoot(),\n    ViewConfigModule.forRoot(),\n    FeaturesConfigModule.forRoot('2.0'),\n    LayoutModule,\n    MediaModule.forRoot(),\n    EventsModule,\n  ],\n  exports: [LayoutModule],\n  providers: [...provideConfigFromMetaTags()],\n})\nexport class StorefrontFoundationModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  ExternalRoutesModule,\n  OccModule,\n  PersonalizationModule,\n  provideConfig,\n  SiteContextModule,\n  SmartEditModule,\n} from '@spartacus/core';\nimport { AsmModule } from '../cms-components/asm/asm.module';\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\nimport { MainModule } from '../layout/main/main.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n    }),\n\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\n    // since we might have conflicting interceptor logic. See #5461.\n    AsmModule,\n\n    StorefrontFoundationModule,\n    MainModule,\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n\n    SmartEditModule.forRoot(), // should be custom\n    PersonalizationModule.forRoot(), // should be custom\n\n    // opt-in explicitly\n    OccModule.forRoot(),\n    ProductDetailsPageModule,\n    ProductListingPageModule,\n    ExternalRoutesModule.forRoot(),\n  ],\n  exports: [MainModule, StorefrontFoundationModule],\n})\nexport class StorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<StorefrontModule> {\n    return {\n      ngModule: StorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideConfig,\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { layoutConfig, mediaConfig } from './config/index';\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\nimport { StorefrontModule } from './storefront.module';\n\n@NgModule({\n  imports: [\n    StorefrontModule,\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n  ],\n  providers: [\n    provideDefaultConfig({\n      pwa: {\n        enabled: true,\n        addToHomeScreen: true,\n      },\n    }),\n    provideDefaultConfig(layoutConfig),\n    provideDefaultConfig(mediaConfig),\n    provideDefaultConfigFactory(defaultCmsContentConfig),\n  ],\n  exports: [StorefrontModule],\n})\nexport class B2cStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2cStorefrontModule> {\n    return {\n      ngModule: B2cStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { AbstractControl, FormArray, FormGroup } from '@angular/forms';\n\n/**\n * Utils for Angular forms\n */\nexport namespace FormUtils {\n  /**\n   * Calls the native Angular method `#updateValueAndValidity` for the given from control\n   * and all its descendants (in case when it's `FormGroup` or `FormArray`).\n   *\n   * In particular it's useful for triggering re-emission of observables\n   * `valueChanges` and `statusChanges` for all descendant form controls.\n   *\n   * _Note: Dropping this function may be considered, when it's implemented natively\n   * by Angular. See https://github.com/angular/angular/issues/6170_\n   *\n   * @param control form control\n   * @param options additional options\n   * * `emitEvent`: When true or not given (the default), the `statusChanges` and\n   * `valueChanges` observables emit the latest status and value. When false,\n   * it doesn't trigger observables emission.\n   */\n  export function deepUpdateValueAndValidity(\n    control: AbstractControl,\n    options: { emitEvent?: boolean } = {}\n  ): void {\n    if (control instanceof FormGroup || control instanceof FormArray) {\n      Object.values(control.controls).forEach(\n        (childControl: AbstractControl) => {\n          deepUpdateValueAndValidity(childControl, options);\n        }\n      );\n    }\n\n    control.updateValueAndValidity({\n      onlySelf: true, // avoid calling `#updateValueAndValidity` for all ancestors\n      emitEvent: options.emitEvent,\n    });\n  }\n}\n","/*\n * Public API Surface of storefrontlib\n */\n\nexport * from './cms-components/index';\nexport * from './cms-pages/index';\nexport * from './cms-structure/index';\nexport * from './events/index';\nexport * from './layout/index';\nexport * from './recipes/index';\nexport * from './recipes/storefront.module';\nexport * from './shared/index';\nexport * from './storefront-config';\nexport * from './utils/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {defaultAnonymousConsentLayoutConfig as ɵx} from './cms-components/anonymous-consent-management/default-anonymous-consent-layout.config';\nexport {AsmLoaderModule as ɵy,asmFactory as ɵz} from './cms-components/asm/asm-loader.module';\nexport {AsmMainUiComponent as ɵbb} from './cms-components/asm/asm-main-ui/asm-main-ui.component';\nexport {AsmSessionTimerComponent as ɵbf} from './cms-components/asm/asm-session-timer/asm-session-timer.component';\nexport {FormatTimerPipe as ɵbg} from './cms-components/asm/asm-session-timer/format-timer.pipe';\nexport {AsmToggleUiComponent as ɵbi} from './cms-components/asm/asm-toggle-ui/asm-toggle-ui.component';\nexport {CSAgentLoginFormComponent as ɵbd} from './cms-components/asm/csagent-login-form/csagent-login-form.component';\nexport {CustomerEmulationComponent as ɵbh} from './cms-components/asm/customer-emulation/customer-emulation.component';\nexport {CustomerSelectionComponent as ɵbe} from './cms-components/asm/customer-selection/customer-selection.component';\nexport {defaultAsmLayoutConfig as ɵbj} from './cms-components/asm/default-asm-layout.config';\nexport {AsmComponentService as ɵbc} from './cms-components/asm/services/asm-component.service';\nexport {AsmEnablerService as ɵba} from './cms-components/asm/services/asm-enabler.service';\nexport {CartNotEmptyGuard as ɵbt} from './cms-components/cart';\nexport {MultiLinePipe as ɵbm} from './cms-components/checkout/components/checkout-progress/multiline-titles.pipe';\nexport {CostCenterComponent as ɵbr} from './cms-components/checkout/components/cost-center/cost-center.component';\nexport {CostCenterModule as ɵbq} from './cms-components/checkout/components/cost-center/cost-center.module';\nexport {PaymentTypeComponent as ɵbp} from './cms-components/checkout/components/payment-type/payment-type.component';\nexport {PaymentTypeModule as ɵbo} from './cms-components/checkout/components/payment-type/payment-type.module';\nexport {defaultCheckoutConfig as ɵbl} from './cms-components/checkout/config/default-checkout-config';\nexport {CheckoutAuthGuard as ɵbs} from './cms-components/checkout/guards';\nexport {CheckoutStepsSetGuard as ɵbn} from './cms-components/checkout/guards/checkout-steps-set.guard';\nexport {defaultIconConfig as ɵbk} from './cms-components/misc/icon/default-icon.config';\nexport {defaultQualtricsConfig as ɵbu} from './cms-components/misc/qualtrics/config/default-qualtrics-config';\nexport {MyCouponsComponentService as ɵca} from './cms-components/myaccount/my-coupons/my-coupons.component.service';\nexport {ReturnRequestService as ɵbx} from './cms-components/myaccount/order/return-request-detail/return-request.service';\nexport {LoginRegisterComponent as ɵby} from './cms-components/user/login-register/login-register.component';\nexport {CmsPageGuardService as ɵbv} from './cms-structure/guards/cms-page-guard.service';\nexport {initPageTemplateStyle as ɵa} from './cms-structure/page/page-layout/page-layout.module';\nexport {PageTemplateStyleService as ɵbz} from './cms-structure/page/page-layout/page-template-style.service';\nexport {pwaConfigurationFactory as ɵb,pwaFactory as ɵc} from './cms-structure/pwa/pwa.module';\nexport {addCmsRoute as ɵcb} from './cms-structure/routing/cms-route/add-cms-route';\nexport {defaultRoutingConfig as ɵcd,defaultStorefrontRoutesConfig as ɵcc} from './cms-structure/routing/default-routing-config';\nexport {htmlLangProvider as ɵce,setHtmlLangAttribute as ɵcf} from './cms-structure/seo/html-lang-provider';\nexport {getStructuredDataFactory as ɵd} from './cms-structure/seo/structured-data/structured-data.module';\nexport {CmsRoutesImplService as ɵbw} from './cms-structure/services/cms-routes-impl.service';\nexport {EventsModule as ɵch} from './events/events.module';\nexport {AutoFocusDirective as ɵk} from './layout/a11y/keyboard-focus/autofocus/auto-focus.directive';\nexport {AutoFocusService as ɵt} from './layout/a11y/keyboard-focus/autofocus/auto-focus.service';\nexport {BaseFocusDirective as ɵp} from './layout/a11y/keyboard-focus/base/base-focus.directive';\nexport {BaseFocusService as ɵq} from './layout/a11y/keyboard-focus/base/base-focus.service';\nexport {BlockFocusDirective as ɵn} from './layout/a11y/keyboard-focus/block/block-focus.directive';\nexport {EscapeFocusDirective as ɵl} from './layout/a11y/keyboard-focus/escape/escape-focus.directive';\nexport {EscapeFocusService as ɵs} from './layout/a11y/keyboard-focus/escape/escape-focus.service';\nexport {FOCUS_ATTR as ɵe} from './layout/a11y/keyboard-focus/keyboard-focus.model';\nexport {LockFocusDirective as ɵh} from './layout/a11y/keyboard-focus/lock/lock-focus.directive';\nexport {LockFocusService as ɵw} from './layout/a11y/keyboard-focus/lock/lock-focus.service';\nexport {PersistFocusDirective as ɵm} from './layout/a11y/keyboard-focus/persist/persist-focus.directive';\nexport {PersistFocusService as ɵr} from './layout/a11y/keyboard-focus/persist/persist-focus.service';\nexport {TabFocusDirective as ɵj} from './layout/a11y/keyboard-focus/tab/tab-focus.directive';\nexport {TabFocusService as ɵu} from './layout/a11y/keyboard-focus/tab/tab-focus.service';\nexport {TrapFocusDirective as ɵi} from './layout/a11y/keyboard-focus/trap/trap-focus.directive';\nexport {TrapFocusService as ɵv} from './layout/a11y/keyboard-focus/trap/trap-focus.service';\nexport {VisibleFocusDirective as ɵo} from './layout/a11y/keyboard-focus/visible/visible-focus.directive';\nexport {skipLinkFactory as ɵf} from './layout/a11y/skip-link/skip-link.module';\nexport {defaultDirectionConfig as ɵcg} from './layout/direction/config/default-direction.config';\nexport {initHtmlDirAttribute as ɵg} from './layout/direction/direction.module';\nexport {DatePickerFormatterService as ɵci} from './shared/components/date-picker/date-picker-formatter.service';\nexport {DateTimePickerFormatterService as ɵcj} from './shared/components/date-time-picker/date-time-picker-formatter.service';"],"names":["AsmCoreModule","CoreRoutingModule"],"mappings":"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"}