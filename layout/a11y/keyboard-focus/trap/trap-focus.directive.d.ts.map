{"version":3,"file":"trap-focus.directive.d.ts","sources":["trap-focus.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit } from '@angular/core';\nimport { TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\nimport { TrapFocusService } from './trap-focus.service';\n/**\n * Directive that keeps the focus inside the focusable child elements,\n * also known as a _focus trap_.\n */\nexport declare class TrapFocusDirective extends TabFocusDirective implements OnInit {\n    protected elementRef: ElementRef;\n    protected service: TrapFocusService;\n    protected defaultConfig: TrapFocusConfig;\n    protected config: TrapFocusConfig;\n    handleTrapDown: (event: KeyboardEvent) => void;\n    handleTrapUp: (event: KeyboardEvent) => void;\n    constructor(elementRef: ElementRef, service: TrapFocusService);\n    /**\n     * Moves the focus of the element reference up or down, depending on the increment.\n     * The focus of the element is trapped to avoid it from going out of the group.\n     *\n     * @param event UIEvent that is used to get the target element. The event is blocked\n     *   from standard execution and further bubbling.\n     * @param increment indicates whether the next or previous is focussed.\n     */\n    protected moveFocus(event: UIEvent, increment: number): void;\n}\n"]}