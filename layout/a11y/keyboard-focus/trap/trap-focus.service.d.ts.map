{"version":3,"file":"trap-focus.service.d.ts","sources":["trap-focus.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { MOVE_FOCUS, TrapFocusConfig, TrapFocusType } from '../keyboard-focus.model';\nimport { TabFocusService } from '../tab/tab-focus.service';\nexport declare class TrapFocusService extends TabFocusService {\n    /**\n     * Indicates whether any of the child elements of the host are focusable.\n     *\n     * @param host `HTMLElement` that is used to query the focusable elements.\n     */\n    hasFocusableChildren(host: HTMLElement): boolean;\n    /**\n     * Focus the next or previous element of all available focusable elements.\n     * The focus is _trapped_ in case there's no next or previous available element.\n     * The focus will automatically move the start or end of the list.\n     */\n    moveFocus(host: HTMLElement, config: TrapFocusConfig, increment: MOVE_FOCUS, event: UIEvent): void;\n    protected getTrapStart(trap: TrapFocusType): boolean;\n    protected getTrapEnd(trap: TrapFocusType): boolean;\n}\n"]}