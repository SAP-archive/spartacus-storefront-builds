{"version":3,"file":"auto-focus.service.d.ts","sources":["auto-focus.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { EscapeFocusService } from '../escape/escape-focus.service';\nimport { AutoFocusConfig, PersistFocusConfig } from '../keyboard-focus.model';\nexport declare class AutoFocusService extends EscapeFocusService {\n    /**\n     * Returns the first focusable child element of the host element.\n     */\n    findFirstFocusable(host: HTMLElement, config?: AutoFocusConfig): HTMLElement;\n    /**\n     * Indicates whether any of the focusabe child elements is focused.\n     */\n    hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean;\n    /**\n     * Returns the element that has a persisted focus state.\n     *\n     * @param host the `HTMLElement` used to query for focusable children\n     * @param group the optional group for the persistent state, to separate different focus\n     *   groups and remain the persistence\n     */\n    protected getPersisted(host: HTMLElement, group?: string): HTMLElement;\n}\n"]}