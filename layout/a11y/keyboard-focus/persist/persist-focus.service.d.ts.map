{"version":3,"file":"persist-focus.service.d.ts","sources":["persist-focus.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { BaseFocusService } from '../base/base-focus.service';\nimport { PersistFocusConfig } from '../keyboard-focus.model';\n/**\n * Shared service to persist the focus for an element or a group\n * of elements. The persisted element focus can be used to persist\n * the focus for a DOM tree, so that the focus remains after a repaint\n * or reoccurs when a DOM tree is \"unlocked\".\n */\nexport declare class PersistFocusService extends BaseFocusService {\n    protected focus: Map<string, string>;\n    get(group?: string): string;\n    /**\n     * Persist the keyboard focus state for the given key. The focus is stored globally\n     * or for the given group.\n     */\n    set(key: string, group?: string): void;\n    /**\n     * Clears the persisted keyboard focus state globally or for the given group.\n     */\n    clear(group?: string): void;\n    /**\n     * Returns the group for the host element based on the configured group or\n     * by the `data-cx-focus-group` attribute stored on the host.\n     */\n    getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string;\n}\n"]}