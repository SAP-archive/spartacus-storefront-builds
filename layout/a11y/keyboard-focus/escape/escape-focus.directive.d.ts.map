{"version":3,"file":"escape-focus.directive.d.ts","sources":["escape-focus.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnInit } from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\nimport { EscapeFocusService } from './escape-focus.service';\n/**\n * Directive to focus the host element whenever the `escape` key is captured.\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\n * on a tree of elements. Each time the escape key is used, the focus will\n * move up in the DOM tree.\n *\n */\nexport declare class EscapeFocusDirective extends PersistFocusDirective implements OnInit {\n    protected elementRef: ElementRef;\n    protected service: EscapeFocusService;\n    protected defaultConfig: EscapeFocusConfig;\n    protected config: EscapeFocusConfig;\n    esc: EventEmitter<boolean>;\n    /**\n     * Handles the escape key event.\n     * @param event the native keyboard event which contains the escape keydown event\n     */\n    handleEscape(event: KeyboardEvent): void;\n    constructor(elementRef: ElementRef, service: EscapeFocusService);\n    ngOnInit(): void;\n}\n"]}