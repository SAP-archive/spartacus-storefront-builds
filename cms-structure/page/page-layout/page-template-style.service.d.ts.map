{"version":3,"file":"page-template-style.service.d.ts","sources":["page-template-style.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ComponentRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PageLayoutService } from './page-layout.service';\n/**\n * Service that adds the page template as a className to the application root element. If the root\n * element is cx-storefront, the resulting DOM would look like:\n *\n * ```html\n * <cx-storefront class=\"LandingPageTemplate\">\n *  [...]\n * <cx-storefront>\n * ```\n */\nexport declare class PageTemplateStyleService implements OnDestroy {\n    protected pageLayoutService: PageLayoutService;\n    /**\n     * Keeps the subscriptions for this service so that we can unsubscribe on destroy.\n     */\n    protected subscription: Subscription;\n    /**\n     * Holds the current page template, so we can remove previous page templates from the element classList.\n     */\n    protected currentTemplate: string;\n    constructor(pageLayoutService: PageLayoutService);\n    initialize(ref: ComponentRef<any>): void;\n    /**\n     * Adds the page template as a style class to the given element. If any page template\n     * was added before, we clean it up.\n     */\n    protected addStyleClass(el: HTMLElement, template: string): void;\n    ngOnDestroy(): void;\n}\n"]}