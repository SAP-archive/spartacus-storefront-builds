{"version":3,"file":"page-layout.service.d.ts","sources":["page-layout.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CmsService, Page } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT, LayoutConfig, LayoutSlotConfig, SlotConfig } from '../../../layout/config/layout-config';\nimport { PageLayoutHandler } from './page-layout-handler';\nexport declare class PageLayoutService {\n    private cms;\n    private config;\n    private breakpointService;\n    private handlers;\n    constructor(cms: CmsService, config: LayoutConfig, breakpointService: BreakpointService, handlers: PageLayoutHandler[]);\n    private warnLogMessages;\n    private logSlots;\n    getSlots(section?: string): Observable<string[]>;\n    /**\n     * Returns an observable with the last page slot above-the-fold\n     * for the given pageTemplate / breakpoint.\n     *\n     * The page fold is configurable in the `LayoutConfig` for each page layout.\n     */\n    getPageFoldSlot(pageTemplate: string): Observable<string>;\n    private resolveSlots;\n    get page$(): Observable<Page>;\n    get templateName$(): Observable<string>;\n    /**\n     * load slots from the layout configuration. The breakpoint is used\n     * to load a specific configuration for the given breakpoint. If there's\n     * no configuration available for the given breakpoint the default slot\n     * configuration is returned.\n     */\n    protected getSlotConfig(templateUid: string, configAttribute: string, section?: string, breakpoint?: BREAKPOINT): SlotConfig;\n    protected getSlotConfigForSection(templateUid: string, configAttribute: string, section?: string, breakpoint?: BREAKPOINT): SlotConfig;\n    /**\n     * Returns a list of slots for a breakpoint specific configuration\n     * If there's no specific configuration for the breakpoint,\n     * the closest available configuration will be returned.\n     */\n    protected getResponsiveSlotConfig(layoutSlotConfig: LayoutSlotConfig, configAttribute: string, breakpoint?: BREAKPOINT): SlotConfig;\n    /**\n     * In order to help developers, we print some detailed log information in\n     * case there's no layout configuration available for the given page template\n     * or section. Additionally, the slot positions are printed in the console\n     * in a format that can be copied / paste to the configuration.\n     */\n    private logMissingLayoutConfig;\n}\n"]}