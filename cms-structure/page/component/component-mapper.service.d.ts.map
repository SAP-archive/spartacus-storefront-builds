{"version":3,"file":"component-mapper.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/storefrontlib/cms-structure/page/component/component-mapper.service.d.ts"],"sourcesContent":["import { ComponentFactoryResolver, Renderer2 } from '@angular/core';\nimport { CmsConfig } from '@spartacus/core';\nexport declare class ComponentMapperService {\n    protected componentFactoryResolver: ComponentFactoryResolver;\n    protected config: CmsConfig;\n    protected document: any;\n    protected platform: any;\n    missingComponents: string[];\n    private loadedWebComponents;\n    constructor(componentFactoryResolver: ComponentFactoryResolver, config: CmsConfig, document: any, platform: any);\n    /**\n     * @desc\n     * returns a web component for the CMS typecode.\n     *\n     * The mapping of CMS components to web componetns requires a mapping.\n     * This is configurable when the module is loaded.\n     *\n     * For example:\n     *\n     *  {\n     *      'CMSLinkComponent': 'LinkComponent',\n     *      'SimpleResponsiveBannerComponent': 'SimpleResponsiveBannerComponent',\n     *      [etc.]\n     *  }\n     *\n     * The type codes are dynamic since they depend on the implementation.\n     * Customer will add, extend or ingore standard components.\n     *\n     * @param typeCode the component type\n     */\n    protected getComponent(typeCode: string): any;\n    getComponentFactoryByCode(typeCode: string): any;\n    isWebComponent(typeCode: string): boolean;\n    initWebComponent(componentType: string, renderer: Renderer2): Promise<string>;\n}\n"],"names":[],"mappings":"AAAA;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;"}