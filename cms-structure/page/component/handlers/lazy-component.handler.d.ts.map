{"version":3,"file":"lazy-component.handler.d.ts","sources":["lazy-component.handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ComponentRef, ElementRef, Injector, NgModuleRef, ViewContainerRef } from '@angular/core';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { DefaultComponentHandler } from './default-component.handler';\nimport { ComponentHandler } from './component-handler';\n/**\n * Lazy component handler used for launching lazy loaded cms components implemented\n * as native Angular components.\n */\nexport declare class LazyComponentHandler implements ComponentHandler {\n    protected defaultHandler: DefaultComponentHandler;\n    constructor(defaultHandler: DefaultComponentHandler);\n    /**\n     * We want to mach dynamic import signature () => import('')\n     */\n    hasMatch(componentMapping: CmsComponentMapping): boolean;\n    private isNotClass;\n    getPriority(): Priority;\n    launcher(componentMapping: CmsComponentMapping, viewContainerRef: ViewContainerRef, elementInjector?: Injector, module?: NgModuleRef<any>): Observable<{\n        elementRef: ElementRef;\n        componentRef?: ComponentRef<any>;\n    }>;\n}\n"]}