{"version":3,"file":"page-slot.service.d.ts","sources":["page-slot.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nexport declare class PageSlotService {\n    protected cmsComponentsService: CmsComponentsService;\n    protected platformId: any;\n    protected document: any;\n    protected prerenderedSlots: string[] | undefined;\n    constructor(cmsComponentsService: CmsComponentsService, platformId: any, document: any);\n    /**\n     * Finds all slots visible in the SSR pre-rendered DOM\n     */\n    protected resolvePrerenderedSlots(): void;\n    /**\n     * Indicates if certain slot should be rendered instantly.\n     *\n     * It's especially useful when transitioning from SSR to CSR application,\n     * where we don't want to apply deferring logic to slots that are visible\n     * to avoid unnecessary flickering.\n     */\n    shouldNotDefer(slot: string): boolean;\n    /**\n     * Returns the defer options for the given component. If the wrapping\n     * page slot is prerendered, we would ignore the defer options altogether.\n     */\n    getComponentDeferOptions(slot: string, componentType: string): IntersectionOptions;\n}\n"]}