{"version":3,"file":"cms-components.service.d.ts","sources":["cms-components.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Injector } from '@angular/core';\nimport { CmsComponentMapping, CmsConfig, DeferLoadingStrategy } from '@spartacus/core';\nimport { Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { FeatureModulesService } from './feature-modules.service';\nexport declare class CmsComponentsService {\n    protected config: CmsConfig;\n    protected platformId: Object;\n    protected featureModules?: FeatureModulesService;\n    private missingComponents;\n    private mappings;\n    private mappingResolvers;\n    /**\n     * @deprecated since 2.1\n     * constructor(config: CmsConfig, platformId: Object);\n     */\n    constructor(config: CmsConfig, platformId: Object, featureModules?: FeatureModulesService);\n    /**\n     * Should be called to make sure all component mappings are determined,\n     * especially lazy loaded ones.\n     *\n     * It's recommended way to make sure all other methods of CmsComponentService\n     * will be able to work synchronously for asked component types and avoid risk\n     * of potential errors that could be thrown otherwise.\n     */\n    determineMappings(componentTypes: string[]): Observable<string[]>;\n    private getFeatureMappingResolver;\n    getInjectors(componentType: string): Injector[];\n    /**\n     * Return collection of component mapping configuration for specified list of\n     * component types.\n     *\n     * If component mapping can't be determined synchronously, for example, lazy\n     * loaded one, it will throw an error.\n     *\n     * To make sure component mapping is available, determineMappings()\n     * should be called and completed first.\n     */\n    getMapping(componentType: string): CmsComponentMapping;\n    /**\n     * Checks, if component should be rendered as some components\n     * could be disabled for server side renderings\n     */\n    shouldRender(componentType: string): boolean;\n    /**\n     * Return DeferLoadingStrategy for component type.\n     */\n    getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy;\n    /**\n     * Get cms driven child routes for components\n     */\n    getChildRoutes(componentTypes: string[]): Route[];\n    /**\n     * Get cms driven guards for components\n     */\n    getGuards(componentTypes: string[]): any[];\n    /**\n     * Get i18n keys associated with components\n     */\n    getI18nKeys(componentTypes: string[]): string[];\n}\n"]}