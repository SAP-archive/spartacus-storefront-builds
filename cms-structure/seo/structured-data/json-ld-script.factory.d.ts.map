{"version":3,"file":"json-ld-script.factory.d.ts","sources":["json-ld-script.factory.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { RendererFactory2 } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport { SeoConfig } from '../config';\nexport declare class JsonLdScriptFactory {\n    protected platformId: string;\n    protected winRef: WindowRef;\n    protected rendererFactory: RendererFactory2;\n    protected sanitizer: DomSanitizer;\n    protected config: SeoConfig;\n    constructor(platformId: string, winRef: WindowRef, rendererFactory: RendererFactory2, sanitizer: DomSanitizer, config: SeoConfig);\n    build(schema: {}[]): void;\n    /**\n     * Indicates whether json ld data should be generated.\n     *\n     * This is only required on the server, but can be enabled in dev mode.\n     */\n    isJsonLdRequired(): boolean;\n    /**\n     * Creates a json-ld script element. The element is created one, and appended\n     * to the html body element.\n     *\n     * ```html\n     * <script id=\"json-ld\" type=\"application/ld+json\">\n     * </script>\n     * ```\n     */\n    protected getJsonLdScriptElement(): HTMLScriptElement;\n    /**\n     * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n     *\n     * The given schema is not trusted, as malicious code could be injected (XSS)\n     * into the json-ld script.\n     */\n    sanitize(schema: {}): string;\n}\n"]}