{"version":3,"file":"json-ld.directive.d.ts","sources":["json-ld.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n *\n * This helper directive is actually not used in Spartacus, as Spartacus\n * appends json-ld the data to the document body.\n *\n * This directive can however be used by merchants to write static schema data\n * to the DOM in a save way.\n */\nexport declare class JsonLdDirective {\n    protected jsonLdScriptFactory: JsonLdScriptFactory;\n    protected sanitizer: DomSanitizer;\n    /**\n     * Writes the schema data to a json-ld script element.\n     */\n    set cxJsonLd(schema: string | {});\n    jsonLD: SafeHtml;\n    constructor(jsonLdScriptFactory: JsonLdScriptFactory, sanitizer: DomSanitizer);\n    /**\n     * Returns the json-ld script tag with the schema data. The script is\n     * _bypassing_ sanitization explicitly.\n     */\n    protected generateJsonLdScript(schema: string | {}): SafeHtml;\n}\n"]}