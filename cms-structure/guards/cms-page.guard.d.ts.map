{"version":3,"file":"cms-page.guard.d.ts","sources":["cms-page.guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot, CmsService, ProtectedRoutesGuard, RoutingConfigService, RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsPageGuardService } from './cms-page-guard.service';\nexport declare class CmsPageGuard implements CanActivate {\n    protected routingService: RoutingService;\n    protected cmsService: CmsService;\n    protected protectedRoutesGuard: ProtectedRoutesGuard;\n    protected service: CmsPageGuardService;\n    protected routingConfig: RoutingConfigService;\n    static guardName: string;\n    constructor(routingService: RoutingService, cmsService: CmsService, protectedRoutesGuard: ProtectedRoutesGuard, service: CmsPageGuardService, routingConfig: RoutingConfigService);\n    /**\n     * Tries to load the CMS page data for the anticipated route and returns:\n     * - `true` - if it can be activated\n     * - `false` - if it cannot be activated\n     * - `UrlTree` - if user should be redirected to a given `UrlTree`\n     *\n     * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\n     * based on their configuration (`cmsComponents` config).\n     *\n     * For more, see docs of the `CmsPageGuardService.canActivatePage`.\n     */\n    canActivate(route: CmsActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;\n    /**\n     * Returns whether we should reload the CMS page data, even when it was loaded before.\n     */\n    private shouldReload;\n}\n"]}