{"version":3,"file":"order-overview.component.d.ts","sources":["order-overview.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Address, CostCenter, DeliveryMode, PaymentDetails, TranslationService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Card } from '../card/card.component';\nexport declare class OrderOverviewComponent {\n    protected translation: TranslationService;\n    order: any;\n    set setOrder(order: any);\n    constructor(translation: TranslationService);\n    getReplenishmentCodeCardContent(orderCode: string): Observable<Card>;\n    getReplenishmentActiveCardContent(active: boolean): Observable<Card>;\n    getReplenishmentStartOnCardContent(isoDate: string): Observable<Card>;\n    getReplenishmentFrequencyCardContent(frequency: string): Observable<Card>;\n    getReplenishmentNextDateCardContent(isoDate: string): Observable<Card>;\n    getOrderCodeCardContent(orderCode: string): Observable<Card>;\n    getOrderCurrentDateCardContent(isoDate?: string): Observable<Card>;\n    getOrderStatusCardContent(status: string): Observable<Card>;\n    getPurchaseOrderNumber(poNumber: string): Observable<Card>;\n    getMethodOfPaymentCardContent(hasPaymentInfo: PaymentDetails): Observable<Card>;\n    getCostCenterCardContent(costCenter: CostCenter): Observable<Card>;\n    getAddressCardContent(deliveryAddress: Address): Observable<Card>;\n    getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card>;\n    getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card>;\n    getBillingAddressCardContent(billingAddress: Address): Observable<Card>;\n    private getDate;\n}\n"]}