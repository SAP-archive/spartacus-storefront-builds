{"version":3,"file":"date-picker.service.d.ts","sources":["date-picker.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\n * Service that provides the placeholder and input pattern for date pickers. This is\n * used in Spartacus to support browser that won't support the native html5 date picker\n * using `<input type=\"date\">`.\n *\n * While the placeholder is configurable, you should be aware that the placeholder format\n * defaults to `yyyy-mm-dd` to align with Safaris limited support of ISO 8601.\n * Another consideration is the support of date formats in the backend. In case you change\n * this format, you might need to serialize the date to the supported date format in the\n * backend.\n *\n */\nexport declare class DatePickerService {\n    get placeholder(): string;\n    /**\n     * The default date pattern is based on the placeholder string;\n     */\n    get pattern(): string;\n    /**\n     * Validates if the string based date value is a valid date.\n     */\n    isValidFormat(date: string, pattern?: string): boolean;\n    /**\n     * Since Safari doesn't support proper date formats (ISO 8601), we need to do this\n     * ourselves. We cannot rely on `new Date('2020-1-1')`. This will fail, only\n     * `new Date('2020-01-01')` works.\n     */\n    getDate(value: string): Date;\n}\n"]}