{"version":3,"file":"date-time-picker-formatter.service.d.ts","sources":["date-time-picker-formatter.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\n * Service responsible for converting date-like strings to/from formats compatible with the `<input type=\"datetime-local\">`\n * HTML element and valid strings compatible with the `Date` object.\n *\n * Date values used are relative to the local timezone of the user.\n */\nexport declare class DateTimePickerFormatterService {\n    /**\n     * Convert date string into a string format compatable with the browser's native `<input type=\"datetime-local\">` HTML element.\n     * @param value: date string to convert\n     *\n     * @example\n     * With UTC-0 local offset, `toNative('2010-01-01T00:00+0000')` returns `'2010-01-01T00:00'`.\n     */\n    toNative(value: string): string;\n    /**\n     * Convert datetime-local native string into a valid datetime string.\n     * @param value: datetime-local string to convert\n     *\n     * @example\n     * With UTC-0 locale offset, `toModel('2010-01-01T00:00')` returns `'2010-01-01T00:00:00+00:00'`.\n     */\n    toModel(value: string): string;\n    /**\n     * Returns the local timezone in a format that can be appended to a date-like string.\n     * @param invert (default: false): returns the opposite operator relative to the local timezone\n     *\n     * @example\n     * When locale is set to a CEST timezone, `getLocalTimezoneOffset()` returns '+02:00'\n     * and `getLocalTimezoneOffset(true)` returns '-02:00'\n     */\n    protected getLocalTimezoneOffset(invert?: boolean): string;\n    /**\n     * Format date string into a format compatable with the browser's native `<input type=\"datetime-local\">` HTML element.\n     * @param dateString: date string to convert\n     * @param offset: offset to append to date string\n     *\n     * @example\n     * With UTC-0 local offset, `formatDateStringWithTimezone('2010-01-01T00:00+0000', '+00:00')` returns `'2010-01-01T00:00+00:00'`.\n     */\n    protected formatDateStringWithTimezone(dateString: string, offset: string): string;\n}\n"]}