{"version":3,"file":"modal.directive.d.ts","sources":["modal.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Router, RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nexport interface ModalDirectiveOptions {\n    /**\n     * Action to perform after click\n     */\n    type: 'dismiss' | 'close';\n    /**\n     * Reason for dismissing or closing the modal\n     */\n    reason?: string;\n}\n/**\n * Service to control the behavior of the DismissModalDirective\n */\nexport declare class ModalDirectiveService {\n    /**\n     * Handler for the click event on the directive\n     *\n     * @param options.type    Action to perform after click - close or dismiss\n     * @param options.reason  Reason for dismissing or closing the modal\n     * @param url             url (optional) - exists only when the directive is also a `routerLink`.\n     */\n    onClick(options: ModalDirectiveOptions, activeModal: NgbActiveModal, url?: string): void;\n}\n/**\n * Directive to dismiss the modal on click\n */\nexport declare class ModalDirective {\n    protected service: ModalDirectiveService;\n    protected router: Router;\n    protected activeModal: NgbActiveModal;\n    protected routerLink: RouterLink;\n    protected routerLinkWithHref: RouterLinkWithHref;\n    /**\n     * Action to perform, when the directive is clicked - dismiss or close.\n     *\n     * Reason can be given via input `cxModalReason`, which fallbacks to URL of the `routerLink` (if exists on the same element).\n     */\n    cxModal: ModalDirectiveOptions['type'];\n    /**\n     * Reason for closing/dismissing the modal. Fallbacks to URL of the `routerLink` (if exists on the same element).\n     */\n    cxModalReason: ModalDirectiveOptions['reason'];\n    constructor(service: ModalDirectiveService, router: Router, activeModal: NgbActiveModal, routerLink: RouterLink, routerLinkWithHref: RouterLinkWithHref);\n    /**\n     * Returns URL in case when the directive is in the scope of a `routerLink` directive at the same time.\n     */\n    protected getUrl(): string | undefined;\n    onClick(): void;\n    /**\n     * Converts the directive's inputs to the shape of modal directive options\n     */\n    protected get options(): ModalDirectiveOptions;\n}\n"]}