{"version":3,"file":"generic-link.component.d.ts","sources":["generic-link.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, SimpleChanges } from '@angular/core';\nimport { Params, Router } from '@angular/router';\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\nexport declare class GenericLinkComponent implements OnChanges {\n    protected router: Router;\n    constructor(router: Router);\n    /**\n     * Pattern matching string starting with `http://` or `https://`.\n     */\n    private readonly PROTOCOL_REGEX;\n    /**\n     * Used to split url into 2 parts:\n     * 1. the path\n     * 2. query params + hash fragment\n     */\n    private readonly URL_SPLIT;\n    /**\n     * Parsed parts of the @Input `url`, when it's a local URL.\n     * It should not be used when the `url` is external.\n     * @see `url`\n     */\n    private routeParts;\n    url: string | any[];\n    target: string;\n    id: string;\n    class: string;\n    style: string;\n    title: string;\n    /**\n     * Returns true when the @Input `url` is a string starting with `http://` or `https://`.\n     */\n    isExternalUrl(): boolean;\n    get rel(): string;\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * The part with the path of the local url.\n     */\n    get routerUrl(): any[];\n    /**\n     * The part with the query params of the local url.\n     */\n    get queryParams(): Params;\n    /**\n     * The part with the hash fragment of the local url.\n     */\n    get fragment(): string;\n    /**\n     * Parses the given url and sets the property `urlParts` accordingly.\n     */\n    private setUrlParts;\n    /**\n     * Parses the given string into 3 parts:\n     * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\n     * - query params (as an object)\n     * - hash fragment (string)\n     */\n    private splitUrl;\n    /**\n     * Prepends a leading slash to the given URL string, in case it doesn't have it.\n     */\n    private getAbsoluteUrl;\n}\n"]}