{"version":3,"file":"carousel.service.d.ts","sources":["carousel.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nexport declare class CarouselService {\n    private winRef;\n    constructor(winRef: WindowRef);\n    /**\n     * The number of items per slide is calculated by the help of\n     * the item width and the available width of the host element.\n     * This appoach makes it possible to place the carousel in different\n     * layouts. Instead of using the page breakpoints, the host size is\n     * taken into account.\n     *\n     * Since there's no element resize API available, we use the\n     * window `resize` event, so that we can adjust the number of items\n     * whenever the window got resized.\n     */\n    getItemsPerSlide(nativeElement: HTMLElement, itemWidth: string): Observable<number>;\n    /**\n     * Calculates the number of items per given hostSize.  calculated based on the given\n     * intended size in pixels or percentages. The\n     *\n     * @param availableWidth The available width in pixels for the carousel items.\n     * @param itemWidth The width per carousel item, in px or percentage.\n     */\n    private calculateItems;\n}\n"]}