{"version":3,"file":"spartacus-storefront.js","sources":["ng://@spartacus/storefront/shared/components/modal/modal-ref.ts","ng://@spartacus/storefront/shared/components/modal/modal.service.ts","ng://@spartacus/storefront/cms-components/product/current-product.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng://@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng://@spartacus/storefront/shared/directives/auto-focus/auto-focus.directive.ts","ng://@spartacus/storefront/shared/directives/auto-focus/auto-focus.directive.module.ts","ng://@spartacus/storefront/shared/components/card/card.component.ts","ng://@spartacus/storefront/shared/components/card/card.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng://@spartacus/storefront/layout/config/layout-config.ts","ng://@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng://@spartacus/storefront/shared/components/media/media.service.ts","ng://@spartacus/storefront/shared/components/media/media.component.ts","ng://@spartacus/storefront/shared/components/media/media.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng://@spartacus/storefront/shared/directives/only-number/only-number.directive.ts","ng://@spartacus/storefront/shared/directives/only-number/only-number.directive.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng://@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng://@spartacus/storefront/shared/utils/forms/form-utils.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng://@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/cart.module.ts","ng://@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng://@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-config.service.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng://@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng://@spartacus/storefront/layout/layout.module.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng://@spartacus/storefront/cms-structure/page/component/component-mapper.service.ts","ng://@spartacus/storefront/cms-structure/page/component/cx-api.service.ts","ng://@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng://@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng://@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng://@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng://@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng://@spartacus/storefront/cms-structure/seo/seo.module.ts","ng://@spartacus/storefront/layout/main/storefront.component.ts","ng://@spartacus/storefront/layout/main/main.module.ts","ng://@spartacus/storefront/cms-structure/services/cms-mapping.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.component.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.module.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng://@spartacus/storefront/cms-components/content/link/link.component.ts","ng://@spartacus/storefront/cms-components/content/link/link.module.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-card/address-card.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng://@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng://@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng://@spartacus/storefront/cms-components/user/login/login.component.ts","ng://@spartacus/storefront/cms-components/user/login/login.module.ts","ng://@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng://@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng://@spartacus/storefront/cms-components/user/register/register.component.ts","ng://@spartacus/storefront/cms-components/user/register/register.module.ts","ng://@spartacus/storefront/cms-components/user/user.module.ts","ng://@spartacus/storefront/cms-components/cms-lib.module.ts","ng://@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng://@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng://@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng://@spartacus/storefront/cms-structure/routing/routing.module.ts","ng://@spartacus/storefront/recipes/storefront-foundation.module.ts","ng://@spartacus/storefront/recipes/storefront.module.ts","ng://@spartacus/storefront/recipes/b2c-storefront.module.ts"],"sourcesContent":["import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductService, RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  getProduct(): Observable<Product> {\n    return this.routingService.getRouterState().pipe(\n      map(state => state.state.params['productCode']),\n      filter(Boolean),\n      switchMap((productCode: string) => this.productService.get(productCode))\n    );\n  }\n}\n","export enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n}\n\nexport abstract class IconConfig {\n  icon?: {\n    /**\n     * Each icon type can be configured with a so-called symbol. The symbol will\n     * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n     * a font based icon. The following configuration would map to a fontawesome\n     * icon:\n     *\n     * icon: {\n     *   symbols: {\n     *     CART: 'fas fa-shopping-cart'\n     *   }\n     * }\n     */\n    symbols?: {\n      [ICON_TYPE: string]: string;\n    };\n\n    /**\n     * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n     * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n     * is used for the SVG xlink reference.\n     */\n    resources?: IconConfigResource[];\n  };\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: ICON_TYPE[];\n}\n\nexport enum IconResourceType {\n  SVG = 'svg',\n  LINK = 'link',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(protected winRef: WindowRef, protected config: IconConfig) {}\n\n  /**\n   * Indicates whether the given icon type is configured to use SVG.\n   */\n  useSvg(iconType: ICON_TYPE): boolean {\n    return (\n      this.config.icon.resources &&\n      !!this.config.icon.resources.find(\n        res =>\n          res.types &&\n          res.type === IconResourceType.SVG &&\n          res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config has been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  getSvgPath(iconType: ICON_TYPE): string {\n    const svgResource = this.config.icon.resources.find(\n      res =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (resource && resource.url) {\n      if (!this.loadedResources.includes(resource.url)) {\n        this.loadedResources.push(resource.url);\n        const head = this.winRef.document.getElementsByTagName('head')[0];\n        const link = this.winRef.document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = resource.url;\n        head.appendChild(link);\n      }\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.icon.resources) {\n      return;\n    }\n\n    let resource = this.config.icon.resources.find(\n      res =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.icon.resources.find(\n        res => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  private getSymbol(iconType: ICON_TYPE | string) {\n    if (\n      this.config.icon &&\n      this.config.icon.symbols &&\n      this.config.icon.symbols[iconType]\n    ) {\n      return this.config.icon.symbols[iconType];\n    }\n  }\n}\n","import { Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE } from './icon.model';\n\n@Component({\n  selector: 'cx-icon',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The type of the icon which maps to the icon link\n   * in the svg icon sprite.\n   */\n  _type: ICON_TYPE;\n  @Input('type')\n  set type(type: ICON_TYPE) {\n    this._type = type;\n    this.addStyleClasses(type);\n  }\n\n  /**\n   * Keeps the given style classes so that we can\n   * clean them up when the icon changes\n   */\n  @HostBinding('class') styleClasses = '';\n\n  /**\n   * Style class names from the host element are taken into account\n   * when classes are set dynamically.\n   */\n  private staticStyleClasses: string;\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>\n  ) {}\n\n  /**\n   * Indicates whether the icon is configured to use SVG or not.\n   */\n  get useSvg(): boolean {\n    return this.iconLoader.useSvg(this._type);\n  }\n\n  /**\n   * Returns the path to the svg symbol. The path could include an\n   * external URL to an svg (sprite) file, but can also reference\n   * an existing SVG symbol in the DOM.\n   */\n  get svgPath(): string {\n    return this.iconLoader.getSvgPath(this._type);\n  }\n\n  /**\n   * Adds the style classes and the link resource (if availabe).\n   */\n  private addStyleClasses(type: ICON_TYPE) {\n    if (this.useSvg) {\n      return;\n    }\n\n    if (this.staticStyleClasses === undefined) {\n      this.staticStyleClasses = this.elementRef.nativeElement.classList.value\n        ? this.elementRef.nativeElement.classList.value + ' '\n        : '';\n    }\n\n    this.styleClasses =\n      this.staticStyleClasses + this.iconLoader.getStyleClasses(type);\n\n    this.iconLoader.addLinkResource(type);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Config, ConfigModule } from '@spartacus/core';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\nimport { IconConfig } from './icon.model';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule, ConfigModule.withConfig(fontawesomeIconConfig)],\n  providers: [{ provide: IconConfig, useExisting: Config }],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Cart, CartService, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n  increment: boolean;\n\n  quantity = 0;\n\n  @ViewChild('dialog', { static: false, read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = this.fb.group({});\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: CartService,\n    protected fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.entry$ = this.entry$.pipe(\n      tap(entry => {\n        if (entry) {\n          const { code } = entry.product;\n          if (!this.form.controls[code]) {\n            this.form.setControl(code, this.createEntryFormGroup(entry));\n          } else {\n            const entryForm = this.form.controls[code] as FormGroup;\n            entryForm.controls.quantity.setValue(entry.quantity);\n          }\n          this.form.markAsPristine();\n        }\n      })\n    );\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  removeEntry(item: OrderEntry): void {\n    this.cartService.removeEntry(item);\n    delete this.form.controls[item.product.code];\n    this.dismissModal('Removed');\n  }\n\n  updateEntry({ item, updatedQuantity }): void {\n    this.cartService.updateEntry(item.entryNumber, updatedQuantity);\n  }\n\n  private createEntryFormGroup(entry: OrderEntry): FormGroup {\n    return this.fb.group({\n      entryNumber: entry.entryNumber,\n      quantity: entry.quantity,\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CartService, OrderEntry } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ModalRef, ModalService } from '../../../shared/components/modal/index';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock = false;\n  quantity = 1;\n  increment = false;\n\n  cartEntry$: Observable<OrderEntry>;\n\n  subscription: Subscription;\n\n  constructor(\n    protected cartService: CartService,\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    if (this.productCode) {\n      this.cartEntry$ = this.cartService.getEntry(this.productCode);\n      this.hasStock = true;\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(Boolean))\n        .subscribe(product => {\n          this.productCode = product.code;\n          this.quantity = 1;\n\n          if (\n            product.stock &&\n            product.stock.stockLevelStatus !== 'outOfStock' &&\n            product.stock.stockLevel > 0\n          ) {\n            this.maxQuantity = product.stock.stockLevel;\n            this.hasStock = true;\n          } else {\n            this.hasStock = false;\n          }\n\n          this.cartEntry$ = this.cartService.getEntry(this.productCode);\n\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    if (!this.productCode || this.quantity <= 0) {\n      return;\n    }\n    // check item is already present in the cart\n    // so modal will have proper header text displayed\n    this.cartService\n      .getEntry(this.productCode)\n      .subscribe(entry => {\n        if (entry) {\n          this.increment = true;\n        }\n        this.openModal();\n        this.cartService.addEntry(this.productCode, this.quantity);\n        this.increment = false;\n      })\n      .unsubscribe();\n  }\n\n  private openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.entry$ = this.cartEntry$;\n    modalInstance.cart$ = this.cartService.getActive();\n    modalInstance.loaded$ = this.cartService.getLoaded();\n    modalInstance.quantity = this.quantity;\n    modalInstance.increment = this.increment;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[cxAutoFocus]',\n})\nexport class AutoFocusDirective implements AfterViewInit {\n  constructor(private hostElement: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.hostElement.nativeElement.focus();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AutoFocusDirective } from './auto-focus.directive';\n\n@NgModule({\n  declarations: [AutoFocusDirective],\n  exports: [AutoFocusDirective],\n})\nexport class AutoFocusDirectiveModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n  @Input()\n  fitToContainer = false;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { CardComponent } from './card.component';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map(totalWidth => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the itesm can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n}\n","export enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\nexport abstract class LayoutConfig {\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\n  breakpoints?: {\n    [BREAKPOINT.xs]?: number;\n    [BREAKPOINT.sm]?: number;\n    [BREAKPOINT.md]?: number;\n    [BREAKPOINT.lg]?: number;\n  };\n  layoutSlots?: LayoutSlotConfig;\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { fromEvent, Observable, of } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  startWith,\n} from 'rxjs/operators';\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\n\nconst DEFAULT_BREAKPOINTS = {\n  [BREAKPOINT.xs]: 576,\n  [BREAKPOINT.sm]: 768,\n  [BREAKPOINT.md]: 992,\n  [BREAKPOINT.lg]: 1200,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\n\n  getSize(breakpoint: BREAKPOINT): number {\n    return this.config.breakpoints\n      ? this.config.breakpoints[breakpoint]\n      : DEFAULT_BREAKPOINTS[breakpoint];\n  }\n\n  get breakpoint$(): Observable<BREAKPOINT> {\n    if (!this.window) {\n      return of(BREAKPOINT.xs);\n    }\n    return fromEvent(this.window, 'resize').pipe(\n      debounceTime(300),\n      startWith({ target: this.window }),\n      map(event => this.getBreakpoint((<Window>event.target).innerWidth)),\n      distinctUntilChanged()\n    );\n  }\n\n  get breakpoints(): BREAKPOINT[] {\n    return [\n      BREAKPOINT.xs,\n      BREAKPOINT.sm,\n      BREAKPOINT.md,\n      BREAKPOINT.lg,\n      BREAKPOINT.xl,\n    ];\n  }\n\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    const breakpoint = this.getClosest(windowWidth);\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\n  }\n\n  protected getClosest(windowWidth?: number): BREAKPOINT {\n    if (!windowWidth) {\n      windowWidth = this.window.innerWidth;\n    }\n\n    return windowWidth < this.getSize(BREAKPOINT.xs)\n      ? BREAKPOINT.xs\n      : this.breakpoints.reverse().find(br => windowWidth >= this.getSize(br));\n  }\n\n  get window(): Window {\n    return this.winRef.nativeWindow;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '@spartacus/core';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport { Media, MediaFormats } from './media.model';\n\n/** the default format is used for browsers that do not support   */\nconst DEFAULT_MEDIA_FORMAT = 'tablet';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  constructor(\n    protected config: OccConfig,\n    protected breakpointService: BreakpointService\n  ) {}\n\n  private get mediaFormats(): MediaFormats[] {\n    return [\n      {\n        code: 'mobile',\n        threshold: this.breakpointService.getSize(BREAKPOINT.xs),\n      },\n      {\n        code: 'tablet',\n        threshold: this.breakpointService.getSize(BREAKPOINT.sm),\n      },\n      {\n        code: 'desktop',\n        threshold: this.breakpointService.getSize(BREAKPOINT.md),\n      },\n      {\n        code: 'widescreen',\n        threshold: this.breakpointService.getSize(BREAKPOINT.lg),\n      },\n    ];\n  }\n\n  getMedia(container, format?: string, alt?: string): Media {\n    return {\n      src: this.getMainImage(container, format),\n      srcset: this.getSrcSet(container),\n      alt: alt || this.getAlt(container, format),\n    };\n  }\n\n  private getMainImage(media, format?: string): string {\n    if (media && media[format || DEFAULT_MEDIA_FORMAT]) {\n      return this.getImageUrl(media[format || DEFAULT_MEDIA_FORMAT].url);\n    } else if (media && media.url) {\n      return this.getImageUrl(media.url);\n    } else {\n      return null;\n    }\n  }\n\n  private getAlt(media, format?: string): string {\n    if (!media) {\n      return undefined;\n    } else if (media[format || DEFAULT_MEDIA_FORMAT]) {\n      return media[format || DEFAULT_MEDIA_FORMAT].altText;\n    } else if (media.altText) {\n      return media.altText;\n    }\n  }\n\n  /**\n   * builds a set of images aligned with the breakpoints\n   */\n  private getSrcSet(media): string {\n    if (!media) {\n      return undefined;\n    }\n    const srcset = this.mediaFormats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.getImageUrl(media[format.code].url)} ${\n          format.threshold\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  private getImageUrl(url: string): string {\n    if (!url) {\n      return null;\n    }\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\n  }\n\n  private getBaseUrl(): string {\n    return (\n      this.config.backend.media.baseUrl || this.config.backend.occ.baseUrl || ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Media } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container: any;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  private create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container,\n      this.format,\n      this.alt\n    );\n    if (!this.media.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  private handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst COUNTER_CONTROL_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line */\n  useExisting: forwardRef(() => ItemCounterComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  providers: [COUNTER_CONTROL_ACCESSOR],\n})\nexport class ItemCounterComponent\n  implements OnInit, ControlValueAccessor, OnChanges, OnDestroy {\n  @ViewChild('itemCounterInput', { static: false })\n  public input: ElementRef;\n  @ViewChild('incrementBtn', { static: false })\n  public incrementBtn: ElementRef;\n  @ViewChild('decrementBtn', { static: false })\n  public decrementBtn: ElementRef;\n\n  @Input()\n  value = 0;\n  @Input()\n  step = 1;\n  @Input()\n  min: number;\n  @Input()\n  max: number;\n  @Input()\n  async = false;\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isValueChangeable = false;\n\n  @Output()\n  update = new EventEmitter<number>();\n\n  focus: boolean;\n\n  isValueOutOfRange = false;\n  inputValue: FormControl = new FormControl({\n    disabled: this.isValueChangeable,\n  });\n\n  subscription: Subscription;\n\n  ngOnInit() {\n    this.writeValue(this.min || 0);\n    this.subscription = this.inputValue.valueChanges\n      .pipe(debounceTime(300))\n      .subscribe(value => {\n        if (value) {\n          this.manualChange(Number(value));\n        }\n      });\n  }\n\n  ngOnChanges() {\n    if (this.cartIsLoading) {\n      this.inputValue.disable({\n        onlySelf: true,\n        emitEvent: false,\n      });\n    } else {\n      this.inputValue.enable({\n        onlySelf: true,\n        emitEvent: false,\n      });\n    }\n  }\n\n  constructor(private renderer: Renderer2) {}\n\n  onTouch: Function = () => {};\n  onModelChange: Function = (_rating: number) => {};\n\n  /**\n   * If value is too small it will be set to min, if is too big it will be set to max.\n   */\n  adjustValueInRange(incomingValue: number): number {\n    return incomingValue < this.min || !this.min\n      ? this.min\n      : incomingValue > this.max || !this.max\n      ? this.max\n      : incomingValue;\n  }\n\n  /**\n   * Update model value and refresh input\n   */\n  manualChange(newValue: number): void {\n    newValue = this.adjustValueInRange(newValue);\n    this.updateValue(newValue);\n    /* We use the value from the input, however, this value\n      is not the correct value that should be displayed. The correct value to display\n      is this.value, which the parent updates if the async call succeed. If the call\n      fails, then the input will need to display this.value, and not what the user\n      recently typed in */\n    this.renderer.setProperty(this.input.nativeElement, 'value', newValue);\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    const handlers = {\n      ArrowDown: () => this.decrement(),\n      ArrowUp: () => this.increment(),\n    };\n\n    if (handlers[event.code]) {\n      handlers[event.code]();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.focus = false;\n    event.preventDefault();\n    event.stopPropagation();\n    this.onTouch();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.focus = true;\n    event.preventDefault();\n    event.stopPropagation();\n    this.onTouch();\n  }\n\n  /**\n   * Verify value that it can be incremented, if yes it does that.\n   */\n  increment(): void {\n    this.manualChange(this.value + this.step);\n    this.setFocus(true);\n  }\n\n  /**\n   * Verify value that it can be decremented, if yes it does that.\n   */\n  decrement(): void {\n    this.manualChange(this.value - this.step);\n    this.setFocus(false);\n  }\n\n  // ControlValueAccessor interface\n\n  registerOnTouched(fn: Function): void {\n    this.onTouch = fn;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  writeValue(value: number): void {\n    this.value = value || this.min || 0;\n    this.onModelChange(this.value);\n  }\n\n  /**\n   * Set up new value for input and emit event outside\n   */\n  updateValue(updatedQuantity: number): void {\n    if (!this.async) {\n      // If the async flag is true, then the parent component is responsible for updating the form\n      this.writeValue(updatedQuantity);\n    }\n\n    // Additionally, we emit a change event, so that users may optionally do something on change\n    this.update.emit(updatedQuantity);\n    this.onTouch();\n  }\n\n  /**\n   * Determines which HTML element should have focus at a given time\n   */\n  setFocus(isIncremented: boolean): void {\n    if (this.isMaxOrMinValueOrBeyond()) {\n      this.input.nativeElement.focus();\n    } else if (isIncremented) {\n      this.incrementBtn.nativeElement.focus();\n    } else {\n      this.decrementBtn.nativeElement.focus();\n    }\n  }\n\n  isMaxOrMinValueOrBeyond(): boolean {\n    return this.value >= this.max || this.value <= this.min;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[cxOnlyNumber]',\n})\nexport class OnlyNumberDirective {\n  previousValue = '';\n  integerUnsigned = '^[0-9]*$';\n  /**\n   * Class constructor\n   * @param hostElement\n   */\n  constructor(private hostElement: ElementRef, private renderer: Renderer2) {}\n\n  /**\n   * Event handler for host's change event\n   */\n  @HostListener('change')\n  onChange() {\n    this.validateValue(this.hostElement.nativeElement.value);\n  }\n\n  /**\n   * Event handler for host's change event\n   */\n  @HostListener('input')\n  onInput() {\n    this.validateValue(this.hostElement.nativeElement.value);\n  }\n\n  /**\n   * Event handler for host's paste event\n   * @param e\n   */\n  @HostListener('paste', ['$event'])\n  onPaste(e: ClipboardEvent) {\n    const value = e.clipboardData.getData('text/plain');\n    this.validateValue(value);\n    e.preventDefault();\n  }\n\n  /**\n   * Event handler for host's keyup event\n   * @param e\n   */\n  @HostListener('keyup', ['$event'])\n  onKeyUp(e: KeyboardEvent): void {\n    const value = e.target['value'];\n    this.validateValue(value);\n  }\n\n  /**\n   * Event handler for host's keydown event\n   * @param e\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent): void {\n    const originalValue: string = e.target['value'];\n    const key: string = this.getName(e);\n    const controlOrCommand = e.ctrlKey === true || e.metaKey === true;\n\n    // allowed keys apart from numeric characters\n    const allowedKeys = [\n      'Backspace',\n      'ArrowLeft',\n      'ArrowRight',\n      'Escape',\n      'Tab',\n    ];\n    // allow some non-numeric characters\n    if (\n      allowedKeys.includes(key) ||\n      // Allow: Ctrl+A and Command+A\n      (key === 'a' && controlOrCommand) ||\n      // Allow: Ctrl+C and Command+C\n      (key === 'c' && controlOrCommand) ||\n      // Allow: Ctrl+V and Command+V\n      (key === 'v' && controlOrCommand) ||\n      // Allow: Ctrl+X and Command+X\n      (key === 'x' && controlOrCommand)\n    ) {\n      // let it happen, don't do anything\n      return;\n    }\n\n    // save value before keydown event\n    this.previousValue = originalValue;\n\n    // allow number characters only\n    const isNumber = new RegExp(this.integerUnsigned).test(key);\n    if (isNumber) {\n      return;\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Test whether value is a valid number or not\n   * @param value\n   */\n  validateValue(value: string): void {\n    value = value.replace(/[^0-9]+/g, '');\n    this.renderer.setProperty(this.hostElement.nativeElement, 'value', value);\n  }\n\n  /**\n   * Get key's name\n   * @param e\n   */\n  getName(e: KeyboardEvent): string {\n    return e.key;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OnlyNumberDirective } from './only-number.directive';\n\n@NgModule({\n  declarations: [OnlyNumberDirective],\n  exports: [OnlyNumberDirective],\n})\nexport class OnlyNumberDirectiveModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ItemCounterComponent } from './item-counter.component';\nimport { OnlyNumberDirectiveModule } from '../../directives/only-number/only-number.directive.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OnlyNumberDirectiveModule,\n  ],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { Component, Input } from '@angular/core';\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent {\n  private readonly protocolRegex: RegExp = /^https?:\\/\\//i;\n\n  @Input() url: string | any[];\n  @Input() target: string;\n  @Input() class: string;\n  @Input() id: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  get routerUrl(): any[] {\n    if (typeof this.url === 'string') {\n      return [this.getAbsoluteUrl(this.url)];\n    }\n    return this.url;\n  }\n\n  isExternalUrl(): boolean {\n    return typeof this.url === 'string' && this.protocolRegex.test(this.url);\n  }\n\n  private getAbsoluteUrl(url: string) {\n    return url.startsWith('/') ? this.url : '/' + this.url;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\nconst PAGE_FIRST = 1;\nconst PAGE_WINDOW_SIZE = 3;\n\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  @Input() pagination: PaginationModel;\n  @Input() hideOnSinglePage = false;\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  // Because pagination model uses indexes starting from 0,\n  // add 1 to get current page number\n  private getCurrentPageNumber() {\n    return this.pagination.currentPage + 1;\n  }\n\n  getPagePrevious(): number {\n    return this.getCurrentPageNumber() - 1;\n  }\n\n  getPageNext(): number {\n    return this.getCurrentPageNumber() + 1;\n  }\n\n  getPageIndicies(): Array<number> {\n    return Array(this.pagination.totalPages);\n  }\n\n  // Gets the minimum index of page numbers that can be shown by being within the page window range\n  getPageWindowMinIndex(): number {\n    return (\n      Math.floor(this.pagination.currentPage / PAGE_WINDOW_SIZE) *\n      PAGE_WINDOW_SIZE\n    );\n  }\n\n  // Gets the maximum index of page numbers that can be shown by being within the page window range\n  getPageWindowMaxIndex(): number {\n    return (\n      Math.floor(this.pagination.currentPage / PAGE_WINDOW_SIZE) *\n        PAGE_WINDOW_SIZE +\n      2\n    );\n  }\n\n  hasPages(): boolean {\n    return this.pagination.totalPages > 0;\n  }\n\n  onFirstPage(): boolean {\n    return this.pagination.currentPage === 0;\n  }\n\n  onLastPage(): boolean {\n    return this.pagination.currentPage === this.pagination.totalPages - 1;\n  }\n\n  onPageIndex(index: number): boolean {\n    return this.pagination.currentPage === index;\n  }\n\n  hidePageIndex(index: number): boolean {\n    return (\n      (this.getPageWindowMinIndex() > index ||\n        this.getPageWindowMaxIndex() < index) &&\n      (index > 0 && index < this.pagination.totalPages - 1)\n    );\n  }\n\n  showDots(index: number): boolean {\n    return (\n      this.hidePageIndex(index) &&\n      (index === this.getPageWindowMaxIndex() + 1 ||\n        index === this.getPageWindowMinIndex() - 1)\n    );\n  }\n\n  clickPageNo(page: number): number {\n    // Change page on valid index\n    if (\n      page >= PAGE_FIRST &&\n      page <= this.pagination.totalPages &&\n      page !== this.getCurrentPageNumber()\n    ) {\n      this.pageChange(page);\n      return page;\n    }\n\n    // Page stays the same on invalid index\n    return this.pagination.currentPage;\n  }\n\n  pageChange(page: number): void {\n    this.viewPageEvent.emit(page - 1);\n  }\n\n  showPagination() {\n    return !(this.hideOnSinglePage && this.pagination.totalPages <= 1);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule],\n  declarations: [PaginationComponent, SortingComponent],\n  exports: [PaginationComponent, SortingComponent],\n})\nexport class ListNavigationModule {}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap(items =>\n        this.getContext(context).pipe(\n          switchMap(ctx => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map(ctx => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe(service => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map(ctx => this.getInjectedService(ctx)),\n      filter(Boolean)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map(data => data.context),\n        map(ctx => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  ContextServiceMap,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextModule,\n    IconModule,\n  ],\n  providers: [SiteContextComponentService],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent implements OnInit {\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interation is not provided.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = false;\n\n  /**\n   * The rating will be used to render some colorful stars in the UI.\n   */\n  @Input() rating: number;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  @Output() change = new EventEmitter<number>();\n\n  private initialRate = 0;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(el: ElementRef, renderer: Renderer2); // tslint:disable-line\n  /**\n   * @deprecated since version 1.0.2\n   *  Use constructor(el: ElementRef, renderer: Renderer2) instead\n   *\n   *  TODO(issue:#3803) deprecated since 1.0.2\n   */\n  constructor(el: ElementRef);\n  constructor(protected el: ElementRef, protected renderer?: Renderer2) {}\n\n  ngOnInit(): void {\n    this.setRate(this.rating, true);\n  }\n\n  setRate(value: number, force?: boolean): void {\n    if (!this.disabled || force) {\n      // TODO(issue:#3803) deprecated since 1.0.2\n      if (this.renderer) {\n        this.renderer.setAttribute(\n          this.el.nativeElement,\n          'style',\n          `--star-fill:${value || this.initialRate};`\n        );\n      } else {\n        this.el.nativeElement.style.setProperty(\n          '--star-fill',\n          value || this.initialRate\n        );\n      }\n    }\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { FormGroup } from '@angular/forms';\n\n/**\n * Utility class when working with forms.\n */\nexport class FormUtils {\n  /**\n   *\n   * Checks is the `formControlName` field valid in the provided `form`.\n   *\n   * If it's NOT valid, the method returns `true`.\n   *\n   * @param form a form whose field to check\n   * @param formControlName a field name\n   * @param submitted is the form submitted\n   */\n  static isNotValidField(\n    form: FormGroup,\n    formControlName: string,\n    submitted: boolean\n  ): boolean {\n    return (\n      form.get(formControlName).invalid &&\n      (submitted ||\n        (form.get(formControlName).touched && form.get(formControlName).dirty))\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { CartService, PromotionResult } from '@spartacus/core';\nimport { Item } from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n})\nexport class CartItemListComponent implements OnInit {\n  @Input()\n  isReadOnly = false;\n\n  @Input()\n  hasHeader = true;\n\n  @Input()\n  items: Item[] = [];\n\n  @Input()\n  potentialProductPromotions: PromotionResult[] = [];\n\n  @Input()\n  cartIsLoading = false;\n\n  form: FormGroup = this.fb.group({});\n\n  constructor(protected cartService: CartService, protected fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.items.forEach(item => {\n      const { code } = item.product;\n      if (!this.form.controls[code]) {\n        this.form.setControl(code, this.createEntryFormGroup(item));\n      } else {\n        const entryForm = this.form.controls[code] as FormGroup;\n        entryForm.controls.quantity.setValue(item.quantity);\n      }\n    });\n  }\n\n  removeEntry(item: Item): void {\n    this.cartService.removeEntry(item);\n    delete this.form.controls[item.product.code];\n  }\n\n  updateEntry({\n    item,\n    updatedQuantity,\n  }: {\n    item: any;\n    updatedQuantity: number;\n  }): void {\n    this.cartService.updateEntry(item.entryNumber, updatedQuantity);\n  }\n\n  getPotentialProductPromotionsForItem(item: Item): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    if (\n      this.potentialProductPromotions &&\n      this.potentialProductPromotions.length > 0\n    ) {\n      for (const promotion of this.potentialProductPromotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private createEntryFormGroup(entry): FormGroup {\n    return this.fb.group({\n      entryNumber: entry.entryNumber,\n      quantity: entry.quantity,\n    });\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumendEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumendEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumendEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nexport interface Item {\n  product?: any;\n  quantity?: any;\n  basePrice?: any;\n  totalPrice?: any;\n  updateable?: boolean;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n})\nexport class CartItemComponent implements OnInit {\n  @Input()\n  compact = false;\n  @Input()\n  item: Item;\n  @Input()\n  potentialProductPromotions: any[];\n  @Input()\n  isReadOnly = false;\n  @Input()\n  cartIsLoading = false;\n\n  @Output()\n  remove = new EventEmitter<any>();\n  @Output()\n  update = new EventEmitter<any>();\n  @Output()\n  view = new EventEmitter<any>();\n\n  @Input()\n  parent: FormGroup;\n\n  ngOnInit() {}\n\n  isProductOutOfStock(product) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  updateItem(updatedQuantity: number) {\n    this.update.emit({ item: this.item, updatedQuantity });\n  }\n\n  removeItem() {\n    this.remove.emit(this.item);\n  }\n\n  viewItem() {\n    this.view.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule, MediaModule } from '../../../shared/index';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { AutoFocusDirectiveModule } from '../../../shared/directives/auto-focus/auto-focus.directive.module';\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    RouterModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n        },\n      },\n    }),\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    AutoFocusDirectiveModule,\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Cart, CartService, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n\n  constructor(protected cartService: CartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n    this.cartLoaded$ = this.cartService.getLoaded();\n  }\n\n  getAllPromotionsForCart(cart: Cart): any[] {\n    const potentialPromotions = [];\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\n    potentialPromotions.push(...(cart.potentialProductPromotions || []));\n\n    const appliedPromotions = [];\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\n    appliedPromotions.push(...(cart.appliedProductPromotions || []));\n\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartDetailsComponent } from './cart-details.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n  entryComponents: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Cart, CartService, RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    private cartService: CartService,\n    private routingService: RoutingService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.cartService.getActive().pipe(\n      map(cart => {\n        if (this.isEmpty(cart)) {\n          this.routingService.go({ cxRoute: 'home' });\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CartService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\n\n@Injectable()\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(private cartService: CartService) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      return combineLatest([slots$, this.cartService.getActive()]).pipe(\n        map(([slots, cart]) => {\n          if (cart.totalItems) {\n            return slots.filter(slot => slot !== 'EmptyCartMiddleContent');\n          } else {\n            return slots.filter(\n              slot => slot !== 'TopContent' && slot !== 'CenterRightContentSlot'\n            );\n          }\n        })\n      );\n    }\n    return slots$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Cart, OrderEntry, CartService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n\n  constructor(protected cartService: CartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  UrlModule,\n  ConfigModule,\n  CmsConfig,\n  I18nModule,\n} from '@spartacus/core';\nimport { CartTotalsComponent } from './cart-totals.component';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n    CartSharedModule,\n    I18nModule,\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n  entryComponents: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.cartService.getActive().pipe(\n    startWith({ deliveryItemsQuantity: 0 }),\n    map(cart => cart.deliveryItemsQuantity || 0)\n  );\n\n  total$: Observable<string> = this.cartService.getActive().pipe(\n    filter(cart => !!cart.totalPrice),\n    map(cart => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected cartService: CartService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n    UrlModule,\n    IconModule,\n    I18nModule,\n  ],\n  declarations: [MiniCartComponent],\n  entryComponents: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\n\n@NgModule({\n  imports: [NgbModule, CartDetailsModule, CartTotalsModule, CartSharedModule],\n  exports: [\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n  ],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useClass: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","import { CheckoutStep } from '../model/checkout-step.model';\n\nexport abstract class CheckoutConfig {\n  checkout?: {\n    steps: Array<CheckoutStep>;\n  };\n}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutConfig } from './checkout-config';\nimport { CheckoutStepType } from '../model/checkout-step.model';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\n\nimport { CheckoutConfig } from '../config/checkout-config';\nimport { Observable, of } from 'rxjs';\nimport { RoutingConfigService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private config: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return of(\n      this.router.parseUrl(\n        this.routingConfigService.getRouteConfig(\n          this.config.checkout.steps[0].routeName\n        ).paths[0]\n      )\n    );\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AuthGuard, CmsConfig, Config, ConfigModule } from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [AuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  providers: [{ provide: CheckoutConfig, useExisting: Config }],\n  declarations: [CheckoutOrchestratorComponent],\n  entryComponents: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CartService, Cart } from '@spartacus/core';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected cartService: CartService) {\n    this.cart$ = this.cartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  entryComponents: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n})\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit() {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  entryComponents: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport {\n  RoutingService,\n  CartService,\n  Cart,\n  RoutingConfigService,\n} from '@spartacus/core';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected cartService: CartService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  cart$: Observable<Cart>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.cart$ = this.cartService.getActive();\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  entryComponents: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { CheckoutStep } from '../../model/checkout-step.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  Config,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressComponent],\n  entryComponents: [CheckoutProgressComponent],\n  exports: [CheckoutProgressComponent],\n  providers: [{ provide: CheckoutConfig, useExisting: Config }],\n})\nexport class CheckoutProgressModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { CheckoutConfig } from '../config/checkout-config';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\n\n  constructor(\n    private checkoutConfig: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\n      : null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\n      : null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute) {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    let stepIndex: number;\n    let index = 0;\n    for (const step of this.steps) {\n      if (\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n      ) {\n        stepIndex = index;\n      } else {\n        index++;\n      }\n    }\n\n    return stepIndex >= 0 ? stepIndex : null;\n  }\n\n  private getStepUrlFromActivatedRoute(activatedRoute: ActivatedRoute) {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string) {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number {\n    return key && value\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CartService,\n  CheckoutService,\n  PaymentDetails,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n  filter,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutPaymentService: CheckoutPaymentService,\n    private cartService: CartService\n  ) {\n    this.cartId$ = this.cartService.getActive().pipe(\n      map(cartData => cartData.code),\n      filter(cartId => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap(cartId => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile(loaded => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${\n          CheckoutStepType.SHIPPING_ADDRESS\n        } in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutDeliveryService,\n  DeliveryMode,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  currentDeliveryModeId: string;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private routingService: RoutingService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\n\n    this.deliveryModeSub = this.checkoutDeliveryService\n      .getSelectedDeliveryMode()\n      .pipe(\n        map((deliveryMode: DeliveryMode) =>\n          deliveryMode && deliveryMode.code ? deliveryMode.code : null\n        )\n      )\n      .subscribe(code => {\n        if (!!code && code === this.currentDeliveryModeId) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        this.currentDeliveryModeId = code;\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n        }\n      });\n  }\n\n  changeMode(code: string): void {\n    if (code !== this.currentDeliveryModeId) {\n      this.currentDeliveryModeId = code;\n    }\n  }\n\n  next(): void {\n    if (this.mode.touched) {\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\n    }\n    this.routingService.go(this.checkoutStepUrlNext);\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          guards: [AuthGuard, CartNotEmptyGuard, ShippingAddressSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  entryComponents: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${\n          CheckoutStepType.DELIVERY_MODE\n        } in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Country, Region, UserAddressService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-billing-address-form',\n  templateUrl: './billing-address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillingAddressFormComponent implements OnInit {\n  regions$: Observable<Region[]>;\n\n  @Input()\n  billingAddress: FormGroup;\n\n  @Input()\n  countries$: Observable<Country[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  constructor(protected userAddressService: UserAddressService) {}\n\n  ngOnInit() {\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.billingAddress.get('region.isocodeShort');\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddress['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.billingAddress['controls'].region['controls'].isocodeShort.setValue(\n      region.isocodeShort\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { I18nModule } from '@spartacus/core';\nimport { BillingAddressFormComponent } from './billing-address-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    I18nModule,\n  ],\n  declarations: [BillingAddressFormComponent],\n  exports: [BillingAddressFormComponent],\n})\nexport class BillingAddressFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\n\ntype monthType = { id: number; name: string };\ntype yearType = { id: number; name: number };\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private checkboxSub: Subscription;\n  private addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n  months: monthType[] = [];\n  years: yearType[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  sameAsShippingAddress = true;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  payment: FormGroup = this.fb.group({\n    defaultPayment: [false],\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    cardType: this.fb.group({\n      code: ['', Validators.required],\n    }),\n    expiryMonth: ['', Validators.required],\n    expiryYear: ['', Validators.required],\n    cvn: ['', Validators.required],\n  });\n\n  billingAddress: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    private fb: FormBuilder,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap(countries => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap(cardTypes => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n\n    this.checkboxSub = this.showSameAsShippingAddressCheckbox().subscribe(\n      (shouldShowCheckbox: boolean) => {\n        // this operation makes sure the checkbox is not checked if not shown and vice versa\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      }\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.next();\n        } else if (results.decision === 'REJECT') {\n          this.globalMessageService.add(\n            { key: 'addressForm.invalidAddress' },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n    for (let i = 0; i < 10; i++) {\n      this.years.push({ id: i + 1, name: year + i });\n    }\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push({ id: j, name: '0' + j.toString() });\n      } else {\n        this.months.push({ id: j, name: j.toString() });\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.payment.value.defaultPayment = !this.payment.value.defaultPayment;\n  }\n\n  paymentSelected(card: CardType): void {\n    this.payment['controls'].cardType['controls'].code.setValue(card.code);\n  }\n\n  monthSelected(month: monthType): void {\n    this.payment['controls'].expiryMonth.setValue(month.name);\n  }\n\n  yearSelected(year: yearType): void {\n    this.payment['controls'].expiryYear.setValue(year.name);\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  isContinueButtonDisabled(): boolean {\n    return (\n      this.payment.invalid ||\n      (!this.sameAsShippingAddress && this.billingAddress.invalid)\n    );\n  }\n\n  /**\n   * Check if the shipping address can also be a billing address\n   *\n   * @memberof PaymentFormComponent\n   */\n  showSameAsShippingAddressCheckbox(): Observable<boolean> {\n    return combineLatest([this.countries$, this.shippingAddress$]).pipe(\n      map(([countries, address]) => {\n        return !!countries.filter(\n          (country: Country): boolean =>\n            country.isocode === address.country.isocode\n        ).length;\n      })\n    );\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    };\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddress.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.checkoutDeliveryService.verifyAddress(this.billingAddress.value);\n    }\n  }\n\n  next(): void {\n    this.setPaymentDetails.emit({\n      paymentDetails: this.payment.value,\n      billingAddress: this.sameAsShippingAddress\n        ? null\n        : this.billingAddress.value,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.checkboxSub) {\n      this.checkboxSub.unsubscribe();\n    }\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../../shared/components/card/card.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { BillingAddressFormModule } from '../billing-address-form/billing-address-form.module';\nimport { PaymentFormComponent } from './payment-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    BillingAddressFormModule,\n    I18nModule,\n    IconModule,\n  ],\n  declarations: [PaymentFormComponent],\n  entryComponents: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  RoutingService,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  newPaymentFormManuallyOpened = false;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  selectedPayment: PaymentDetails;\n  allowRouting: boolean;\n\n  private getPaymentDetailsSub: Subscription;\n\n  private deliveryAddress: Address;\n  private checkoutStepUrlNext: string;\n  private checkoutStepUrlPrevious: string;\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.allowRouting = false;\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .pipe(take(1))\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n    this.getPaymentDetailsSub = this.checkoutPaymentService\n      .getPaymentDetails()\n      .pipe(\n        filter(paymentInfo => paymentInfo && !!Object.keys(paymentInfo).length)\n      )\n      .subscribe(paymentInfo => {\n        if (this.allowRouting) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        if (!paymentInfo['hasError']) {\n          this.selectedPayment = paymentInfo;\n        } else {\n          Object.keys(paymentInfo).forEach(key => {\n            if (key.startsWith('InvalidField')) {\n              this.globalMessageService.add(\n                {\n                  key: 'paymentMethods.invalidField',\n                  params: { field: paymentInfo[key] },\n                },\n                GlobalMessageType.MSG_TYPE_ERROR\n              );\n            }\n          });\n          this.checkoutService.clearCheckoutStep(3);\n        }\n      });\n  }\n\n  getCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          textExpires,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          const card: Card = {\n            title: payment.defaultPayment ? textDefaultPaymentMethod : '',\n            textBold: payment.accountHolderName,\n            text: [payment.cardNumber, textExpires],\n            img: this.getCardIcon(payment.cardType.code),\n            actions: [{ name: textUseThisPayment, event: 'send' }],\n          };\n          if (!this.selectedPayment && payment.defaultPayment) {\n            this.selectedPayment = payment;\n          }\n          if (this.selectedPayment && this.selectedPayment.id === payment.id) {\n            card.header = textSelected;\n          }\n          return card;\n        }\n      )\n    );\n  }\n\n  paymentMethodSelected(paymentDetails: PaymentDetails) {\n    this.selectedPayment = paymentDetails;\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  next(): void {\n    this.setPaymentDetails({\n      paymentDetails: this.selectedPayment,\n      isNewPayment: false,\n    });\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n    isNewPayment = true,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n    isNewPayment?: boolean;\n  }): void {\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress || this.deliveryAddress;\n\n    if (isNewPayment) {\n      this.checkoutPaymentService.createPaymentDetails(details);\n    } else if (this.selectedPayment && this.selectedPayment.id === details.id) {\n      this.checkoutPaymentService.setPaymentDetails(details);\n    }\n\n    this.allowRouting = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.getPaymentDetailsSub) {\n      this.getPaymentDetailsSub.unsubscribe();\n    }\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          guards: [\n            AuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  providers: [UserService],\n  declarations: [PaymentMethodComponent],\n  entryComponents: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { CheckoutService, RoutingService } from '@spartacus/core';\n\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  tAndCToggler = false;\n  placeOrderSubscription: Subscription;\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private routingService: RoutingService\n  ) {}\n\n  toggleTAndC(): void {\n    this.tAndCToggler = !this.tAndCToggler;\n  }\n\n  placeOrder(): void {\n    this.checkoutService.placeOrder();\n  }\n\n  ngOnInit(): void {\n    this.placeOrderSubscription = this.checkoutService\n      .getOrderDetails()\n      .pipe(filter(order => Object.keys(order).length !== 0))\n      .subscribe(() => {\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.placeOrderSubscription) {\n      this.placeOrderSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\nimport { PlaceOrderComponent } from './place-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  entryComponents: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentDetailsSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.PAYMENT_DETAILS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${\n          CheckoutStepType.PAYMENT_DETAILS\n        } in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map(paymentDetails =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n  Address,\n  Cart,\n  CartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Card } from '../../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent implements OnInit {\n  entries$: Observable<OrderEntry[]>;\n  cart$: Observable<Cart>;\n  deliveryMode$: Observable<DeliveryMode>;\n  countryName$: Observable<string>;\n  deliveryAddress$: Observable<Address>;\n  paymentDetails$: Observable<PaymentDetails>;\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected userAddressService: UserAddressService,\n    protected cartService: CartService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService.getEntries();\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\n\n    this.deliveryMode$ = this.checkoutDeliveryService\n      .getSelectedDeliveryMode()\n      .pipe(\n        tap((selected: DeliveryMode) => {\n          if (selected === null) {\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\n          }\n        })\n      );\n\n    this.countryName$ = this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address.country.isocode)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress.country.isocode;\n        }\n\n        let region = '';\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [deliveryMode.description],\n        };\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          guards: [\n            AuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n            PaymentDetailsSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  entryComponents: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\nimport { map, tap, switchMap } from 'rxjs/operators';\n\nimport {\n  Address,\n  AddressValidation,\n  CheckoutDeliveryService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  address: FormGroup = this.fb.group({\n    defaultAddress: [false],\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap(countries => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map(titles => {\n        const noneTitle = { code: '', name: 'Title' };\n        return [noneTitle, ...titles];\n      })\n    );\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.address.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.submitAddress.emit(this.address.value);\n        } else if (results.decision === 'REJECT') {\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n          if (\n            results.errors.errors.some(error => error.subject === 'titleCode')\n          ) {\n            this.globalMessageService.add(\n              { key: 'addressForm.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          } else {\n            this.globalMessageService.add(\n              { key: 'addressForm.invalidAddress' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    if (this.addressData) {\n      this.address.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n  }\n\n  titleSelected(title: Title): void {\n    this.address['controls'].titleCode.setValue(title.code);\n  }\n\n  countrySelected(country: Country): void {\n    this.address['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.address['controls'].region['controls'].isocode.setValue(\n      region.isocode\n    );\n  }\n\n  toggleDefaultAddress(): void {\n    this.address['controls'].defaultAddress.setValue(\n      this.address.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    this.checkoutDeliveryService.verifyAddress(this.address.value);\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.address.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(address => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.address.value.titleCode,\n                phone: this.address.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.address.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.checkoutDeliveryService.clearAddressVerificationResults();\n\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { AutoFocusDirectiveModule } from '../../../../../shared/directives/auto-focus/auto-focus.directive.module';\nimport { IconModule } from '../../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    AutoFocusDirectiveModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  entryComponents: [SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent],\n})\nexport class AddressFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Address,\n  CartService,\n  CheckoutDeliveryService,\n  RoutingService,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutStepType } from '../../model/checkout-step.model';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit, OnDestroy {\n  existingAddresses$: Observable<Address[]>;\n  newAddressFormManuallyOpened = false;\n  cards: Card[] = [];\n  isLoading$: Observable<boolean>;\n  selectedAddress: Address;\n  goTo: CheckoutStepType;\n  setAddress: Address;\n  setAddressSub: Subscription;\n  selectedAddressSub: Subscription;\n  selectedAddress$: BehaviorSubject<Address> = new BehaviorSubject<Address>(\n    null\n  );\n  cards$: Observable<CardWithAddress[]>;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected cartService: CartService,\n    protected routingService: RoutingService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.goTo = null;\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = 'cart';\n\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\n    this.existingAddresses$ = this.userAddressService.getAddresses();\n    this.cards$ = combineLatest([\n      this.existingAddresses$,\n      this.selectedAddress$.asObservable(),\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          addresses,\n          selected,\n          textDefaultShippingAddress,\n          textShipToThisAddress,\n          textSelected,\n        ]) => {\n          // Select default address if none selected\n          if (selected && Object.keys(selected).length > 0) {\n            this.selectedAddress = selected;\n          } else {\n            const defaultAddress = addresses.find(\n              address => address.defaultAddress\n            );\n            selected = defaultAddress;\n            this.selectedAddress = defaultAddress;\n          }\n\n          return addresses.map(address => {\n            const card = this.getCardContent(\n              address,\n              selected,\n              textDefaultShippingAddress,\n              textShipToThisAddress,\n              textSelected\n            );\n            return {\n              address,\n              card,\n            };\n          });\n        }\n      )\n    );\n\n    this.userAddressService.loadAddresses();\n\n    this.setAddressSub = this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .subscribe(address => {\n        this.setAddress = address;\n        this.selectedAddress$.next(address);\n        if (this.goTo) {\n          this.goNext();\n          this.goTo = null;\n        }\n      });\n    this.selectedAddressSub = this.selectedAddress$.subscribe(address => {\n      this.selectedAddress = address;\n    });\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n    const card: Card = {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    };\n\n    this.cards.push(card);\n\n    return card;\n  }\n\n  addressSelected(address: Address): void {\n    this.selectedAddress$.next(address);\n  }\n\n  next(): void {\n    this.addAddress({ address: this.selectedAddress, newAddress: false });\n  }\n\n  addAddress({\n    newAddress,\n    address,\n  }: {\n    newAddress: boolean;\n    address: Address;\n  }): void {\n    if (newAddress) {\n      this.checkoutDeliveryService.createAndSetAddress(address);\n      this.goTo = CheckoutStepType.DELIVERY_MODE;\n      return;\n    }\n    if (\n      this.setAddress &&\n      this.selectedAddress &&\n      this.setAddress.id === this.selectedAddress.id\n    ) {\n      this.goNext();\n    } else {\n      this.goTo = CheckoutStepType.DELIVERY_MODE;\n      this.checkoutDeliveryService.setDeliveryAddress(address);\n    }\n  }\n\n  addNewAddress(address: Address): void {\n    this.addAddress({ address, newAddress: true });\n  }\n\n  showNewAddressForm(): void {\n    this.newAddressFormManuallyOpened = true;\n  }\n\n  hideNewAddressForm(goBack: boolean = false): void {\n    this.newAddressFormManuallyOpened = false;\n    if (goBack) {\n      this.back();\n    }\n  }\n\n  goNext(): void {\n    this.routingService.go(this.checkoutStepUrlNext);\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  ngOnDestroy(): void {\n    if (this.setAddressSub) {\n      this.setAddressSub.unsubscribe();\n    }\n    if (this.selectedAddressSub) {\n      this.selectedAddressSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\n// tslint:disable-next-line:max-line-length\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [AuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  entryComponents: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter(event => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  entryComponents: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService {\n  private templatesRefs = {};\n  private templatesRefsBefore = {};\n  private templatesRefsAfter = {};\n\n  add(\n    outlet: string,\n    template: TemplateRef<any>,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    if (position === OutletPosition.BEFORE) {\n      this.templatesRefsBefore[outlet] = template;\n    }\n    if (position === OutletPosition.REPLACE) {\n      this.templatesRefs[outlet] = template;\n    }\n    if (position === OutletPosition.AFTER) {\n      this.templatesRefsAfter[outlet] = template;\n    }\n  }\n\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): TemplateRef<any> {\n    let templateRef;\n    switch (position) {\n      case OutletPosition.BEFORE:\n        templateRef = this.templatesRefsBefore[outlet];\n        break;\n      case OutletPosition.AFTER:\n        templateRef = this.templatesRefsAfter[outlet];\n        break;\n      default:\n        templateRef = this.templatesRefs[outlet];\n    }\n    return templateRef;\n    // return this.templatesRefs[outlet] ? this.templatesRefs[outlet] : null;\n  }\n}\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { LayoutConfig } from './config/layout-config';\n\nconst layoutModules = [OutletRefModule];\n\n@NgModule({\n  imports: [...layoutModules],\n  providers: [{ provide: LayoutConfig, useExisting: Config }],\n  exports: [...layoutModules],\n})\nexport class LayoutModule {}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { OutletPosition } from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective implements OnInit {\n  @Input() cxOutlet: string;\n\n  private _context: any;\n  @Input()\n  set cxOutletContext(value: any) {\n    this._context = value;\n  }\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit(): void {\n    const nodes = [];\n    nodes.push(...this.renderTemplate(OutletPosition.BEFORE));\n    nodes.push(...this.renderTemplate(OutletPosition.REPLACE, true));\n    nodes.push(...this.renderTemplate(OutletPosition.AFTER));\n  }\n\n  private renderTemplate(position: OutletPosition, replace = false): any[] {\n    const nodes = [];\n    const template = this.outletService.get(this.cxOutlet, position);\n    if (template || replace) {\n      const ref = this.vcr.createEmbeddedView(template || this.templateRef, {\n        $implicit: this._context,\n      });\n      nodes.push(...ref.rootNodes);\n    }\n    return nodes;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  Inject,\n  Renderer2,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { CmsConfig } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ComponentMapperService {\n  missingComponents: string[] = [];\n\n  private loadedWebComponents: { [path: string]: any } = {};\n\n  constructor(\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: CmsConfig,\n    @Inject(DOCUMENT) protected document: any,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  /**\n   * @desc\n   * returns a web component for the CMS typecode.\n   *\n   * The mapping of CMS components to web componetns requires a mapping.\n   * This is configurable when the module is loaded.\n   *\n   * For example:\n   *\n   *  {\n   *      'CMSLinkComponent': 'LinkComponent',\n   *      'SimpleResponsiveBannerComponent': 'SimpleResponsiveBannerComponent',\n   *      [etc.]\n   *  }\n   *\n   * The type codes are dynamic since they depend on the implementation.\n   * Customer will add, extend or ingore standard components.\n   *\n   * @param typeCode the component type\n   */\n  protected getComponent(typeCode: string): any {\n    const componentConfig = this.config.cmsComponents[typeCode];\n    if (!componentConfig) {\n      if (!this.missingComponents.includes(typeCode)) {\n        this.missingComponents.push(typeCode);\n        console.warn(\n          `No component implementation found for the CMS component type '${typeCode}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n    return componentConfig ? componentConfig.component : null;\n  }\n\n  getComponentFactoryByCode(typeCode: string): any {\n    const component = this.getComponent(typeCode);\n    if (!component) {\n      return null;\n    }\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      component\n    );\n\n    if (!factory) {\n      console.warn(\n        `No component factory found for the CMS component type '${typeCode}'.\\n`,\n        `Make sure you add a component to the 'entryComponents' array in the NgModule.`\n      );\n      return null;\n    }\n    return factory;\n  }\n\n  isWebComponent(typeCode: string): boolean {\n    const component = this.getComponent(typeCode);\n    return typeof component === 'string' && (component || '').includes('#');\n  }\n\n  initWebComponent(\n    componentType: string,\n    renderer: Renderer2\n  ): Promise<string> {\n    return new Promise(resolve => {\n      const [path, selector] = this.getComponent(componentType).split('#');\n\n      let script = this.loadedWebComponents[path];\n\n      if (!script) {\n        script = renderer.createElement('script');\n        this.loadedWebComponents[path] = script;\n        script.setAttribute('src', path);\n        renderer.appendChild(this.document.body, script);\n\n        if (isPlatformBrowser(this.platform)) {\n          script.onload = () => {\n            script.onload = null;\n          };\n        }\n      }\n\n      if (script.onload) {\n        // If script is still loading (has onload callback defined)\n        // add new callback and chain it with the existing one.\n        // Needed to support loading multiple components from one script\n        const chainedOnload = script.onload;\n        script.onload = () => {\n          chainedOnload();\n          resolve(selector);\n        };\n      } else {\n        resolve(selector);\n      }\n    });\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n  AuthService,\n  CmsService,\n  RoutingService,\n  CurrencyService,\n  LanguageService,\n  BaseSiteService,\n  ProductService,\n  ProductSearchService,\n  ProductReviewService,\n  UserService,\n  TranslationService,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CxApiService {\n  constructor(\n    @Optional() public auth: AuthService,\n    @Optional() public cms: CmsService,\n    @Optional() public routing: RoutingService,\n    // site context\n    @Optional() public currency: CurrencyService,\n    @Optional() public language: LanguageService,\n    @Optional() public baseSite: BaseSiteService,\n    // product\n    @Optional() public product: ProductService,\n    @Optional() public productSearch: ProductSearchService,\n    @Optional() public productReview: ProductReviewService,\n    // user\n    @Optional() public user: UserService,\n    // translation\n    @Optional() public translation: TranslationService\n  ) {}\n}\n","import { isPlatformServer } from '@angular/common';\nimport {\n  ComponentRef,\n  Directive,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  CmsComponent,\n  CmsConfig,\n  CmsService,\n  ContentSlotComponentData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../model/cms-component-data';\nimport { ComponentMapperService } from './component-mapper.service';\nimport { CxApiService } from './cx-api.service';\n\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n\n  cmpRef: ComponentRef<any>;\n  webElement: any;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private componentMapper: ComponentMapperService,\n    private injector: Injector,\n    private cmsService: CmsService,\n    private dynamicAttributeService: DynamicAttributeService,\n    private renderer: Renderer2,\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngOnInit() {\n    if (!this.shouldRenderComponent()) {\n      return;\n    }\n\n    if (this.componentMapper.isWebComponent(this.cxComponentWrapper.flexType)) {\n      this.launchWebComponent();\n    } else {\n      this.launchComponent();\n    }\n  }\n\n  private shouldRenderComponent(): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (\n      this.config.cmsComponents[this.cxComponentWrapper.flexType] || {}\n    ).disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  private launchComponent() {\n    const factory = this.componentMapper.getComponentFactoryByCode(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (factory) {\n      this.cmpRef = this.vcr.createComponent(\n        factory,\n        undefined,\n        this.getInjectorForComponent()\n      );\n\n      if (this.cmsService.isLaunchInSmartEdit()) {\n        this.addSmartEditContract(this.cmpRef.location.nativeElement);\n      }\n    }\n  }\n\n  private async launchWebComponent() {\n    const elementName = await this.componentMapper.initWebComponent(\n      this.cxComponentWrapper.flexType,\n      this.renderer\n    );\n\n    if (elementName) {\n      this.webElement = this.renderer.createElement(elementName);\n\n      this.webElement.cxApi = {\n        ...this.injector.get(CxApiService),\n        CmsComponentData: this.getCmsDataForComponent(),\n      };\n\n      this.renderer.appendChild(\n        this.vcr.element.nativeElement.parentElement,\n        this.webElement\n      );\n    }\n  }\n\n  private getCmsDataForComponent<T extends CmsComponent>(): CmsComponentData<\n    T\n  > {\n    return {\n      uid: this.cxComponentWrapper.uid,\n      data$: this.cmsService.getComponentData(this.cxComponentWrapper.uid),\n    };\n  }\n\n  private getInjectorForComponent(): Injector {\n    const configProviders =\n      (this.config.cmsComponents[this.cxComponentWrapper.flexType] || {})\n        .providers || [];\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useValue: this.getCmsDataForComponent(),\n        },\n        ...configProviders,\n      ],\n      parent: this.injector,\n    });\n  }\n\n  private addSmartEditContract(element: Element) {\n    this.dynamicAttributeService.addDynamicAttributes(\n      this.cxComponentWrapper.properties,\n      element,\n      this.renderer\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.cmpRef) {\n      this.cmpRef.destroy();\n    }\n    if (this.webElement) {\n      this.renderer.removeChild(\n        this.vcr.element.nativeElement.parentElement,\n        this.webElement\n      );\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [],\n  declarations: [ComponentWrapperDirective],\n  exports: [ComponentWrapperDirective],\n})\nexport class PageComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-page-slot',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent {\n  @Input() set position(position: string) {\n    this.position$.next(position);\n    // add the position name as a css class so that\n    // layout can be applied to it, using the position based class.\n    this.renderer.addClass(this.hostElement.nativeElement, position);\n  }\n\n  readonly position$ = new BehaviorSubject<string>(undefined);\n\n  /**\n   * observable with `ContentSlotData` for the current position\n   */\n  readonly slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap(position => this.cmsService.getContentSlot(position)),\n    tap(slot => this.addSmartEditSlotClass(slot))\n  );\n\n  /**\n   * observable with components (`ContentSlotComponentData[]`)\n   * for the current slot\n   */\n  readonly components$: Observable<\n    ContentSlotComponentData[]\n  > = this.slot$.pipe(\n    map(slot => (slot && slot.components ? slot.components : [])),\n    distinctUntilChanged(\n      (a, b) =>\n        a.length === b.length && !a.find((el, index) => el.uid !== b[index].uid)\n    ),\n    tap(components => this.addComponentClass(components))\n  );\n\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected hostElement: ElementRef\n  ) {}\n\n  // add a class to indicate whether the class is empty or not\n  private addComponentClass(components): void {\n    if (components && components.length > 0) {\n      this.renderer.addClass(this.hostElement.nativeElement, 'has-components');\n    }\n  }\n\n  private addSmartEditSlotClass(slot): void {\n    if (slot && this.cmsService.isLaunchInSmartEdit()) {\n      this.addSmartEditContract(slot);\n    }\n  }\n\n  private addSmartEditContract(slot: ContentSlotData): void {\n    this.dynamicAttributeService.addDynamicAttributes(\n      slot.properties,\n      this.hostElement.nativeElement,\n      this.renderer\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  providers: [],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {}\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable()\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // we print warn messages on missing layout configs\n  // only once to not polute the console log\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      return config.slots;\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter(Boolean));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter(page => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuratoin\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // tslint:disable-next-line: no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n  readonly templateName$: Observable<string> = this.pageLayoutService\n    .templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap(section => (section ? of(section) : this.templateName$)),\n    tap(name => {\n      this.styleClass = name;\n    })\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap(section => this.pageLayoutService.getSlots(section))\n  );\n\n  private currentClass;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private pageLayoutService: PageLayoutService\n  ) {}\n\n  set styleClass(cls: string) {\n    if (this.currentClass) {\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\n    }\n    this.renderer.addClass(this.el.nativeElement, cls);\n    this.currentClass = cls;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageLayoutService } from './page-layout.service';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent],\n  providers: [PageLayoutService],\n  exports: [PageLayoutComponent],\n})\nexport class PageLayoutModule {}\n","export abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable()\nexport class AddToHomeScreenService {\n  private deferredEvent: any;\n\n  private canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    private config: PWAModuleConfig,\n    private globalMessageService: GlobalMessageService,\n    private winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        event => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, ConfigModule, I18nModule } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(defaultPWAModuleConfig),\n    ServiceWorkerModule.register('/ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    { provide: PWAModuleConfig, useExisting: Config },\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n    AddToHomeScreenService,\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { Injectable } from '@angular/core';\nimport { Title, Meta, MetaDefinition } from '@angular/platform-browser';\nimport { PageMetaService, PageMeta, PageRobotsMeta } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  init() {\n    this.pageMetaService\n      .getMeta()\n      .pipe(filter(Boolean))\n      .subscribe((meta: PageMeta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\n  }\n\n  protected set title(title: string) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string) {\n    this.addTag({ name: 'description', content: value });\n  }\n\n  protected set image(imageUrl: string) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[]) {\n    if (value) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  protected addTag(meta: MetaDefinition) {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { WindowRef, LanguageService } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n) {\n  const result = () => {\n    languageService.getActive().subscribe(lang => {\n      winRef.document.documentElement.lang = lang;\n    });\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { SeoMetaService } from './seo-meta.service';\nimport { htmlLangProvider } from './html-lang-provider';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe(val => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: MouseEvent) {\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\nimport { StorefrontComponent } from './storefront.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageSlotModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class MainModule {}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { CmsConfig } from '@spartacus/core';\nimport { Route } from '@angular/router';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsMappingService {\n  constructor(\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  isComponentEnabled(flexType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (this.config.cmsComponents[flexType] || {})\n      .disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  getRoutesForComponents(componentTypes: string[]): Route[] {\n    const routes = [];\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        routes.push(...this.getRoutesForComponent(componentType));\n      }\n    }\n    return routes;\n  }\n\n  getGuardsForComponents(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getGuardsForComponent(componentType).forEach(guard =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  getI18nKeysForComponents(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        this.getI18nKeysForComponent(componentType).forEach(key =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n\n  private getRoutesForComponent(componentType: string): Route[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.childRoutes) || [];\n  }\n\n  private getGuardsForComponent(componentType: string): any[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.guards) || [];\n  }\n\n  private getI18nKeysForComponent(componentType: string): string[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.i18nKeys) || [];\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsMappingService } from './cms-mapping.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsMapping.getGuardsForComponents(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map(guardClass => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { CmsMappingService } from './cms-mapping.service';\nimport { TranslationService, TranslationChunkService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private translation: TranslationService,\n    private translationChunk: TranslationChunkService\n  ) {}\n\n  loadChunksForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsMapping.getI18nKeysForComponents(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsMappingService } from './cms-mapping.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsRoutesService {\n  constructor(private router: Router, private cmsMapping: CmsMappingService) {}\n\n  cmsRouteExist(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string\n  ): boolean {\n    const componentRoutes = this.cmsMapping.getRoutesForComponents(\n      componentTypes\n    );\n    if (componentRoutes.length) {\n      if (this.updateRouting(pageContext, componentRoutes)) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(pageContext: PageContext, routes: Route[]): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageContext.id.startsWith('/') &&\n      pageContext.id.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageContext.id.substr(1),\n        component: PageLayoutComponent,\n        children: routes,\n        data: {\n          cxCmsRouteContext: pageContext,\n        },\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\n\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  PageContext,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\n\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  first,\n  map,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    private routingService: RoutingService,\n    private cmsService: CmsService,\n    private cmsRoutes: CmsRoutesService,\n    private cmsI18n: CmsI18nService,\n    private cmsGuards: CmsGuardsService,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.routingService.getNextPageContext().pipe(\n      switchMap(pageContext =>\n        this.cmsService.hasPage(pageContext, true).pipe(\n          first(),\n          withLatestFrom(of(pageContext))\n        )\n      ),\n      switchMap(([hasPage, pageContext]) =>\n        hasPage\n          ? this.resolveCmsPageLogic(pageContext, route, state)\n          : this.handleNotFoundPage(pageContext, route, state)\n      )\n    );\n  }\n\n  private resolveCmsPageLogic(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      switchMap(componentTypes =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadChunksForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        if (\n          canActivate === true &&\n          !route.data.cxCmsRouteContext &&\n          !this.cmsRoutes.cmsRouteExist(pageContext.id)\n        ) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  private handleNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n    return this.cmsService.hasPage(notFoundCmsPageContext).pipe(\n      switchMap(hasNotFoundPage => {\n        if (hasNotFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap(notFoundIndex => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n            }),\n            switchMap(notFoundIndex =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter(index => index === notFoundIndex)\n              )\n            ),\n            switchMap(() => this.resolveCmsPageLogic(pageContext, route, state))\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/index';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector) {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<\n    Observable<ContentSlotComponentData>[]\n  > = this.componentData$.pipe(\n    map(data => data.banners.trim().split(' ')),\n    map(codes => codes.map(code => this.cmsService.getComponentData(code)))\n  );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/index';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n    PageComponentModule,\n    CarouselModule,\n    MediaModule,\n  ],\n  declarations: [BannerCarouselComponent],\n  entryComponents: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GenericLinkModule,\n    MediaModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  entryComponents: [BannerComponent],\n})\nexport class BannerModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GenericLinkModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n  entryComponents: [LinkComponent],\n})\nexport class LinkModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParagraphComponent } from './paragraph.component';\nimport { ConfigModule } from '@spartacus/core';\nimport { CmsConfig } from '@spartacus/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n  entryComponents: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsService, CMSTabParagraphContainer } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent {\n  activeTabNum = 0;\n\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    private cmsService: CmsService\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    switchMap(data =>\n      combineLatest(\n        data.components.split(' ').map(component =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            map(tab => {\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n              return {\n                ...tab,\n                title: `CMSTabParagraphContainer.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number): void {\n    this.activeTabNum = tabNum;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n    PageComponentModule,\n    OutletModule,\n    I18nModule,\n  ],\n  declarations: [TabParagraphContainerComponent],\n  entryComponents: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport { Address, UserAddressService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressBookComponentService {\n  constructor(private userAddressService: UserAddressService) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n\n  constructor(public service: AddressBookComponentService) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Address, UserAddressService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-address-card',\n  templateUrl: './address-card.component.html',\n})\nexport class AddressCardComponent {\n  editMode: boolean;\n  isDefault: boolean;\n\n  @Input() address: Address;\n\n  @Output() editEvent = new EventEmitter<any>();\n\n  constructor(private userAddressService: UserAddressService) {}\n\n  openEditFormEvent(): void {\n    this.editEvent.emit();\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n  }\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n  }\n\n  deleteAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressBookComponentService } from './address-book.component.service';\nimport { AddressCardComponent } from './address-card/address-card.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          providers: [\n            {\n              provide: AddressBookComponentService,\n              useClass: AddressBookComponentService,\n              deps: [UserAddressService],\n            },\n          ],\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent, AddressCardComponent],\n  exports: [AddressBookComponent, AddressCardComponent],\n  providers: [UserAddressService, AddressBookComponentService],\n  entryComponents: [AddressBookComponent],\n})\nexport class AddressBookModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account-modal',\n  templateUrl: './close-account-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private subscription = new Subscription();\n  userToken$: Observable<UserToken>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    protected modalService: ModalService,\n    private userService: UserService,\n    private authService: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private routingService: RoutingService,\n    private translationService: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.userToken$ = this.authService.getUserToken();\n    this.userService.resetRemoveUserProcessState();\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedSuccessfully')\n        .pipe(first())\n        .subscribe(text => {\n          this.globalMessageService.add(\n            text,\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        });\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  closeAccount() {\n    this.userService.remove();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CloseAccountComponent: {\n          component: CloseAccountComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\n  exports: [CloseAccountComponent],\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\n})\nexport class CloseAccountModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ConsentTemplate } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  consentGiven = false;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.consentTemplate && this.consentTemplate.currentConsent) {\n      if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n        this.consentGiven = false;\n      } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n        this.consentGiven = true;\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentChanged.emit({\n      given: !this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserConsentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, skipWhile, tap, withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userConsentService: UserConsentService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n    ]).pipe(\n      map(\n        ([consentLoading, giveConsentLoading, withdrawConsentLoading]) =>\n          consentLoading || giveConsentLoading || withdrawConsentLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      tap(templateList => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      })\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe(success => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap(withdrawalSuccess => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe(withdrawalSuccess =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent],\n  entryComponents: [ConsentManagementComponent],\n})\nexport class ConsentManagementModule {}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport class CustomFormValidators {\n  static emailDomainValidator(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match('[.][a-zA-Z]+$') ? null : { InvalidEmail: true };\n  }\n\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match(\n      // Email Standard RFC 5322:\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ // tslint:disable-line\n    )\n      ? null\n      : { InvalidEmail: true };\n  }\n\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n    return password.match(\n      /^(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[!@#$%^*()_\\-+{};:.,]).{6,}$/\n    )\n      ? null\n      : { InvalidPassword: true };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  form: FormGroup;\n  submited = false;\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      userEmail: [\n        '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n    });\n  }\n\n  requestForgotPasswordEmail() {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n    this.userService.requestForgotPasswordEmail(this.form.value.userEmail);\n    this.routingService.go({ cxRoute: 'login' });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { ForgotPasswordComponent } from './forgot-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [ForgotPasswordComponent],\n  exports: [ForgotPasswordComponent],\n  entryComponents: [ForgotPasswordComponent],\n})\nexport class ForgotPasswordModule {}\n","import { Injectable } from '@angular/core';\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService\n  ) {\n    this.orderCode$ = this.routingService\n      .getRouterState()\n      .pipe(map(routingData => routingData.state.params.orderCode));\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap(orderCode => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order, Consignment, OrderEntry } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach(element => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${\n              address.postalCode\n            }`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${\n              billingAddress.postalCode\n            }`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\n\nconst moduleComponents = [\n  OrderDetailHeadlineComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderDetailsHeadlineComponent: {\n          component: OrderDetailHeadlineComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n    }),\n  ],\n  providers: [OrderDetailsService],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n})\nexport class OrderHistoryComponent implements OnInit, OnDestroy {\n  constructor(\n    private routing: RoutingService,\n    private userOrderService: UserOrderService,\n    private translation: TranslationService\n  ) {}\n\n  orders$: Observable<OrderHistoryList>;\n  isLoaded$: Observable<boolean>;\n\n  private PAGE_SIZE = 5;\n\n  sortType: string;\n\n  ngOnInit(): void {\n    this.orders$ = this.userOrderService\n      .getOrderHistoryList(this.PAGE_SIZE)\n      .pipe(\n        tap((orders: OrderHistoryList) => {\n          if (orders.pagination) {\n            this.sortType = orders.pagination.sort;\n          }\n        })\n      );\n\n    this.isLoaded$ = this.userOrderService.getOrderHistoryListLoaded();\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  UserService,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderHistoryComponent } from './order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [UserService],\n  entryComponents: [OrderHistoryComponent],\n})\nexport class OrderHistoryModule {}\n","import { NgModule } from '@angular/core';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { OrderDetailsModule } from './order-details/order-details.module';\n\n@NgModule({\n  imports: [OrderHistoryModule, OrderDetailsModule],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap(paymentDetails => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find(paymentDetail => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  providers: [UserService],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n  entryComponents: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n})\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\n  token: string;\n  subscription = new Subscription();\n  submited = false;\n\n  form: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      repassword: ['', [Validators.required]],\n    },\n    { validator: this.matchPassword }\n  );\n\n  constructor(\n    private fb: FormBuilder,\n    private routingService: RoutingService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.routingService\n        .getRouterState()\n        .subscribe(state => (this.token = state.state.queryParams['token']))\n    );\n\n    this.subscription.add(\n      this.userService.isPasswordReset().subscribe(reset => {\n        if (reset) {\n          this.routingService.go({ cxRoute: 'login' });\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  resetPassword() {\n    this.submited = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    const password = this.form.value['password'];\n    this.userService.resetPassword(this.token, password);\n  }\n\n  private matchPassword(ac: AbstractControl) {\n    if (ac.get('password').value !== ac.get('repassword').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n} from '@spartacus/core';\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ResetPasswordComponent: {\n          component: ResetPasswordFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    I18nModule,\n  ],\n  declarations: [ResetPasswordFormComponent],\n  exports: [ResetPasswordFormComponent],\n  entryComponents: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-update-email-form',\n  templateUrl: './update-email-form.component.html',\n})\nexport class UpdateEmailFormComponent {\n  submited = false;\n\n  @Output()\n  saveEmail = new EventEmitter<{\n    newUid: string;\n    password: string;\n  }>();\n\n  @Output()\n  cancelEmail = new EventEmitter<void>();\n\n  form: FormGroup = this.fb.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      confirmEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    },\n    { validator: this.matchEmail }\n  );\n\n  constructor(private fb: FormBuilder) {}\n\n  isEmailConfirmNotValid(formControlName: string): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submited ||\n        (this.form.get(formControlName).touched &&\n          this.form.get(formControlName).dirty))\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(this.form, formControlName, this.submited);\n  }\n\n  onSubmit(): void {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const newUid = this.form.value.confirmEmail;\n    const password = this.form.value.password;\n\n    this.saveEmail.emit({ newUid, password });\n  }\n\n  onCancel(): void {\n    this.cancelEmail.emit();\n  }\n\n  private matchEmail(ac: AbstractControl): ValidationErrors {\n    if (ac.get('email').value !== ac.get('confirmEmail').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-email',\n  templateUrl: './update-email.component.html',\n})\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\n  constructor(\n    private routingService: RoutingService,\n    private globalMessageService: GlobalMessageService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  private subscription = new Subscription();\n  private newUid: string;\n  isLoading$: Observable<boolean>;\n\n  ngOnInit() {\n    this.userService.resetUpdateEmailResultState();\n    this.subscription.add(\n      this.userService\n        .getUpdateEmailResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\n    this.newUid = newUid;\n    this.userService.updateEmail(password, newUid);\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        {\n          key: 'updateEmailForm.emailUpdateSuccess',\n          params: { newUid: this.newUid },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.authService.logout();\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetUpdateEmailResultState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\nimport { UpdateEmailComponent } from './update-email.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          component: UpdateEmailComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\n  exports: [UpdateEmailComponent],\n  entryComponents: [UpdateEmailComponent],\n})\nexport class UpdateEmailModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-update-password-form',\n  templateUrl: './update-password-form.component.html',\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n  private submitClicked = false;\n  form: FormGroup;\n\n  @Output()\n  submited = new EventEmitter<{ oldPassword: string; newPassword: string }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, CustomFormValidators.passwordValidator],\n        ],\n        newPasswordConfirm: ['', [Validators.required]],\n      },\n      { validator: this.matchPassword }\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  isPasswordConfirmNotValid(): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submitClicked ||\n        (this.form.get('newPasswordConfirm').touched &&\n          this.form.get('newPasswordConfirm').dirty))\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      oldPassword: this.form.value.oldPassword,\n      newPassword: this.form.value.newPassword,\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  private matchPassword(abstractControl: AbstractControl): ValidationErrors {\n    if (\n      abstractControl.get('newPassword').value !==\n      abstractControl.get('newPasswordConfirm').value\n    ) {\n      return { NotEqual: true };\n    }\n    return null;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-password',\n  templateUrl: './update-password.component.html',\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.resetUpdatePasswordProcessState();\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\n    this.subscription.add(\n      this.userService\n        .getUpdatePasswordResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({\n    oldPassword,\n    newPassword,\n  }: {\n    oldPassword: string;\n    newPassword: string;\n  }): void {\n    this.userService.updatePassword(oldPassword, newPassword);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    this.userService.resetUpdatePasswordProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          component: UpdatePasswordComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  exports: [UpdatePasswordComponent],\n  entryComponents: [UpdatePasswordComponent],\n})\nexport class UpdatePasswordModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Title, User } from '@spartacus/core';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\n\n@Component({\n  selector: 'cx-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n})\nexport class UpdateProfileFormComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Input()\n  titles: Title[];\n\n  @Output()\n  submited = new EventEmitter<{ userUpdates: User }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  form = this.fb.group({\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  private submitClicked = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    if (this.user) {\n      this.form.patchValue(this.user);\n    }\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      userUpdates: { ...this.form.value },\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-update-profile',\n  templateUrl: './update-profile.component.html',\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  titles$: Observable<Title[]>;\n  user$: Observable<User>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    // reset the previous form processing state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n\n    this.user$ = this.userService.get();\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\n\n    this.subscription.add(\n      this.userService\n        .getUpdatePersonalDetailsResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updateProfileForm.profileUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\n    this.userService.updatePersonalDetails(userUpdates);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    // clean up the state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\nimport { UpdateProfileComponent } from './update-profile.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          component: UpdateProfileComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\n  exports: [UpdateProfileComponent],\n  entryComponents: [UpdateProfileComponent],\n})\nexport class UpdateProfileModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMeta,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent implements OnInit {\n  title$: Observable<string>;\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n    this.setCrumbs();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(Boolean),\n      map((meta: PageMeta) => meta.heading || meta.title)\n    );\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta && meta.breadcrumbs\n          ? meta.breadcrumbs\n          : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ConfigModule, CmsConfig, CmsPageTitleModule } from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n    CmsPageTitleModule,\n  ],\n  declarations: [BreadcrumbComponent],\n  entryComponents: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return {\n          title: data.name,\n          children: [nav],\n        };\n      })\n    );\n  }\n\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter(Boolean),\n      switchMap(data => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap(items => {\n            if (items === undefined) {\n              this.getNavigationEntryItems(navigation, true);\n            }\n          }),\n          filter(Boolean),\n          map(items => this.createNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Get all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private getNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ) {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach(entry => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      this.processChildren(nodeData, itemsList);\n    }\n\n    if (root) {\n      const rootUid = nodeData.uid;\n      this.cmsService.loadNavigationItems(rootUid, itemsList);\n    }\n  }\n\n  private processChildren(node, itemsList): void {\n    for (const child of node.children) {\n      this.getNavigationEntryItems(child, false, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for display\n   * @param nodeData\n   * @param items\n   */\n  private createNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    node.title = nodeData.title;\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.addLinkToNode(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      const children = this.createChildren(nodeData, items);\n      node.children = children;\n    }\n\n    return node;\n  }\n\n  private addLinkToNode(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (entry.itemType === 'CMSLinkComponent' && item !== undefined) {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n\n      node.url = this.getLink(item);\n\n      // if \"NEWWINDOW\", target is true\n      node.target = item.target;\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category)\n   */\n  private getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n\n  private createChildren(node, items) {\n    const children = [];\n\n    for (const child of node.children) {\n      const childNode = this.createNode(child, items);\n      children.push(childNode);\n    }\n\n    return children;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n  @Input() allowAlignToRight = false;\n\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navitation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter(event => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  toggleOpen(event: UIEvent): void {\n    const node = <HTMLElement>event.currentTarget;\n    if (this.openNodes.includes(node)) {\n      this.openNodes = this.openNodes.filter(n => n !== node);\n      this.renderer.removeClass(node, 'is-open');\n    } else {\n      this.openNodes.push(node);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    this.renderer.removeClass(\n      this.openNodes[this.openNodes.length - 1],\n      'is-open'\n    );\n    this.openNodes.pop();\n    this.updateClasses();\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(...node.children.map(n => this.getDepth(n, depth + 1)));\n    } else {\n      return depth;\n    }\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\n      target.parentElement.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    if (this.allowAlignToRight) {\n      const wrapper = <HTMLElement>node.querySelector('.wrapper');\n      const navBar = <HTMLElement>this.elemRef.nativeElement;\n      if (wrapper) {\n        this.renderer.removeStyle(wrapper, 'margin-left');\n        if (\n          wrapper.offsetLeft + wrapper.offsetWidth >\n          navBar.offsetLeft + navBar.offsetWidth\n        ) {\n          this.renderer.setStyle(\n            wrapper,\n            'margin-left',\n            `${node.offsetWidth - wrapper.offsetWidth}px`\n          );\n        }\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter(node => node.tagName === 'NAV')\n      .forEach(nav => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  entryComponents: [NavigationComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NavigationModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  entryComponents: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  data$ = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n    GenericLinkModule,\n  ],\n  declarations: [FooterNavigationComponent],\n  entryComponents: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap(results =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  private hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  private getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map(res => res.map(suggestion => suggestion.value)),\n        switchMap(suggestions => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map(match => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap(productResult => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          (suggestions && suggestions.length === 0)\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  public launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { CmsSearchBoxComponent } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent {\n  config: SearchBoxConfig;\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n\n  /**\n   * The component data is optional, so that this component\n   * can be reused without CMS integration.\n   */\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>\n  ) {}\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    tap(c => (this.config = c)),\n    switchMap(config => this.searchBoxComponentService.getResults(config))\n  );\n\n  /**\n   * Returns the backend configuration or default configuration for the searchbox.\n   */\n  private get config$(): Observable<SearchBoxConfig> {\n    if (this.componentData) {\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\n        // boolean values, we replace them with boolean values.\n        map(c => {\n          return {\n            ...c,\n            displayProducts:\n              <any>c.displayProducts === 'true' || c.displayProducts === true,\n            displayProductImages:\n              <any>c.displayProductImages === 'true' ||\n              c.displayProductImages === true,\n            displaySuggestions:\n              <any>c.displaySuggestions === 'true' ||\n              c.displaySuggestions === true,\n          };\n        })\n      );\n    } else {\n      return of(DEFAULT_SEARCHBOX_CONFIG);\n    }\n  }\n\n  /**\n   * Closes the searchbox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchbox to open\n    this.open();\n  }\n\n  /**\n   * Opens the typeahead searchbox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Closes the typehead searchbox.\n   */\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.searchBoxComponentService.toggleBodyClass(\n        'searchbox-is-active',\n        false\n      );\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a singe product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  public clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  entryComponents: [SearchBoxComponent],\n  exports: [SearchBoxComponent],\n})\nexport class SearchBoxModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  Address,\n  CheckoutService,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [\n          deliveryAddress.line1,\n          deliveryAddress.line2,\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${\n            deliveryAddress.postalCode\n          }`,\n          deliveryAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      map(textTitle => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [deliveryMode.description],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.billTo').pipe(\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [\n          billingAddress.line1,\n          billingAddress.line2,\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${\n            billingAddress.postalCode\n          }`,\n          billingAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutService,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map(orderDetails => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../shared/components/card/card.module';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\n// tslint:disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [AuthGuard, OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n  entryComponents: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductReference,\n  ProductReferenceService,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected referenceService: ProductReferenceService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map(product => this.convertProduct(product))\n    );\n  }\n\n  getProductReferences(\n    code: string,\n    referenceType: string,\n    displayTitle: boolean,\n    displayProductPrices: boolean\n  ): Observable<ProductCarouselItem[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) =>\n        refs.map(ref =>\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\n        )\n      )\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  Product,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean)\n  );\n\n  /**\n   * returns an Obervable string for the title.\n   */\n  title$: Observable<string> = this.componentData$.pipe(\n    map(data => data.title)\n  );\n\n  /**\n   * Obervable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\n    map(data => data.productCodes.trim().split(' ')),\n    map(codes => codes.map(code => this.productService.get(code)))\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, UrlModule } from '@spartacus/core';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CarouselModule,\n    MediaModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  entryComponents: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  /**\n   * returns an Obervable string for the title\n   */\n  title$ = this.component.data$.pipe(map(d => d.title));\n\n  private currentProductCode$: Observable<\n    string\n  > = this.current.getProduct().pipe(\n    filter(Boolean),\n    map((p: Product) => p.code)\n  );\n\n  /**\n   * Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = combineLatest([\n    this.currentProductCode$,\n    this.component.data$,\n  ]).pipe(\n    switchMap(([code, data]) =>\n      this.getProductReferences(code, data.productReferenceTypes)\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\n    protected current: CurrentProductService,\n    protected referenceService: ProductReferenceService\n  ) {}\n\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product>[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) => refs.map(ref => of(ref.target)))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CarouselModule,\n    MediaModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  entryComponents: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('CMSTabParagraphContainer.tabs.ProductReviewsTabComponent')\n      .subscribe(reviewsTabLabel => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through h3 tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const h3Elements: HTMLCollectionOf<\n        HTMLElement\n      > = tabsComponent.getElementsByTagName('h3');\n\n      // Look through h3 tab elements until finding tab with label\n      for (const h3Element of Array.from(h3Elements)) {\n        if (h3Element.innerHTML.includes(label)) {\n          return h3Element;\n        }\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    StarRatingModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  entryComponents: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RoutingService,\n  SearchConfig,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  pluck,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\n\ninterface ProductListRouteParams {\n  brandCode?: string;\n  categoryCode?: string;\n  query?: string;\n}\n\ninterface SearchCriteria {\n  currentPage?: number;\n  pageSize?: number;\n  sortCode?: string;\n  query?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  protected defaultPageSize = 10;\n\n  protected sub: Subscription;\n\n  protected readonly RELEVANCE_CATEGORY = ':relevance:category:';\n  protected readonly RELEVANCE_BRAND = ':relevance:brand:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router\n  ) {}\n\n  private searchResults$: Observable<\n    ProductSearchPage\n  > = this.productSearchService\n    .getResults()\n    .pipe(filter(searchResult => Object.keys(searchResult).length > 0));\n\n  private searchByRouting$: Observable<\n    ActivatedRouterStateSnapshot\n  > = combineLatest([\n    this.routing.getRouterState().pipe(\n      distinctUntilChanged((x, y) => {\n        // router emits new value also when the anticipated `nextState` changes\n        // but we want to perform search only when current url changes\n        return x.state.url === y.state.url;\n      })\n    ),\n    // also trigger search on site context changes\n    this.languageService.getActive(),\n    this.currencyService.getActive(),\n  ]).pipe(\n    pluck(0, 'state'),\n    tap((state: ActivatedRouterStateSnapshot) => {\n      const criteria = this.getCriteriaFromRoute(\n        state.params,\n        state.queryParams\n      );\n      this.search(criteria);\n    })\n  );\n\n  /**\n   * This stream should be used only on the Product Listing Page.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\n    this.searchResults$,\n    this.searchByRouting$,\n  ]).pipe(\n    pluck(0),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  clearSearchResults(): void {\n    this.productSearchService.clearResults();\n  }\n\n  private getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  private getQueryFromRouteParams({\n    brandCode,\n    categoryCode,\n    query,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_CATEGORY + categoryCode;\n    }\n    if (brandCode) {\n      return this.RELEVANCE_BRAND + brandCode;\n    }\n  }\n\n  private search(criteria: SearchCriteria): void {\n    const query = criteria.query;\n    const searchConfig = this.getSearchConfig(criteria);\n\n    this.productSearchService.search(query, searchConfig);\n  }\n\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\n    const result: SearchConfig = {\n      currentPage: criteria.currentPage,\n      pageSize: criteria.pageSize,\n      sortCode: criteria.sortCode,\n    };\n\n    // drop empty keys\n    Object.keys(result).forEach(key => !result[key] && delete result[key]);\n\n    return result;\n  }\n\n  setQuery(query: string): void {\n    this.setQueryParams({ query, currentPage: undefined });\n  }\n\n  viewPage(pageNumber: number): void {\n    this.setQueryParams({ currentPage: pageNumber });\n  }\n\n  sort(sortCode: string): void {\n    this.setQueryParams({ sortCode });\n  }\n\n  private setQueryParams(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit {\n  model$: Observable<ProductSearchPage> = this.productListComponentService\n    .model$;\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.productListComponentService.clearSearchResults();\n\n    this.pageLayoutService.templateName$.pipe(take(1)).subscribe(template => {\n      this.viewMode$.next(\n        template === 'ProductGridPageTemplate' ? ViewModes.Grid : ViewModes.List\n      );\n    });\n  }\n\n  viewPage(pageNumber: number): void {\n    this.productListComponentService.viewPage(pageNumber);\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Facet, ProductSearchPage } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../shared/components/modal/index';\nimport { ProductListComponentService } from '../container/product-list-component.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent implements OnInit, OnDestroy {\n  private sub: Subscription;\n\n  iconTypes = ICON_TYPE;\n\n  activeFacetValueCode: string;\n  searchResult: ProductSearchPage;\n  minPerFacet = 6;\n  showAllPerFacetMap: Map<String, boolean>;\n  protected queryCodec: HttpUrlEncodingCodec;\n  private collapsedFacets = new Set<string>();\n  searchResult$: Observable<ProductSearchPage>;\n  visibleFacets$: Observable<Facet[]>;\n\n  constructor(\n    private modalService: ModalService,\n    private activatedRoute: ActivatedRoute,\n    private productListComponentService: ProductListComponentService\n  ) {\n    this.showAllPerFacetMap = new Map<String, boolean>();\n    this.queryCodec = new HttpUrlEncodingCodec();\n  }\n\n  ngOnInit(): void {\n    this.sub = this.activatedRoute.params.subscribe(params => {\n      this.activeFacetValueCode = params.categoryCode || params.brandCode;\n    });\n\n    this.searchResult$ = this.productListComponentService.model$.pipe(\n      tap(searchResult => {\n        if (searchResult.facets) {\n          searchResult.facets.forEach(el => {\n            this.showAllPerFacetMap.set(el.name, false);\n          });\n        }\n      })\n    );\n\n    this.visibleFacets$ = this.searchResult$.pipe(\n      map(searchResult => {\n        return searchResult.facets\n          ? searchResult.facets.filter(facet => facet.visible)\n          : [];\n      })\n    );\n  }\n\n  openFilterModal(content): void {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n  }\n\n  toggleValue(query: string): void {\n    this.productListComponentService.setQuery(\n      this.queryCodec.decodeValue(query)\n    );\n  }\n\n  showLess(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, false);\n  }\n\n  showMore(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, true);\n  }\n\n  private updateShowAllPerFacetMap(facetName: String, showAll: boolean): void {\n    this.showAllPerFacetMap.set(facetName, showAll);\n  }\n\n  isFacetCollapsed(facetName: string): boolean {\n    return this.collapsedFacets.has(facetName);\n  }\n\n  toggleFacet(facetName: string): void {\n    if (this.collapsedFacets.has(facetName)) {\n      this.collapsedFacets.delete(facetName);\n    } else {\n      this.collapsedFacets.add(facetName);\n    }\n  }\n\n  getVisibleFacetValues(facet): any {\n    return facet.values.slice(\n      0,\n      this.showAllPerFacetMap.get(facet.name)\n        ? facet.values.length\n        : this.minPerFacet\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductFacetNavigationComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n  ],\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\n})\nexport class ProductListModule {}\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OutletModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  entryComponents: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { CurrentProductService } from '../../current-product.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter(Boolean),\n    switchMap(product => this.reviewService.getByProductCode(product.code)),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n  }\n\n  setRating(rating): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [0, [Validators.min(1), Validators.max(5)]],\n      reviewerName: '',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ConfigModule, CmsConfig, I18nModule } from '@spartacus/core';\nimport { StarRatingModule } from '../../../../shared/index';\nimport { ProductReviewsComponent } from './product-reviews.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  entryComponents: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigModule, CmsConfig, I18nModule } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  entryComponents: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigModule, CmsConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  entryComponents: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  private mainMediaContainer = new BehaviorSubject(null);\n\n  private product$: Observable<\n    Product\n  > = this.currentProductService.getProduct().pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap((p: Product) =>\n      this.mainMediaContainer.next(p.images ? p.images.PRIMARY : {})\n    )\n  );\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map(product => this.createThumbs(product))\n  );\n\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\n    map(([_, container]) => container)\n  );\n\n  constructor(private currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          t =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map(c => of({ container: c }));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n    CarouselModule,\n  ],\n  declarations: [ProductImagesComponent],\n  entryComponents: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  form: FormGroup;\n\n  constructor(\n    private auth: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private fb: FormBuilder,\n    private authRedirectService: AuthRedirectService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      userId: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: ['', Validators.required],\n    });\n  }\n\n  login(): void {\n    const userId = this.emailToLowerCase();\n    this.auth.authorize(userId, this.form.controls.password.value);\n\n    if (!this.sub) {\n      this.sub = this.auth.getUserToken().subscribe(data => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n\n  /*\n   * Change the inputed email to lowercase because\n   * the backend only accepts lowercase emails\n   */\n  emailToLowerCase() {\n    return this.form.controls.userId.value.toLowerCase();\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { LoginFormComponent } from './login-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [LoginFormComponent],\n  exports: [LoginFormComponent],\n  entryComponents: [LoginFormComponent],\n})\nexport class LoginFormModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService, User, UserService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(private auth: AuthService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user$ = this.auth.getUserToken().pipe(\n      switchMap(token => {\n        if (token && !!token.access_token) {\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    PageSlotModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected routing: RoutingService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<any> {\n    this.logout();\n\n    return this.cms\n      .hasPage({\n        id: this.semanticPathService.get('logout'),\n        type: PageType.CONTENT_PAGE,\n      })\n      .pipe(\n        tap(hasPage => {\n          if (!hasPage) {\n            this.routing.go({ cxRoute: 'home' });\n          }\n        })\n      );\n  }\n\n  protected logout(): void {\n    this.auth.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n  Title,\n  UserService,\n  UserSignUp,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  titles$: Observable<Title[]>;\n\n  private subscription = new Subscription();\n\n  userRegistrationForm: FormGroup = this.fb.group(\n    {\n      titleCode: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n      newsletter: [false],\n      termsandconditions: [false, Validators.requiredTrue],\n    },\n    { validator: this.matchPassword }\n  );\n\n  constructor(\n    private auth: AuthService,\n    private authRedirectService: AuthRedirectService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n\n    this.subscription.add(\n      this.auth.getUserToken().subscribe(data => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      })\n    );\n\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n    this.subscription.add(\n      this.globalMessageService\n        .get()\n        .pipe(filter(data => Object.keys(data).length > 0))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          if (\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR].some(\n              message => message === 'This field is required.'\n            )\n          ) {\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.globalMessageService.add(\n              { key: 'register.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n        })\n    );\n  }\n\n  submit(): void {\n    this.emailToLowerCase();\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      titleCode,\n    } = this.userRegistrationForm.value;\n    const userRegisterFormData: UserSignUp = {\n      firstName,\n      lastName,\n      uid: email,\n      password,\n      titleCode,\n    };\n    this.userService.register(userRegisterFormData);\n  }\n\n  private matchPassword(ac: AbstractControl): { NotEqual: boolean } {\n    if (ac.get('password').value !== ac.get('passwordconf').value) {\n      return { NotEqual: true };\n    }\n  }\n\n  /*\n   * Change the inputed email to lowercase because\n   * the backend only accepts lowercase emails\n   */\n  emailToLowerCase(): void {\n    this.userRegistrationForm.value.email = this.userRegistrationForm.value.email.toLowerCase();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { LoginModule } from '../login/login.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          component: RegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [RegisterComponent],\n  exports: [RegisterComponent],\n  entryComponents: [RegisterComponent],\n})\nexport class RegisterComponentModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import { NgModule } from '@angular/core';\nimport { HamburgerMenuModule } from '../layout/index';\nimport { CartComponentModule } from './cart/cart.module';\nimport { CheckoutComponentModule } from './checkout/checkout.module';\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\nimport {\n  BannerModule,\n  CmsParagraphModule,\n  LinkModule,\n  TabParagraphContainerModule,\n} from './content/index';\nimport { SiteContextSelectorModule } from './misc/index';\nimport {\n  AddressBookModule,\n  CloseAccountModule,\n  ConsentManagementModule,\n  ForgotPasswordModule,\n  OrderDetailsModule,\n  OrderHistoryModule,\n  PaymentMethodsModule,\n  ResetPasswordModule,\n  UpdateEmailModule,\n  UpdatePasswordModule,\n  UpdateProfileModule,\n} from './myaccount/index';\nimport {\n  BreadcrumbModule,\n  CategoryNavigationModule,\n  FooterNavigationModule,\n  NavigationModule,\n  SearchBoxModule,\n} from './navigation/index';\nimport { OrderConfirmationModule } from './order-confirmation/index';\nimport {\n  ProductCarouselModule,\n  ProductIntroModule,\n  ProductListModule,\n  ProductReferencesModule,\n  ProductTabsModule,\n} from './product/index';\nimport { ProductImagesModule } from './product/product-images/product-images.module';\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\nimport { UserComponentModule } from './user/user.module';\n\n@NgModule({\n  imports: [\n    HamburgerMenuModule,\n    CmsParagraphModule,\n    LinkModule,\n    BannerModule,\n    CategoryNavigationModule,\n    NavigationModule,\n    FooterNavigationModule,\n    BreadcrumbModule,\n    SearchBoxModule,\n    SiteContextSelectorModule,\n    AddressBookModule,\n    OrderHistoryModule,\n    ProductListModule,\n    ProductTabsModule,\n    ProductCarouselModule,\n    ProductReferencesModule,\n    OrderDetailsModule,\n    PaymentMethodsModule,\n    UpdateEmailModule,\n    UpdatePasswordModule,\n    UpdateProfileModule,\n    ConsentManagementModule,\n    CloseAccountModule,\n    CartComponentModule,\n    TabParagraphContainerModule,\n    OrderConfirmationModule,\n    // TODO:#2811 - uncomment to enable\n    // StoreFinderModule,\n    ProductImagesModule,\n    ProductSummaryModule,\n    ProductIntroModule,\n    CheckoutComponentModule,\n    ForgotPasswordModule,\n    ResetPasswordModule,\n    BannerCarouselModule,\n    UserComponentModule,\n  ],\n})\nexport class CmsLibModule {}\n","import {\n  UrlSegment,\n  UrlMatchResult,\n  Route,\n  UrlSegmentGroup,\n} from '@angular/router';\n\nexport interface SuffixRoute extends Route {\n  data: {\n    cxSuffixUrlMatcher: {\n      marker: string;\n      paramName: string;\n      precedingParamName?: string;\n    };\n  };\n}\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName [ / ** ]'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function suffixUrlMatcher(\n  segments: UrlSegment[],\n  _segmentGroup: UrlSegmentGroup,\n  route: SuffixRoute\n): UrlMatchResult | null {\n  const config = route.data.cxSuffixUrlMatcher;\n  const { marker, paramName } = config;\n  const precedingParamName = config.precedingParamName || 'param';\n\n  const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n  const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n  if (markerIndex === -1 || isMarkerLastSegment) {\n    return null;\n  }\n\n  const paramIndex = markerIndex + 1;\n  const posParams: { [name: string]: UrlSegment } = {\n    [paramName]: segments[paramIndex],\n  };\n\n  for (let i = 0; i < markerIndex; i++) {\n    posParams[`${precedingParamName}${i}`] = segments[i];\n  }\n\n  return { consumed: segments.slice(0, paramIndex + 1), posParams };\n}\n\nexport function findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { suffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n      {\n        matcher: suffixUrlMatcher,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxSuffixUrlMatcher: {\n            marker: 'p',\n            paramName: 'productCode',\n          },\n        },\n      },\n    ]),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { suffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        matcher: suffixUrlMatcher,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxSuffixUrlMatcher: {\n            marker: 'c',\n            paramName: 'categoryCode',\n          },\n        },\n      },\n    ]),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\nexport const b2cLayoutConfig: LayoutConfig = {\n  layoutSlots: {\n    header: {\n      md: {\n        slots: [\n          'PreHeader',\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      xs: {\n        slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n      },\n    },\n    navigation: {\n      md: { slots: [] },\n      xs: {\n        slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n      },\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductListSlot', 'ProductLeftRefinements'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'SearchResultsListSlot',\n        'ProductLeftRefinements',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      slots: [\n        'TopHeaderSlot',\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n  },\n};\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: { paths: ['login'] },\n  logout: { paths: ['logout'] },\n  register: { paths: ['login/register'] },\n  forgotPassword: { paths: ['login/forgot-password'] },\n\n  checkout: { paths: ['checkout'] },\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\n  orderConfirmation: { paths: ['order-confirmation'] },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orders: {\n    paths: ['my-account/orders'],\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  AuthModule,\n  CartModule,\n  CheckoutModule,\n  CmsModule,\n  ConfigModule,\n  FeaturesConfigModule,\n  GlobalMessageModule,\n  I18nModule,\n  ProcessModule,\n  ProductModule,\n  provideConfigFromMetaTags,\n  StateModule,\n  UserModule,\n} from '@spartacus/core';\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\nimport { LayoutModule } from '../layout/layout.module';\n\n@NgModule({\n  imports: [\n    StateModule.forRoot(),\n    AuthModule.forRoot(),\n    ConfigModule.forRoot(),\n    RoutingModule.forRoot(),\n    I18nModule.forRoot(),\n    CmsModule.forRoot(),\n    GlobalMessageModule.forRoot(),\n    ProcessModule.forRoot(),\n    CartModule.forRoot(),\n    CheckoutModule.forRoot(),\n    UserModule.forRoot(),\n    ProductModule.forRoot(),\n    FeaturesConfigModule.forRoot(),\n    LayoutModule,\n  ],\n  exports: [LayoutModule],\n  providers: [...provideConfigFromMetaTags()],\n})\nexport class StorefrontFoundationModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  OccModule,\n  PersonalizationModule,\n  provideConfig,\n  SiteContextModule,\n  SmartEditModule,\n} from '@spartacus/core';\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\nimport { MainModule } from '../layout/main/main.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n    }),\n\n    StoreModule.forRoot(\n      {},\n      {\n        runtimeChecks: {\n          strictStateImmutability: true,\n          strictStateSerializability: true,\n          strictActionImmutability: true,\n          strictActionSerializability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n\n    StorefrontFoundationModule,\n    MainModule,\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n\n    SmartEditModule.forRoot(), // should be custom\n    PersonalizationModule.forRoot(), // should be custom\n\n    // opt-in explicitely\n    OccModule.forRoot(),\n    ProductDetailsPageModule,\n    ProductListingPageModule,\n  ],\n  exports: [MainModule, StorefrontFoundationModule],\n})\nexport class StorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<StorefrontModule> {\n    return {\n      ngModule: StorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ConfigModule, provideConfig } from '@spartacus/core';\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { b2cLayoutConfig } from './config/b2c-layout-config';\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\nimport { StorefrontModule } from './storefront.module';\n\n@NgModule({\n  imports: [\n    StorefrontModule.withConfig(<StorefrontConfig>{\n      pwa: {\n        enabled: true,\n        addToHomeScreen: true,\n      },\n    }),\n\n    ConfigModule.withConfig(b2cLayoutConfig),\n    ConfigModule.withConfigFactory(defaultCmsContentConfig),\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n  ],\n  exports: [StorefrontModule],\n})\nexport class B2cStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2cStorefrontModule> {\n    return {\n      ngModule: B2cStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n"],"names":["tslib_1.__extends","_a","tslib_1.__values","CoreRoutingModule"],"mappings":"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"}