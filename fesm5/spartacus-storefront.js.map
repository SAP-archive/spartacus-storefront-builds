{"version":3,"file":"spartacus-storefront.js","sources":["ng://@spartacus/storefront/cms-components/misc/icon/icon.model.ts","ng://@spartacus/storefront/cms-components/misc/icon/fontawesome-icon.config.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.component.ts","ng://@spartacus/storefront/cms-components/misc/icon/icon.module.ts","ng://@spartacus/storefront/shared/components/modal/modal-options.ts","ng://@spartacus/storefront/shared/components/modal/modal-ref.ts","ng://@spartacus/storefront/shared/components/modal/modal.service.ts","ng://@spartacus/storefront/shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","ng://@spartacus/storefront/shared/components/card/card.component.ts","ng://@spartacus/storefront/shared/components/card/card.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.service.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.component.ts","ng://@spartacus/storefront/layout/config/layout-config.ts","ng://@spartacus/storefront/layout/breakpoint/breakpoint.service.ts","ng://@spartacus/storefront/shared/components/media/media.service.ts","ng://@spartacus/storefront/shared/components/media/media.component.ts","ng://@spartacus/storefront/shared/components/media/media.module.ts","ng://@spartacus/storefront/shared/components/carousel/carousel.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.component.ts","ng://@spartacus/storefront/shared/directives/only-number/only-number.directive.ts","ng://@spartacus/storefront/shared/directives/only-number/only-number.directive.module.ts","ng://@spartacus/storefront/shared/components/item-counter/item-counter.module.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.component.ts","ng://@spartacus/storefront/shared/components/generic-link/generic-link.module.ts","ng://@spartacus/storefront/shared/components/list-navigation/pagination/pagination.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/sorting/sorting.component.ts","ng://@spartacus/storefront/shared/components/list-navigation/list-navigation.module.ts","ng://@spartacus/storefront/shared/components/media/media.model.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.component.ts","ng://@spartacus/storefront/shared/components/spinner/spinner.module.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.component.ts","ng://@spartacus/storefront/cms-components/misc/global-message/global-message.module.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics-loader.service.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.component.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/config/default-qualtrics-config.ts","ng://@spartacus/storefront/cms-components/misc/qualtrics/qualtrics.module.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/language-currency.component.ts","ng://@spartacus/storefront/cms-structure/page/model/cms-component-data.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-component.service.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context.model.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.component.ts","ng://@spartacus/storefront/cms-components/misc/site-context-selector/site-context-selector.module.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.component.ts","ng://@spartacus/storefront/shared/components/star-rating/star-rating.module.ts","ng://@spartacus/storefront/shared/config/view-config.ts","ng://@spartacus/storefront/shared/config/view-config.module.ts","ng://@spartacus/storefront/shared/directives/auto-focus/auto-focus.directive.ts","ng://@spartacus/storefront/shared/directives/auto-focus/auto-focus.directive.module.ts","ng://@spartacus/storefront/shared/utils/forms/form-utils.ts","ng://@spartacus/storefront/shared/utils/validators/custom-form-validators.ts","ng://@spartacus/storefront/shared/utils/forms/title-utils.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.service.ts","ng://@spartacus/storefront/shared/services/promotion/promotion.service.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","ng://@spartacus/storefront/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","ng://@spartacus/storefront/cms-structure/services/cms-mapping.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-guards.service.ts","ng://@spartacus/storefront/cms-structure/services/cms-i18n.service.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout-handler.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.service.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.component.ts","ng://@spartacus/storefront/cms-structure/services/cms-routes.service.ts","ng://@spartacus/storefront/cms-structure/guards/cms-page.guard.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.model.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","ng://@spartacus/storefront/layout/loading/intersection.service.ts","ng://@spartacus/storefront/layout/loading/defer-loader.service.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.directive.ts","ng://@spartacus/storefront/cms-structure/outlet/outlet.module.ts","ng://@spartacus/storefront/cms-structure/page/component/component-mapper.service.ts","ng://@spartacus/storefront/cms-structure/page/component/cx-api.service.ts","ng://@spartacus/storefront/cms-structure/page/component/component-wrapper.directive.ts","ng://@spartacus/storefront/cms-structure/page/component/page-component.module.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.component.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/service/skip-link.service.ts","ng://@spartacus/storefront/layout/a11y/skip-link/component/skip-link.component.ts","ng://@spartacus/storefront/layout/a11y/skip-link/config/default-skip-link.config.ts","ng://@spartacus/storefront/layout/a11y/skip-link/directive/skip-link.directive.ts","ng://@spartacus/storefront/layout/a11y/skip-link/skip-link.module.ts","ng://@spartacus/storefront/cms-structure/page/slot/page-slot.module.ts","ng://@spartacus/storefront/cms-structure/page/page-layout/page-layout.module.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module-config.ts","ng://@spartacus/storefront/cms-structure/pwa/services/add-to-home-screen.service.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","ng://@spartacus/storefront/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","ng://@spartacus/storefront/cms-structure/pwa/pwa.module.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/add-cms-route.ts","ng://@spartacus/storefront/cms-structure/routing/cms-route/cms-route.module.ts","ng://@spartacus/storefront/cms-structure/seo/seo-meta.service.ts","ng://@spartacus/storefront/cms-structure/seo/html-lang-provider.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld-script.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/json-ld.directive.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/tokens.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.factory.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/structured-data.module.ts","ng://@spartacus/storefront/cms-structure/seo/seo.module.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","ng://@spartacus/storefront/cms-components/product/current-product.service.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","ng://@spartacus/storefront/cms-structure/seo/structured-data/builders/schema.interface.ts","ng://@spartacus/storefront/cms-components/asm/asm-constants.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-component.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-main-ui/asm-main-ui.component.ts","ng://@spartacus/storefront/cms-components/asm/services/asm-enabler.service.ts","ng://@spartacus/storefront/cms-components/asm/asm-loader.module.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/asm-session-timer.component.ts","ng://@spartacus/storefront/cms-components/asm/asm-session-timer/format-timer.pipe.ts","ng://@spartacus/storefront/cms-components/asm/csagent-login-form/csagent-login-form.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-emulation/customer-emulation.component.ts","ng://@spartacus/storefront/cms-components/asm/customer-selection/customer-selection.component.ts","ng://@spartacus/storefront/cms-components/asm/asm.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/promotions/promotions.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-coupon/cart-coupon.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-shared/cart-shared.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-cart/add-to-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-details/cart-details.module.ts","ng://@spartacus/storefront/cms-components/cart/cart-not-empty.guard.ts","ng://@spartacus/storefront/cms-components/cart/cart-page-layout-handler.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.component.ts","ng://@spartacus/storefront/cms-components/cart/cart-totals/cart-totals.module.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.component.ts","ng://@spartacus/storefront/cms-components/cart/mini-cart/mini-cart.module.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","ng://@spartacus/storefront/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.component.ts","ng://@spartacus/storefront/cms-components/cart/save-for-later/save-for-later.module.ts","ng://@spartacus/storefront/cms-components/cart/cart.module.ts","ng://@spartacus/storefront/cms-components/checkout/config/checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/model/checkout-step.model.ts","ng://@spartacus/storefront/cms-components/checkout/config/default-checkout-config.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-config.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-auth.guard.ts","ng://@spartacus/storefront/cms-components/checkout/services/checkout-details.service.ts","ng://@spartacus/storefront/cms-components/checkout/services/express-checkout.service.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-orchestrator/checkout-orchestrator.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-order-summary/checkout-order-summary.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/checkout-progress/checkout-progress.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/shipping-address-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/delivery-mode/delivery-mode.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/delivery-mode-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/billing-address-form/billing-address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-form/payment-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/payment-method/payment-method.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/place-order/place-order.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/payment-details-set.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/review-submit/review-submit.module.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/address-form/address-form.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/checkout-details-loaded.guard.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.component.ts","ng://@spartacus/storefront/cms-components/checkout/components/shipping-address/shipping-address.module.ts","ng://@spartacus/storefront/cms-components/checkout/checkout.module.ts","ng://@spartacus/storefront/cms-components/checkout/guards/not-checkout-auth.guard.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.service.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.component.ts","ng://@spartacus/storefront/layout/header/hamburger-menu/hamburger-menu.module.ts","ng://@spartacus/storefront/layout/layout.module.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/components/consent-management.component.ts","ng://@spartacus/storefront/cms-components/myaccount/consent-management/consent-management.module.ts","ng://@spartacus/storefront/shared/components/anonymous-consents/anonymous-consents.module.ts","ng://@spartacus/storefront/layout/main/storefront.component.ts","ng://@spartacus/storefront/layout/main/main.module.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.component.ts","ng://@spartacus/storefront/cms-components/content/banner-carousel/banner-carousel.module.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.component.ts","ng://@spartacus/storefront/cms-components/content/banner/banner.module.ts","ng://@spartacus/storefront/cms-components/content/link/link.component.ts","ng://@spartacus/storefront/cms-components/content/link/link.module.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.component.ts","ng://@spartacus/storefront/cms-components/content/paragraph/paragraph.module.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","ng://@spartacus/storefront/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-card/address-card.component.ts","ng://@spartacus/storefront/cms-components/myaccount/address-book/address-book.module.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account-modal/close-account-modal.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/components/close-account/close-account.component.ts","ng://@spartacus/storefront/cms-components/myaccount/close-account/close-account.module.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/forgot-password/forgot-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-headline/order-detail-headline.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-details/order-details.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order-history/order-history.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request.service.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","ng://@spartacus/storefront/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","ng://@spartacus/storefront/cms-components/myaccount/order/order.module.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.component.ts","ng://@spartacus/storefront/cms-components/myaccount/payment-methods/payment-methods.module.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/reset-password/reset-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email-form/update-email-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-email/update-email.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password-form/update-password-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/components/update-password/update-password.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-password/update-password.module.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/components/update-profile-form.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.component.ts","ng://@spartacus/storefront/cms-components/myaccount/update-profile/update-profile.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-coupons/my-coupons.module.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.component.ts","ng://@spartacus/storefront/cms-components/myaccount/notification-preference/notification-preference.module.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.component.ts","ng://@spartacus/storefront/cms-components/myaccount/my-interests/my-interests.module.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.component.ts","ng://@spartacus/storefront/cms-components/navigation/breadcrumb/breadcrumb.module.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.service.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation-ui.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/category-navigation/category-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.component.ts","ng://@spartacus/storefront/cms-components/navigation/footer-navigation/footer-navigation.module.ts","ng://@spartacus/storefront/cms-components/navigation/navigation/navigation-node.model.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box-component.service.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.component.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.model.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/highlight.pipe.ts","ng://@spartacus/storefront/cms-components/navigation/search-box/search-box.module.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","ng://@spartacus/storefront/cms-components/order-confirmation/guards/order-confirmation.guard.ts","ng://@spartacus/storefront/cms-components/order-confirmation/order-confirmation.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel.model.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel.service.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-carousel/product-carousel.module.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.component.ts","ng://@spartacus/storefront/cms-components/product/carousel/product-references/product-references.module.ts","ng://@spartacus/storefront/cms-components/product/config/default-scroll-config.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.component.ts","ng://@spartacus/storefront/cms-components/product/product-images/product-images.module.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.component.ts","ng://@spartacus/storefront/cms-components/product/product-intro/product-intro.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list-component.service.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-view/product-view.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-list.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list-item/product-list-item.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-selector/variant-style-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-size-selector/variant-size-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-color-selector/variant-color-selector.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.component.ts","ng://@spartacus/storefront/cms-components/product/product-variants/variant-style-icons/variant-style-icons.module.ts","ng://@spartacus/storefront/cms-components/product/product-variants/guards/product-variant.guard.ts","ng://@spartacus/storefront/cms-components/product/product-variants/product-variants.module.ts","ng://@spartacus/storefront/cms-components/product/product-list/product-list.module.ts","ng://@spartacus/storefront/cms-components/product/product-outlets.model.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.component.ts","ng://@spartacus/storefront/cms-components/product/product-summary/product-summary.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","ng://@spartacus/storefront/cms-components/product/product-tabs/product-tabs.module.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.component.ts","ng://@spartacus/storefront/cms-components/product/stock-notification/stock-notification.module.ts","ng://@spartacus/storefront/cms-components/storefinder/components/schedule-component/schedule.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-grid/store-finder-grid.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-header/store-finder-header.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/abstract-store-item/abstract-store-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-list-item/store-finder-list-item.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-map/store-finder-map.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-pagination-details/store-finder-pagination-details.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-list/store-finder-list.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search-result/store-finder-search-result.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-search/store-finder-search.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store-description/store-finder-store-description.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-stores-count/store-finder-stores-count.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder/store-finder.component.ts","ng://@spartacus/storefront/cms-components/storefinder/components/store-finder-store/store-finder-store.component.ts","ng://@spartacus/storefront/cms-components/storefinder/store-finder.module.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.component.ts","ng://@spartacus/storefront/cms-components/user/checkout-login/checkout-login.module.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.component.ts","ng://@spartacus/storefront/cms-components/user/login-form/login-form.module.ts","ng://@spartacus/storefront/cms-components/user/login/login.component.ts","ng://@spartacus/storefront/cms-components/user/login/login.module.ts","ng://@spartacus/storefront/cms-components/user/logout/logout-guard.ts","ng://@spartacus/storefront/cms-components/user/logout/logout.module.ts","ng://@spartacus/storefront/cms-components/user/register/register.component.ts","ng://@spartacus/storefront/cms-components/user/register/register.module.ts","ng://@spartacus/storefront/cms-components/user/user.module.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","ng://@spartacus/storefront/cms-components/wish-list/components/wish-list/wish-list.component.ts","ng://@spartacus/storefront/cms-components/wish-list/wish-list.module.ts","ng://@spartacus/storefront/cms-components/cms-lib.module.ts","ng://@spartacus/storefront/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","ng://@spartacus/storefront/cms-pages/product-details-page/product-details-page.module.ts","ng://@spartacus/storefront/cms-pages/product-listing-page/product-listing-page.module.ts","ng://@spartacus/storefront/recipes/config/b2c-layout-config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-header.config.ts","ng://@spartacus/storefront/recipes/config/static-cms-structure/default-cms-content.config.ts","ng://@spartacus/storefront/cms-structure/routing/default-routing-config.ts","ng://@spartacus/storefront/cms-structure/routing/routing.module.ts","ng://@spartacus/storefront/recipes/storefront-foundation.module.ts","ng://@spartacus/storefront/recipes/storefront.module.ts","ng://@spartacus/storefront/recipes/b2c-storefront.module.ts"],"sourcesContent":["export enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n  HEART = 'HEART',\n  EMPTY_HEART = 'EMPTY_HEART',\n}\n\nexport abstract class IconConfig {\n  icon?: {\n    /**\n     * Each icon type can be configured with a so-called symbol. The symbol will\n     * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n     * a font based icon. The following configuration would map to a fontawesome\n     * icon:\n     *\n     * icon: {\n     *   symbols: {\n     *     CART: 'fas fa-shopping-cart'\n     *   }\n     * }\n     */\n    symbols?: {\n      [ICON_TYPE: string]: string;\n    };\n\n    /**\n     * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n     * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n     * is used for the SVG xlink reference.\n     */\n    resources?: IconConfigResource[];\n  };\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: ICON_TYPE[];\n}\n\nexport enum IconResourceType {\n  SVG = 'svg',\n  LINK = 'link',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n      HEART: 'fas fa-heart',\n      EMPTY_HEART: 'far fa-heart',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(protected winRef: WindowRef, protected config: IconConfig) {}\n\n  /**\n   * Indicates whether the given icon type is configured to use SVG.\n   */\n  useSvg(iconType: ICON_TYPE): boolean {\n    return (\n      this.config.icon.resources &&\n      !!this.config.icon.resources.find(\n        res =>\n          res.types &&\n          res.type === IconResourceType.SVG &&\n          res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config has been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  getSvgPath(iconType: ICON_TYPE): string {\n    const svgResource = this.config.icon.resources.find(\n      res =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (resource && resource.url) {\n      if (!this.loadedResources.includes(resource.url)) {\n        this.loadedResources.push(resource.url);\n        const head = this.winRef.document.getElementsByTagName('head')[0];\n        const link = this.winRef.document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = resource.url;\n        head.appendChild(link);\n      }\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.icon.resources) {\n      return;\n    }\n\n    let resource = this.config.icon.resources.find(\n      res =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.icon.resources.find(\n        res => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  private getSymbol(iconType: ICON_TYPE | string) {\n    if (\n      this.config.icon &&\n      this.config.icon.symbols &&\n      this.config.icon.symbols[iconType]\n    ) {\n      return this.config.icon.symbols[iconType];\n    }\n  }\n}\n","import { Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE } from './icon.model';\n\n@Component({\n  selector: 'cx-icon',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The type of the icon which maps to the icon link\n   * in the svg icon sprite.\n   */\n  _type: ICON_TYPE;\n  @Input('type')\n  set type(type: ICON_TYPE) {\n    this._type = type;\n    this.addStyleClasses(type);\n  }\n\n  /**\n   * Keeps the given style classes so that we can\n   * clean them up when the icon changes\n   */\n  @HostBinding('class') styleClasses = '';\n\n  /**\n   * Style class names from the host element are taken into account\n   * when classes are set dynamically.\n   */\n  private staticStyleClasses: string;\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>\n  ) {}\n\n  /**\n   * Indicates whether the icon is configured to use SVG or not.\n   */\n  get useSvg(): boolean {\n    return this.iconLoader.useSvg(this._type);\n  }\n\n  /**\n   * Returns the path to the svg symbol. The path could include an\n   * external URL to an svg (sprite) file, but can also reference\n   * an existing SVG symbol in the DOM.\n   */\n  get svgPath(): string {\n    return this.iconLoader.getSvgPath(this._type);\n  }\n\n  /**\n   * Adds the style classes and the link resource (if availabe).\n   */\n  private addStyleClasses(type: ICON_TYPE) {\n    if (this.useSvg) {\n      return;\n    }\n\n    if (this.staticStyleClasses === undefined) {\n      this.staticStyleClasses = this.elementRef.nativeElement.classList.value\n        ? this.elementRef.nativeElement.classList.value + ' '\n        : '';\n    }\n\n    this.styleClasses =\n      this.staticStyleClasses + this.iconLoader.getStyleClasses(type);\n\n    this.iconLoader.addLinkResource(type);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Config, ConfigModule } from '@spartacus/core';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\nimport { IconConfig } from './icon.model';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule, ConfigModule.withConfig(fontawesomeIconConfig)],\n  providers: [{ provide: IconConfig, useExisting: Config }],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * Options available for modal instance\n *\n * @todo remove ngb dependency and create our own set of props for this interface\n */\nexport interface ModalOptions extends NgbModalOptions {\n  // below prop is temporarily here for extending purposes\n  // note: you can't extend interface without new props\n  // @todo: delete below prop after removing NgbModalOptions dependency\n  temp?: any;\n}\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-options';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n\n    return activeModal;\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n      this.modals.pop();\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n      this.modals.pop();\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n  isFeatureLevel,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../modal/index';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog',\n  templateUrl: './anonymous-consent-dialog.component.html',\n})\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  showLegalDescription = true;\n  iconTypes = ICON_TYPE;\n  requiredConsents: string[] = [];\n\n  loading$: Observable<boolean>;\n  templates$: Observable<ConsentTemplate[]>;\n  consents$: Observable<AnonymousConsent[]>;\n\n  // TODO(issue:4989) Anonymous consents - remove\n  isLevel13 = isFeatureLevel(this.config, '1.3');\n\n  constructor(\n    private config: AnonymousConsentsConfig,\n    private modalService: ModalService,\n    private anonymousConsentsService: AnonymousConsentsService\n  ) {\n    if (Boolean(this.config.anonymousConsents)) {\n      this.showLegalDescription = this.config.anonymousConsents.showLegalDescriptionInDialog;\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.templates$ = this.anonymousConsentsService.getTemplates();\n    this.consents$ = this.anonymousConsentsService.getConsents();\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n\n  rejectAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach(template => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.withdrawConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.closeModal('rejectAll');\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach(template => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                (consent && consent.consentState == null) ||\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.giveConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.closeModal('allowAll');\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.config.anonymousConsents) &&\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\n    );\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.anonymousConsentsService.giveConsent(template.id);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(template.id);\n    }\n  }\n\n  getCorrespondingConsent(\n    template: ConsentTemplate,\n    consents: AnonymousConsent[] = []\n  ): AnonymousConsent {\n    for (const consent of consents) {\n      if (template.id === consent.templateCode) {\n        return consent;\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { AnonymousConsentsService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AnonymousConsentDialogComponent } from '../../../shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component';\nimport { ModalService } from '../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-anonymous-consent-management-banner',\n  templateUrl: './anonymous-consent-management-banner.component.html',\n})\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\n  private subscriptions = new Subscription();\n\n  bannerVisible$: Observable<\n    boolean\n  > = this.anonymousConsentsService.isBannerVisible();\n\n  constructor(\n    private modalService: ModalService,\n    private anonymousConsentsService: AnonymousConsentsService\n  ) {}\n\n  viewDetails(): void {\n    this.hideBanner();\n    this.modalService.open(AnonymousConsentDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      this.anonymousConsentsService\n        .giveAllConsents()\n        .pipe(tap(_ => this.hideBanner()))\n        .subscribe()\n    );\n  }\n\n  hideBanner(): void {\n    this.anonymousConsentsService.toggleBannerDismissed(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n  @Input()\n  fitToContainer = false;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { CardComponent } from './card.component';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map(totalWidth => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the items can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n}\n","import { DeferLoadingStrategy } from '@spartacus/core';\n\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n\n  /**\n   * The page fold identifies the last expected page slot above-the-fold.\n   * It's perfectly fine to specify this by idication, however a more\n   * precise indication will have an positive impact on performance.\n   */\n  pageFold?: string;\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\nexport abstract class LayoutConfig {\n  /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\n   * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\n  breakpoints?: {\n    [BREAKPOINT.xs]?: number;\n    [BREAKPOINT.sm]?: number;\n    [BREAKPOINT.md]?: number;\n    [BREAKPOINT.lg]?: number;\n  };\n  layoutSlots?: LayoutSlotConfig;\n\n  /**\n   * Deferrred loading is a technique to hold of with the loading / creation\n   * of DOM elements which are not not in the initial view port.\n   * This technique wil increase performance.\n   */\n  deferredLoading?: {\n    /**\n     * The global strategy will be used as a fallback strategy for all DOM creation,\n     * but can be overriden by local configuration, i.e. for cms components.\n     */\n    strategy?: DeferLoadingStrategy;\n    /**\n     * The intersection margin contains the offset used by the Intersection Observer\n     * to observe elements outside the view port.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\n     */\n    intersectionMargin?: string;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { fromEvent, Observable, of } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  startWith,\n} from 'rxjs/operators';\nimport { BREAKPOINT, LayoutConfig } from '../config/layout-config';\n\nconst DEFAULT_BREAKPOINTS = {\n  [BREAKPOINT.xs]: 576,\n  [BREAKPOINT.sm]: 768,\n  [BREAKPOINT.md]: 992,\n  [BREAKPOINT.lg]: 1200,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  constructor(private winRef: WindowRef, private config: LayoutConfig) {}\n\n  getSize(breakpoint: BREAKPOINT): number {\n    return this.config.breakpoints\n      ? this.config.breakpoints[breakpoint]\n      : DEFAULT_BREAKPOINTS[breakpoint];\n  }\n\n  get breakpoint$(): Observable<BREAKPOINT> {\n    if (!this.window) {\n      return of(BREAKPOINT.xs);\n    }\n    return fromEvent(this.window, 'resize').pipe(\n      debounceTime(300),\n      startWith({ target: this.window }),\n      map(event => this.getBreakpoint((<Window>event.target).innerWidth)),\n      distinctUntilChanged()\n    );\n  }\n\n  get breakpoints(): BREAKPOINT[] {\n    return [\n      BREAKPOINT.xs,\n      BREAKPOINT.sm,\n      BREAKPOINT.md,\n      BREAKPOINT.lg,\n      BREAKPOINT.xl,\n    ];\n  }\n\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    const breakpoint = this.getClosest(windowWidth);\n    return BREAKPOINT[breakpoint || BREAKPOINT.lg];\n  }\n\n  protected getClosest(windowWidth?: number): BREAKPOINT {\n    if (!windowWidth) {\n      windowWidth = this.window.innerWidth;\n    }\n\n    return windowWidth < this.getSize(BREAKPOINT.xs)\n      ? BREAKPOINT.xs\n      : this.breakpoints.reverse().find(br => windowWidth >= this.getSize(br));\n  }\n\n  get window(): Window {\n    return this.winRef.nativeWindow;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '@spartacus/core';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport { Media, MediaFormats } from './media.model';\n\n/** the default format is used for browsers that do not support   */\nconst DEFAULT_MEDIA_FORMAT = 'tablet';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  constructor(\n    protected config: OccConfig,\n    protected breakpointService: BreakpointService\n  ) {}\n\n  private get mediaFormats(): MediaFormats[] {\n    return [\n      {\n        code: 'mobile',\n        threshold: this.breakpointService.getSize(BREAKPOINT.xs),\n      },\n      {\n        code: 'tablet',\n        threshold: this.breakpointService.getSize(BREAKPOINT.sm),\n      },\n      {\n        code: 'desktop',\n        threshold: this.breakpointService.getSize(BREAKPOINT.md),\n      },\n      {\n        code: 'widescreen',\n        threshold: this.breakpointService.getSize(BREAKPOINT.lg),\n      },\n    ];\n  }\n\n  getMedia(container, format?: string, alt?: string): Media {\n    return {\n      src: this.getMainImage(container, format),\n      srcset: this.getSrcSet(container),\n      alt: alt || this.getAlt(container, format),\n    };\n  }\n\n  private getMainImage(media, format?: string): string {\n    if (media && media[format || DEFAULT_MEDIA_FORMAT]) {\n      return this.getImageUrl(media[format || DEFAULT_MEDIA_FORMAT].url);\n    } else if (media && media.url) {\n      return this.getImageUrl(media.url);\n    } else if (media && media[this.getHighestAvailableFormat(media)]) {\n      return this.getImageUrl(media[this.getHighestAvailableFormat(media)].url);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * returns highest resolution format name from media formats\n   */\n  private getHighestAvailableFormat(media): string {\n    if (media) {\n      let mediaFormat: MediaFormats;\n\n      this.mediaFormats.forEach(format => {\n        if (\n          !mediaFormat ||\n          (mediaFormat.threshold < format.threshold && media[format.code])\n        ) {\n          mediaFormat = format;\n        }\n      });\n\n      return mediaFormat.code;\n    }\n\n    return null;\n  }\n\n  private getAlt(media, format?: string): string {\n    if (!media) {\n      return undefined;\n    } else if (media[format || DEFAULT_MEDIA_FORMAT]) {\n      return media[format || DEFAULT_MEDIA_FORMAT].altText;\n    } else if (media.altText) {\n      return media.altText;\n    }\n  }\n\n  /**\n   * builds a set of images aligned with the breakpoints\n   */\n  private getSrcSet(media): string {\n    if (!media) {\n      return undefined;\n    }\n    const srcset = this.mediaFormats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.getImageUrl(media[format.code].url)} ${\n          format.threshold\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  private getImageUrl(url: string): string {\n    if (!url) {\n      return null;\n    }\n    return url.startsWith('http') ? url : this.getBaseUrl() + url;\n  }\n\n  private getBaseUrl(): string {\n    return (\n      this.config.backend.media.baseUrl || this.config.backend.occ.baseUrl || ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Media } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container: any;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  private create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container,\n      this.format,\n      this.alt\n    );\n    if (!this.media.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  private handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, IconModule, MediaModule, UrlModule],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst COUNTER_CONTROL_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line */\n  useExisting: forwardRef(() => ItemCounterComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  providers: [COUNTER_CONTROL_ACCESSOR],\n})\nexport class ItemCounterComponent\n  implements OnInit, ControlValueAccessor, OnChanges, OnDestroy {\n  @ViewChild('itemCounterInput', { static: false })\n  public input: ElementRef;\n  @ViewChild('incrementBtn', { static: false })\n  public incrementBtn: ElementRef;\n  @ViewChild('decrementBtn', { static: false })\n  public decrementBtn: ElementRef;\n\n  @Input()\n  value = 0;\n  @Input()\n  step = 1;\n  @Input()\n  min: number;\n  @Input()\n  max: number;\n  @Input()\n  async = false;\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isValueChangeable = false;\n\n  @Output()\n  update = new EventEmitter<number>();\n\n  focus: boolean;\n\n  isValueOutOfRange = false;\n  inputValue: FormControl = new FormControl({\n    disabled: this.isValueChangeable,\n  });\n\n  subscription: Subscription;\n\n  ngOnInit() {\n    this.writeValue(this.min || 0);\n    this.subscription = this.inputValue.valueChanges\n      .pipe(debounceTime(300))\n      .subscribe(value => {\n        if (value) {\n          this.manualChange(Number(value));\n        }\n      });\n  }\n\n  ngOnChanges() {\n    if (this.cartIsLoading) {\n      this.inputValue.disable({\n        onlySelf: true,\n        emitEvent: false,\n      });\n    } else {\n      this.inputValue.enable({\n        onlySelf: true,\n        emitEvent: false,\n      });\n    }\n  }\n\n  constructor(private renderer: Renderer2) {}\n\n  onTouch: Function = () => {};\n  onModelChange: Function = (_rating: number) => {};\n\n  /**\n   * If value is too small it will be set to min, if is too big it will be set to max.\n   */\n  adjustValueInRange(incomingValue: number): number {\n    return this.min !== undefined && incomingValue < this.min\n      ? this.min\n      : this.max !== undefined && incomingValue > this.max\n      ? this.max\n      : incomingValue;\n  }\n\n  /**\n   * Update model value and refresh input\n   */\n  manualChange(newValue: number): void {\n    newValue = this.adjustValueInRange(newValue);\n    this.updateValue(newValue);\n    /* We use the value from the input, however, this value\n      is not the correct value that should be displayed. The correct value to display\n      is this.value, which the parent updates if the async call succeed. If the call\n      fails, then the input will need to display this.value, and not what the user\n      recently typed in */\n    this.renderer.setProperty(this.input.nativeElement, 'value', newValue);\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    const handlers = {\n      ArrowDown: () => this.decrement(),\n      ArrowUp: () => this.increment(),\n    };\n\n    if (handlers[event.code]) {\n      handlers[event.code]();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.focus = false;\n    event.preventDefault();\n    event.stopPropagation();\n    this.onTouch();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.focus = true;\n    event.preventDefault();\n    event.stopPropagation();\n    this.onTouch();\n  }\n\n  /**\n   * Verify value that it can be incremented, if yes it does that.\n   */\n  increment(): void {\n    this.manualChange(this.value + this.step);\n    this.setFocus(true);\n  }\n\n  /**\n   * Verify value that it can be decremented, if yes it does that.\n   */\n  decrement(): void {\n    this.manualChange(this.value - this.step);\n    this.setFocus(false);\n  }\n\n  // ControlValueAccessor interface\n\n  registerOnTouched(fn: Function): void {\n    this.onTouch = fn;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  writeValue(value: number): void {\n    this.value = value || this.min || 0;\n    this.onModelChange(this.value);\n  }\n\n  /**\n   * Set up new value for input and emit event outside\n   */\n  updateValue(updatedQuantity: number): void {\n    if (!this.async) {\n      // If the async flag is true, then the parent component is responsible for updating the form\n      this.writeValue(updatedQuantity);\n    }\n\n    // Additionally, we emit a change event, so that users may optionally do something on change\n    this.update.emit(updatedQuantity);\n    this.onTouch();\n  }\n\n  /**\n   * Determines which HTML element should have focus at a given time\n   */\n  setFocus(isIncremented: boolean): void {\n    if (this.isMaxOrMinValueOrBeyond()) {\n      this.input.nativeElement.focus();\n    } else if (isIncremented) {\n      this.incrementBtn.nativeElement.focus();\n    } else {\n      this.decrementBtn.nativeElement.focus();\n    }\n  }\n\n  isMaxOrMinValueOrBeyond(): boolean {\n    return this.value >= this.max || this.value <= this.min;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[cxOnlyNumber]',\n})\nexport class OnlyNumberDirective {\n  previousValue = '';\n  integerUnsigned = '^[0-9]*$';\n  /**\n   * Class constructor\n   * @param hostElement\n   */\n  constructor(private hostElement: ElementRef, private renderer: Renderer2) {}\n\n  /**\n   * Event handler for host's change event\n   */\n  @HostListener('change')\n  onChange() {\n    this.validateValue(this.hostElement.nativeElement.value);\n  }\n\n  /**\n   * Event handler for host's change event\n   */\n  @HostListener('input')\n  onInput() {\n    this.validateValue(this.hostElement.nativeElement.value);\n  }\n\n  /**\n   * Event handler for host's paste event\n   * @param e\n   */\n  @HostListener('paste', ['$event'])\n  onPaste(e: ClipboardEvent) {\n    const value = e.clipboardData.getData('text/plain');\n    this.validateValue(value);\n    e.preventDefault();\n  }\n\n  /**\n   * Event handler for host's keyup event\n   * @param e\n   */\n  @HostListener('keyup', ['$event'])\n  onKeyUp(e: KeyboardEvent): void {\n    const value = e.target['value'];\n    this.validateValue(value);\n  }\n\n  /**\n   * Event handler for host's keydown event\n   * @param e\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent): void {\n    const originalValue: string = e.target['value'];\n    const key: string = this.getName(e);\n    const controlOrCommand = e.ctrlKey === true || e.metaKey === true;\n\n    // allowed keys apart from numeric characters\n    const allowedKeys = [\n      'Backspace',\n      'ArrowLeft',\n      'ArrowRight',\n      'Escape',\n      'Tab',\n    ];\n    // allow some non-numeric characters\n    if (\n      allowedKeys.includes(key) ||\n      // Allow: Ctrl+A and Command+A\n      (key === 'a' && controlOrCommand) ||\n      // Allow: Ctrl+C and Command+C\n      (key === 'c' && controlOrCommand) ||\n      // Allow: Ctrl+V and Command+V\n      (key === 'v' && controlOrCommand) ||\n      // Allow: Ctrl+X and Command+X\n      (key === 'x' && controlOrCommand)\n    ) {\n      // let it happen, don't do anything\n      return;\n    }\n\n    // save value before keydown event\n    this.previousValue = originalValue;\n\n    // allow number characters only\n    const isNumber = new RegExp(this.integerUnsigned).test(key);\n    if (isNumber) {\n      return;\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Test whether value is a valid number or not\n   * @param value\n   */\n  validateValue(value: string): void {\n    if (value) {\n      value = value.replace(/[^0-9]+/g, '');\n      this.renderer.setProperty(this.hostElement.nativeElement, 'value', value);\n    }\n  }\n\n  /**\n   * Get key's name\n   * @param e\n   */\n  getName(e: KeyboardEvent): string {\n    return e.key;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OnlyNumberDirective } from './only-number.directive';\n\n@NgModule({\n  declarations: [OnlyNumberDirective],\n  exports: [OnlyNumberDirective],\n})\nexport class OnlyNumberDirectiveModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ItemCounterComponent } from './item-counter.component';\nimport { OnlyNumberDirectiveModule } from '../../directives/only-number/only-number.directive.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OnlyNumberDirectiveModule,\n  ],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { Component, Input } from '@angular/core';\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent {\n  private readonly protocolRegex: RegExp = /^https?:\\/\\//i;\n\n  @Input() url: string | any[];\n  @Input() target: string;\n  @Input() class: string;\n  @Input() id: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  get routerUrl(): any[] {\n    if (typeof this.url === 'string') {\n      return [this.getAbsoluteUrl(this.url)];\n    }\n    return this.url;\n  }\n\n  isExternalUrl(): boolean {\n    return typeof this.url === 'string' && this.protocolRegex.test(this.url);\n  }\n\n  private getAbsoluteUrl(url: string) {\n    return url.startsWith('/') ? this.url : '/' + this.url;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\nconst PAGE_FIRST = 1;\nconst PAGE_WINDOW_SIZE = 3;\n\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  @Input() pagination: PaginationModel;\n  @Input() hideOnSinglePage = false;\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  // Because pagination model uses indexes starting from 0,\n  // add 1 to get current page number\n  private getCurrentPageNumber() {\n    return this.pagination.currentPage + 1;\n  }\n\n  getPagePrevious(): number {\n    return this.getCurrentPageNumber() - 1;\n  }\n\n  getPageNext(): number {\n    return this.getCurrentPageNumber() + 1;\n  }\n\n  getPageIndicies(): Array<number> {\n    return Array(this.pagination.totalPages);\n  }\n\n  // Gets the minimum index of page numbers that can be shown by being within the page window range\n  getPageWindowMinIndex(): number {\n    return (\n      Math.floor(this.pagination.currentPage / PAGE_WINDOW_SIZE) *\n      PAGE_WINDOW_SIZE\n    );\n  }\n\n  // Gets the maximum index of page numbers that can be shown by being within the page window range\n  getPageWindowMaxIndex(): number {\n    return (\n      Math.floor(this.pagination.currentPage / PAGE_WINDOW_SIZE) *\n        PAGE_WINDOW_SIZE +\n      2\n    );\n  }\n\n  hasPages(): boolean {\n    return this.pagination.totalPages > 0;\n  }\n\n  onFirstPage(): boolean {\n    return this.pagination.currentPage === 0;\n  }\n\n  onLastPage(): boolean {\n    return this.pagination.currentPage === this.pagination.totalPages - 1;\n  }\n\n  onPageIndex(index: number): boolean {\n    return this.pagination.currentPage === index;\n  }\n\n  hidePageIndex(index: number): boolean {\n    return (\n      (this.getPageWindowMinIndex() > index ||\n        this.getPageWindowMaxIndex() < index) &&\n      (index > 0 && index < this.pagination.totalPages - 1)\n    );\n  }\n\n  showDots(index: number): boolean {\n    return (\n      this.hidePageIndex(index) &&\n      (index === this.getPageWindowMaxIndex() + 1 ||\n        index === this.getPageWindowMinIndex() - 1)\n    );\n  }\n\n  clickPageNo(page: number): number {\n    // Change page on valid index\n    if (\n      page >= PAGE_FIRST &&\n      page <= this.pagination.totalPages &&\n      page !== this.getCurrentPageNumber()\n    ) {\n      this.pageChange(page);\n      return page;\n    }\n\n    // Page stays the same on invalid index\n    return this.pagination.currentPage;\n  }\n\n  pageChange(page: number): void {\n    this.viewPageEvent.emit(page - 1);\n  }\n\n  showPagination() {\n    return !(this.hideOnSinglePage && this.pagination.totalPages <= 1);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule],\n  declarations: [PaginationComponent, SortingComponent],\n  exports: [PaginationComponent, SortingComponent],\n})\nexport class ListNavigationModule {}\n","export interface Media {\n  src: string;\n  srcset?: string;\n  alt?: string;\n}\n\nexport interface MediaFormats {\n  code: string;\n  threshold: number;\n}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","export abstract class QualtricsConfig {\n  qualtrics?: {\n    projectId?: string;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, fromEvent, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, tap } from 'rxjs/operators';\nimport { QualtricsConfig } from './config/qualtrics-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QualtricsLoaderService {\n  private qualtricsLoaded$ = new BehaviorSubject<boolean>(false);\n\n  constructor(private winRef: WindowRef, private config: QualtricsConfig) {\n    if (\n      Boolean(this.winRef.nativeWindow) &&\n      Boolean(this.winRef.document) &&\n      this.isQualtricsConfigured()\n    ) {\n      this.initialize();\n      this.setup();\n    }\n  }\n\n  private initialize(): void {\n    fromEvent(this.winRef.nativeWindow, 'qsi_js_loaded').subscribe(_ =>\n      this.qualtricsLoaded$.next(true)\n    );\n  }\n\n  private setup(): void {\n    const qualtricsScript = this.winRef.document.createElement('script');\n    qualtricsScript.type = 'text/javascript';\n    qualtricsScript.defer = true;\n    qualtricsScript.src = 'assets/qualtricsIntegration.js';\n\n    const idScript = this.winRef.document.createElement('div');\n    idScript.id = this.config.qualtrics.projectId;\n\n    this.winRef.document\n      .getElementsByTagName('head')[0]\n      .appendChild(qualtricsScript);\n\n    this.winRef.document.getElementsByTagName('head')[0].appendChild(idScript);\n  }\n\n  private isQualtricsConfigured(): boolean {\n    return (\n      Boolean(this.config.qualtrics) && Boolean(this.config.qualtrics.projectId)\n    );\n  }\n\n  load(): Observable<boolean> {\n    return this.qualtricsLoaded$.pipe(\n      filter(loaded => loaded),\n      switchMap(_ => {\n        const qsi = this.winRef.nativeWindow['QSI'];\n        return this.isDataLoaded().pipe(\n          distinctUntilChanged(),\n          tap(dataLoaded => {\n            if (dataLoaded) {\n              qsi.API.unload();\n              qsi.API.load().done(qsi.API.run());\n            }\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data\n   * If client(s) does not extend this service to override this implementation, it returns true\n   * Return false otherwise.\n   */\n  protected isDataLoaded(): Observable<boolean> {\n    return of(true);\n  }\n}\n","import { Component } from '@angular/core';\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\n\n@Component({\n  selector: 'cx-qualtrics',\n  template: `\n    <ng-container *ngIf=\"qualtricsEnabled$ | async\"></ng-container>\n  `,\n})\nexport class QualtricsComponent {\n  qualtricsEnabled$ = this.qualtricsLoader.load();\n\n  constructor(private qualtricsLoader: QualtricsLoaderService) {}\n}\n","import { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, Config, ConfigModule } from '@spartacus/core';\nimport { defaultQualtricsConfig } from './config/default-qualtrics-config';\nimport { QualtricsConfig } from './config/qualtrics-config';\nimport { QualtricsComponent } from './qualtrics.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        QualtricsComponent: {\n          component: QualtricsComponent,\n        },\n      },\n    }),\n    ConfigModule.withConfig(defaultQualtricsConfig),\n  ],\n  declarations: [QualtricsComponent],\n  entryComponents: [QualtricsComponent],\n  providers: [\n    {\n      provide: QualtricsConfig,\n      useExisting: Config,\n    },\n  ],\n})\nexport class QualtricsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap(items =>\n        this.getContext(context).pipe(\n          switchMap(ctx => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map(ctx => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe(service => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map((ctx: string) => this.getInjectedService(ctx)),\n      filter(s => !!s)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map(data => data.context),\n        map(ctx => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  ContextServiceMap,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextModule,\n    IconModule,\n  ],\n  providers: [SiteContextComponentService],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  entryComponents: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent implements OnInit {\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interation is not provided.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = false;\n\n  /**\n   * The rating will be used to render some colorful stars in the UI.\n   */\n  @Input() rating: number;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  @Output() change = new EventEmitter<number>();\n\n  private initialRate = 0;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(el: ElementRef, renderer: Renderer2); // tslint:disable-line\n  /**\n   * @deprecated since version 1.0.2\n   *  Use constructor(el: ElementRef, renderer: Renderer2) instead\n   *\n   *  TODO(issue:#3803) deprecated since 1.0.2\n   */\n  constructor(el: ElementRef);\n  constructor(protected el: ElementRef, protected renderer?: Renderer2) {}\n\n  ngOnInit(): void {\n    this.setRate(this.rating, true);\n  }\n\n  setRate(value: number, force?: boolean): void {\n    if (!this.disabled || force) {\n      // TODO(issue:#3803) deprecated since 1.0.2\n      if (this.renderer) {\n        this.renderer.setAttribute(\n          this.el.nativeElement,\n          'style',\n          `--star-fill:${value || this.initialRate};`\n        );\n      } else {\n        this.el.nativeElement.style.setProperty(\n          '--star-fill',\n          value || this.initialRate\n        );\n      }\n    }\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","export abstract class ViewConfig {\n  view?: {\n    /**\n     * Configurations related to the view of the application\n     */\n    infiniteScroll?: {\n      active?: boolean;\n      productLimit?: number;\n      showMoreButton?: boolean;\n    };\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ViewConfig } from './view-config';\nimport { Config, provideConfig } from '@spartacus/core';\n\n@NgModule({})\nexport class ViewConfigModule {\n  static forRoot(): ModuleWithProviders<ViewConfigModule> {\n    return {\n      ngModule: ViewConfigModule,\n      providers: [\n        provideConfig({\n          view: {},\n        }),\n        {\n          provide: ViewConfig,\n          useExisting: Config,\n        },\n      ],\n    };\n  }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[cxAutoFocus]',\n})\nexport class AutoFocusDirective implements AfterViewInit {\n  constructor(private hostElement: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.hostElement.nativeElement.focus();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AutoFocusDirective } from './auto-focus.directive';\n\n@NgModule({\n  declarations: [AutoFocusDirective],\n  exports: [AutoFocusDirective],\n})\nexport class AutoFocusDirectiveModule {}\n","import { FormGroup, AbstractControl } from '@angular/forms';\n\n/**\n * Utility class when working with forms.\n */\nexport class FormUtils {\n  /**\n   *\n   * Validates a field of the given form group\n   *\n   * If the field is NOT valid (or invalid), the method returns `true`.\n   *\n   * @param form Form with fields to check\n   * @param formControlName Name of the form field to check\n   * @param submitted Has the form been submitted\n   */\n  static isNotValidField(\n    form: FormGroup,\n    formControlName: string,\n    submitted: boolean\n  ): boolean {\n    const control: AbstractControl = form.get(formControlName);\n    return control.invalid && (submitted || (control.touched && control.dirty));\n  }\n}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\n\nexport class CustomFormValidators {\n  static emailDomainValidator(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match('[.][a-zA-Z]+$') ? null : { InvalidEmail: true };\n  }\n\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email.match(EMAIL_PATTERN) ? null : { InvalidEmail: true };\n  }\n\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n    return password.match(PASSWORD_PATTERN) ? null : { InvalidPassword: true };\n  }\n\n  static matchPassword(control: AbstractControl): { NotEqual: boolean } {\n    if (control.get('password').value !== control.get('passwordconf').value) {\n      return { NotEqual: true };\n    }\n    return null;\n  }\n}\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Order, RoutingService, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService\n  ) {\n    this.orderCode$ = this.routingService\n      .getRouterState()\n      .pipe(map(routingData => routingData.state.params.orderCode));\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap(orderCode => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  OrderEntry,\n  PromotionResult,\n  CartService,\n  Cart,\n  Order,\n  CheckoutService,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../../cms-components/myaccount/order/order-details/order-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PromotionService {\n  constructor(\n    protected cartService: CartService,\n    protected orderDetailsService: OrderDetailsService,\n    protected checkoutService: CheckoutService\n  ) {}\n\n  getOrderPromotions(\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.getOrderPromotionsFromCart();\n      case PromotionLocation.Checkout:\n        return this.getOrderPromotionsFromCheckout();\n      case PromotionLocation.Order:\n        return this.getOrderPromotionsFromOrder();\n      default:\n        return of([]);\n    }\n  }\n\n  getOrderPromotionsFromCart(): Observable<PromotionResult[]> {\n    return this.cartService\n      .getActive()\n      .pipe(map(cart => this.getOrderPromotionsFromCartHelper(cart)));\n  }\n\n  private getOrderPromotionsFromCartHelper(cart: Cart): PromotionResult[] {\n    const potentialPromotions = [];\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\n\n    const appliedPromotions = [];\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\n\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n\n  getOrderPromotionsFromCheckout(): Observable<PromotionResult[]> {\n    return this.checkoutService\n      .getOrderDetails()\n      .pipe(map(order => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  getOrderPromotionsFromOrder(): Observable<PromotionResult[]> {\n    return this.orderDetailsService\n      .getOrderDetails()\n      .pipe(map(order => this.getOrderPromotionsFromOrderHelper(order)));\n  }\n\n  private getOrderPromotionsFromOrderHelper(order: Order): PromotionResult[] {\n    const appliedOrderPromotions = [];\n    appliedOrderPromotions.push(...(order.appliedOrderPromotions || []));\n\n    return appliedOrderPromotions;\n  }\n\n  getProductPromotionForEntry(\n    item: OrderEntry,\n    promotionLocation: PromotionLocation\n  ): Observable<PromotionResult[]> {\n    switch (promotionLocation) {\n      case PromotionLocation.ActiveCart:\n        return this.cartService\n          .getActive()\n          .pipe(\n            map(cart =>\n              this.getProductPromotion(\n                item,\n                cart.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Checkout:\n        return this.checkoutService\n          .getOrderDetails()\n          .pipe(\n            map(order =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n      case PromotionLocation.Order:\n        return this.orderDetailsService\n          .getOrderDetails()\n          .pipe(\n            map(order =>\n              this.getProductPromotion(\n                item,\n                order.appliedProductPromotions || []\n              )\n            )\n          );\n    }\n  }\n\n  private getProductPromotion(\n    item: OrderEntry,\n    promotions: PromotionResult[]\n  ): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    if (promotions && promotions.length > 0) {\n      for (const promotion of promotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumedEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumedEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { AnonymousConsentDialogComponent } from '../../../shared/components/anonymous-consents/dialog/anonymous-consent-dialog.component';\nimport { ModalService } from '../../../shared/index';\n\n@Component({\n  selector: 'cx-anonymous-consent-open-dialog',\n  templateUrl: './anonymous-consent-open-dialog.component.html',\n})\nexport class AnonymousConsentOpenDialogComponent {\n  constructor(protected modalService: ModalService) {}\n\n  openDialog(): void {\n    this.modalService.open(AnonymousConsentDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  ConfigModule,\n  DeferLoadingStrategy,\n  FeaturesConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AnonymousConsentManagementBannerComponent: {\n          component: AnonymousConsentManagementBannerComponent,\n          deferLoading: DeferLoadingStrategy.INSTANT,\n        },\n        AnonymousConsentOpenDialogComponent: {\n          component: AnonymousConsentOpenDialogComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  exports: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  entryComponents: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n})\nexport class AnonymousConsentManagementBannerModule {}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { CmsConfig } from '@spartacus/core';\nimport { Route } from '@angular/router';\nimport { isPlatformServer } from '@angular/common';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsMappingService {\n  constructor(\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  isComponentEnabled(flexType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (this.config.cmsComponents[flexType] || {})\n      .disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  getRoutesForComponents(componentTypes: string[]): Route[] {\n    const routes = [];\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        routes.push(...this.getRoutesForComponent(componentType));\n      }\n    }\n    return routes;\n  }\n\n  getGuardsForComponents(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getGuardsForComponent(componentType).forEach(guard =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  getI18nKeysForComponents(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.isComponentEnabled(componentType)) {\n        this.getI18nKeysForComponent(componentType).forEach(key =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n\n  private getRoutesForComponent(componentType: string): Route[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.childRoutes) || [];\n  }\n\n  private getGuardsForComponent(componentType: string): any[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.guards) || [];\n  }\n\n  private getI18nKeysForComponent(componentType: string): string[] {\n    const mappingConfig = this.config.cmsComponents[componentType];\n    return (mappingConfig && mappingConfig.i18nKeys) || [];\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsMappingService } from './cms-mapping.service';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsMapping.getGuardsForComponents(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map(guardClass => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { CmsMappingService } from './cms-mapping.service';\nimport { TranslationService, TranslationChunkService } from '@spartacus/core';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    private cmsMapping: CmsMappingService,\n    private translation: TranslationService,\n    private translationChunk: TranslationChunkService\n  ) {}\n\n  loadChunksForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsMapping.getI18nKeysForComponents(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable()\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // Prints warn messages for missing layout configs.\n  // The warnings are only printed once per config\n  // to not pollute the console log.\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged((a, b) => {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n\n  /**\n   * Returns an observable with the last page slot above-the-fold\n   * for the given pageTemplate / breakpoint.\n   *\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\n   */\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\n    return this.breakpointService.breakpoint$.pipe(\n      map(breakpoint => {\n        if (!this.config.layoutSlots) {\n          // no layout config available\n          return null;\n        }\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\n        const config = this.getResponsiveSlotConfig(\n          <LayoutSlotConfig>pageTemplateConfig,\n          'pageFold',\n          breakpoint\n        );\n        return config ? config.pageFold : null;\n      })\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      const pageSlots = Object.keys(page.slots);\n      return config.slots.filter(slot => pageSlots.includes(slot));\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter(page => !!page));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter(page => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuratoin\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!layoutSlotConfig || !breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.splice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // tslint:disable-next-line: no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n  readonly templateName$: Observable<string> = this.pageLayoutService\n    .templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap(section => (section ? of(section) : this.templateName$)),\n    tap(name => {\n      this.styleClass = name;\n    })\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap(section => this.pageLayoutService.getSlots(section))\n  );\n\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\n    switchMap(templateName =>\n      this.pageLayoutService.getPageFoldSlot(templateName)\n    ),\n    distinctUntilChanged()\n  );\n\n  private currentClass;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private pageLayoutService: PageLayoutService\n  ) {}\n\n  set styleClass(cls: string) {\n    if (this.currentClass) {\n      this.renderer.removeClass(this.el.nativeElement, this.currentClass);\n    }\n    this.renderer.addClass(this.el.nativeElement, cls);\n    this.currentClass = cls;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsRoute, PageContext, PageType } from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsMappingService } from './cms-mapping.service';\n\n/**\n * Please don't put that service in public API.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsRoutesService {\n  constructor(private router: Router, private cmsMapping: CmsMappingService) {}\n\n  cmsRouteExist(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean {\n    const componentRoutes = this.cmsMapping.getRoutesForComponents(\n      componentTypes\n    );\n    if (componentRoutes.length) {\n      if (this.updateRouting(pageContext, currentPageLabel, componentRoutes)) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(\n    pageContext: PageContext,\n    pageLabel: string,\n    routes: Route[]\n  ): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageLabel.startsWith('/') &&\n      pageLabel.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageLabel.substr(1),\n        component: PageLayoutComponent,\n        children: routes,\n        data: {\n          cxCmsRouteContext: {\n            type: pageContext.type,\n            id: pageLabel,\n          },\n        },\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  Page,\n  PageContext,\n  PageType,\n  ProtectedRoutesGuard,\n  RoutingService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  first,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    routingService: RoutingService,\n    cmsService: CmsService,\n    cmsRoutes: CmsRoutesService,\n    cmsI18n: CmsI18nService,\n    cmsGuards: CmsGuardsService,\n    semanticPathService: SemanticPathService,\n    protectedRoutesGuard: ProtectedRoutesGuard // tslint:disable-line\n  );\n\n  /**\n   * @deprecated since version 1.2.0\n   * Use constructor with more dependencies and make them all required.\n   *\n   * TODO(issue:4646) deprecated since version 1.2.0\n   */\n  constructor(\n    routingService: RoutingService,\n    cmsService: CmsService,\n    cmsRoutes: CmsRoutesService,\n    cmsI18n: CmsI18nService,\n    cmsGuards: CmsGuardsService,\n    semanticPathService: SemanticPathService\n  );\n  constructor(\n    // expose as `protected` only services from public API:\n    protected routingService: RoutingService,\n    protected cmsService: CmsService,\n    private cmsRoutes: CmsRoutesService,\n    private cmsI18n: CmsI18nService,\n    private cmsGuards: CmsGuardsService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutesGuard?: ProtectedRoutesGuard\n  ) {}\n\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    /**\n     * TODO(issue:4646) Expect that `ProtectedRoutesGuard` dependency is required (remove `if` logic)\n     */\n    return this.protectedRoutesGuard\n      ? this.protectedRoutesGuard\n          .canActivate(route)\n          .pipe(\n            switchMap(result =>\n              result ? this.getCmsPage(route, state) : of(result)\n            )\n          )\n      : this.getCmsPage(route, state);\n  }\n\n  private getCmsPage(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.routingService.getNextPageContext().pipe(\n      switchMap(pageContext =>\n        this.cmsService.getPage(pageContext, true).pipe(\n          first(),\n          withLatestFrom(of(pageContext))\n        )\n      ),\n      switchMap(([pageData, pageContext]) =>\n        pageData\n          ? this.resolveCmsPageLogic(pageContext, pageData, route, state)\n          : this.handleNotFoundPage(pageContext, route, state)\n      )\n    );\n  }\n\n  private resolveCmsPageLogic(\n    pageContext: PageContext,\n    pageData: Page,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      take(1),\n      switchMap(componentTypes =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadChunksForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\n        if (\n          canActivate === true &&\n          !route.data.cxCmsRouteContext &&\n          !this.cmsRoutes.cmsRouteExist(pageLabel)\n        ) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url,\n            pageLabel\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  private handleNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\n      switchMap(notFoundPage => {\n        if (notFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap(notFoundIndex => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n            }),\n            switchMap(notFoundIndex =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter(index => index === notFoundIndex)\n              )\n            ),\n            switchMap(() =>\n              this.resolveCmsPageLogic(pageContext, notFoundPage, route, state)\n            )\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","export enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService<T = TemplateRef<any>> {\n  private templatesRefs = new Map<string, (T)[]>();\n  private templatesRefsBefore = new Map<string, (T)[]>();\n  private templatesRefsAfter = new Map<string, (T)[]>();\n\n  /**\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\n   * The UI position where this template or ComponentFactory is inserted is given by a\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\n   * is either before or after, or replaces the entire UI.\n   *\n   * @param outlet the UI location represented by a string\n   * @param template the `TemplateRef` that will be used to insert UI\n   * @param position the `OutletPosition` in the UI\n   */\n  add(outlet: string, template: T, position?: OutletPosition): void;\n  /**\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\n   */\n  add(\n    outlet: string,\n    // tslint:disable-next-line: unified-signatures\n    factory: T,\n    position?: OutletPosition\n  ): void;\n  /**\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\n   */\n  add(\n    outlet: string,\n    templateOrFactory: T,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    if (position === OutletPosition.BEFORE) {\n      this.store(this.templatesRefsBefore, outlet, templateOrFactory);\n    }\n    if (position === OutletPosition.REPLACE) {\n      this.store(this.templatesRefs, outlet, templateOrFactory);\n    }\n    if (position === OutletPosition.AFTER) {\n      this.store(this.templatesRefsAfter, outlet, templateOrFactory);\n    }\n  }\n\n  /**\n   *\n   * Returns a single object or multiple objects for the given outlet reference,\n   * depending on the `stacked` argument.\n   *\n   * @param outlet The outlet reference\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\n   * @param stacked Indicates whether an array of outlet components is returned\n   */\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    stacked = AVOID_STACKED_OUTLETS\n  ): T[] | T {\n    let templateRef: T[];\n    switch (position) {\n      case OutletPosition.BEFORE:\n        templateRef = this.templatesRefsBefore.get(outlet);\n        break;\n      case OutletPosition.AFTER:\n        templateRef = this.templatesRefsAfter.get(outlet);\n        break;\n      default:\n        templateRef = this.templatesRefs.get(outlet);\n    }\n    if (templateRef && !stacked) {\n      return templateRef[0];\n    }\n    return templateRef;\n  }\n\n  private store(store: Map<string, (T)[]>, outlet: string, value: T) {\n    const existing = store.get(outlet) || [];\n    const newValue: T[] = existing.concat([value]);\n    store.set(outlet, newValue);\n  }\n}\n","import { Directive, TemplateRef, Input, OnInit } from '@angular/core';\n\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\n\n/**\n * The IntersectionService uses the native IntersectionObserver (v2), which\n * can be used to implement pre-loading and deferred loading of DOM content.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntersectionService {\n  constructor(protected config: LayoutConfig) {}\n\n  /**\n   * Returns an Observable that emits only once a boolean value whenever\n   * the given element has shown in the view port.\n   *\n   * The returned obervable will only emit the first value. The\n   * observable must be cleaned up either way, since the value might never emit; it\n   *  depends on whether the element appears in the view port.\n   */\n  isIntersected(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    return this.intersects(element, options).pipe(first(v => v === true));\n  }\n\n  /**\n   * Indicates whenever the element intersects the view port. An optional margin\n   * is used to intersects before the element shows up in the viewport.\n   * A value is emitted each time the element intersects.\n   *\n   * This is private for now, but could be exposed as a public API\n   * to introduce additional (css) render effects to the UI.\n   */\n  private intersects(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    const elementVisible$ = new Observable(observer => {\n      const rootMargin = this.getRootMargin(options);\n      const intersectOptions = { rootMargin };\n      const intersectionObserver = new IntersectionObserver(entries => {\n        observer.next(entries);\n      }, intersectOptions);\n      intersectionObserver.observe(element);\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    }).pipe(\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\n      distinctUntilChanged()\n    );\n\n    return elementVisible$;\n  }\n\n  private getRootMargin(options?: IntersectionOptions) {\n    if (options.rootMargin) {\n      return options.rootMargin;\n    }\n    const layoutConfig = this.config as LayoutConfig;\n    if (\n      layoutConfig.deferredLoading &&\n      layoutConfig.deferredLoading.intersectionMargin\n    ) {\n      return layoutConfig.deferredLoading.intersectionMargin;\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\nimport { IntersectionService } from './intersection.service';\n\n/**\n * The defer loading serivce is used to defer loading of DOM elements\n * until the elements are required for the user experience.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeferLoaderService {\n  globalLoadStrategy: DeferLoadingStrategy;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected config: LayoutConfig,\n    protected intersectionService: IntersectionService\n  ) {\n    this.globalLoadStrategy = config.deferredLoading\n      ? config.deferredLoading.strategy\n      : DeferLoadingStrategy.INSTANT;\n  }\n\n  /**\n   * Defer loading till the element intersects the viewport.\n   *\n   * We evalutes whether we instantly load the element for different reasons:\n   * - we run in SSR mode\n   * - there's no global strategy given\n   * - the global loading strategy is set to INSTANT loading,\n   *   and the loading strategy in the given is not set to DEFER\n   * - the loading strategy in the given options is set to INSTANT\n   */\n  load(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\n      return of(true);\n    } else {\n      return this.intersectionService.isIntersected(element, options);\n    }\n  }\n\n  private shouldLoadInstantly(\n    elementLoadingStrategy: DeferLoadingStrategy\n  ): boolean {\n    return (\n      isPlatformServer(this.platformId) ||\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\n    );\n  }\n}\n","import {\n  ComponentFactory,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\nimport { OutletPosition, USE_STACKED_OUTLETS } from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective implements OnDestroy, OnChanges {\n  @Input() cxOutlet: string;\n\n  @Input() cxOutletContext: any;\n\n  /**\n   * Defers loading options for the the templates of this outlet.\n   */\n  @Input() cxOutletDefer: IntersectionOptions;\n\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\n\n  subscription = new Subscription();\n\n  constructor(\n    vcr: ViewContainerRef,\n    templateRef: TemplateRef<any>,\n    outletService: OutletService<TemplateRef<any> | ComponentFactory<any>>,\n    // tslint:disable-next-line: unified-signatures\n    intersectionService: DeferLoaderService\n  );\n  /**\n   * @deprecated since version 1.4\n   * Use constructor(vcr: ViewContainerRef, templateRef: TemplateRef<any>, outletService: OutletService<TemplateRef<any> | ComponentFactory<any>>, intersectionService?: IntersectionService) instead\n   */\n  constructor(\n    vcr: ViewContainerRef,\n    templateRef: TemplateRef<any>,\n    outletService: OutletService<TemplateRef<any> | ComponentFactory<any>>\n  );\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService<\n      TemplateRef<any> | ComponentFactory<any>\n    >,\n    private deferLoaderService?: DeferLoaderService\n  ) {}\n\n  private initializeOutlet(): void {\n    this.vcr.clear();\n    this.subscription.unsubscribe();\n    this.subscription = new Subscription();\n\n    if (this.cxOutletDefer) {\n      this.deferLoading();\n    } else {\n      this.render();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.cxOutlet) {\n      this.initializeOutlet();\n    }\n  }\n\n  private deferLoading(): void {\n    this.loaded.emit(false);\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\n    // Although the deferLoaderService might emit only once, as long as the hostElement\n    // isn't being loaded, there's no value being emitted. Therefor we need to clean up\n    // the subscription on destroy.\n    this.subscription.add(\n      this.deferLoaderService\n        .load(hostElement, this.cxOutletDefer)\n        .subscribe(() => {\n          this.render();\n          this.loaded.emit(true);\n        })\n    );\n  }\n\n  private render() {\n    this.renderOutlet(OutletPosition.BEFORE);\n    this.renderOutlet(OutletPosition.REPLACE);\n    this.renderOutlet(OutletPosition.AFTER);\n  }\n\n  private renderOutlet(position: OutletPosition): void {\n    let templates: any[] = <any[]>(\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\n    );\n\n    if (!templates && position === OutletPosition.REPLACE) {\n      templates = [this.templateRef];\n    }\n\n    // Just in case someone extended the `OutletService` and\n    // returns a singular object.\n    if (!Array.isArray(templates)) {\n      templates = [templates];\n    }\n\n    templates.forEach(obj => {\n      this.create(obj);\n    });\n  }\n\n  private create(tmplOrFactory: any): void {\n    if (tmplOrFactory instanceof ComponentFactory) {\n      this.vcr.createComponent(tmplOrFactory);\n    } else if (tmplOrFactory instanceof TemplateRef) {\n      const view = this.vcr.createEmbeddedView(\n        <TemplateRef<any>>tmplOrFactory,\n        {\n          $implicit: this.cxOutletContext,\n        }\n      );\n\n      // we do not know if content is created dynamically or not\n      // so we apply change detection anyway\n      view.markForCheck();\n    }\n  }\n\n  /**\n   * Returns the closest `HtmlElement`, by iterating over the\n   * parent elements of the given element.\n   *\n   * @param element\n   */\n  private getHostElement(element: Element): HTMLElement {\n    if (element instanceof HTMLElement) {\n      return element;\n    }\n    return this.getHostElement(element.parentElement);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletService } from './outlet.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  providers: [OutletService],\n  exports: [OutletDirective],\n})\nexport class OutletModule {}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { CmsConfig } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ComponentMapperService {\n  missingComponents: string[] = [];\n\n  private loadedWebComponents: { [path: string]: any } = {};\n\n  constructor(\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: CmsConfig,\n    @Inject(DOCUMENT) protected document: any,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  /**\n   * @desc\n   * returns a web component for the CMS typecode.\n   *\n   * The mapping of CMS components to web componetns requires a mapping.\n   * This is configurable when the module is loaded.\n   *\n   * For example:\n   *\n   *  {\n   *      'CMSLinkComponent': 'LinkComponent',\n   *      'SimpleResponsiveBannerComponent': 'SimpleResponsiveBannerComponent',\n   *      [etc.]\n   *  }\n   *\n   * The type codes are dynamic since they depend on the implementation.\n   * Customer will add, extend or ingore standard components.\n   *\n   * @param typeCode the component type\n   */\n  protected getComponent(typeCode: string): any {\n    const componentConfig = this.config.cmsComponents[typeCode];\n    if (!componentConfig) {\n      if (!this.missingComponents.includes(typeCode)) {\n        this.missingComponents.push(typeCode);\n        console.warn(\n          `No component implementation found for the CMS component type '${typeCode}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n    return componentConfig ? componentConfig.component : null;\n  }\n\n  getComponentFactoryByCode(typeCode: string): any {\n    const component = this.getComponent(typeCode);\n    if (!component) {\n      return null;\n    }\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      component\n    );\n\n    if (!factory) {\n      console.warn(\n        `No component factory found for the CMS component type '${typeCode}'.\\n`,\n        `Make sure you add a component to the 'entryComponents' array in the NgModule.`\n      );\n      return null;\n    }\n    return factory;\n  }\n\n  isWebComponent(typeCode: string): boolean {\n    const component = this.getComponent(typeCode);\n    return typeof component === 'string' && (component || '').includes('#');\n  }\n\n  initWebComponent(\n    componentType: string,\n    renderer: Renderer2\n  ): Promise<string> {\n    return new Promise(resolve => {\n      const [path, selector] = this.getComponent(componentType).split('#');\n\n      let script = this.loadedWebComponents[path];\n\n      if (!script) {\n        if (path) {\n          script = renderer.createElement('script');\n          this.loadedWebComponents[path] = script;\n          script.setAttribute('src', path);\n          renderer.appendChild(this.document.body, script);\n          if (isPlatformBrowser(this.platform)) {\n            script.onload = () => {\n              script.onload = null;\n            };\n          }\n        } else {\n          script = {};\n        }\n      }\n\n      if (script.onload) {\n        // If script is still loading (has onload callback defined)\n        // add new callback and chain it with the existing one.\n        // Needed to support loading multiple components from one script\n        const chainedOnload = script.onload;\n        script.onload = () => {\n          chainedOnload();\n          resolve(selector);\n        };\n      } else {\n        resolve(selector);\n      }\n    });\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport {\n  AuthService,\n  BaseSiteService,\n  CartDataService,\n  CartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  CmsService,\n  CurrencyService,\n  FeatureConfigService,\n  GlobalMessageService,\n  KymaService,\n  LanguageService,\n  OccEndpointsService,\n  PageMetaService,\n  ProductReferenceService,\n  ProductReviewService,\n  ProductSearchService,\n  ProductService,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  UserAddressService,\n  UserConsentService,\n  UserOrderService,\n  UserPaymentService,\n  UserService,\n  UserNotificationPreferenceService,\n  UserInterestsService,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CxApiService {\n  cmsComponentData?: CmsComponentData<any>;\n\n  constructor(\n    // auth\n    @Optional() public auth: AuthService,\n    // cart\n    @Optional() public cart: CartService,\n    @Optional() public cartData: CartDataService,\n    // checkout\n    @Optional() public checkout: CheckoutService,\n    @Optional() public checkoutDelivery: CheckoutDeliveryService,\n    @Optional() public checkoutPayment: CheckoutPaymentService,\n    // cms\n    @Optional() public cms: CmsService,\n    @Optional() public pageMeta: PageMetaService,\n    // features config\n    @Optional() public featureConfig: FeatureConfigService,\n    // global message\n    @Optional() public globalMessage: GlobalMessageService,\n    // i18n\n    @Optional() public translation: TranslationService,\n    // kyma\n    @Optional() public kyma: KymaService,\n    // occ\n    @Optional() public occEndpoints: OccEndpointsService,\n    // product\n    @Optional() public product: ProductService,\n    @Optional() public productSearch: ProductSearchService,\n    @Optional() public productReview: ProductReviewService,\n    @Optional() public productReference: ProductReferenceService,\n    @Optional() public searchbox: SearchboxService,\n    // routing\n    @Optional() public routing: RoutingService,\n    // site context\n    @Optional() public currency: CurrencyService,\n    @Optional() public language: LanguageService,\n    @Optional() public baseSite: BaseSiteService,\n    // user\n    @Optional() public user: UserService,\n    @Optional() public userAddress: UserAddressService,\n    @Optional() public userConsent: UserConsentService,\n    @Optional() public userOrder: UserOrderService,\n    @Optional() public userPayment: UserPaymentService,\n    @Optional()\n    public userNotificationPreferenceService: UserNotificationPreferenceService,\n    @Optional()\n    public userInterestsService: UserInterestsService,\n    @Optional() public selectiveCartService: SelectiveCartService,\n    // framework\n    public ngZone: NgZone\n  ) {}\n}\n","import { isPlatformServer } from '@angular/common';\nimport {\n  ComponentRef,\n  Directive,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  CmsComponent,\n  CmsConfig,\n  CmsService,\n  ContentSlotComponentData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../model/cms-component-data';\nimport { ComponentMapperService } from './component-mapper.service';\nimport { CxApiService } from './cx-api.service';\n\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n\n  cmpRef: ComponentRef<any>;\n  webElement: any;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private componentMapper: ComponentMapperService,\n    private injector: Injector,\n    private cmsService: CmsService,\n    private dynamicAttributeService: DynamicAttributeService,\n    private renderer: Renderer2,\n    private config: CmsConfig,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngOnInit() {\n    if (!this.shouldRenderComponent()) {\n      return;\n    }\n    if (this.componentMapper.isWebComponent(this.cxComponentWrapper.flexType)) {\n      this.launchWebComponent();\n    } else {\n      this.launchComponent();\n    }\n  }\n\n  private shouldRenderComponent(): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    const isComponentDisabledInSSR = (\n      this.config.cmsComponents[this.cxComponentWrapper.flexType] || {}\n    ).disableSSR;\n    return !(isSSR && isComponentDisabledInSSR);\n  }\n\n  private launchComponent() {\n    const factory = this.componentMapper.getComponentFactoryByCode(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (factory) {\n      this.cmpRef = this.vcr.createComponent(\n        factory,\n        undefined,\n        this.getInjectorForComponent()\n      );\n\n      if (this.cmsService.isLaunchInSmartEdit()) {\n        this.addSmartEditContract(this.cmpRef.location.nativeElement);\n      }\n    }\n  }\n\n  private async launchWebComponent() {\n    const elementName = await this.componentMapper.initWebComponent(\n      this.cxComponentWrapper.flexType,\n      this.renderer\n    );\n\n    if (elementName) {\n      this.webElement = this.renderer.createElement(elementName);\n\n      const cmsComponentData = this.getCmsDataForComponent();\n\n      this.webElement.cxApi = {\n        ...this.injector.get(CxApiService),\n        CmsComponentData: cmsComponentData, // TODO: remove / deprecated since 1.0.x\n        cmsComponentData,\n      };\n\n      this.renderer.appendChild(\n        this.vcr.element.nativeElement.parentElement,\n        this.webElement\n      );\n\n      if (this.cmsService.isLaunchInSmartEdit()) {\n        this.addSmartEditContract(this.webElement);\n      }\n    }\n  }\n\n  private getCmsDataForComponent<T extends CmsComponent>(): CmsComponentData<\n    T\n  > {\n    return {\n      uid: this.cxComponentWrapper.uid,\n      data$: this.cmsService.getComponentData(this.cxComponentWrapper.uid),\n    };\n  }\n\n  private getInjectorForComponent(): Injector {\n    const configProviders =\n      (this.config.cmsComponents[this.cxComponentWrapper.flexType] || {})\n        .providers || [];\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useValue: this.getCmsDataForComponent(),\n        },\n        ...configProviders,\n      ],\n      parent: this.injector,\n    });\n  }\n\n  private addSmartEditContract(element: Element) {\n    this.dynamicAttributeService.addDynamicAttributes(\n      this.cxComponentWrapper.properties,\n      element,\n      this.renderer\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.cmpRef) {\n      this.cmpRef.destroy();\n    }\n    if (this.webElement) {\n      this.webElement.remove();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [],\n  declarations: [ComponentWrapperDirective],\n  exports: [ComponentWrapperDirective],\n})\nexport class PageComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsConfig,\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DeferLoadingStrategy,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\n\n@Component({\n  selector: 'cx-page-slot,[cx-page-slot]',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent implements OnInit, OnDestroy {\n  /**\n   * The position is used to find the CMS page slot (and optional outlet)\n   * that is rendered in the PageSlotComponent. Furthermore, the position\n   * is added as a CSS class name to the host element.\n   */\n  @Input()\n  set position(position: string) {\n    this.position$.next(position);\n    this.renderer.addClass(this.hostElement.nativeElement, position);\n  }\n  get position(): string {\n    return this.position$.value;\n  }\n\n  @HostBinding('class.cx-pending') isPending = true;\n  @HostBinding('class.has-components') hasComponents = false;\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\n\n  private pendingComponentCount: number;\n\n  readonly position$ = new BehaviorSubject<string>(undefined);\n\n  /**\n   * observable with `ContentSlotData` for the current position\n   *\n   * @deprecated we'll stop supporting this property in 2.0 as\n   * it is not used separately.\n   */\n  readonly slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap(position => this.cmsService.getContentSlot(position)),\n    tap(slot => this.addSmartEditSlotClass(slot))\n  );\n\n  readonly components$: Observable<\n    ContentSlotComponentData[]\n  > = this.slot$.pipe(\n    map(slot => (slot && slot.components ? slot.components : [])),\n    distinctUntilChanged(\n      (a, b) =>\n        a.length === b.length && !a.find((el, index) => el.uid !== b[index].uid)\n    )\n  );\n\n  private subscription = new Subscription();\n\n  constructor(\n    cmsService: CmsService,\n    dynamicAttributeService: DynamicAttributeService,\n    renderer: Renderer2,\n    hostElement: ElementRef,\n    // tslint:disable-next-line:unified-signatures\n    config: CmsConfig\n  );\n  /**\n   * @deprecated since version 1.4\n   * Use constructor(cmsService: CmsService, dynamicAttributeService: DynamicAttributeService, renderer: Renderer2, hostElement: ElementRef, config?: CmsConfig) instead\n   */\n  constructor(\n    cmsService: CmsService,\n    dynamicAttributeService: DynamicAttributeService,\n    renderer: Renderer2,\n    hostElement: ElementRef\n  );\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected hostElement: ElementRef,\n    protected config?: CmsConfig\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.components$.subscribe(components => {\n        this.hasComponents = components && components.length > 0;\n        this.pendingComponentCount = components ? components.length : 0;\n        this.isPending = this.pendingComponentCount > 0;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Is triggered when a component is added to the view.\n   * We use this information to dropthe `is-pending` class from the page slot\n   * when all nested components have been added.\n   */\n  isLoaded(loadState: boolean) {\n    if (loadState) {\n      this.pendingComponentCount--;\n    }\n    this.isPending = this.pendingComponentCount > 0;\n  }\n\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\n    const deferLoading = this.getDeferLoadingStrategy(componentType);\n    return { deferLoading };\n  }\n\n  /**\n   * The `DeferLoadingStrategy` indicates whether component rendering\n   * should be deferred.\n   */\n  private getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy {\n    if (this.config) {\n      return ((this.config as CmsConfig).cmsComponents[componentType] || {})\n        .deferLoading;\n    }\n  }\n\n  private addSmartEditSlotClass(slot): void {\n    if (slot && this.cmsService.isLaunchInSmartEdit()) {\n      this.addSmartEditContract(slot);\n    }\n  }\n\n  private addSmartEditContract(slot: ContentSlotData): void {\n    this.dynamicAttributeService.addDynamicAttributes(\n      slot.properties,\n      this.hostElement.nativeElement,\n      this.renderer\n    );\n  }\n}\n","export abstract class SkipLinkConfig {\n  skipLinks?: SkipLink[];\n}\n\nexport abstract class SkipLink {\n  key: string;\n  i18nKey: string;\n  target?: HTMLElement;\n  position?: SkipLinkScrollPosition;\n}\n\nexport enum SkipLinkScrollPosition {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n  SkipLink,\n  SkipLinkConfig,\n  SkipLinkScrollPosition,\n} from '../config/skip-link.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkipLinkService {\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\n\n  constructor(protected config: SkipLinkConfig) {}\n\n  getSkipLinks(): Observable<SkipLink[]> {\n    return this.skipLinks$;\n  }\n\n  add(key: string, target: HTMLElement): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      skipLink => skipLink.key === key\n    );\n\n    if (found) {\n      const existing: SkipLink[] = this.skipLinks$.value;\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\n        target: target,\n        i18nKey: found.i18nKey,\n        position: found.position,\n        key: key,\n      });\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  remove(key: string): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      skipLink => skipLink.key === key\n    );\n\n    if (found) {\n      let existing: SkipLink[] = this.skipLinks$.value;\n      existing = existing.filter(skipLink => skipLink.key !== key);\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  scrollToTarget(\n    target: HTMLElement,\n    position: SkipLinkScrollPosition,\n    event: MouseEvent\n  ): void {\n    target = <HTMLElement>target.parentNode;\n    (<HTMLElement>event.target).blur();\n    const options: ScrollIntoViewOptions =\n      position === SkipLinkScrollPosition.AFTER ? { inline: 'end' } : {};\n\n    target.scrollIntoView(options);\n  }\n\n  protected getSkipLinkIndexInArray(key: string): number {\n    let index: number = this.config.skipLinks.findIndex(\n      skipLink => skipLink.key === key\n    );\n\n    while (index > 0) {\n      index--;\n      const previous: SkipLink = this.config.skipLinks[index];\n      if (previous) {\n        const existing: SkipLink[] = this.skipLinks$.value;\n        const found: number = existing.findIndex(\n          skipLink => skipLink.key === previous.key\n        );\n        if (found > -1) {\n          return found + 1;\n        }\n      }\n    }\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable, asyncScheduler } from 'rxjs';\nimport { SkipLink } from '../config/skip-link.config';\nimport { SkipLinkService } from '../service/skip-link.service';\nimport { observeOn } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-skip-link',\n  templateUrl: './skip-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkipLinkComponent {\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService\n    .getSkipLinks()\n    .pipe(observeOn(asyncScheduler)); // delay view's update to avoid ExpressionChangedAfterItHasBeenCheckedError\n\n  constructor(private skipLinkService: SkipLinkService) {}\n\n  scrollToTarget(skipLink: SkipLink, event: MouseEvent): void {\n    this.skipLinkService.scrollToTarget(\n      skipLink.target,\n      skipLink.position,\n      event\n    );\n  }\n\n  /**\n   * Hides the skip link by removing the focus.\n   */\n  blur(event: MouseEvent): void {\n    (<HTMLElement>event.target).blur();\n  }\n\n  tabNext(event: MouseEvent): void {\n    if (this.isElement((<HTMLElement>event.target).nextSibling)) {\n      (<HTMLElement>(<HTMLElement>event.target).nextSibling).focus();\n    }\n  }\n  tabPrev(event: MouseEvent): void {\n    if (this.isElement((<HTMLElement>event.target).previousSibling)) {\n      (<HTMLElement>(<HTMLElement>event.target).previousSibling).focus();\n    }\n  }\n\n  private isElement(element: Node): boolean {\n    return !!element && element instanceof HTMLElement;\n  }\n}\n","import { SkipLinkConfig, SkipLinkScrollPosition } from './skip-link.config';\n\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\n  skipLinks: [\n    {\n      key: 'SiteContext',\n      i18nKey: 'skipLink.labels.header',\n    },\n    {\n      key: 'BottomHeaderSlot',\n      position: SkipLinkScrollPosition.AFTER,\n      i18nKey: 'skipLink.labels.main',\n    },\n    {\n      key: 'ProductLeftRefinements',\n      i18nKey: 'skipLink.labels.productFacets',\n    },\n    { key: 'ProductListSlot', i18nKey: 'skipLink.labels.productList' },\n    { key: 'Footer', i18nKey: 'skipLink.labels.footer' },\n  ],\n};\n","import { Directive, Input, OnDestroy, OnInit, ElementRef } from '@angular/core';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Directive({\n  selector: '[cxSkipLink]',\n})\nexport class SkipLinkDirective implements OnInit, OnDestroy {\n  @Input()\n  cxSkipLink: string;\n\n  constructor(\n    private elRef: ElementRef<HTMLElement>,\n    private skipLinkService: SkipLinkService\n  ) {}\n\n  ngOnInit(): void {\n    this.skipLinkService.add(this.cxSkipLink, this.elRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.skipLinkService.remove(this.cxSkipLink);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\nimport { Config, ConfigModule, I18nModule } from '@spartacus/core';\nimport {\n  OutletPosition,\n  OutletService,\n} from '../../../cms-structure/outlet/index';\nimport { SkipLinkComponent } from './component/skip-link.component';\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\nimport { SkipLinkConfig } from './config/skip-link.config';\nimport { SkipLinkDirective } from './directive/skip-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(defaultSkipLinkConfig),\n  ],\n  declarations: [SkipLinkComponent, SkipLinkDirective],\n  exports: [SkipLinkDirective],\n  entryComponents: [SkipLinkComponent],\n\n  providers: [\n    { provide: SkipLinkConfig, useExisting: Config },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: skipLinkFactory,\n      deps: [ComponentFactoryResolver, OutletService],\n      multi: true,\n    },\n  ],\n})\nexport class SkipLinkModule {}\n\n/**\n * Adds the skip link component before the cx-storefront.\n */\nexport function skipLinkFactory(\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService\n) {\n  const isReady = () => {\n    const factory = componentFactoryResolver.resolveComponentFactory(\n      SkipLinkComponent\n    );\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\n  };\n  return isReady;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\nimport { SkipLinkModule } from '../../../layout/a11y/skip-link/skip-link.module';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule, SkipLinkModule],\n  providers: [],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageLayoutService } from './page-layout.service';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent],\n  providers: [PageLayoutService],\n  exports: [PageLayoutComponent],\n})\nexport class PageLayoutModule {}\n","export abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable()\nexport class AddToHomeScreenService {\n  private deferredEvent: any;\n\n  private canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    private config: PWAModuleConfig,\n    private globalMessageService: GlobalMessageService,\n    private winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        event => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, ConfigModule, I18nModule } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(defaultPWAModuleConfig),\n    ServiceWorkerModule.register('/ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    { provide: PWAModuleConfig, useExisting: Config },\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n    AddToHomeScreenService,\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/index';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector) {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { Injectable } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport { PageMeta, PageMetaService, PageRobotsMeta } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  init() {\n    this.pageMetaService\n      .getMeta()\n      .pipe(filter(Boolean))\n      .subscribe((meta: PageMeta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots || [PageRobotsMeta.INDEX, PageRobotsMeta.FOLLOW];\n  }\n\n  protected set title(title: string) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string) {\n    this.addTag({ name: 'description', content: value });\n  }\n\n  protected set image(imageUrl: string) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[]) {\n    if (value) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  protected addTag(meta: MetaDefinition) {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { WindowRef, LanguageService } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n) {\n  const result = () => {\n    languageService.getActive().subscribe(lang => {\n      winRef.document.documentElement.lang = lang;\n    });\n  };\n  return result;\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.createJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Only return schema data in case of SSR or development mode,\n   * to not waste memory unnecessary.\n   */\n  isJsonLdRequired(): boolean {\n    return !isPlatformBrowser(this.platformId) || isDevMode();\n  }\n\n  private createJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  @Input() set cxJsonLd(schema: string | number) {\n    this.writeJsonLd(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  private writeJsonLd(schema: {}) {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      this.jsonLD = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lowever level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schema's.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { SchemaBuilder } from './builders/schema.interface';\nimport { SCHEMA_BUILDER } from './builders/tokens';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StructuredDataFactory {\n  constructor(\n    private scriptBuilder: JsonLdScriptFactory,\n    @Optional()\n    @Inject(SCHEMA_BUILDER)\n    private builders: SchemaBuilder[]\n  ) {}\n\n  build() {\n    this.collectSchemas().subscribe((schema: {}[]) => {\n      this.scriptBuilder.build(schema);\n    });\n  }\n\n  private collectSchemas(): Observable<any[]> {\n    if (!this.scriptBuilder.isJsonLdRequired() || !this.builders) {\n      return of();\n    }\n    return combineLatest(this.builders.map(builder => builder.build())).pipe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector) {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector) {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import { Injectable } from '@angular/core';\nimport { PageMeta, PageMetaService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaBuilder } from '../schema.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\n  constructor(protected pageMetaService: PageMetaService) {}\n\n  build(): Observable<any> {\n    return this.pageMetaService\n      .getMeta()\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\n  }\n\n  protected collect(pageMeta: PageMeta): any {\n    if (!pageMeta.breadcrumbs) {\n      return;\n    }\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@id': crumb.link,\n          name: crumb.label,\n        },\n      };\n    });\n\n    if (pageMeta.title) {\n      crumbs.push({\n        '@type': 'ListItem',\n        position: crumbs.length + 1,\n        item: {\n          '@id': pageMeta.title,\n          name: pageMeta.title,\n        },\n      });\n    }\n\n    return {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: crumbs,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  private getProductImage(product: Product) {\n    return product.images &&\n      product.images.PRIMARY &&\n      product.images.PRIMARY['zoom'] &&\n      product.images.PRIMARY['zoom'].url\n      ? {\n          image: product.images.PRIMARY['zoom'].url,\n        }\n      : {};\n  }\n\n  private getProductBrand(product: Product) {\n    return product['manufacturer']\n      ? {\n          brand: product['manufacturer'],\n        }\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n    if (product.price) {\n      if (product.price.value) {\n        schema.price = product.price.value;\n      }\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({\n      offers: schema,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product reviews, see https://schema.org/Review.\n * The data includes the aggregated product rating and the individual reviews.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\n  constructor(private reviewService: ProductReviewService) {}\n\n  build(product: Product): Observable<any> {\n    return this.reviewService.getByProductCode(product.code).pipe(\n      filter(Boolean),\n      map((reviews: Review[]) => {\n        return {\n          aggregateRating: this.buildAggregatedReviews(product, reviews),\n          review: reviews.map(review => this.buildReviews(review)),\n        };\n      })\n    );\n  }\n\n  private buildAggregatedReviews(product: Product, reviews: Review[]) {\n    const aggregated: any = {\n      '@type': 'AggregateRating',\n    };\n    if (product.averageRating) {\n      aggregated.ratingValue = product.averageRating;\n    }\n    if (reviews) {\n      aggregated.ratingCount = reviews.filter(rev => !!rev.rating).length;\n      aggregated.reviewCount = reviews.filter(rev => !!rev.comment).length;\n    }\n    return aggregated;\n  }\n\n  private buildReviews(review: Review) {\n    const reviewSchema: any = {\n      '@type': 'review',\n    };\n\n    if (review.principal && review.principal.name) {\n      reviewSchema.author = review.principal.name;\n    }\n    if (review.date) {\n      const date = new Date(review.date);\n      reviewSchema.datePublished = `${date.getFullYear()}-${date.getMonth() +\n        1}-${date.getDate()}`;\n    }\n    if (review.headline) {\n      reviewSchema.name = review.headline;\n    }\n    if (review.comment) {\n      reviewSchema.description = review.comment;\n    }\n    if (review.rating) {\n      reviewSchema.reviewRating = {\n        '@type': 'Rating',\n        ratingValue: review.rating.toString(),\n      };\n    }\n\n    return reviewSchema;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  FeatureConfigService,\n  Product,\n  ProductScope,\n  ProductService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    routingService: RoutingService,\n    productService: ProductService,\n    // tslint:disable-next-line: unified-signatures\n    features?: FeatureConfigService\n  );\n\n  /**\n   * @deprecated since 1.4\n   */\n  constructor(routingService: RoutingService, productService: ProductService);\n\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService,\n    protected features?: FeatureConfigService\n  ) {}\n\n  protected readonly DEFAULT_PRODUCT_SCOPE =\n    this.features && this.features.isLevel('1.4') ? ProductScope.DETAILS : '';\n\n  getProduct(\n    scopes?: (ProductScope | string)[] | ProductScope | string\n  ): Observable<Product> {\n    return this.routingService.getRouterState().pipe(\n      map(state => state.state.params['productCode']),\n      filter(Boolean),\n      switchMap((productCode: string) =>\n        this.productService.get(\n          productCode,\n          // TODO deprecated since 1.4 - should be replaced with 'scopes || this.DEFAULT_PRODUCT_SCOPE'\n          this.features && this.features.isLevel('1.4')\n            ? scopes || this.DEFAULT_PRODUCT_SCOPE\n            : undefined\n          // deprecated END\n        )\n      )\n    );\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\n\n/**\n * Adds the minimal structured data for the product, see https://schema.org/product.\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\n * using the `JSONLD_PRODUCT_BUILDER` token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSchemaBuilder implements SchemaBuilder {\n  constructor(\n    private currentProduct: CurrentProductService,\n    @Optional()\n    @Inject(JSONLD_PRODUCT_BUILDER)\n    protected builders: JsonLdBuilder<Product>[]\n  ) {}\n\n  build(): Observable<any> {\n    return this.currentProduct.getProduct().pipe(\n      startWith(null as Product),\n      switchMap((product: Product) => {\n        if (product) {\n          return combineLatest(this.collect(product)).pipe(\n            map((res: {}[]) => Object.assign({}, ...res))\n          );\n        }\n        return of({});\n      })\n    );\n  }\n\n  protected collect(product: Product): Observable<any>[] {\n    if (!product || !product.code) {\n      return [];\n    }\n    const builders = this.builders\n      ? this.builders.map(builder => builder.build(product))\n      : [];\n    return [\n      of({\n        '@context': 'http://schema.org',\n        '@type': 'Product',\n      }),\n      ...builders,\n    ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to colleting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-graiend control\n    // for product related schema's\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { Observable } from 'rxjs';\n\nexport interface SchemaBuilder {\n  build(): Observable<{}>;\n}\n\nexport interface JsonLdBuilder<T> {\n  build(data: T): Observable<{}>;\n}\n","export const ASM_ENABLED_LOCAL_STORAGE_KEY = 'asm_enabled';\n","import { Injectable } from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmComponentService {\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected routingService: RoutingService,\n    protected winRef: WindowRef\n  ) {}\n\n  logoutCustomerSupportAgentAndCustomer(): void {\n    this.authService\n      .getUserToken()\n      .pipe(take(1))\n      .subscribe(token => {\n        if (this.asmAuthService.isCustomerEmulationToken(token)) {\n          this.logoutCustomer();\n        }\n        this.asmAuthService.logoutCustomerSupportAgent();\n      });\n  }\n\n  logoutCustomer(): void {\n    this.authService.logout();\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  isCustomerEmulationSessionInProgress(): Observable<boolean> {\n    return this.authService\n      .getUserToken()\n      .pipe(\n        mergeMap(userToken =>\n          of(this.asmAuthService.isCustomerEmulationToken(userToken))\n        )\n      );\n  }\n\n  /**\n   * We're currently only removing the persisted storage in the browser\n   * to ensure the ASM experience isn't loaded on the next visit. There are a few\n   * optimsiations we could think of:\n   * - drop the `asm` parameter from the URL, in case it's still there\n   * - remove the generated UI from the DOM (outlets currently do not support this)\n   */\n  unload() {\n    if (this.winRef.localStorage) {\n      this.winRef.localStorage.removeItem(ASM_ENABLED_LOCAL_STORAGE_KEY);\n    }\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AsmAuthService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  User,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-main-ui',\n  templateUrl: './asm-main-ui.component.html',\n  styleUrls: ['./asm-main-ui.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmMainUiComponent implements OnInit {\n  csAgentToken$: Observable<UserToken>;\n  csAgentTokenLoading$: Observable<boolean>;\n  customer$: Observable<User>;\n\n  @HostBinding('class.hidden') disabled = false;\n\n  private startingCustomerSession = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected asmAuthService: AsmAuthService,\n    protected userService: UserService,\n    protected asmComponentService: AsmComponentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService\n  ) {}\n\n  ngOnInit(): void {\n    this.csAgentToken$ = this.asmAuthService.getCustomerSupportAgentToken();\n    this.csAgentTokenLoading$ = this.asmAuthService.getCustomerSupportAgentTokenLoading();\n    this.customer$ = this.authService.getUserToken().pipe(\n      switchMap(token => {\n        if (token && !!token.access_token) {\n          this.handleCustomerSessionStartRedirection(token);\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n\n  private handleCustomerSessionStartRedirection(token: UserToken): void {\n    if (\n      this.startingCustomerSession &&\n      this.asmAuthService.isCustomerEmulationToken(token)\n    ) {\n      this.startingCustomerSession = false;\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n      this.routingService.go('/');\n    }\n  }\n\n  loginCustomerSupportAgent({\n    userId,\n    password,\n  }: {\n    userId: string;\n    password: string;\n  }): void {\n    this.asmAuthService.authorizeCustomerSupportAgent(userId, password);\n  }\n\n  logout(): void {\n    this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n  }\n\n  startCustomerEmulationSession({ customerId }: { customerId: string }): void {\n    this.asmAuthService\n      .getCustomerSupportAgentToken()\n      .pipe(take(1))\n      .subscribe(customerSupportAgentToken =>\n        this.asmAuthService.startCustomerEmulationSession(\n          customerSupportAgentToken,\n          customerId\n        )\n      )\n      .unsubscribe();\n    this.startingCustomerSession = true;\n  }\n\n  hideUi(): void {\n    this.disabled = true;\n    this.asmComponentService.unload();\n  }\n}\n","import { Location } from '@angular/common';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Injectable,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { OutletPosition, OutletService } from '../../../cms-structure/index';\nimport { ASM_ENABLED_LOCAL_STORAGE_KEY } from '../asm-constants';\nimport { AsmMainUiComponent } from '../asm-main-ui/asm-main-ui.component';\n\n/**\n * The AsmEnablerService is used to enable ASM for those scenario's\n * where it's actually used. This service is added to avoid any polution\n * of the UI and runtime performance for the ordinary production user.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmEnablerService {\n  /** indicates whether the ASM UI has been added already */\n  private isUiAdded = false;\n\n  constructor(\n    protected location: Location,\n    protected winRef: WindowRef,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected outletService: OutletService<ComponentFactory<any>>\n  ) {}\n\n  /**\n   * Loads the ASM UI if needed. The ASM UI will be added based on the\n   * existence of a URL parameter or previous usage given by local storage.\n   */\n  load(): void {\n    if (this.isEnabled()) {\n      this.addUi();\n    }\n  }\n\n  /**\n   * Indicates whether the ASM module is enabled.\n   */\n  private isEnabled(): boolean {\n    if (this.isLaunched() && !this.isUsedBefore()) {\n      if (this.winRef.localStorage) {\n        this.winRef.localStorage.setItem(ASM_ENABLED_LOCAL_STORAGE_KEY, 'true');\n      }\n    }\n    return this.isLaunched() || this.isUsedBefore();\n  }\n\n  /**\n   * Indicates whether ASM is launched through the URL,\n   * using the asm flag in the URL.\n   */\n  private isLaunched(): boolean {\n    const params = this.location.path().split('?')[1];\n    return params && params.split('&').includes('asm=true');\n  }\n\n  /**\n   * Evaluates local storage where we persist the usage of ASM.\n   */\n  private isUsedBefore(): boolean {\n    return (\n      this.winRef.localStorage &&\n      this.winRef.localStorage.getItem(ASM_ENABLED_LOCAL_STORAGE_KEY) === 'true'\n    );\n  }\n\n  /**\n   * Adds the ASM UI by using the `cx-storefront` outlet.\n   */\n  private addUi(): void {\n    if (this.isUiAdded) {\n      return;\n    }\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      AsmMainUiComponent\n    );\n    this.outletService.add('cx-storefront', factory, OutletPosition.BEFORE);\n    this.isUiAdded = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { PageComponentModule } from '../../cms-structure/index';\nimport { AsmEnablerService } from './services/asm-enabler.service';\n\n/**\n * The ASM loader module takes care of loading the ASM UI\n * only in case there's a reason to do so.\n */\n@NgModule({\n  imports: [CommonModule, PageComponentModule],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: asmFactory,\n      deps: [AsmEnablerService],\n      multi: true,\n    },\n  ],\n})\nexport class AsmLoaderModule {}\n\n/**\n *\n * We do not like to block the UI, which is why we delgate loading of ASM\n * to a real component; the router and state aren't available in an optimized\n * way during the APP_INITIALIZER.\n */\nexport function asmFactory(asmEnablerService: AsmEnablerService) {\n  const isReady = () => {\n    asmEnablerService.load();\n  };\n  return isReady;\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AsmConfig, AuthService, RoutingService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-asm-session-timer',\n  templateUrl: './asm-session-timer.component.html',\n  styleUrls: ['./asm-session-timer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsmSessionTimerComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private interval: any;\n  private maxStartDelayInSeconds = 60000;\n  timeLeft: number;\n\n  constructor(\n    private config: AsmConfig,\n    private asmComponentService: AsmComponentService,\n    private authService: AuthService,\n    private routingService: RoutingService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.timeLeft = this.getTimerStartDelayInSeconds();\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        clearInterval(this.interval);\n        this.asmComponentService.logoutCustomerSupportAgentAndCustomer();\n      }\n      this.changeDetectorRef.markForCheck();\n    }, 1000);\n\n    this.resetOnNavigate();\n    this.resetOnCustomerSessionChange();\n  }\n\n  private resetOnNavigate(): void {\n    this.subscriptions.add(\n      this.routingService.isNavigating().subscribe(isNavigating => {\n        if (isNavigating) {\n          this.resetTimer();\n        }\n      })\n    );\n  }\n\n  private resetOnCustomerSessionChange(): void {\n    this.subscriptions.add(\n      this.authService\n        .getOccUserId()\n        .pipe(distinctUntilChanged())\n        .subscribe(_ => this.resetTimer())\n    );\n  }\n\n  resetTimer(): void {\n    if (this.timeLeft > 0) {\n      this.timeLeft = this.getTimerStartDelayInSeconds();\n    }\n  }\n\n  private getTimerStartDelayInSeconds(): number {\n    if (\n      this.config.asm.agentSessionTimer.startingDelayInSeconds >\n      this.maxStartDelayInSeconds\n    ) {\n      return this.maxStartDelayInSeconds;\n    } else {\n      return this.config.asm.agentSessionTimer.startingDelayInSeconds;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTimer',\n})\nexport class FormatTimerPipe implements PipeTransform {\n  transform(totalSeconds: number): string {\n    if (totalSeconds < 0) {\n      totalSeconds = 0;\n    }\n    const minutes: number = Math.floor(totalSeconds / 60);\n    const seconds: number = totalSeconds % 60;\n    let zeroPaddedMinutes: string;\n    if (minutes < 10) {\n      zeroPaddedMinutes = ('00' + minutes).slice(-2);\n    } else {\n      zeroPaddedMinutes = minutes + '';\n    }\n    const zeroPaddedSeconds: string = ('00' + seconds).slice(-2);\n    return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormUtils } from '../../../shared/utils/forms/form-utils';\n\n@Component({\n  selector: 'cx-csagent-login-form',\n  templateUrl: './csagent-login-form.component.html',\n  styleUrls: ['./csagent-login-form.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CSAgentLoginFormComponent implements OnInit {\n  form: FormGroup;\n  private submitClicked = false;\n\n  @Input()\n  csAgentTokenLoading = false;\n\n  @Output()\n  submitEvent = new EventEmitter<{ userId: string; password: string }>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userId: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submitEvent.emit({\n      userId: this.form.controls.userId.value,\n      password: this.form.controls.password.value,\n    });\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { User, UserService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { AsmComponentService } from '../services/asm-component.service';\n\n@Component({\n  selector: 'cx-customer-emulation',\n  templateUrl: './customer-emulation.component.html',\n  styleUrls: ['./customer-emulation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomerEmulationComponent implements OnInit, OnDestroy {\n  customer: User;\n  isCustomerEmulationSessionInProgress$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  constructor(\n    protected asmComponentService: AsmComponentService,\n    protected userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.userService.get().subscribe(user => (this.customer = user))\n    );\n    this.isCustomerEmulationSessionInProgress$ = this.asmComponentService.isCustomerEmulationSessionInProgress();\n  }\n\n  logoutCustomer() {\n    this.asmComponentService.logoutCustomer();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  AsmConfig,\n  AsmService,\n  CustomerSearchPage,\n  User,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-customer-selection',\n  templateUrl: './customer-selection.component.html',\n  styleUrls: ['./customer-selection.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '(document:click)': 'onDocumentClick($event)',\n  },\n})\nexport class CustomerSelectionComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  private subscription = new Subscription();\n  searchResultsLoading$: Observable<boolean>;\n  searchResults: Observable<CustomerSearchPage>;\n  selectedCustomer: User;\n\n  @Output()\n  submitEvent = new EventEmitter<{ customerId: string }>();\n\n  @ViewChild('resultList', { static: false }) resultList: ElementRef;\n  @ViewChild('searchTerm', { static: false }) searchTerm: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private asmService: AsmService,\n    private config: AsmConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      searchTerm: [''],\n    });\n    this.asmService.customerSearchReset();\n    this.searchResultsLoading$ = this.asmService.getCustomerSearchResultsLoading();\n    this.searchResults = this.asmService.getCustomerSearchResults();\n\n    this.subscription.add(\n      this.form.controls.searchTerm.valueChanges\n        .pipe(debounceTime(300))\n        .subscribe(searchTermValue => {\n          this.handleSearchTerm(searchTermValue);\n        })\n    );\n  }\n\n  private handleSearchTerm(searchTermValue: string) {\n    if (\n      Boolean(this.selectedCustomer) &&\n      searchTermValue !== this.selectedCustomer.name\n    ) {\n      this.selectedCustomer = undefined;\n    }\n    if (Boolean(this.selectedCustomer)) {\n      return;\n    }\n    this.asmService.customerSearchReset();\n    if (searchTermValue.trim().length >= 3) {\n      this.asmService.customerSearch({\n        query: searchTermValue,\n        pageSize: this.config.asm.customerSearch.maxResults,\n      });\n    }\n  }\n\n  selectCustomerFromList(customer: User) {\n    this.selectedCustomer = customer;\n    this.form.controls.searchTerm.setValue(this.selectedCustomer.name);\n    this.asmService.customerSearchReset();\n  }\n\n  onSubmit(): void {\n    if (Boolean(this.selectedCustomer)) {\n      this.submitEvent.emit({ customerId: this.selectedCustomer.customerId });\n    }\n  }\n\n  onDocumentClick(event) {\n    if (Boolean(this.resultList)) {\n      if (\n        this.resultList.nativeElement.contains(event.target) ||\n        this.searchTerm.nativeElement.contains(event.target)\n      ) {\n        return;\n      } else {\n        this.asmService.customerSearchReset();\n      }\n    }\n  }\n\n  closeResults() {\n    this.asmService.customerSearchReset();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.asmService.customerSearchReset();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AsmModule as AsmCoreModule, I18nModule } from '@spartacus/core';\nimport { AsmLoaderModule } from './asm-loader.module';\nimport { AsmMainUiComponent } from './asm-main-ui/asm-main-ui.component';\nimport { AsmSessionTimerComponent } from './asm-session-timer/asm-session-timer.component';\nimport { FormatTimerPipe } from './asm-session-timer/format-timer.pipe';\nimport { CSAgentLoginFormComponent } from './csagent-login-form/csagent-login-form.component';\nimport { CustomerEmulationComponent } from './customer-emulation/customer-emulation.component';\nimport { CustomerSelectionComponent } from './customer-selection/customer-selection.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    AsmCoreModule.forRoot(),\n    AsmLoaderModule,\n  ],\n  declarations: [\n    AsmMainUiComponent,\n    CSAgentLoginFormComponent,\n    CustomerSelectionComponent,\n    AsmSessionTimerComponent,\n    FormatTimerPipe,\n    CustomerEmulationComponent,\n  ],\n  entryComponents: [AsmMainUiComponent],\n})\nexport class AsmModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  Cart,\n  CartService,\n  OrderEntry,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../shared/components/modal/index';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n  increment: boolean;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n  quantity = 0;\n  modalIsOpen = false;\n\n  @ViewChild('dialog', { static: false, read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = this.fb.group({});\n\n  constructor(\n    modalService: ModalService,\n    cartService: CartService,\n    fb: FormBuilder,\n    // tslint:disable-next-line:unified-signatures\n    promotionService: PromotionService\n  );\n\n  /**\n   * @deprecated Since 1.5\n   * Use promotionService instead of the promotion inputs.\n   * Remove issue: #5670\n   */\n  constructor(\n    modalService: ModalService,\n    cartService: CartService,\n    fb: FormBuilder\n  );\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: CartService,\n    protected fb: FormBuilder,\n    protected promotionService?: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.entry$ = this.entry$.pipe(\n      tap(entry => {\n        if (entry) {\n          const { code } = entry.product;\n          if (!this.form.controls[code]) {\n            this.form.setControl(code, this.createEntryFormGroup(entry));\n          } else {\n            const entryForm = this.form.controls[code] as FormGroup;\n            entryForm.controls.quantity.setValue(entry.quantity);\n          }\n          this.form.markAsPristine();\n          if (!this.modalIsOpen) {\n            this.modalIsOpen = true;\n          }\n        }\n      })\n    );\n\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  removeEntry(item: OrderEntry): void {\n    this.cartService.removeEntry(item);\n    delete this.form.controls[item.product.code];\n    this.dismissModal('Removed');\n  }\n\n  updateEntry({ item, updatedQuantity }): void {\n    this.cartService.updateEntry(item.entryNumber, updatedQuantity);\n  }\n\n  private createEntryFormGroup(entry: OrderEntry): FormGroup {\n    return this.fb.group({\n      entryNumber: entry.entryNumber,\n      quantity: entry.quantity,\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CartService, OrderEntry, Product } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { ModalRef, ModalService } from '../../../shared/components/modal/index';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  /**\n   * As long as we do not support #5026, we require product input, as we need\n   *  a reference to the product model to fetch the stock data.\n   */\n  @Input() product: Product;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock = false;\n  quantity = 1;\n  increment = false;\n  cartEntry$: Observable<OrderEntry>;\n\n  subscription: Subscription;\n\n  constructor(\n    cartService: CartService,\n    modalService: ModalService,\n    currentProductService: CurrentProductService,\n    cd: ChangeDetectorRef\n  );\n\n  constructor(\n    protected cartService: CartService,\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    if (this.product) {\n      this.productCode = this.product.code;\n      this.cartEntry$ = this.cartService.getEntry(this.productCode);\n      this.setStockInfo(this.product);\n      this.cd.markForCheck();\n    } else if (this.productCode) {\n      this.cartEntry$ = this.cartService.getEntry(this.productCode);\n      // force hasStock and quantity for the time being, as we do not have more info:\n      this.quantity = 1;\n      this.hasStock = true;\n      this.cd.markForCheck();\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(Boolean))\n        .subscribe((product: Product) => {\n          this.productCode = product.code;\n          this.setStockInfo(product);\n          this.cartEntry$ = this.cartService.getEntry(this.productCode);\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  private setStockInfo(product: Product): void {\n    this.quantity = 1;\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n    if (this.hasStock && product.stock.stockLevel) {\n      this.maxQuantity = product.stock.stockLevel;\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    if (!this.productCode || this.quantity <= 0) {\n      return;\n    }\n    // check item is already present in the cart\n    // so modal will have proper header text displayed\n    this.cartService\n      .getEntry(this.productCode)\n      .subscribe(entry => {\n        if (entry) {\n          this.increment = true;\n        }\n        this.openModal();\n        this.cartService.addEntry(this.productCode, this.quantity);\n        this.increment = false;\n      })\n      .unsubscribe();\n  }\n\n  private openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.entry$ = this.cartEntry$;\n    modalInstance.cart$ = this.cartService.getActive();\n    modalInstance.loaded$ = this.cartService.getLoaded();\n    modalInstance.quantity = this.quantity;\n    modalInstance.increment = this.increment;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\nimport { FeaturesConfigModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, FeaturesConfigModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Voucher, CartVoucherService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\n\n@Component({\n  selector: 'cx-applied-coupons',\n  templateUrl: './applied-coupons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppliedCouponsComponent {\n  @Input()\n  vouchers: Voucher[];\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isReadOnly = false;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(private cartVoucherService: CartVoucherService) {}\n\n  public get sortedVouchers(): Voucher[] {\n    this.vouchers = this.vouchers || [];\n    return this.vouchers.slice().sort((a, b) => {\n      return a.code.localeCompare(b.code);\n    });\n  }\n\n  removeVoucher(voucherId: string) {\n    this.cartVoucherService.removeVoucher(voucherId);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Cart,\n  CartService,\n  CartVoucherService,\n  AuthService,\n  OCC_USER_ID_ANONYMOUS,\n  CustomerCouponService,\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n  FeatureConfigService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, startWith, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-coupon',\n  templateUrl: './cart-coupon.component.html',\n})\nexport class CartCouponComponent implements OnInit, OnDestroy {\n  MAX_CUSTOMER_COUPON_PAGE = 100;\n  form: FormGroup;\n  cartIsLoading$: Observable<boolean>;\n  submitDisabled$: Observable<boolean>;\n  cart$: Observable<Cart>;\n  cartId: string;\n  applicableCoupons: CustomerCoupon[];\n  filteredCoupons: CustomerCoupon[];\n\n  private ignoreCloseEvent = false;\n\n  private subscription = new Subscription();\n\n  couponBoxIsActive = false;\n\n  constructor(\n    cartService: CartService,\n    authService: AuthService,\n    cartVoucherService: CartVoucherService,\n    formBuilder: FormBuilder,\n    customerCouponService: CustomerCouponService,\n    featureConfig: FeatureConfigService\n  );\n  /**\n   * @deprecated Since 1.5\n   * Add customerCouponService,featureConfig for customer coupon feature.\n   * Remove issue: #5971\n   */\n  constructor(\n    cartService: CartService,\n    authService: AuthService,\n    cartVoucherService: CartVoucherService,\n    formBuilder: FormBuilder\n  );\n\n  constructor(\n    private cartService: CartService,\n    private authService: AuthService,\n    private cartVoucherService: CartVoucherService,\n    private formBuilder: FormBuilder,\n    protected customerCouponService?: CustomerCouponService,\n    protected featureConfig?: FeatureConfigService\n  ) {}\n\n  ngOnInit() {\n    if (this.customerCouponService) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n    }\n    if (this.featureConfig && this.featureConfig.isLevel('1.5')) {\n      this.cart$ = combineLatest([\n        this.cartService.getActive(),\n        this.authService.getOccUserId(),\n        this.customerCouponService.getCustomerCoupons(\n          this.MAX_CUSTOMER_COUPON_PAGE\n        ),\n      ]).pipe(\n        tap(\n          ([cart, userId, customerCoupons]: [\n            Cart,\n            string,\n            CustomerCouponSearchResult\n          ]) => {\n            this.cartId =\n              userId === OCC_USER_ID_ANONYMOUS ? cart.guid : cart.code;\n            this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\n          }\n        ),\n        map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\n      );\n    }\n    //TODO(issue:#5971) Deprecated since 1.5\n    else {\n      this.cart$ = combineLatest([\n        this.cartService.getActive(),\n        this.authService.getOccUserId(),\n      ]).pipe(\n        tap(\n          ([cart, userId]: [Cart, string]) =>\n            (this.cartId =\n              userId === OCC_USER_ID_ANONYMOUS ? cart.guid : cart.code)\n        ),\n        map(([cart]: [Cart, string]) => cart)\n      );\n    }\n    //TODO(issue:#5971) Deprecated since 1.5\n\n    this.cartIsLoading$ = this.cartService\n      .getLoaded()\n      .pipe(map(loaded => !loaded));\n\n    this.cartVoucherService.resetAddVoucherProcessingState();\n\n    this.form = this.formBuilder.group({\n      couponCode: ['', [Validators.required]],\n    });\n\n    this.submitDisabled$ = combineLatest([\n      this.cartIsLoading$,\n      this.form.valueChanges.pipe(\n        startWith(true),\n        map(() => this.form.valid)\n      ),\n      this.cartVoucherService.getAddVoucherResultLoading(),\n    ]).pipe(\n      map(\n        ([cartIsLoading, btnEnabled, addVoucherIsLoading]) =>\n          cartIsLoading || !btnEnabled || addVoucherIsLoading\n      )\n    );\n\n    this.subscription.add(\n      this.cartVoucherService\n        .getAddVoucherResultSuccess()\n        .subscribe(success => {\n          this.onSuccess(success);\n        })\n    );\n\n    this.subscription.add(\n      this.cartVoucherService.getAddVoucherResultError().subscribe(error => {\n        this.onError(error);\n      })\n    );\n  }\n\n  protected onError(error: boolean) {\n    if (error) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  onSuccess(success: boolean) {\n    if (success) {\n      this.form.reset();\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  protected getApplicableCustomerCoupons(\n    cart: Cart,\n    coupons: CustomerCoupon[]\n  ): void {\n    this.applicableCoupons = coupons || [];\n    if (cart.appliedVouchers) {\n      cart.appliedVouchers.forEach(appliedVoucher => {\n        this.applicableCoupons = this.applicableCoupons.filter(\n          coupon => coupon.couponId !== appliedVoucher.code\n        );\n      });\n    }\n    this.filteredCoupons = this.applicableCoupons;\n  }\n\n  applyVoucher(): void {\n    this.cartVoucherService.addVoucher(this.form.value.couponCode, this.cartId);\n  }\n  applyCustomerCoupon(couponId: string): void {\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\n    this.couponBoxIsActive = false;\n  }\n\n  filter(query: string): void {\n    const filterValue = query.toLowerCase();\n\n    this.filteredCoupons = this.applicableCoupons.filter(\n      coupon => coupon.couponId.toLowerCase().indexOf(filterValue) > -1\n    );\n  }\n\n  open(): void {\n    this.filteredCoupons = this.applicableCoupons;\n    if (this.applicableCoupons.length > 0) {\n      this.couponBoxIsActive = true;\n    }\n  }\n\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.couponBoxIsActive = false;\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.cartVoucherService.resetAddVoucherProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  FeaturesConfigModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\nimport { CartCouponComponent } from './cart-coupon.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\n  exports: [CartCouponComponent, AppliedCouponsComponent],\n  imports: [\n    FeaturesConfigModule,\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    I18nModule,\n    IconModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CartApplyCouponComponent: {\n          component: CartCouponComponent,\n        },\n      },\n    }),\n  ],\n  entryComponents: [CartCouponComponent],\n})\nexport class CartCouponModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  CartService,\n  PromotionResult,\n  PromotionLocation,\n  SelectiveCartService,\n  FeatureConfigService,\n  ConsignmentEntry,\n} from '@spartacus/core';\nimport {\n  Item,\n  CartItemComponentOptions,\n} from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n})\nexport class CartItemListComponent implements OnInit {\n  @Input()\n  isReadOnly = false;\n\n  @Input()\n  hasHeader = true;\n\n  @Input()\n  options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n  @Input()\n  potentialProductPromotions: PromotionResult[] = [];\n\n  @Input()\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  @Input()\n  set items(_items) {\n    if (_items.every(item => item.hasOwnProperty('orderEntry'))) {\n      this._items = _items.map(consignmentEntry => {\n        const entry = Object.assign(\n          {},\n          (consignmentEntry as ConsignmentEntry).orderEntry\n        );\n        entry.quantity = consignmentEntry.quantity;\n        return entry;\n      });\n    } else {\n      this._items = _items;\n      this.items.forEach(item => {\n        const { code } = item.product;\n        if (!this.form.controls[code]) {\n          this.form.setControl(code, this.createEntryFormGroup(item));\n        } else {\n          const entryForm = this.form.controls[code] as FormGroup;\n          entryForm.controls.quantity.setValue(item.quantity);\n        }\n      });\n    }\n  }\n\n  @Input()\n  cartIsLoading = false;\n\n  form: FormGroup = this.fb.group({});\n\n  private _items: Item[] = [];\n\n  get items(): Item[] {\n    return this._items;\n  }\n\n  constructor(\n    cartService: CartService,\n    fb: FormBuilder,\n    selectiveCartService: SelectiveCartService,\n    featureConfig: FeatureConfigService\n  );\n\n  /**\n   * @deprecated Since 1.5\n   * Add selectiveCartService authService routingService and featureConfig for save for later.\n   * Remove issue: #5958\n   */\n  constructor(cartService: CartService, fb: FormBuilder);\n\n  constructor(\n    protected cartService: CartService,\n    protected fb: FormBuilder,\n    protected selectiveCartService?: SelectiveCartService,\n    private featureConfig?: FeatureConfigService\n  ) {}\n\n  // TODO remove for 2.0 - left to keep backward compatibility\n  ngOnInit(): void {}\n\n  //TODO remove feature flag for #5958\n  isSaveForLaterEnabled(): boolean {\n    if (this.featureConfig) {\n      return this.featureConfig.isEnabled('saveForLater');\n    }\n    return false;\n  }\n  //TODO remove feature flag for #5958\n\n  removeEntry(item: Item): void {\n    if (this.selectiveCartService && this.options.isSaveForLater) {\n      this.selectiveCartService.removeEntry(item);\n    } else {\n      this.cartService.removeEntry(item);\n    }\n    delete this.form.controls[item.product.code];\n  }\n\n  updateEntry({\n    item,\n    updatedQuantity,\n  }: {\n    item: any;\n    updatedQuantity: number;\n  }): void {\n    this.cartService.updateEntry(item.entryNumber, updatedQuantity);\n  }\n\n  private createEntryFormGroup(entry): FormGroup {\n    return this.fb.group({\n      entryNumber: entry.entryNumber,\n      quantity: entry.quantity,\n    });\n  }\n\n  getPotentialProductPromotionsForItem(item: Item): PromotionResult[] {\n    const entryPromotions: PromotionResult[] = [];\n    //don't show promotions in saveforlater\n    if (this.options.isSaveForLater) {\n      return entryPromotions;\n    }\n    if (\n      this.potentialProductPromotions &&\n      this.potentialProductPromotions.length > 0\n    ) {\n      for (const promotion of this.potentialProductPromotions) {\n        if (\n          promotion.description &&\n          promotion.consumedEntries &&\n          promotion.consumedEntries.length > 0\n        ) {\n          for (const consumedEntry of promotion.consumedEntries) {\n            if (this.isConsumedByEntry(consumedEntry, item)) {\n              entryPromotions.push(promotion);\n            }\n          }\n        }\n      }\n    }\n    return entryPromotions;\n  }\n\n  private isConsumedByEntry(consumedEntry: any, entry: any): boolean {\n    const consumedEntryNumber = consumedEntry.orderEntryNumber;\n    if (entry.entries && entry.entries.length > 0) {\n      for (const subEntry of entry.entries) {\n        if (subEntry.entryNumber === consumedEntryNumber) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return consumedEntryNumber === entry.entryNumber;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FeatureConfigService } from '@spartacus/core';\nimport { PromotionResult, PromotionLocation } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\nexport interface Item {\n  product?: any;\n  quantity?: any;\n  basePrice?: any;\n  totalPrice?: any;\n  updateable?: boolean;\n}\n\nexport interface CartItemComponentOptions {\n  isSaveForLater?: boolean;\n  optionalBtn?: any;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n})\nexport class CartItemComponent implements OnInit {\n  @Input()\n  compact = false;\n  @Input()\n  item: Item;\n\n  @Input()\n  isReadOnly = false;\n  @Input()\n  cartIsLoading = false;\n\n  @Input()\n  options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n  @Input()\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  @Input()\n  potentialProductPromotions: any[];\n\n  @Output()\n  remove = new EventEmitter<any>();\n  @Output()\n  update = new EventEmitter<any>();\n  @Output()\n  view = new EventEmitter<any>();\n\n  @Input()\n  parent: FormGroup;\n\n  appliedProductPromotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    promotionService: PromotionService,\n    // tslint:disable-next-line:unified-signatures\n    featureConfig: FeatureConfigService\n  );\n  /**\n   * @deprecated Since 1.5\n   * Add featureConfig for save for later.\n   * Remove issue: #5958\n   */\n  constructor(promotionService: PromotionService);\n\n  constructor(\n    protected promotionService: PromotionService,\n    private featureConfig?: FeatureConfigService\n  ) {}\n\n  ngOnInit() {\n    this.appliedProductPromotions$ = this.promotionService.getProductPromotionForEntry(\n      this.item,\n      this.promotionLocation\n    );\n  }\n\n  //TODO remove feature flag for #5958\n  isSaveForLaterEnabled(): boolean {\n    if (this.featureConfig) {\n      return this.featureConfig.isEnabled('saveForLater');\n    }\n    return false;\n  }\n  //TODO remove feature flag for #5958\n\n  isProductOutOfStock(product: any) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  updateItem(updatedQuantity: number) {\n    this.update.emit({ item: this.item, updatedQuantity });\n  }\n\n  removeItem() {\n    this.remove.emit(this.item);\n  }\n\n  viewItem() {\n    this.view.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule, MediaModule } from '../../../shared/index';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CartCouponModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  FeaturesConfigModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { AutoFocusDirectiveModule } from '../../../shared/directives/auto-focus/auto-focus.directive.module';\nimport { ItemCounterModule, SpinnerModule } from '../../../shared/index';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    RouterModule,\n    SpinnerModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n        },\n      },\n    }),\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    AutoFocusDirectiveModule,\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  entryComponents: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  Cart,\n  CartService,\n  FeatureConfigService,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n  RoutingService,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { PromotionService } from '../../../shared/services/promotion/promotion.service';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  loggedIn = false;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n  promotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    cartService: CartService,\n    // tslint:disable-next-line:unified-signatures\n    promotionService: PromotionService,\n    selectiveCartService: SelectiveCartService,\n    authService: AuthService,\n    routingService: RoutingService,\n    featureConfig: FeatureConfigService\n  );\n\n  /**\n   * @deprecated Since 1.5\n   * Use promotionService instead of the promotion inputs.\n   * Remove issue: #5670\n   */\n  constructor(cartService: CartService);\n\n  constructor(\n    protected cartService: CartService,\n    protected promotionService?: PromotionService,\n    protected selectiveCartService?: SelectiveCartService,\n    private authService?: AuthService,\n    private routingService?: RoutingService,\n    private featureConfig?: FeatureConfigService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n\n    /**\n     * TODO Remove the check for promotion service\n     * Issue: GH-5670\n     */\n    if (this.promotionService) {\n      this.promotions$ = this.promotionService.getOrderPromotionsFromCart();\n    }\n\n    this.entries$ = this.cartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n\n    if (this.isSaveForLaterEnabled()) {\n      this.cartLoaded$ = combineLatest([\n        this.cartService.getLoaded(),\n        this.selectiveCartService.getLoaded(),\n        this.authService.isUserLoggedIn(),\n      ]).pipe(\n        tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\n        map(([cartLoaded, sflLoaded, loggedIn]) =>\n          loggedIn ? cartLoaded && sflLoaded : cartLoaded\n        )\n      );\n    }\n    //TODO remove for #5958\n    else {\n      this.cartLoaded$ = this.cartService.getLoaded();\n    }\n    //TODO  remove for #5958 end\n    if (this.promotionService) {\n      this.orderPromotions$ = this.promotionService.getOrderPromotions(\n        this.promotionLocation\n      );\n    }\n  }\n\n  //TODO remove feature flag for #5958\n  isSaveForLaterEnabled(): boolean {\n    if (this.featureConfig) {\n      return this.featureConfig.isEnabled('saveForLater');\n    }\n    return false;\n  }\n  //TODO remove feature flag for #5958 end\n\n  /**\n   * @deprecated Since 1.5\n   * Use promotionService instead of the promotion inputs.\n   * Remove issue: #5670\n   */\n  getAllPromotionsForCart(cart: Cart): any[] {\n    const potentialPromotions = [];\n    potentialPromotions.push(...(cart.potentialOrderPromotions || []));\n    potentialPromotions.push(...(cart.potentialProductPromotions || []));\n\n    const appliedPromotions = [];\n    appliedPromotions.push(...(cart.appliedOrderPromotions || []));\n    appliedPromotions.push(...(cart.appliedProductPromotions || []));\n\n    return [...potentialPromotions, ...appliedPromotions];\n  }\n\n  saveForLater(item: Item) {\n    if (this.loggedIn) {\n      this.cartService.removeEntry(item);\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\n    } else {\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  FeaturesConfigModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../checkout/components/promotions/promotions.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartDetailsComponent } from './cart-details.component';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    CartCouponModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n  entryComponents: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Cart, CartService, RoutingService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    private cartService: CartService,\n    private routingService: RoutingService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.cartService.getActive(),\n      this.cartService.getLoaded(),\n    ]).pipe(\n      filter(([_, loaded]) => loaded),\n      map(([cart]) => {\n        if (this.isEmpty(cart)) {\n          this.routingService.go({ cxRoute: 'home' });\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CartService,\n  SelectiveCartService,\n  FeatureConfigService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(\n    cartService: CartService,\n    selectiveCartService: SelectiveCartService,\n    featureConfig: FeatureConfigService\n  );\n  /**\n   * @deprecated Since 1.5\n   * Add selectiveCartService and featureConfig for save for later.\n   * Remove issue: #5958\n   */\n  constructor(cartService: CartService);\n\n  constructor(\n    private cartService: CartService,\n    private selectiveCartService?: SelectiveCartService,\n    private featureConfig?: FeatureConfigService\n  ) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      if (this.featureConfig && this.featureConfig.isEnabled('saveForLater')) {\n        return combineLatest([\n          slots$,\n          this.cartService.getActive(),\n          this.selectiveCartService.getCart(),\n        ]).pipe(\n          map(([slots, cart, selectiveCart]) => {\n            if (cart.totalItems) {\n              return slots.filter(slot => slot !== 'EmptyCartMiddleContent');\n            } else if (selectiveCart.totalItems) {\n              return slots.filter(\n                slot =>\n                  slot !== 'EmptyCartMiddleContent' &&\n                  slot !== 'CenterRightContentSlot'\n              );\n            } else {\n              return slots.filter(\n                slot =>\n                  slot !== 'TopContent' && slot !== 'CenterRightContentSlot'\n              );\n            }\n          })\n        );\n      }\n      //TODO remove old code for #5958\n      return combineLatest([slots$, this.cartService.getActive()]).pipe(\n        map(([slots, cart]) => {\n          if (cart.totalItems) {\n            return slots.filter(slot => slot !== 'EmptyCartMiddleContent');\n          } else {\n            return slots.filter(\n              slot => slot !== 'TopContent' && slot !== 'CenterRightContentSlot'\n            );\n          }\n        })\n      );\n      ////TODO remove old code for #5958\n    }\n    return slots$;\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Cart, CartService, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n\n  constructor(protected cartService: CartService) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartTotalsComponent } from './cart-totals.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n    CartSharedModule,\n    I18nModule,\n    CartCouponModule,\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n  entryComponents: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.cartService.getActive().pipe(\n    startWith({ deliveryItemsQuantity: 0 }),\n    map(cart => cart.deliveryItemsQuantity || 0)\n  );\n\n  total$: Observable<string> = this.cartService.getActive().pipe(\n    filter(cart => !!cart.totalPrice),\n    map(cart => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected cartService: CartService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n    UrlModule,\n    IconModule,\n    I18nModule,\n  ],\n  declarations: [MiniCartComponent],\n  exports: [MiniCartComponent],\n  entryComponents: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AuthService,\n  OrderEntry,\n  Product,\n  WishListService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\nimport { CurrentProductService } from '../../product/current-product.service';\n\n@Component({\n  selector: 'cx-add-to-wishlist',\n  templateUrl: './add-to-wish-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToWishListComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\n    filter(product => Boolean(product)),\n    tap(product => this.setStockInfo(product))\n  );\n\n  wishListEntries$: Observable<\n    OrderEntry[]\n  > = this.wishListService.getWishList().pipe(\n    filter(wishlist => Boolean(wishlist)),\n    map(wishList => wishList.entries)\n  );\n\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  hasStock = false;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected wishListService: WishListService,\n    protected currentProductService: CurrentProductService,\n    protected authService: AuthService\n  ) {}\n\n  add(product: Product): void {\n    this.wishListService.addEntry(product.code);\n  }\n\n  remove(entry: OrderEntry): void {\n    this.wishListService.removeEntry(entry);\n  }\n\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\n    const item = entries.find(entry => entry.product.code === product.code);\n    return item;\n  }\n\n  private setStockInfo(product: Product): void {\n    this.hasStock =\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { AddToWishListComponent } from './add-to-wish-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AddToWishListComponent: {\n          component: AddToWishListComponent,\n        },\n      },\n    }),\n    I18nModule,\n    IconModule,\n    RouterModule,\n    UrlModule,\n  ],\n  declarations: [AddToWishListComponent],\n  entryComponents: [AddToWishListComponent],\n  exports: [AddToWishListComponent],\n})\nexport class AddToWishListModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  SelectiveCartService,\n  Cart,\n  OrderEntry,\n  ActiveCartService,\n  CmsParagraphComponent,\n  CmsService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Item } from '../cart-shared/cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-save-for-later',\n  templateUrl: './save-for-later.component.html',\n})\nexport class SaveForLaterComponent implements OnInit {\n  saveForLater$: Observable<Cart>;\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  data$: Observable<CmsParagraphComponent>;\n  isCartEmpty$: Observable<boolean>;\n\n  constructor(\n    protected cmsService: CmsService,\n    protected cartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isCartEmpty$ = this.cartService\n      .getActive()\n      .pipe(map(cart => !(cart && cart.totalItems && cart.totalItems > 0)));\n    this.saveForLater$ = this.selectiveCartService.getCart();\n    this.entries$ = this.selectiveCartService\n      .getEntries()\n      .pipe(filter(entries => entries.length > 0));\n    this.cartLoaded$ = combineLatest([\n      this.cartService.getLoaded(),\n      this.selectiveCartService.getLoaded(),\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\n    this.data$ = this.cmsService.getComponentData(\n      'EmptyCartParagraphComponent'\n    );\n  }\n\n  moveToCart(item: Item) {\n    this.selectiveCartService.removeEntry(item);\n    this.cartService.addEntry(item.product.code, item.quantity);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SaveForLaterComponent } from './save-for-later.component';\nimport {\n  ConfigModule,\n  CmsConfig,\n  I18nModule,\n  FeaturesConfig,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        SaveForLaterComponent: {\n          component: SaveForLaterComponent,\n        },\n      },\n      features: {\n        saveForLater: '1.5',\n      },\n    }),\n    I18nModule,\n    CartSharedModule,\n  ],\n  declarations: [SaveForLaterComponent],\n  exports: [SaveForLaterComponent],\n  entryComponents: [SaveForLaterComponent],\n})\nexport class SaveForLaterModule {}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","import { CheckoutStep } from '../model/checkout-step.model';\n\nexport enum DeliveryModePreferences {\n  FREE = 'FREE',\n  LEAST_EXPENSIVE = 'LEAST_EXPENSIVE', // but not free\n  MOST_EXPENSIVE = 'MOST_EXPENSIVE',\n}\n\nexport abstract class CheckoutConfig {\n  checkout?: {\n    /**\n     * Set checkout steps as ordered array of pages.\n     */\n    steps?: Array<CheckoutStep>;\n    /**\n     * Allow for express checkout when default shipping method and payment method are available.\n     */\n    express?: boolean;\n    /**\n     * Default delivery mode for i.a. express checkout. Set preferences in order with general preferences (eg. DeliveryModePreferences.LEAST_EXPENSIVE) or specific delivery codes.\n     */\n    defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\n    /**\n     * Allow for guest checkout.\n     */\n    guest?: boolean;\n  };\n}\n","export enum CheckoutStepType {\n  SHIPPING_ADDRESS = 'shippingAddress',\n  DELIVERY_MODE = 'deliveryMode',\n  PAYMENT_DETAILS = 'paymentDetails',\n  REVIEW_ORDER = 'reviewOrder',\n}\n\nexport interface CheckoutStep {\n  id: string;\n  name: string;\n  routeName: string;\n  type: Array<CheckoutStepType>;\n}\n","import { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfig, DeliveryModePreferences } from './checkout-config';\n\nexport const defaultCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\nimport {\n  CheckoutConfig,\n  DeliveryModePreferences,\n} from '../config/checkout-config';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  steps: CheckoutStep[] = this.checkoutConfig.checkout.steps;\n  private express: boolean = this.checkoutConfig.checkout.express;\n  private guest: boolean = this.checkoutConfig.checkout.guest;\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\n    this.checkoutConfig.checkout.defaultDeliveryMode || [];\n\n  constructor(\n    private checkoutConfig: CheckoutConfig,\n    private routingConfigService: RoutingConfigService\n  ) {}\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep {\n    return this.steps[this.getCheckoutStepIndex('type', currentStepType)];\n  }\n\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string {\n    return this.getCheckoutStep(currentStepType).routeName;\n  }\n\n  getFirstCheckoutStepRoute(): string {\n    return this.steps[0].routeName;\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex + 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex + 1].routeName)\n      : null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    return stepIndex >= 0 && this.steps[stepIndex - 1]\n      ? this.getStepUrlFromStepRoute(this.steps[stepIndex - 1].routeName)\n      : null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\n    const currentStepUrl: string = this.getStepUrlFromActivatedRoute(\n      activatedRoute\n    );\n\n    let stepIndex: number;\n    let index = 0;\n    for (const step of this.steps) {\n      if (\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n      ) {\n        stepIndex = index;\n      } else {\n        index++;\n      }\n    }\n\n    return stepIndex >= 0 ? stepIndex : null;\n  }\n\n  protected compareDeliveryCost(\n    deliveryMode1: DeliveryMode,\n    deliveryMode2: DeliveryMode\n  ): number {\n    if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\n      return 1;\n    } else if (\n      deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\n    ) {\n      return -1;\n    }\n    return 0;\n  }\n\n  protected findMatchingDeliveryMode(\n    deliveryModes: DeliveryMode[],\n    index = 0\n  ): string {\n    switch (this.defaultDeliveryMode[index]) {\n      case DeliveryModePreferences.FREE:\n        if (deliveryModes[0].deliveryCost.value === 0) {\n          return deliveryModes[0].code;\n        }\n        break;\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\n        const leastExpensiveFound = deliveryModes.find(\n          deliveryMode => deliveryMode.deliveryCost.value !== 0\n        );\n        if (leastExpensiveFound) {\n          return leastExpensiveFound.code;\n        }\n        break;\n      case DeliveryModePreferences.MOST_EXPENSIVE:\n        return deliveryModes[deliveryModes.length - 1].code;\n      default:\n        const codeFound = deliveryModes.find(\n          deliveryMode => deliveryMode.code === this.defaultDeliveryMode[index]\n        );\n        if (codeFound) {\n          return codeFound.code;\n        }\n    }\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\n    return lastMode\n      ? deliveryModes[0].code\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\n  }\n\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string {\n    deliveryModes.sort(this.compareDeliveryCost);\n    return this.findMatchingDeliveryMode(deliveryModes);\n  }\n\n  isExpressCheckout(): boolean {\n    return this.express;\n  }\n\n  isGuestCheckout(): boolean {\n    return this.guest;\n  }\n\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string): string {\n    return this.routingConfigService.getRouteConfig(stepRoute).paths[0];\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.steps.findIndex((step: CheckoutStep) => step[key].includes(value))\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  AuthRedirectService,\n  AuthService,\n  CartService,\n  RoutingService,\n  User,\n  UserToken,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutAuthGuard implements CanActivate {\n  constructor(\n    private routingService: RoutingService,\n    private authService: AuthService,\n    private authRedirectService: AuthRedirectService,\n    private cartService: CartService,\n    private checkoutConfigService: CheckoutConfigService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return combineLatest([\n      this.authService.getUserToken(),\n      this.cartService.getAssignedUser(),\n    ]).pipe(\n      map(([token, user]: [UserToken, User]) => {\n        if (!token.access_token) {\n          if (this.cartService.isGuestCart()) {\n            return Boolean(user);\n          }\n          if (this.checkoutConfigService.isGuestCheckout()) {\n            this.routingService.go({ cxRoute: 'login' }, { forced: true });\n          } else {\n            this.routingService.go({ cxRoute: 'login' });\n          }\n          this.authRedirectService.reportAuthGuard();\n        }\n        return !!token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  OCC_USER_ID_ANONYMOUS,\n  PaymentDetails,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutPaymentService: CheckoutPaymentService,\n    private cartService: CartService\n  ) {\n    this.cartId$ = this.cartService.getActive().pipe(\n      map(cartData => {\n        if (\n          (cartData.user && cartData.user.uid === OCC_USER_ID_ANONYMOUS) ||\n          this.cartService.isGuestCart()\n        ) {\n          return cartData.guid;\n        }\n        return cartData.code;\n      }),\n      filter(cartId => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap(cartId => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile(loaded => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, of, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, debounceTime } from 'rxjs/operators';\n\nimport {\n  Address,\n  CheckoutDeliveryService,\n  UserAddressService,\n  UserPaymentService,\n  PaymentDetails,\n  DeliveryMode,\n  CheckoutPaymentService,\n  LoaderState,\n} from '@spartacus/core';\nimport { CheckoutConfigService } from './checkout-config.service';\nimport { CheckoutDetailsService } from './checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExpressCheckoutService {\n  private shippingAddressSet$: Observable<boolean>;\n  private deliveryModeSet$: Observable<boolean>;\n  private paymentMethodSet$: Observable<boolean>;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected checkoutConfigService: CheckoutConfigService\n  ) {\n    this.setShippingAddress();\n    this.setDeliveryMode();\n    this.setPaymentMethod();\n  }\n\n  protected setShippingAddress() {\n    this.shippingAddressSet$ = combineLatest([\n      this.userAddressService.getAddresses(),\n      this.userAddressService.getAddressesLoadedSuccess(),\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          if (!addressesLoadedSuccess) {\n            this.userAddressService.loadAddresses();\n          }\n        }\n      ),\n      filter(\n        ([, addressesLoadedSuccess]: [Address[], boolean, LoaderState<void>]) =>\n          addressesLoadedSuccess\n      ),\n      switchMap(\n        ([addresses, , setDeliveryAddressProcess]: [\n          Address[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          const defaultAddress =\n            addresses.find(address => address.defaultAddress) || addresses[0];\n          if (defaultAddress && Object.keys(defaultAddress).length) {\n            if (\n              !(\n                setDeliveryAddressProcess.success ||\n                setDeliveryAddressProcess.error ||\n                setDeliveryAddressProcess.loading\n              )\n            ) {\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\n            }\n            return of(setDeliveryAddressProcess).pipe(\n              filter((setDeliveryAddressProcessState: LoaderState<void>) => {\n                return (\n                  (setDeliveryAddressProcessState.success ||\n                    setDeliveryAddressProcessState.error) &&\n                  !setDeliveryAddressProcessState.loading\n                );\n              }),\n              switchMap((setDeliveryAddressProcessState: LoaderState<void>) => {\n                if (setDeliveryAddressProcessState.success) {\n                  return this.checkoutDetailsService.getDeliveryAddress();\n                }\n                return of(false);\n              }),\n              map(data => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setPaymentMethod() {\n    this.paymentMethodSet$ = combineLatest([\n      this.userPaymentService.getPaymentMethods(),\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, paymentMethodsLoadedSuccess]: [\n          PaymentDetails[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          if (!paymentMethodsLoadedSuccess) {\n            this.userPaymentService.loadPaymentMethods();\n          }\n        }\n      ),\n      filter(\n        ([, success]: [PaymentDetails[], boolean, LoaderState<void>]) => success\n      ),\n      switchMap(\n        ([payments, , setPaymentDetailsProcess]: [\n          PaymentDetails[],\n          boolean,\n          LoaderState<void>\n        ]) => {\n          const defaultPayment =\n            payments.find(address => address.defaultPayment) || payments[0];\n          if (defaultPayment && Object.keys(defaultPayment).length) {\n            if (\n              !(\n                setPaymentDetailsProcess.success ||\n                setPaymentDetailsProcess.error ||\n                setPaymentDetailsProcess.loading\n              )\n            ) {\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\n            }\n            return of(setPaymentDetailsProcess).pipe(\n              filter((setPaymentDetailsProcessState: LoaderState<void>) => {\n                return (\n                  (setPaymentDetailsProcessState.success ||\n                    setPaymentDetailsProcessState.error) &&\n                  !setPaymentDetailsProcessState.loading\n                );\n              }),\n              switchMap((setPaymentDetailsProcessState: LoaderState<void>) => {\n                if (setPaymentDetailsProcessState.success) {\n                  return this.checkoutDetailsService.getPaymentDetails();\n                }\n                return of(false);\n              }),\n              map(data => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setDeliveryMode() {\n    this.deliveryModeSet$ = combineLatest([\n      this.shippingAddressSet$,\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\n    ]).pipe(\n      debounceTime(0),\n      switchMap(\n        ([\n          addressSet,\n          supportedDeliveryModes,\n          setDeliveryModeStatusFlag,\n          loadSupportedDeliveryModeStatus,\n        ]: [boolean, DeliveryMode[], LoaderState<void>, LoaderState<void>]) => {\n          if (addressSet) {\n            return of([\n              supportedDeliveryModes,\n              setDeliveryModeStatusFlag,\n              loadSupportedDeliveryModeStatus,\n            ]).pipe(\n              filter(\n                ([, , supportedDeliveryModeStatus]: [\n                  DeliveryMode[],\n                  LoaderState<void>,\n                  LoaderState<void>\n                ]) => supportedDeliveryModeStatus.success\n              ),\n              switchMap(\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\n                  DeliveryMode[],\n                  LoaderState<void>,\n                  LoaderState<void>\n                ]) => {\n                  if (Boolean(deliveryModes.length)) {\n                    const preferredDeliveryMode = this.checkoutConfigService.getPreferredDeliveryMode(\n                      deliveryModes\n                    );\n                    return of([\n                      preferredDeliveryMode,\n                      setDeliveryModeStatus,\n                    ]).pipe(\n                      tap(\n                        ([deliveryMode, deliveryModeLoadingStatus]: [\n                          string,\n                          LoaderState<void>\n                        ]) => {\n                          if (\n                            deliveryMode &&\n                            !(\n                              deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error ||\n                              deliveryModeLoadingStatus.loading\n                            )\n                          ) {\n                            this.checkoutDeliveryService.setDeliveryMode(\n                              deliveryMode\n                            );\n                          }\n                        }\n                      ),\n                      filter(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          LoaderState<void>\n                        ]) => {\n                          return (\n                            (deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error) &&\n                            !deliveryModeLoadingStatus.loading\n                          );\n                        }\n                      ),\n                      switchMap(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          LoaderState<void>\n                        ]) => {\n                          if (deliveryModeLoadingStatus.success) {\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\n                          }\n                          return of(false);\n                        }\n                      ),\n                      map(data => Boolean(data))\n                    );\n                  }\n                  return of(false);\n                }\n              )\n            );\n          } else {\n            return of(false);\n          }\n        }\n      )\n    );\n  }\n\n  protected resetCheckoutProcesses() {\n    this.checkoutDeliveryService.resetSetDeliveryAddressProcess();\n    this.checkoutPaymentService.resetSetPaymentDetailsProcess();\n    this.checkoutDeliveryService.resetSetDeliveryModeProcess();\n  }\n\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\n    this.resetCheckoutProcesses();\n    return combineLatest([this.deliveryModeSet$, this.paymentMethodSet$]).pipe(\n      map(([deliveryModeSet, paymentMethodSet]) =>\n        Boolean(deliveryModeSet && paymentMethodSet)\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { CartService, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../config/checkout-config';\nimport { CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  private readonly firstStep$: Observable<UrlTree>;\n\n  constructor(\n    router: Router,\n    config: CheckoutConfig,\n    routingConfigService: RoutingConfigService,\n    checkoutConfigService: CheckoutConfigService,\n    expressCheckoutService: ExpressCheckoutService,\n    cartService: CartService\n  );\n  /**\n   * @deprecated since version 1.2\n   *  Use constructor(router: Router,\n   *  config: CheckoutConfig - @deprecated since 2.x,\n   *  routingConfigService: RoutingConfigService,\n   *  checkoutConfigService: CheckoutConfigService,\n   *  expressCheckoutService: ExpressCheckoutService\n   *  cartService: CartService) instead\n   *\n   *  TODO(issue:#4309) Deprecated since 1.2.0\n   */\n  constructor(\n    router: Router,\n    config: CheckoutConfig,\n    routingConfigService: RoutingConfigService\n  );\n  constructor(\n    private router: Router,\n    private config: CheckoutConfig,\n    private routingConfigService: RoutingConfigService,\n    protected checkoutConfigService?: CheckoutConfigService,\n    protected expressCheckoutService?: ExpressCheckoutService,\n    protected cartService?: CartService\n  ) {\n    /**\n     * TODO(issue:#4309) Deprecated since 1.2.0\n     */\n    if (this.checkoutConfigService) {\n      this.firstStep$ = of(\n        this.router.parseUrl(\n          this.routingConfigService.getRouteConfig(\n            this.checkoutConfigService.getFirstCheckoutStepRoute()\n          ).paths[0]\n        )\n      );\n    } else {\n      this.firstStep$ = of(\n        this.router.parseUrl(\n          this.routingConfigService.getRouteConfig(\n            this.config.checkout.steps[0].routeName\n          ).paths[0]\n        )\n      );\n    }\n  }\n\n  canActivate(): Observable<boolean | UrlTree> {\n    /**\n     * TODO(issue:#4309) Deprecated since 1.2.0\n     */\n    if (\n      this.checkoutConfigService &&\n      this.expressCheckoutService &&\n      this.cartService\n    ) {\n      if (\n        this.checkoutConfigService.isExpressCheckout() &&\n        !this.cartService.isGuestCart()\n      ) {\n        return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\n          switchMap((expressCheckoutPossible: boolean) => {\n            return expressCheckoutPossible\n              ? of(\n                  this.router.parseUrl(\n                    this.routingConfigService.getRouteConfig(\n                      this.checkoutConfigService.getCheckoutStepRoute(\n                        CheckoutStepType.REVIEW_ORDER\n                      )\n                    ).paths[0]\n                  )\n                )\n              : this.firstStep$;\n          })\n        );\n      }\n    }\n    return this.firstStep$;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  templateUrl: './checkout-orchestrator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, Config, ConfigModule } from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  providers: [{ provide: CheckoutConfig, useExisting: Config }],\n  declarations: [CheckoutOrchestratorComponent],\n  entryComponents: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CartService, Cart } from '@spartacus/core';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected cartService: CartService) {\n    this.cart$ = this.cartService.getActive();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  entryComponents: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n})\nexport class CheckoutProgressMobileBottomComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit() {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  entryComponents: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport {\n  RoutingService,\n  CartService,\n  Cart,\n  RoutingConfigService,\n} from '@spartacus/core';\nimport { CheckoutConfig } from '../../../config/checkout-config';\nimport { CheckoutStep } from '../../../model/checkout-step.model';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected cartService: CartService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  cart$: Observable<Cart>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.cart$ = this.cartService.getActive();\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { defaultCheckoutConfig } from '../../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  entryComponents: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { RoutingService, RoutingConfigService } from '@spartacus/core';\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { CheckoutStep } from '../../model/checkout-step.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent implements OnInit {\n  constructor(\n    protected config: CheckoutConfig,\n    protected routingService: RoutingService,\n    protected routingConfigService: RoutingConfigService\n  ) {}\n\n  steps: Array<CheckoutStep>;\n  routerState$: Observable<any>;\n  activeStepIndex: number;\n  activeStepUrl: string;\n\n  ngOnInit(): void {\n    this.steps = this.config.checkout.steps;\n    this.routerState$ = this.routingService.getRouterState().pipe(\n      tap(router => {\n        this.activeStepUrl = router.state.context.id;\n\n        this.steps.forEach((step, index) => {\n          const routeUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths[0]\n          }`;\n          if (routeUrl === this.activeStepUrl) {\n            this.activeStepIndex = index;\n          }\n        });\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  Config,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CheckoutConfig } from '../../config/checkout-config';\nimport { defaultCheckoutConfig } from '../../config/default-checkout-config';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    RouterModule,\n    ConfigModule.withConfig(defaultCheckoutConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressComponent],\n  entryComponents: [CheckoutProgressComponent],\n  exports: [CheckoutProgressComponent],\n  providers: [{ provide: CheckoutConfig, useExisting: Config }],\n})\nexport class CheckoutProgressModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Address, RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShippingAddressSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.SHIPPING_ADDRESS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.SHIPPING_ADDRESS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getDeliveryAddress()\n      .pipe(\n        map((deliveryAddress: Address) =>\n          deliveryAddress && Object.keys(deliveryAddress).length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutDeliveryService,\n  DeliveryMode,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  currentDeliveryModeId: string;\n  checkoutStepUrlNext: string;\n  checkoutStepUrlPrevious: string;\n  private allowRedirect = false;\n\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryService,\n    private routingService: RoutingService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService.getSupportedDeliveryModes();\n\n    this.deliveryModeSub = this.supportedDeliveryModes$\n      .pipe(\n        withLatestFrom(\n          this.checkoutDeliveryService\n            .getSelectedDeliveryMode()\n            .pipe(\n              map((deliveryMode: DeliveryMode) =>\n                deliveryMode && deliveryMode.code ? deliveryMode.code : null\n              )\n            )\n        )\n      )\n      .subscribe(([deliveryModes, code]: [DeliveryMode[], string]) => {\n        if (!code && deliveryModes && deliveryModes.length) {\n          code = this.checkoutConfigService.getPreferredDeliveryMode(\n            deliveryModes\n          );\n        }\n        if (\n          this.allowRedirect &&\n          !!code &&\n          code === this.currentDeliveryModeId\n        ) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        this.currentDeliveryModeId = code;\n        if (code) {\n          this.mode.controls['deliveryModeId'].setValue(code);\n        }\n      });\n  }\n\n  changeMode(code: string): void {\n    if (code !== this.currentDeliveryModeId) {\n      this.currentDeliveryModeId = code;\n    }\n  }\n\n  next(): void {\n    this.allowRedirect = true;\n    if (this.mode.valid && this.mode.value) {\n      if (!this.currentDeliveryModeId) {\n        this.currentDeliveryModeId = this.mode.value.deliveryModeId;\n      }\n      this.checkoutDeliveryService.setDeliveryMode(this.currentDeliveryModeId);\n    }\n    this.routingService.go(this.checkoutStepUrlNext);\n  }\n\n  back(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  entryComponents: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryModeSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.DELIVERY_MODE\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.DELIVERY_MODE} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Country, Region, UserAddressService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-billing-address-form',\n  templateUrl: './billing-address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillingAddressFormComponent implements OnInit {\n  regions$: Observable<Region[]>;\n\n  @Input()\n  billingAddress: FormGroup;\n\n  @Input()\n  countries$: Observable<Country[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  constructor(protected userAddressService: UserAddressService) {}\n\n  ngOnInit() {\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.billingAddress.get('region.isocodeShort');\n        if (regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddress['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.billingAddress['controls'].region['controls'].isocodeShort.setValue(\n      region.isocodeShort\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { I18nModule } from '@spartacus/core';\nimport { BillingAddressFormComponent } from './billing-address-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    I18nModule,\n  ],\n  declarations: [BillingAddressFormComponent],\n  exports: [BillingAddressFormComponent],\n})\nexport class BillingAddressFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  LoaderState,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Card } from '../../../../../shared/components/card/card.component'; // tslint:disable-line\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\nimport { SuggestedAddressDialogComponent } from '../../shipping-address/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component'; // tslint:disable-line\n\ntype monthType = { id: number; name: string };\ntype yearType = { id: number; name: number };\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private checkboxSub: Subscription;\n  private addressVerifySub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n  months: monthType[] = [];\n  years: yearType[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  loading$: Observable<LoaderState<void>>;\n  sameAsShippingAddress = true;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  payment: FormGroup = this.fb.group({\n    defaultPayment: [false],\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    cardType: this.fb.group({\n      code: ['', Validators.required],\n    }),\n    expiryMonth: ['', Validators.required],\n    expiryYear: ['', Validators.required],\n    cvn: ['', Validators.required],\n  });\n\n  billingAddress: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    private fb: FormBuilder,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap(countries => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap(cardTypes => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.loading$ = this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\n\n    this.checkboxSub = this.showSameAsShippingAddressCheckbox().subscribe(\n      (shouldShowCheckbox: boolean) => {\n        // this operation makes sure the checkbox is not checked if not shown and vice versa\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      }\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.next();\n        } else if (results.decision === 'REJECT') {\n          this.globalMessageService.add(\n            { key: 'addressForm.invalidAddress' },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n    for (let i = 0; i < 10; i++) {\n      this.years.push({ id: i + 1, name: year + i });\n    }\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push({ id: j, name: '0' + j.toString() });\n      } else {\n        this.months.push({ id: j, name: j.toString() });\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.payment.value.defaultPayment = !this.payment.value.defaultPayment;\n  }\n\n  paymentSelected(card: CardType): void {\n    this.payment['controls'].cardType['controls'].code.setValue(card.code);\n  }\n\n  monthSelected(month: monthType): void {\n    this.payment['controls'].expiryMonth.setValue(month.name);\n  }\n\n  yearSelected(year: yearType): void {\n    this.payment['controls'].expiryYear.setValue(year.name);\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  isContinueButtonDisabled(): boolean {\n    return (\n      this.payment.invalid ||\n      (!this.sameAsShippingAddress && this.billingAddress.invalid)\n    );\n  }\n\n  /**\n   * Check if the shipping address can also be a billing address\n   *\n   * @memberof PaymentFormComponent\n   */\n  showSameAsShippingAddressCheckbox(): Observable<boolean> {\n    return combineLatest([this.countries$, this.shippingAddress$]).pipe(\n      map(([countries, address]) => {\n        return (\n          address !== undefined &&\n          address.country !== undefined &&\n          !!countries.filter(\n            (country: Country): boolean =>\n              country.isocode === address.country.isocode\n          ).length\n        );\n      })\n    );\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    };\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.billingAddress.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.checkoutDeliveryService.verifyAddress(this.billingAddress.value);\n    }\n  }\n\n  next(): void {\n    this.setPaymentDetails.emit({\n      paymentDetails: this.payment.value,\n      billingAddress: this.sameAsShippingAddress\n        ? null\n        : this.billingAddress.value,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.checkboxSub) {\n      this.checkboxSub.unsubscribe();\n    }\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { BillingAddressFormModule } from '../billing-address-form/billing-address-form.module';\nimport { PaymentFormComponent } from './payment-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    BillingAddressFormModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n  ],\n  declarations: [PaymentFormComponent],\n  entryComponents: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Address,\n  CartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  CheckoutService,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  RoutingService,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { ICON_TYPE } from '../../../misc/icon';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  newPaymentFormManuallyOpened = false;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  selectedPayment: PaymentDetails;\n  allowRouting: boolean;\n  isGuestCheckout = false;\n\n  private getPaymentDetailsSub: Subscription;\n\n  private deliveryAddress: Address;\n  private checkoutStepUrlNext: string;\n  private checkoutStepUrlPrevious: string;\n\n  constructor(\n    userPaymentService: UserPaymentService,\n    checkoutService: CheckoutService,\n    checkoutDeliveryService: CheckoutDeliveryService,\n    checkoutPaymentService: CheckoutPaymentService,\n    globalMessageService: GlobalMessageService,\n    routingService: RoutingService,\n    checkoutConfigService: CheckoutConfigService,\n    activatedRoute: ActivatedRoute,\n    translation: TranslationService,\n    cartService: CartService // tslint:disable-line\n  );\n  /**\n   * @deprecated since 1.x\n   * NOTE: check issue:#1181 for more info\n   *\n   * TODO(issue:#1181) Deprecated since 1.x\n   */\n  constructor(\n    userPaymentService: UserPaymentService,\n    checkoutService: CheckoutService,\n    checkoutDeliveryService: CheckoutDeliveryService,\n    checkoutPaymentService: CheckoutPaymentService,\n    globalMessageService: GlobalMessageService,\n    routingService: RoutingService,\n    checkoutConfigService: CheckoutConfigService,\n    activatedRoute: ActivatedRoute,\n    translation: TranslationService\n  );\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected cartService?: CartService\n  ) {}\n\n  ngOnInit() {\n    this.allowRouting = false;\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n\n    if (!this.cartService.isGuestCart()) {\n      this.userPaymentService.loadPaymentMethods();\n    } else {\n      this.isGuestCheckout = true;\n    }\n\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.checkoutStepUrlPrevious = this.checkoutConfigService.getPreviousCheckoutStepUrl(\n      this.activatedRoute\n    );\n\n    this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .pipe(take(1))\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n    this.getPaymentDetailsSub = this.checkoutPaymentService\n      .getPaymentDetails()\n      .pipe(\n        filter(paymentInfo => paymentInfo && !!Object.keys(paymentInfo).length)\n      )\n      .subscribe(paymentInfo => {\n        if (this.allowRouting) {\n          this.routingService.go(this.checkoutStepUrlNext);\n        }\n        if (!paymentInfo['hasError']) {\n          this.selectedPayment = paymentInfo;\n        } else {\n          Object.keys(paymentInfo).forEach(key => {\n            if (key.startsWith('InvalidField')) {\n              this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\n            }\n          });\n          this.checkoutService.clearCheckoutStep(3);\n        }\n      });\n  }\n\n  getCardContent(payment: PaymentDetails): Observable<Card> {\n    if (!this.selectedPayment && payment.defaultPayment) {\n      this.selectedPayment = payment;\n    }\n\n    return combineLatest([\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          textExpires,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          return this.createCard(payment, {\n            textExpires,\n            textUseThisPayment,\n            textDefaultPaymentMethod,\n            textSelected,\n          });\n        }\n      )\n    );\n  }\n\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\n    this.selectedPayment = paymentDetails;\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n    isNewPayment = true,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n    isNewPayment?: boolean;\n  }): void {\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress || this.deliveryAddress;\n\n    if (isNewPayment) {\n      this.checkoutPaymentService.createPaymentDetails(details);\n    } else if (this.selectedPayment && this.selectedPayment.id === details.id) {\n      this.checkoutPaymentService.setPaymentDetails(details);\n    }\n\n    this.allowRouting = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.getPaymentDetailsSub) {\n      this.getPaymentDetailsSub.unsubscribe();\n    }\n\n    this.checkoutPaymentService.paymentProcessSuccess();\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n\n  protected sendPaymentMethodFailGlobalMessage(msg: string) {\n    this.globalMessageService.add(\n      {\n        key: 'paymentMethods.invalidField',\n        params: { field: msg },\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  protected createCard(paymentDetails, cardLabels) {\n    return {\n      title: paymentDetails.defaultPayment\n        ? cardLabels.textDefaultPaymentMethod\n        : '',\n      textBold: paymentDetails.accountHolderName,\n      text: [paymentDetails.cardNumber, cardLabels.textExpires],\n      img: this.getCardIcon(paymentDetails.cardType.code),\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\n      header:\n        this.selectedPayment && this.selectedPayment.id === paymentDetails.id\n          ? cardLabels.textSelected\n          : undefined,\n    };\n  }\n\n  goNext(): void {\n    this.setPaymentDetails({\n      paymentDetails: this.selectedPayment,\n      isNewPayment: false,\n    });\n  }\n\n  goPrevious(): void {\n    this.routingService.go(this.checkoutStepUrlPrevious);\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This method will no longer be in use. Use goNext() instead.\n   * TODO(issue:#4992) deprecated since 1.3\n   */\n  next(): void {\n    this.goNext();\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This method will no longer be in use. Use goPrevious() instead.\n   * TODO(issue:#4992) deprecated since 1.3\n   */\n  back(): void {\n    this.goPrevious();\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This method will no longer be in use. Use selectPaymentMethod() instead.\n   * TODO(issue:#4992) deprecated since 1.3\n   */\n  paymentMethodSelected(paymentDetails: PaymentDetails): void {\n    this.selectPaymentMethod(paymentDetails);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  providers: [UserService],\n  declarations: [PaymentMethodComponent],\n  entryComponents: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { CheckoutService, RoutingService } from '@spartacus/core';\n\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  tAndCToggler = false;\n  placeOrderSubscription: Subscription;\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private routingService: RoutingService\n  ) {}\n\n  toggleTAndC(): void {\n    this.tAndCToggler = !this.tAndCToggler;\n  }\n\n  placeOrder(): void {\n    this.checkoutService.placeOrder();\n  }\n\n  ngOnInit(): void {\n    this.placeOrderSubscription = this.checkoutService\n      .getOrderDetails()\n      .pipe(filter(order => Object.keys(order).length !== 0))\n      .subscribe(() => {\n        this.routingService.go({ cxRoute: 'orderConfirmation' });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.placeOrderSubscription) {\n      this.placeOrderSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../cart/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PlaceOrderComponent } from './place-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  entryComponents: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentDetailsSetGuard implements CanActivate {\n  constructor(\n    private checkoutDetailsService: CheckoutDetailsService,\n    private checkoutConfigService: CheckoutConfigService,\n    private routingConfigService: RoutingConfigService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    const checkoutStep: CheckoutStep = this.checkoutConfigService.getCheckoutStep(\n      CheckoutStepType.PAYMENT_DETAILS\n    );\n\n    if (!checkoutStep && isDevMode()) {\n      console.warn(\n        `Missing step with type ${CheckoutStepType.PAYMENT_DETAILS} in checkout configuration.`\n      );\n    }\n\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map(paymentDetails =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.router.parseUrl(\n                checkoutStep &&\n                  this.routingConfigService.getRouteConfig(\n                    checkoutStep.routeName\n                  ).paths[0]\n              )\n        )\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  Cart,\n  CartService,\n  CheckoutDeliveryService,\n  CheckoutPaymentService,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  TranslationService,\n  UserAddressService,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutStepType } from '../../model/index';\nimport { CheckoutConfigService } from '../../services/index';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent implements OnInit {\n  checkoutStepType = CheckoutStepType;\n  entries$: Observable<OrderEntry[]>;\n  cart$: Observable<Cart>;\n  deliveryMode$: Observable<DeliveryMode>;\n  countryName$: Observable<string>;\n  deliveryAddress$: Observable<Address>;\n  paymentDetails$: Observable<PaymentDetails>;\n  orderPromotions$: Observable<PromotionResult[]>;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  constructor(\n    checkoutDeliveryService: CheckoutDeliveryService,\n    checkoutPaymentService: CheckoutPaymentService,\n    userAddressService: UserAddressService,\n    cartService: CartService,\n    translation: TranslationService,\n    checkoutConfigService: CheckoutConfigService, // tslint:disable-line\n    promotionService: PromotionService // tslint:disable-line\n  );\n\n  /**\n   * @deprecated since 1.1.0\n   * NOTE: check issue:#4121 for more info\n   *\n   * TODO(issue:#4121) Deprecated since 1.1.0\n   */\n\n  constructor(\n    checkoutDeliveryService: CheckoutDeliveryService,\n    checkoutPaymentService: CheckoutPaymentService,\n    userAddressService: UserAddressService,\n    cartService: CartService,\n    translation: TranslationService\n  );\n\n  /**\n   * @deprecated Since 1.5\n   * Use promotionService instead of the promotion inputs.\n   * Remove issue: #5670\n   */\n  constructor(\n    checkoutDeliveryService: CheckoutDeliveryService,\n    checkoutPaymentService: CheckoutPaymentService,\n    userAddressService: UserAddressService,\n    cartService: CartService,\n    translation: TranslationService,\n    checkoutConfigService: CheckoutConfigService // tslint:disable-line\n  );\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected checkoutPaymentService: CheckoutPaymentService,\n    protected userAddressService: UserAddressService,\n    protected cartService: CartService,\n    protected translation: TranslationService,\n    protected checkoutConfigService?: CheckoutConfigService,\n    protected promotionService?: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.cartService.getActive();\n    this.entries$ = this.cartService.getEntries();\n    this.deliveryAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.paymentDetails$ = this.checkoutPaymentService.getPaymentDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n\n    this.deliveryMode$ = this.checkoutDeliveryService\n      .getSelectedDeliveryMode()\n      .pipe(\n        tap((selected: DeliveryMode) => {\n          if (selected === null) {\n            this.checkoutDeliveryService.loadSupportedDeliveryModes();\n          }\n        })\n      );\n\n    this.countryName$ = this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address.country.isocode)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress.country.isocode;\n        }\n\n        let region = '';\n        if (deliveryAddress.region && deliveryAddress.region.isocode) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [deliveryMode.description],\n        };\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getCheckoutStepUrl(stepType: CheckoutStepType): string {\n    // TODO(issue:#4121) Deprecated since 1.1.0\n    if (this.checkoutConfigService) {\n      const step = this.checkoutConfigService.getCheckoutStep(stepType);\n\n      return step && step.routeName;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  FeaturesConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../../../../cms-components/cart/cart-shared/cart-shared.module';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { DeliveryModeSetGuard } from '../../guards/delivery-mode-set.guard';\nimport { PaymentDetailsSetGuard } from '../../guards/payment-details-set.guard';\nimport { ShippingAddressSetGuard } from '../../guards/shipping-address-set.guard';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\nimport { PromotionsModule } from '../promotions/promotions.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            ShippingAddressSetGuard,\n            DeliveryModeSetGuard,\n            PaymentDetailsSetGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  entryComponents: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  CheckoutDeliveryService,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../shared/components/modal/index';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport { sortTitles } from '../../../../../shared/utils/forms/title-utils';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  regionsSub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  address: FormGroup = this.fb.group({\n    defaultAddress: [false],\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap(countries => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map(titles => {\n        titles.sort(sortTitles);\n        const noneTitle = { code: '', name: 'Title' };\n        return [noneTitle, ...titles];\n      })\n    );\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap(country => this.userAddressService.getRegions(country)),\n      tap(regions => {\n        const regionControl = this.address.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    // verify the new added address\n    this.addressVerifySub = this.checkoutDeliveryService\n      .getAddressVerificationResults()\n      .subscribe((results: AddressValidation) => {\n        if (results.decision === 'FAIL') {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'ACCEPT') {\n          this.submitAddress.emit(this.address.value);\n        } else if (results.decision === 'REJECT') {\n          // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n          if (\n            results.errors.errors.some(error => error.subject === 'titleCode')\n          ) {\n            this.globalMessageService.add(\n              { key: 'addressForm.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          } else {\n            this.globalMessageService.add(\n              { key: 'addressForm.invalidAddress' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n        } else if (results.decision === 'REVIEW') {\n          this.openSuggestedAddress(results);\n        }\n      });\n\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\n      this.address.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n  }\n\n  titleSelected(title: Title): void {\n    this.address['controls'].titleCode.setValue(title.code);\n  }\n\n  countrySelected(country: Country): void {\n    this.address['controls'].country['controls'].isocode.setValue(\n      country.isocode\n    );\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.address['controls'].region['controls'].isocode.setValue(\n      region.isocode\n    );\n  }\n\n  toggleDefaultAddress(): void {\n    this.address['controls'].defaultAddress.setValue(\n      this.address.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.address.controls['region'].value.isocode) {\n      this.regionsSub = this.regions$.pipe(take(1)).subscribe(regions => {\n        const obj = regions.find(\n          region =>\n            region.isocode === this.address.controls['region'].value.isocode\n        );\n        Object.assign(this.address.value.region, {\n          isocodeShort: obj.isocodeShort,\n        });\n      });\n    }\n\n    if (this.address.dirty) {\n      this.checkoutDeliveryService.verifyAddress(this.address.value);\n    } else {\n      // address form value not changed\n      // ignore duplicate address\n      this.submitAddress.emit(undefined);\n    }\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress = this.address.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(address => {\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.address.value.titleCode,\n                phone: this.address.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.checkoutDeliveryService.clearAddressVerificationResults();\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.address.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.checkoutDeliveryService.clearAddressVerificationResults();\n\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n\n    if (this.regionsSub) {\n      this.regionsSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { AutoFocusDirectiveModule } from '../../../../../shared/directives/auto-focus/auto-focus.directive.module';\nimport { IconModule } from '../../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    AutoFocusDirectiveModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  entryComponents: [SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\n})\nexport class AddressFormModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsLoadedGuard implements CanActivate {\n  constructor(private checkoutDetailsService: CheckoutDetailsService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.checkoutDetailsService.getCheckoutDetailsLoaded$;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Address,\n  CartService,\n  CheckoutDeliveryService,\n  RoutingService,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\nimport { CheckoutStepType } from '../..';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit, OnDestroy {\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected cartService: CartService,\n    protected routingService: RoutingService,\n    protected checkoutDeliveryService: CheckoutDeliveryService,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute,\n    private translation: TranslationService\n  ) {}\n  existingAddresses$: Observable<Address[]>;\n  newAddressFormManuallyOpened = false;\n  isLoading$: Observable<boolean>;\n  cards$: Observable<CardWithAddress[]>;\n  selectedAddress$: Observable<Address>;\n  forceLoader = false; // this helps with smoother steps transition\n\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Use cards$ observable instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  cards: Card[] = [];\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Avoid using it.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  goTo: CheckoutStepType = null;\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Use selectAddress(address: Address) instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  setAddress: Address;\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Avoid using it.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  setAddressSub: Subscription;\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Use selectedAddress$ observable instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  selectedAddressSub: Subscription;\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Use CheckoutConfigService.getNextCheckoutStepUrl(this.activatedRoute) instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n    this.activatedRoute\n  );\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Use CheckoutConfigService.getPreviousCheckoutStepUrl(this.activatedRoute) instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  checkoutStepUrlPrevious = 'cart';\n\n  isGuestCheckout = false;\n\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Use selectedAddress$ observable instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  selectedAddress: Address;\n\n  ngOnInit() {\n    this.goTo = null;\n    this.checkoutStepUrlNext = this.checkoutConfigService.getNextCheckoutStepUrl(\n      this.activatedRoute\n    );\n    this.checkoutStepUrlPrevious = 'cart';\n    this.isLoading$ = this.userAddressService.getAddressesLoading();\n    this.existingAddresses$ = this.userAddressService.getAddresses();\n    this.selectedAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n\n    this.cards$ = combineLatest([\n      this.existingAddresses$,\n      this.selectedAddress$,\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          addresses,\n          selected,\n          textDefaultShippingAddress,\n          textShipToThisAddress,\n          textSelected,\n        ]) => {\n          // Select default address if none selected\n          if (\n            addresses.length &&\n            (!selected ||\n              Object.keys(selected).length === 0 ||\n              !this.selectedAddress)\n          ) {\n            const defaultAddress = addresses.find(\n              address => address.defaultAddress\n            );\n            selected = defaultAddress;\n            this.selectAddress(defaultAddress);\n          }\n          return addresses.map(address => {\n            const card = this.getCardContent(\n              address,\n              selected,\n              textDefaultShippingAddress,\n              textShipToThisAddress,\n              textSelected\n            );\n            return {\n              address,\n              card,\n            };\n          });\n        }\n      )\n    );\n\n    if (!this.cartService.isGuestCart()) {\n      this.userAddressService.loadAddresses();\n    } else {\n      this.isGuestCheckout = true;\n    }\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    };\n  }\n\n  selectAddress(address: Address): void {\n    this.selectedAddress = address;\n    this.checkoutDeliveryService.setDeliveryAddress(address);\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * Use addAddress(address: Address) instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  addAddress(address: { newAddress: boolean; address: Address } | any);\n  addAddress(\n    address: Address | { newAddress: boolean; address: Address }\n  ): void {\n    // TODO(issue:#3921) deprecated since 1.3 - Remove temp address\n    const tempAddress: Address = address['address']\n      ? address['address']\n      : address;\n\n    const selectedSub = this.selectedAddress$.subscribe(selected => {\n      if (selected && selected.shippingAddress) {\n        this.goNext();\n        selectedSub.unsubscribe();\n      }\n    });\n\n    this.forceLoader = true;\n\n    // TODO(issue:#3921) deprecated since 1.3 - Remove this condition\n    if (address['address'] || address['newAddress']) {\n      address['newAddress']\n        ? this.checkoutDeliveryService.createAndSetAddress(tempAddress)\n        : this.selectAddress(tempAddress);\n    } else {\n      // TODO(issue:#3921) deprecated since 1.3 - Use instead of condition\n      this.existingAddresses$.pipe(take(1)).subscribe(addresses => {\n        addresses.includes(tempAddress)\n          ? this.selectAddress(tempAddress)\n          : this.checkoutDeliveryService.createAndSetAddress(tempAddress);\n      });\n    }\n  }\n\n  showNewAddressForm(): void {\n    this.newAddressFormManuallyOpened = true;\n  }\n\n  hideNewAddressForm(goPrevious: boolean = false): void {\n    this.newAddressFormManuallyOpened = false;\n    if (goPrevious) {\n      this.goPrevious();\n    }\n  }\n\n  goNext(): void {\n    this.routingService.go(\n      this.checkoutConfigService.getNextCheckoutStepUrl(this.activatedRoute)\n    );\n  }\n\n  goPrevious(): void {\n    this.routingService.go(\n      this.checkoutConfigService.getPreviousCheckoutStepUrl(\n        this.activatedRoute\n      ) || 'cart'\n    );\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This variable will no longer be in use. Use selectAddress(address: Address) instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  addressSelected(address: Address): void {\n    this.selectAddress(address);\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This method will no longer be in use. Use goPrevious() instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  back(): void {\n    this.goPrevious();\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This method will no longer be in use. Use goNext() instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  next(): void {\n    this.goNext();\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This method will no longer be in use. Use addAddress(address: Address) instead.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  addNewAddress(address: Address): void {\n    this.addAddress(address);\n  }\n\n  /**\n   * @deprecated since version 1.3\n   * This method will no longer be in use. Remove.\n   * TODO(issue:#3921) deprecated since 1.3\n   */\n  ngOnDestroy(): void {\n    if (this.setAddressSub) {\n      this.setAddressSub.unsubscribe();\n    }\n    if (this.selectedAddressSub) {\n      this.selectedAddressSub.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/spinner/spinner.module';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\n// tslint:disable-next-line:max-line-length\nimport { CheckoutProgressMobileBottomModule } from '../checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\nimport { CheckoutProgressMobileTopModule } from '../checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CartNotEmptyGuard } from './../../../../cms-components/cart/cart-not-empty.guard';\nimport { AddressFormModule } from './address-form/address-form.module';\nimport { CheckoutDetailsLoadedGuard } from '../../guards/checkout-details-loaded.guard';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [\n            CheckoutAuthGuard,\n            CartNotEmptyGuard,\n            CheckoutDetailsLoadedGuard,\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  entryComponents: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// tslint:disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { PromotionsModule } from './components/promotions/promotions.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    PromotionsModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n  ],\n})\nexport class CheckoutComponentModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService, CartService, RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotCheckoutAuthGuard implements CanActivate {\n  constructor(\n    private routingService: RoutingService,\n    private authService: AuthService,\n    private cartService: CartService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.authService.getUserToken().pipe(\n      map(token => {\n        if (token.access_token) {\n          this.routingService.go({ cxRoute: 'home' });\n        } else if (this.cartService.isGuestCart()) {\n          this.routingService.go({ cxRoute: 'cart' });\n          return false;\n        }\n        return !token.access_token;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter(event => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  exports: [HamburgerMenuComponent],\n  entryComponents: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","import { NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { LayoutConfig } from './config/layout-config';\n\n@NgModule({\n  imports: [OutletRefModule],\n  providers: [{ provide: LayoutConfig, useExisting: Config }],\n  exports: [OutletRefModule],\n})\nexport class LayoutModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  consentGiven = false;\n\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Input()\n  requiredConsents: string[] = [];\n\n  @Input()\n  isAnonymousConsentsEnabled = false;\n\n  @Input()\n  consent: AnonymousConsent;\n\n  // TODO(issue:4989) Anonymous consents - remove\n  @Input()\n  isLevel13 = false;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.isAnonymousConsentsEnabled && this.consent) {\n      this.consentGiven = Boolean(\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    } else {\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n          this.consentGiven = false;\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n          this.consentGiven = true;\n        }\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentGiven = !this.consentGiven;\n\n    this.consentChanged.emit({\n      given: this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n\n  isRequired(templateId: string): boolean {\n    return this.isAnonymousConsentsEnabled\n      ? this.requiredConsents.includes(templateId)\n      : false;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ANONYMOUS_CONSENTS_FEATURE,\n  AuthService,\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  isFeatureEnabled,\n  isFeatureLevel,\n  UserConsentService,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concat,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  skipWhile,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  requiredConsents: string[] = [];\n\n  isAnonymousConsentsEnabled = isFeatureEnabled(\n    this.anonymousConsentsConfig,\n    ANONYMOUS_CONSENTS_FEATURE\n  );\n\n  // TODO(issue:4989) Anonymous consents - remove\n  isLevel13 = isFeatureLevel(this.anonymousConsentsConfig, '1.3');\n\n  constructor(\n    userConsentService: UserConsentService,\n    globalMessageService: GlobalMessageService,\n    anonymousConsentsConfig: AnonymousConsentsConfig,\n    anonymousConsentsService: AnonymousConsentsService,\n    authService: AuthService\n  );\n\n  /**\n   * @deprecated since version 1.3\n   * Instead, use:\n   ```ts\n   constructor(\n     userConsentService: UserConsentService,\n     globalMessageService: GlobalMessageService,\n     anonymousConsentsConfig : AnonymousConsentsConfig,\n     anonymousConsentsService : AnonymousConsentsService,\n     authService: AuthService,\n   ) \n   ```\n   */\n  constructor(\n    userConsentService: UserConsentService,\n    globalMessageService: GlobalMessageService\n  );\n  constructor(\n    private userConsentService: UserConsentService,\n    private globalMessageService: GlobalMessageService,\n    private anonymousConsentsConfig?: AnonymousConsentsConfig,\n    private anonymousConsentsService?: AnonymousConsentsService,\n    private authService?: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n      this.authService.isUserLoggedIn(),\n      this.allConsentsLoading,\n    ]).pipe(\n      map(\n        ([\n          consentLoading,\n          giveConsentLoading,\n          withdrawConsentLoading,\n          isUserLoggedIn,\n          allConsentsLoading,\n        ]) =>\n          consentLoading ||\n          giveConsentLoading ||\n          withdrawConsentLoading ||\n          !isUserLoggedIn ||\n          allConsentsLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      withLatestFrom(\n        this.anonymousConsentsService.getTemplates(),\n        this.authService.isUserLoggedIn()\n      ),\n      filter(\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\n      ),\n      tap(([templateList, _anonymousTemplates]) => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      }),\n      map(([templateList, anonymousTemplates]) => {\n        if (!this.isAnonymousConsentsEnabled) {\n          return templateList;\n        }\n\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n            )\n          ) {\n            this.requiredConsents = this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\n          }\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents\n                .consentManagementPage\n            )\n          ) {\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\n          }\n        }\n\n        return templateList;\n      })\n    );\n  }\n\n  private hideAnonymousConsents(\n    templateList: ConsentTemplate[],\n    anonymousTemplates: ConsentTemplate[] = []\n  ): ConsentTemplate[] {\n    let hideTemplateIds: string[] = [];\n\n    if (\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .showAnonymousConsents\n    ) {\n      hideTemplateIds = anonymousTemplates.map(template => template.id);\n      return this.userConsentService.filterConsentTemplates(\n        templateList,\n        hideTemplateIds\n      );\n    }\n\n    if (\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents.length > 0\n    ) {\n      hideTemplateIds = this.anonymousConsentsConfig.anonymousConsents\n        .consentManagementPage.hideConsents;\n    }\n\n    return this.userConsentService.filterConsentTemplates(\n      templateList,\n      hideTemplateIds\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe(success => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap(withdrawalSuccess => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe(withdrawalSuccess =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  rejectAll(templates: ConsentTemplate[] = []): void {\n    const consentsToWithdraw: ConsentTemplate[] = [];\n    templates.forEach(template => {\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n        consentsToWithdraw.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupWithdrawalStream(consentsToWithdraw)\n        .pipe(tap(_timesLoaded => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupWithdrawalStream(\n    consentsToWithdraw: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getWithdrawConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter(loading => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const withdraw$ = count$.pipe(\n      tap(i => {\n        if (i < consentsToWithdraw.length) {\n          this.userConsentService.withdrawConsent(\n            consentsToWithdraw[i].currentConsent.code\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = withdraw$.pipe(\n      filter(timesLoaded => timesLoaded === consentsToWithdraw.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  allowAll(templates: ConsentTemplate[] = []): void {\n    const consentsToGive: ConsentTemplate[] = [];\n    templates.forEach(template => {\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n\n        consentsToGive.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupGiveStream(consentsToGive)\n        .pipe(tap(_timesLoaded => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupGiveStream(\n    consentsToGive: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getGiveConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter(loading => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const giveConsent$ = count$.pipe(\n      tap(i => {\n        if (i < consentsToGive.length) {\n          this.userConsentService.giveConsent(\n            consentsToGive[i].id,\n            consentsToGive[i].version\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = giveConsent$.pipe(\n      filter(timesLoaded => timesLoaded === consentsToGive.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    if (!this.isAnonymousConsentsEnabled) {\n      return false;\n    }\n\n    return (\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n        template.id\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.allConsentsLoading.unsubscribe();\n\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../misc/index';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    IconModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\n  entryComponents: [ConsentManagementComponent],\n})\nexport class ConsentManagementModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\nimport { SpinnerModule } from '../spinner/index';\nimport { AnonymousConsentDialogComponent } from './dialog/anonymous-consent-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConsentManagementModule,\n  ],\n  declarations: [AnonymousConsentDialogComponent],\n  entryComponents: [AnonymousConsentDialogComponent],\n  exports: [AnonymousConsentDialogComponent],\n})\nexport class AnonymousConsentsModule {}\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe(val => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: MouseEvent) {\n    if ((<HTMLElement>event.target).className.includes('is-expanded')) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FeaturesConfigModule } from '@spartacus/core';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletModule, OutletRefModule } from '../../cms-structure/index';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from '../../cms-structure/pwa/pwa.module';\nimport { SeoModule } from '../../cms-structure/seo/seo.module';\nimport { AnonymousConsentsModule } from '../../shared/components/anonymous-consents/anonymous-consents.module';\nimport { StorefrontComponent } from './storefront.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageSlotModule,\n    AnonymousConsentsModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class MainModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<\n    Observable<ContentSlotComponentData>[]\n  > = this.componentData$.pipe(\n    map(data => data.banners.trim().split(' ')),\n    map(codes => codes.map(code => this.cmsService.getComponentData(code)))\n  );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/index';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n    PageComponentModule,\n    CarouselModule,\n    MediaModule,\n  ],\n  declarations: [BannerCarouselComponent],\n  entryComponents: [BannerCarouselComponent],\n  exports: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsBannerComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  constructor(public component: CmsComponentData<CmsBannerComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GenericLinkModule,\n    MediaModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  entryComponents: [BannerComponent],\n  exports: [BannerComponent],\n})\nexport class BannerModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  constructor(public component: CmsComponentData<CmsLinkComponent>) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GenericLinkModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n  entryComponents: [LinkComponent],\n})\nexport class LinkModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  constructor(public component: CmsComponentData<CmsParagraphComponent>) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParagraphComponent } from './paragraph.component';\nimport { ConfigModule } from '@spartacus/core';\nimport { CmsConfig } from '@spartacus/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n  entryComponents: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  CmsService,\n  CMSTabParagraphContainer,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  distinctUntilKeyChanged,\n  map,\n  switchMap,\n} from 'rxjs/operators';\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  activeTabNum = 0;\n\n  @ViewChildren(ComponentWrapperDirective) children!: QueryList<\n    ComponentWrapperDirective\n  >;\n\n  tabTitleParams: Observable<any>[] = [];\n\n  subscription: Subscription;\n\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService,\n    // tslint:disable-next-line:unified-signatures\n    winRef: WindowRef\n  );\n  /**\n   * @deprecated since 1.4\n   *\n   * TODO(issue:#5813) Deprecated since 1.4\n   */\n  constructor(\n    componentData: CmsComponentData<CMSTabParagraphContainer>,\n    cmsService: CmsService\n  );\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    private cmsService: CmsService,\n    private winRef?: WindowRef\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    distinctUntilKeyChanged('components'),\n    switchMap(data =>\n      combineLatest(\n        data.components.split(' ').map(component =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map(tab => {\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n\n              return {\n                ...tab,\n                title: `${data.uid}.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number): void {\n    this.activeTabNum = tabNum;\n  }\n\n  ngOnInit(): void {\n    if (this.winRef && this.winRef.nativeWindow) {\n      const routeState =\n        this.winRef.nativeWindow.history &&\n        this.winRef.nativeWindow.history.state;\n\n      if (routeState && routeState['activeTab']) {\n        this.activeTabNum = routeState['activeTab'];\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\n    // In this case, the title parameters are directly pulled from them.\n    // If the sub cms components data does not exist, it should should be loaded first.\n    // In this case, listen to the changes to wait for them to be created.\n    if (this.children.length > 0) {\n      this.getTitleParams(this.children);\n    } else {\n      this.subscription = this.children.changes.subscribe(\n        (tabComps: QueryList<ComponentWrapperDirective>) =>\n          this.getTitleParams(tabComps)\n      );\n    }\n  }\n\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\n    children.forEach(comp => {\n      if (comp.cmpRef && comp.cmpRef.instance.tabTitleParam$) {\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\n      } else {\n        this.tabTitleParams.push(null);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n    PageComponentModule,\n    OutletModule,\n    I18nModule,\n  ],\n  declarations: [TabParagraphContainerComponent],\n  entryComponents: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  FeatureConfigService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressBookComponentService {\n  constructor(\n    userAddressService: UserAddressService,\n    checkoutDeliveryService: CheckoutDeliveryService,\n    featureConfigService: FeatureConfigService\n  );\n  /**\n   * @deprecated since version 1.2\n   *  Use constructor(userAddressService: UserAddressService,\n   *  checkoutDeliveryService: CheckoutDeliveryService\n   *  featureConfigService: FeatureConfigService) instead\n   *\n   *  TODO(issue:#4309) Deprecated since 1.2.0\n   */\n  constructor(userAddressService: UserAddressService);\n  constructor(\n    private userAddressService: UserAddressService,\n    protected checkoutDeliveryService?: CheckoutDeliveryService,\n    private featureConfigService?: FeatureConfigService\n  ) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n    /**\n     * TODO(issue:#4309) Deprecated since 1.2.0\n     */\n    if (\n      this.featureConfigService &&\n      this.featureConfigService.isLevel('1.2') &&\n      this.checkoutDeliveryService\n    ) {\n      this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n\n  constructor(public service: AddressBookComponentService) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  Address,\n  CheckoutDeliveryService,\n  FeatureConfigService,\n  UserAddressService,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-address-card',\n  templateUrl: './address-card.component.html',\n})\nexport class AddressCardComponent {\n  editMode: boolean;\n  isDefault: boolean;\n\n  @Input() address: Address;\n\n  @Output() editEvent = new EventEmitter<any>();\n\n  constructor(\n    userAddressService: UserAddressService,\n    checkoutDeliveryService: CheckoutDeliveryService,\n    featureConfigService: FeatureConfigService\n  );\n  /**\n   * @deprecated since version 1.2\n   *  Use constructor(userAddressService: UserAddressService,\n   *  checkoutDeliveryService: CheckoutDeliveryService\n   *  featureConfigService: FeatureConfigService) instead\n   *\n   *  TODO(issue:#4309) Deprecated since 1.2.0\n   */\n  constructor(userAddressService: UserAddressService);\n  constructor(\n    private userAddressService: UserAddressService,\n    protected checkoutDeliveryService?: CheckoutDeliveryService,\n    private featureConfigService?: FeatureConfigService\n  ) {}\n\n  openEditFormEvent(): void {\n    this.editEvent.emit();\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n  }\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n    /**\n     * TODO(issue:#4309) Deprecated since 1.2.0\n     */\n    if (\n      this.featureConfigService &&\n      this.featureConfigService.isLevel('1.2') &&\n      this.checkoutDeliveryService\n    ) {\n      this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n    }\n  }\n\n  deleteAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n    /**\n     * TODO(issue:#4309) Deprecated since 1.2.0\n     */\n    if (\n      this.featureConfigService &&\n      this.featureConfigService.isLevel('1.2') &&\n      this.checkoutDeliveryService\n    ) {\n      this.checkoutDeliveryService.clearCheckoutDeliveryDetails();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressFormModule } from '../../checkout/components/shipping-address/address-form/address-form.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressBookComponentService } from './address-book.component.service';\nimport { AddressCardComponent } from './address-card/address-card.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          providers: [\n            {\n              provide: AddressBookComponentService,\n              useClass: AddressBookComponentService,\n              deps: [UserAddressService],\n            },\n          ],\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent, AddressCardComponent],\n  exports: [AddressBookComponent, AddressCardComponent],\n  providers: [UserAddressService, AddressBookComponentService],\n  entryComponents: [AddressBookComponent],\n})\nexport class AddressBookModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserService,\n  UserToken,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account-modal',\n  templateUrl: './close-account-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountModalComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n\n  private subscription = new Subscription();\n  userToken$: Observable<UserToken>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    protected modalService: ModalService,\n    private userService: UserService,\n    private authService: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private routingService: RoutingService,\n    private translationService: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.userToken$ = this.authService.getUserToken();\n    this.userService.resetRemoveUserProcessState();\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n\n    this.subscription.add(\n      this.userService\n        .getRemoveUserResultError()\n        .subscribe(error => this.onError(error))\n    );\n    this.isLoading$ = this.userService.getRemoveUserResultLoading();\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedSuccessfully')\n        .pipe(first())\n        .subscribe(text => {\n          this.globalMessageService.add(\n            text,\n            GlobalMessageType.MSG_TYPE_CONFIRMATION\n          );\n        });\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onError(error: boolean): void {\n    if (error) {\n      this.dismissModal();\n      this.translationService\n        .translate('closeAccount.accountClosedFailure')\n        .pipe(first())\n        .subscribe(text => {\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_ERROR);\n        });\n    }\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n\n  closeAccount() {\n    this.userService.remove();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { CloseAccountModalComponent } from '../close-account-modal/close-account-modal.component';\nimport { ModalService } from '../../../../../shared/components/modal/index';\n\n@Component({\n  selector: 'cx-close-account',\n  templateUrl: './close-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseAccountComponent {\n  modal: any;\n  constructor(private modalService: ModalService) {}\n\n  openModal(): void {\n    this.modal = this.modalService.open(CloseAccountModalComponent, {\n      centered: true,\n    }).componentInstance;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { CloseAccountModalComponent } from './components/close-account-modal/close-account-modal.component';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { CloseAccountComponent } from './components/close-account/close-account.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CloseAccountComponent: {\n          component: CloseAccountComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CloseAccountComponent, CloseAccountModalComponent],\n  exports: [CloseAccountComponent, CloseAccountModalComponent],\n  entryComponents: [CloseAccountComponent, CloseAccountModalComponent],\n})\nexport class CloseAccountModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  form: FormGroup;\n  submited = false;\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      userEmail: [\n        '',\n        [Validators.required, CustomFormValidators.emailValidator],\n      ],\n    });\n  }\n\n  requestForgotPasswordEmail() {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n    this.userService.requestForgotPasswordEmail(this.form.value.userEmail);\n    this.routingService.go({ cxRoute: 'login' });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { ForgotPasswordComponent } from './forgot-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [ForgotPasswordComponent],\n  exports: [ForgotPasswordComponent],\n  entryComponents: [ForgotPasswordComponent],\n})\nexport class ForgotPasswordModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\n\n@Component({\n  selector: 'cx-amend-order-actions',\n  templateUrl: './amend-order-actions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmendOrderActionsComponent {\n  @Input() orderCode: string;\n  @Input() isValid: string;\n  @Input() backRoute: string;\n  @Input() forwardRoute: string;\n\n  @HostBinding('class') styles = 'row';\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","export enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Order, OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { AmendOrderType } from './amend-order.model';\n\nfunction ValidateQuantity(control: FormControl) {\n  let q = 0;\n  Object.keys(control.value).forEach(key => (q += control.value[key]));\n\n  return q > 0 ? null : { required: true };\n}\n\n@Injectable()\nexport abstract class OrderAmendService {\n  protected amendType: AmendOrderType;\n  protected form: FormGroup;\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  /**\n   * Returns entries for the given order.\n   */\n  abstract getEntries(): Observable<OrderEntry[]>;\n\n  /**\n   * Returns entries with an amended quantity.\n   */\n  getAmendedEntries(): Observable<OrderEntry[]> {\n    return this.getForm().pipe(\n      switchMap(form => {\n        return this.getEntries().pipe(\n          map(entries =>\n            entries.filter(entry => this.getFormControl(form, entry).value > 0)\n          )\n        );\n      })\n    );\n  }\n\n  /**\n   * Submits the amended order.\n   */\n  abstract save(): void;\n\n  getOrder(): Observable<Order> {\n    return this.orderDetailsService.getOrderDetails();\n  }\n\n  /**\n   * returns the form with form data at runtime\n   */\n  getForm(): Observable<FormGroup> {\n    return this.getOrder().pipe(\n      tap(order => {\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\n          this.buildForm(order);\n        }\n      }),\n      map(() => this.form)\n    );\n  }\n\n  private buildForm(order: Order): void {\n    this.form = new FormGroup({});\n    this.form.addControl('orderCode', new FormControl(order.code));\n\n    const entryGroup = new FormGroup({}, { validators: [ValidateQuantity] });\n    this.form.addControl('entries', entryGroup);\n\n    (order.entries || []).forEach(entry => {\n      const key = entry.entryNumber.toString();\n      entryGroup.addControl(\n        key,\n        new FormControl(0, {\n          validators: [\n            Validators.min(0),\n            Validators.max(this.getMaxAmendQuantity(entry)),\n          ],\n        })\n      );\n    });\n  }\n\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\n  }\n\n  /**\n   * As discussed, this calculation is moved to SPA side.\n   * The calculation and validation should be in backend facade layer.\n   */\n  getAmendedPrice(entry: OrderEntry): Price {\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\n    const amendedPrice = Object.assign({}, entry.basePrice);\n    amendedPrice.value =\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\n\n    amendedPrice.formattedValue = formatCurrency(\n      amendedPrice.value,\n      // TODO: user current language\n      'en',\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\n      amendedPrice.currencyIso\n    );\n\n    return amendedPrice;\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return (\n      (this.isCancellation()\n        ? entry.cancellableQuantity\n        : entry.returnableQuantity) || entry.quantity\n    );\n  }\n\n  isCancellation() {\n    return this.amendType === AmendOrderType.CANCEL;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Component({\n  selector: 'cx-amend-order-items',\n  templateUrl: './amend-order-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrReturnItemsComponent {\n  @Input() entries: OrderEntry[];\n  @Input() isConfirmation = false;\n\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\n  }\n\n  setAll(form: FormGroup): void {\n    this.entries.forEach(entry =>\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\n    );\n  }\n\n  getItemPrice(entry: OrderEntry): Price {\n    return this.orderAmendService.getAmendedPrice(entry);\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return this.orderAmendService.getMaxAmendQuantity(entry);\n  }\n\n  isCancellation() {\n    return this.orderAmendService.isCancellation();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule, FeaturesConfigModule } from '@spartacus/core';\nimport { ItemCounterModule, MediaModule } from '../../../../../shared/index';\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [CancelOrReturnItemsComponent],\n  exports: [CancelOrReturnItemsComponent],\n  entryComponents: [CancelOrReturnItemsComponent],\n})\nexport class AmendOrderItemsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order-confirmation',\n  templateUrl: './cancel-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  RoutingService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationService extends OrderAmendService {\n  amendType = AmendOrderType.CANCEL;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected userOrderService: UserOrderService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n  /**\n   * Return cancellable order entries.\n   */\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter(order => Boolean(order)),\n      map(order =>\n        order.entries.filter(\n          entry => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter(entryNumber => <number>entries[entryNumber] > 0)\n      .map(\n        entryNumber =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.userOrderService.cancelOrder(orderCode, {\n      cancellationRequestEntryInputs: inputs,\n    });\n\n    this.userOrderService\n      .getCancelOrderSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave(orderCode));\n  }\n\n  private afterSave(orderCode: string): void {\n    this.userOrderService.resetCancelOrderProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\n        params: { orderCode },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routing.go({\n      cxRoute: 'orders',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderCancellationService } from './order-cancellation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderCancellationService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map(form => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, ConfigModule } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancelConfirmation',\n        },\n      },\n    ]),\n    ReactiveFormsModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderConfirmationComponent: {\n          component: CancelOrderConfirmationComponent,\n          guards: [AuthGuard, OrderCancellationGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  declarations: [CancelOrderConfirmationComponent],\n  exports: [CancelOrderConfirmationComponent],\n  entryComponents: [CancelOrderConfirmationComponent],\n})\nexport class CancelOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-cancel-order',\n  templateUrl: './cancel-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, ConfigModule } from '@spartacus/core';\nimport {\n  CmsPageGuard,\n  PageLayoutComponent,\n} from '../../../../../../cms-structure/index';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderComponent } from './cancel-order.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancel',\n        },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderComponent: {\n          component: CancelOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  declarations: [CancelOrderComponent],\n  exports: [CancelOrderComponent],\n  entryComponents: [CancelOrderComponent],\n})\nexport class CancelOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  OrderReturnRequestService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnService extends OrderAmendService {\n  amendType = AmendOrderType.RETURN;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter(order => !!order.entries),\n      map(order =>\n        order.entries.filter(\n          entry => entry.entryNumber !== -1 && entry.returnableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter(entryNumber => <number>entries[entryNumber] > 0)\n      .map(\n        entryNumber =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.returnRequestService.createOrderReturnRequest({\n      orderCode,\n      returnRequestEntryInputs: inputs,\n    });\n\n    this.returnRequestService\n      .getReturnRequestSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave());\n  }\n\n  private afterSave(): void {\n    this.returnRequestService\n      .getOrderReturnRequest()\n      .pipe(first(r => !!r))\n      .subscribe(returnRequest => {\n        const rma = returnRequest.rma;\n        this.globalMessageService.add(\n          {\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\n            params: { rma },\n          },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n        this.routing.go({\n          cxRoute: 'returnRequestDetails',\n          params: { rma },\n        });\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderReturnService } from './order-return.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnGuard implements CanActivate {\n  constructor(\n    protected routing: RoutingService,\n    protected orderAmendService: OrderReturnService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map(form => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          this.routing.go({ cxRoute: 'orders' });\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order-confirmation',\n  templateUrl: './return-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<\n    OrderEntry[]\n  > = this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnGuard } from '../order-return.guard';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturnConfirmation',\n        },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderConfirmationComponent: {\n          component: ReturnOrderConfirmationComponent,\n          guards: [AuthGuard, OrderReturnGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n    AmendOrderItemsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    AmendOrderActionsModule,\n  ],\n  declarations: [ReturnOrderConfirmationComponent],\n  exports: [ReturnOrderConfirmationComponent],\n  entryComponents: [ReturnOrderConfirmationComponent],\n})\nexport class ReturnOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n@Component({\n  selector: 'cx-return-order',\n  templateUrl: './return-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap(form => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, ConfigModule } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderComponent } from './return-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturn',\n        },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderComponent: {\n          component: ReturnOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  declarations: [ReturnOrderComponent],\n  exports: [ReturnOrderComponent],\n  entryComponents: [ReturnOrderComponent],\n})\nexport class ReturnOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-headline',\n  templateUrl: './order-detail-headline.component.html',\n})\nexport class OrderDetailHeadlineComponent implements OnInit {\n  constructor(private orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n  PromotionResult,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PromotionService } from '../../../../../shared/services/promotion/promotion.service';\nimport { OrderDetailsService } from '../order-details.service';\nimport {\n  cancelledValues,\n  completedValues,\n} from './order-consigned-entries/order-consigned-entries.model';\n\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(\n    orderDetailsService: OrderDetailsService,\n    // tslint:disable-next-line:unified-signatures\n    promotionService: PromotionService\n  );\n\n  /**\n   * @deprecated Since 1.5\n   * Use promotionService instead of the promotion inputs.\n   * Remove issue: #5670\n   */\n  constructor(orderDetailsService: OrderDetailsService);\n\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    protected promotionService?: PromotionService\n  ) {}\n\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n  orderPromotions$: Observable<PromotionResult[]>;\n  others$: Observable<Consignment[]>;\n  completed$: Observable<Consignment[]>;\n  cancel$: Observable<Consignment[]>;\n\n  ngOnInit() {\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\n    this.completed$ = this.getExactStatus(completedValues);\n    this.cancel$ = this.getExactStatus(cancelledValues);\n  }\n\n  private getExactStatus(\n    consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map(order => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(consignment =>\n            consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n\n  private getOtherStatus(\n    ...consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map(order => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(\n            consignment => !consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n\n  /**\n   * @deprecated\n   * NOTE: This function will be removed in version 2.0\n   */\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach(element => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Address,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { Card } from '../../../../../shared/components/card/card.component';\nimport { OrderDetailsService } from '../order-details.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(\n    private orderDetailsService: OrderDetailsService,\n    private translation: TranslationService\n  ) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n\n  getAddressCardContent(address: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${address.firstName} ${address.lastName}`,\n          text: [\n            address.line1,\n            address.line2,\n            `${address.town}, ${address.country.isocode}, ${address.postalCode}`,\n            address.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.billTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n          text: [\n            billingAddress.line1,\n            billingAddress.line2,\n            `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n            billingAddress.phone,\n          ],\n        };\n      })\n    );\n  }\n\n  getPaymentCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: payment.expiryMonth,\n        year: payment.expiryYear,\n      }),\n    ]).pipe(\n      map(([textTitle, textExpires]) => {\n        return {\n          title: textTitle,\n          textBold: payment.accountHolderName,\n          text: [payment.cardType.name, payment.cardNumber, textExpires],\n        };\n      })\n    );\n  }\n\n  getShippingMethodCardContent(shipping: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: shipping.name,\n          text: [shipping.description],\n        };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '@spartacus/core';\n\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Order } from '@spartacus/core';\n\nimport { OrderDetailsService } from '../order-details.service';\n\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-consigned-entries',\n  templateUrl: './order-consigned-entries.component.html',\n})\nexport class OrderConsignedEntriesComponent {\n  @Input() consignments: Consignment[];\n  @Input() order: Order;\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach(element => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  FeaturesConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { CardModule } from '../../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../../shared/components/index';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\nimport { OrderDetailHeadlineComponent } from './order-detail-headline/order-detail-headline.component';\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\nimport { PromotionsModule } from '../../../checkout/components/promotions/promotions.module';\n\nconst moduleComponents = [\n  OrderDetailActionsComponent,\n  OrderDetailHeadlineComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n  TrackingEventsComponent,\n  ConsignmentTrackingComponent,\n  OrderConsignedEntriesComponent,\n];\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    PromotionsModule,\n    UrlModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\n      },\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        AccountOrderDetailsActionsComponent: {\n          component: OrderDetailActionsComponent,\n        },\n        AccountOrderDetailsHeadlineComponent: {\n          component: OrderDetailHeadlineComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n      features: {\n        consignmentTracking: '1.2',\n      },\n    }),\n    SpinnerModule,\n  ],\n  providers: [OrderDetailsService],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n  entryComponents: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderHistoryComponent implements OnDestroy {\n  constructor(\n    private routing: RoutingService,\n    private userOrderService: UserOrderService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  orders$: Observable<\n    OrderHistoryList\n  > = this.userOrderService.getOrderHistoryList(this.PAGE_SIZE).pipe(\n    tap((orders: OrderHistoryList) => {\n      if (orders.pagination) {\n        this.sortType = orders.pagination.sort;\n      }\n    })\n  );\n\n  isLoaded$: Observable<\n    boolean\n  > = this.userOrderService.getOrderHistoryListLoaded();\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\n    map(order => order.pagination.totalResults),\n    filter(totalResults => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  UserService,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { OrderHistoryComponent } from './order-history.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orders' },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [UserService],\n  entryComponents: [OrderHistoryComponent],\n})\nexport class OrderHistoryModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go({ cxRoute: 'orders' }, null, {\n      state: {\n        activeTab: 1,\n      },\n    });\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-overview',\n  templateUrl: './return-request-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  rma: string;\n  subscription: Subscription;\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService\n    .getReturnRequest()\n    .pipe(tap(returnRequest => (this.rma = returnRequest.rma)));\n\n  isCancelling$ = this.returnRequestService.isCancelling$;\n\n  ngOnInit(): void {\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\n      success => {\n        if (success) {\n          this.returnRequestService.cancelSuccess(this.rma);\n        }\n      }\n    );\n  }\n\n  cancelReturn(returnRequestCode: string): void {\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\n  }\n\n  back(): void {\n    this.returnRequestService.backToList();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequest } from '@spartacus/core';\nimport { ReturnRequestService } from '../return-request.service';\n\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<\n    ReturnRequest\n  > = this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  FeaturesConfigModule,\n} from '@spartacus/core';\nimport { MediaModule } from '../../../../shared/index';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\n\nconst components = [\n  ReturnRequestOverviewComponent,\n  ReturnRequestItemsComponent,\n  ReturnRequestTotalsComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'returnRequestDetails' },\n      },\n    ]),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnRequestOverviewComponent: {\n          component: ReturnRequestOverviewComponent,\n        },\n        ReturnRequestItemsComponent: {\n          component: ReturnRequestItemsComponent,\n        },\n        ReturnRequestTotalsComponent: {\n          component: ReturnRequestTotalsComponent,\n        },\n      },\n    }),\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    MediaModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [...components],\n  exports: [...components],\n  entryComponents: [...components],\n})\nexport class ReturnRequestDetailModule {}\n","import { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  ReturnRequestList,\n  OrderReturnRequestService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { tap, map, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-return-request-list',\n  templateUrl: './order-return-request-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderReturnRequestListComponent implements OnDestroy {\n  constructor(\n    private returnRequestService: OrderReturnRequestService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  returnRequests$: Observable<\n    ReturnRequestList\n  > = this.returnRequestService.getOrderReturnRequestList(this.PAGE_SIZE).pipe(\n    tap((requestList: ReturnRequestList) => {\n      if (requestList.pagination) {\n        this.sortType = requestList.pagination.sort;\n      }\n    })\n  );\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\n    map(returnRequests => returnRequests.pagination.totalResults),\n    filter(totalResults => totalResults !== undefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.returnRequestService.clearOrderReturnRequestList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReturnRequests(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReturnRequests(event);\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.rma'),\n    ]).pipe(\n      map(([textByDate, textByRma]) => {\n        return {\n          byDate: textByDate,\n          byRMA: textByRma,\n        };\n      })\n    );\n  }\n\n  private fetchReturnRequests(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.returnRequestService.loadOrderReturnRequestList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderReturnRequestListComponent: {\n          component: OrderReturnRequestListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderReturnRequestListComponent],\n  exports: [OrderReturnRequestListComponent],\n  entryComponents: [OrderReturnRequestListComponent],\n})\nexport class ReturnRequestListModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  iconTypes = ICON_TYPE;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap(paymentDetails => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find(paymentDetail => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n    cardType,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n            img: this.getCardIcon(cardType.code),\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n\n  getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UserService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  providers: [UserService],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n  entryComponents: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n})\nexport class ResetPasswordFormComponent implements OnInit, OnDestroy {\n  token: string;\n  subscription = new Subscription();\n  submited = false;\n\n  form: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      repassword: ['', [Validators.required]],\n    },\n    { validator: this.matchPassword }\n  );\n\n  constructor(\n    private fb: FormBuilder,\n    private routingService: RoutingService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.routingService\n        .getRouterState()\n        .subscribe(state => (this.token = state.state.queryParams['token']))\n    );\n\n    this.subscription.add(\n      this.userService.isPasswordReset().subscribe(reset => {\n        if (reset) {\n          this.routingService.go({ cxRoute: 'login' });\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  resetPassword() {\n    this.submited = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    const password = this.form.value['password'];\n    this.userService.resetPassword(this.token, password);\n  }\n\n  private matchPassword(ac: AbstractControl) {\n    if (ac.get('password').value !== ac.get('repassword').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n} from '@spartacus/core';\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ResetPasswordComponent: {\n          component: ResetPasswordFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    I18nModule,\n  ],\n  declarations: [ResetPasswordFormComponent],\n  exports: [ResetPasswordFormComponent],\n  entryComponents: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-update-email-form',\n  templateUrl: './update-email-form.component.html',\n})\nexport class UpdateEmailFormComponent {\n  submited = false;\n\n  @Output()\n  saveEmail = new EventEmitter<{\n    newUid: string;\n    password: string;\n  }>();\n\n  @Output()\n  cancelEmail = new EventEmitter<void>();\n\n  form: FormGroup = this.fb.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      confirmEmail: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    },\n    { validator: this.matchEmail }\n  );\n\n  constructor(private fb: FormBuilder) {}\n\n  isEmailConfirmNotValid(formControlName: string): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submited ||\n        (this.form.get(formControlName).touched &&\n          this.form.get(formControlName).dirty))\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(this.form, formControlName, this.submited);\n  }\n\n  onSubmit(): void {\n    this.submited = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const newUid = this.form.value.confirmEmail;\n    const password = this.form.value.password;\n\n    this.saveEmail.emit({ newUid, password });\n  }\n\n  onCancel(): void {\n    this.cancelEmail.emit();\n  }\n\n  private matchEmail(ac: AbstractControl): ValidationErrors {\n    if (ac.get('email').value !== ac.get('confirmEmail').value) {\n      return { NotEqual: true };\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-email',\n  templateUrl: './update-email.component.html',\n})\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\n  constructor(\n    private routingService: RoutingService,\n    private globalMessageService: GlobalMessageService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  private subscription = new Subscription();\n  private newUid: string;\n  isLoading$: Observable<boolean>;\n\n  ngOnInit() {\n    this.userService.resetUpdateEmailResultState();\n    this.subscription.add(\n      this.userService\n        .getUpdateEmailResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n    this.isLoading$ = this.userService.getUpdateEmailResultLoading();\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ newUid, password }: { newUid: string; password: string }): void {\n    this.newUid = newUid;\n    this.userService.updateEmail(password, newUid);\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        {\n          key: 'updateEmailForm.emailUpdateSuccess',\n          params: { newUid: this.newUid },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.authService.logout();\n      this.routingService.go({ cxRoute: 'login' }, null, {\n        state: {\n          newUid: this.newUid,\n        },\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetUpdateEmailResultState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateEmailFormComponent } from './update-email-form/update-email-form.component';\nimport { UpdateEmailComponent } from './update-email.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          component: UpdateEmailComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdateEmailFormComponent, UpdateEmailComponent],\n  exports: [UpdateEmailComponent, UpdateEmailFormComponent],\n  entryComponents: [UpdateEmailComponent],\n})\nexport class UpdateEmailModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators,\n} from '@angular/forms';\nimport { FormUtils } from '../../../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../../../shared/utils/validators/custom-form-validators';\n@Component({\n  selector: 'cx-update-password-form',\n  templateUrl: './update-password-form.component.html',\n})\nexport class UpdatePasswordFormComponent implements OnInit {\n  private submitClicked = false;\n  form: FormGroup;\n\n  @Output()\n  submited = new EventEmitter<{ oldPassword: string; newPassword: string }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, CustomFormValidators.passwordValidator],\n        ],\n        newPasswordConfirm: ['', [Validators.required]],\n      },\n      { validator: this.matchPassword }\n    );\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  isPasswordConfirmNotValid(): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submitClicked ||\n        (this.form.get('newPasswordConfirm').touched &&\n          this.form.get('newPasswordConfirm').dirty))\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      oldPassword: this.form.value.oldPassword,\n      newPassword: this.form.value.newPassword,\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  private matchPassword(abstractControl: AbstractControl): ValidationErrors {\n    if (\n      abstractControl.get('newPassword').value !==\n      abstractControl.get('newPasswordConfirm').value\n    ) {\n      return { NotEqual: true };\n    }\n    return null;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-update-password',\n  templateUrl: './update-password.component.html',\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.resetUpdatePasswordProcessState();\n    this.loading$ = this.userService.getUpdatePasswordResultLoading();\n    this.subscription.add(\n      this.userService\n        .getUpdatePasswordResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updatePasswordForm.passwordUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({\n    oldPassword,\n    newPassword,\n  }: {\n    oldPassword: string;\n    newPassword: string;\n  }): void {\n    this.userService.updatePassword(oldPassword, newPassword);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    this.userService.resetUpdatePasswordProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdatePasswordFormComponent } from './components/update-password-form/update-password-form.component';\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          component: UpdatePasswordComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  exports: [UpdatePasswordComponent, UpdatePasswordFormComponent],\n  entryComponents: [UpdatePasswordComponent],\n})\nexport class UpdatePasswordModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Title, User } from '@spartacus/core';\nimport { FormUtils } from '../../../../shared/utils/forms/form-utils';\n\n@Component({\n  selector: 'cx-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n})\nexport class UpdateProfileFormComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Input()\n  titles: Title[];\n\n  @Output()\n  submited = new EventEmitter<{ userUpdates: User }>();\n\n  @Output()\n  cancelled = new EventEmitter<void>();\n\n  form = this.fb.group({\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  private submitClicked = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    if (this.user) {\n      this.form.patchValue(this.user);\n    }\n  }\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  onSubmit(): void {\n    this.submitClicked = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.submited.emit({\n      userUpdates: { ...this.form.value },\n    });\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-update-profile',\n  templateUrl: './update-profile.component.html',\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  titles$: Observable<Title[]>;\n  user$: Observable<User>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private routingService: RoutingService,\n    private userService: UserService,\n    private globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    // reset the previous form processing state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n\n    this.user$ = this.userService.get();\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      })\n    );\n    this.loading$ = this.userService.getUpdatePersonalDetailsResultLoading();\n\n    this.subscription.add(\n      this.userService\n        .getUpdatePersonalDetailsResultSuccess()\n        .subscribe(success => this.onSuccess(success))\n    );\n  }\n\n  onSuccess(success: boolean): void {\n    if (success) {\n      this.globalMessageService.add(\n        { key: 'updateProfileForm.profileUpdateSuccess' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n      this.routingService.go({ cxRoute: 'home' });\n    }\n  }\n\n  onCancel(): void {\n    this.routingService.go({ cxRoute: 'home' });\n  }\n\n  onSubmit({ userUpdates }: { userUpdates: User }): void {\n    this.userService.updatePersonalDetails(userUpdates);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n\n    // clean up the state\n    this.userService.resetUpdatePersonalDetailsProcessingState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { UpdateProfileFormComponent } from './components/update-profile-form.component';\nimport { UpdateProfileComponent } from './update-profile.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          component: UpdateProfileComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [UpdateProfileComponent, UpdateProfileFormComponent],\n  exports: [UpdateProfileComponent, UpdateProfileFormComponent],\n  entryComponents: [UpdateProfileComponent],\n})\nexport class UpdateProfileModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CustomerCoupon,\n  RoutingService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyCouponsComponentService {\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  protected readonly RELEVANCE = ':relevance';\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected translation: TranslationService\n  ) {}\n\n  launchSearchPage(coupon: CustomerCoupon): void {\n    this.routingService.go(\n      {\n        cxRoute: 'search',\n        params: { query: this.buildSearchParam(coupon) },\n      },\n      { couponcode: coupon.couponId }\n    );\n  }\n\n  private buildSearchParam(coupon: CustomerCoupon): string {\n    return coupon.allProductsApplicable\n      ? this.RELEVANCE\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\n  }\n\n  getSortLabels(): Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('myCoupons.startDateAsc'),\n      this.translation.translate('myCoupons.startDateDesc'),\n      this.translation.translate('myCoupons.endDateAsc'),\n      this.translation.translate('myCoupons.endDateDesc'),\n    ]).pipe(\n      map(\n        ([\n          textByStartDateAsc,\n          textByStartDateDesc,\n          textByEndDateAsc,\n          textByEndDateDesc,\n        ]) => {\n          return {\n            byStartDateAsc: textByStartDateAsc,\n            byStartDateDesc: textByStartDateDesc,\n            byEndDateAsc: textByEndDateAsc,\n            byEndDateDesc: textByEndDateDesc,\n          };\n        }\n      )\n    );\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, combineLatest, Subscription } from 'rxjs';\nimport {\n  CustomerCouponService,\n  CustomerCouponSearchResult,\n  PaginationModel,\n} from '@spartacus/core';\nimport { tap, map } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { MyCouponsComponentService } from './my-coupons.component.service';\n\n@Component({\n  selector: 'cx-my-coupons',\n  templateUrl: './my-coupons.component.html',\n})\nexport class MyCouponsComponent implements OnInit, OnDestroy {\n  couponResult$: Observable<CustomerCouponSearchResult>;\n  couponsLoading$: Observable<boolean>;\n  couponSubscriptionLoading$: Observable<boolean>;\n\n  iconTypes = ICON_TYPE;\n\n  private subscriptions = new Subscription();\n\n  private PAGE_SIZE = 10;\n  private sortMapping = {\n    byStartDateAsc: 'startDate:asc',\n    byStartDateDesc: 'startDate:desc',\n    byEndDateAsc: 'endDate:asc',\n    byEndDateDesc: 'endDate:desc',\n  };\n  sort = 'byStartDateAsc';\n\n  sortOptions = [\n    {\n      code: 'byStartDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byStartDateDesc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateDesc',\n      selected: false,\n    },\n  ];\n\n  pagination: PaginationModel;\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    this.couponResult$ = this.couponService\n      .getCustomerCoupons(this.PAGE_SIZE)\n      .pipe(\n        tap(\n          coupons =>\n            (this.pagination = {\n              currentPage: coupons.pagination.page,\n              pageSize: coupons.pagination.count,\n              totalPages: coupons.pagination.totalPages,\n              totalResults: coupons.pagination.totalCount,\n              sort: this.sort,\n            })\n        )\n      );\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\n    this.couponSubscriptionLoading$ = combineLatest([\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\n    ]).pipe(\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\n    );\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\n\n    this.subscriptions\n      .add(\n        this.couponService\n          .getSubscribeCustomerCouponResultError()\n          .subscribe(error => {\n            this.subscriptionFail(error);\n          })\n      )\n      .add(\n        this.couponService\n          .getUnsubscribeCustomerCouponResultError()\n          .subscribe(error => {\n            this.subscriptionFail(error);\n          })\n      );\n  }\n\n  private subscriptionFail(error: boolean) {\n    if (error) {\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    }\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      this.pagination.currentPage,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  notificationChange({\n    couponId,\n    notification,\n  }: {\n    couponId: string;\n    notification: boolean;\n  }): void {\n    if (notification) {\n      this.couponService.subscribeCustomerCoupon(couponId);\n    } else {\n      this.couponService.unsubscribeCustomerCoupon(couponId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { CustomerCoupon } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-coupon-dialog',\n  templateUrl: './coupon-dialog.component.html',\n})\nexport class CouponDialogComponent {\n  iconTypes = ICON_TYPE;\n  coupon: CustomerCoupon;\n\n  @ViewChild('dialog', { static: false, read: ElementRef })\n  dialog: ElementRef;\n\n  constructor(protected modalService: ModalService) {}\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  RoutingService,\n  CustomerCouponService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './coupon-claim.component.html',\n  selector: 'cx-coupon-claim',\n})\nexport class CouponClaimComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected routingService: RoutingService,\n    protected messageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService\n      .getRouterState()\n      .subscribe(k => {\n        const couponCode = k.state.params.couponCode;\n        if (couponCode) {\n          this.couponService.claimCustomerCoupon(couponCode);\n          this.subscription = this.couponService\n            .getClaimCustomerCouponResultSuccess()\n            .subscribe(success => {\n              if (success) {\n                this.messageService.add(\n                  { key: 'myCoupons.claimCustomerCoupon' },\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\n                );\n              }\n              this.routingService.go({ cxRoute: 'coupons' });\n            });\n        } else {\n          this.routingService.go({ cxRoute: 'notFound' });\n        }\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  I18nModule,\n  ConfigModule,\n  CmsConfig,\n  AuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyCouponsComponent } from './my-coupons.component';\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\n\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { IconModule } from '../../misc/icon/icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    IconModule,\n    ListNavigationModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        MyCouponsComponent: {\n          component: MyCouponsComponent,\n          guards: [AuthGuard],\n        },\n        CouponClaimComponent: {\n          component: CouponClaimComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'couponClaim' },\n      },\n    ]),\n  ],\n  declarations: [\n    MyCouponsComponent,\n    CouponCardComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n  exports: [MyCouponsComponent, CouponClaimComponent],\n  entryComponents: [\n    MyCouponsComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n})\nexport class MyCouponsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  NotificationPreference,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-notification-preference',\n  templateUrl: './notification-preference.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPreferenceComponent implements OnInit {\n  preferences$: Observable<NotificationPreference[]>;\n  isLoading$: Observable<boolean>;\n\n  protected preferences: NotificationPreference[] = [];\n\n  constructor(\n    private notificationPreferenceService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.notificationPreferenceService.resetNotificationPreferences();\n    this.preferences$ = this.notificationPreferenceService\n      .getPreferences()\n      .pipe(tap(preferences => (this.preferences = preferences)));\n    this.notificationPreferenceService.loadPreferences();\n\n    this.isLoading$ = combineLatest([\n      this.notificationPreferenceService.getPreferencesLoading(),\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\n    ]).pipe(\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\n    );\n  }\n\n  updatePreference(preference: NotificationPreference) {\n    const updatedPreferences = [];\n    this.preferences.forEach(p => {\n      if (p.channel === preference.channel) {\n        updatedPreferences.push({\n          ...p,\n          enabled: !p.enabled,\n        });\n      } else {\n        updatedPreferences.push(p);\n      }\n    });\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { NotificationPreferenceComponent } from './notification-preference.component';\n\n@NgModule({\n  declarations: [NotificationPreferenceComponent],\n  imports: [\n    CommonModule,\n    SpinnerModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        NotificationPreferenceComponent: {\n          component: NotificationPreferenceComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [NotificationPreferenceComponent],\n  entryComponents: [NotificationPreferenceComponent],\n})\nexport class NotificationPreferenceModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  PaginationModel,\n  Product,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n  ProductScope,\n  ProductService,\n  TranslationService,\n  UserInterestsService,\n} from '@spartacus/core';\nimport { map, tap } from 'rxjs/operators';\n\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\n  results?: (ProductInterestEntryRelation & {\n    product$?: Observable<Product>;\n  })[];\n}\n\n@Component({\n  selector: 'cx-my-interests',\n  templateUrl: './my-interests.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyInterestsComponent implements OnInit, OnDestroy {\n  private DEFAULT_PAGE_SIZE = 10;\n  private sortMapping = {\n    byNameAsc: 'name:asc',\n    byNameDesc: 'name:desc',\n  };\n\n  sort = 'byNameAsc';\n  sortOptions = [\n    {\n      code: 'byNameAsc',\n      selected: false,\n    },\n    {\n      code: 'byNameDesc',\n      selected: false,\n    },\n  ];\n  pagination: PaginationModel;\n\n  interests$: Observable<ProductInterestSearchResultUI>;\n  isRemoveDisabled$: Observable<boolean>;\n  getInterestsloading$: Observable<boolean>;\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\n\n  constructor(\n    private productInterestService: UserInterestsService,\n    private translationService: TranslationService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.interests$ = this.productInterestService\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\n      .pipe(\n        tap(\n          interests =>\n            (this.pagination = {\n              currentPage: interests.pagination.page,\n              pageSize: interests.pagination.count,\n              totalPages: interests.pagination.totalPages,\n              totalResults: interests.pagination.totalCount,\n              sort: 'byNameAsc',\n            })\n        ),\n        map(interest => ({\n          ...interest,\n          results: interest.results\n            ? interest.results.map(result => ({\n                ...result,\n                product$: this.getProduct(result),\n              }))\n            : interest.results,\n        }))\n      );\n\n    this.getInterestsloading$ = this.productInterestService.getProdutInterestsLoading();\n    this.isRemoveDisabled$ = combineLatest([\n      this.getInterestsloading$,\n      this.productInterestService.getRemoveProdutInterestLoading(),\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\n\n    this.sortLabels = this.getSortLabels();\n  }\n\n  private getSortLabels(): Observable<{\n    byNameAsc: string;\n    byNameDesc: string;\n  }> {\n    return combineLatest([\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\n    ]).pipe(\n      map(([asc, desc]) => {\n        return {\n          byNameAsc: asc,\n          byNameDesc: desc,\n        };\n      })\n    );\n  }\n\n  private getProduct(\n    interest: ProductInterestEntryRelation\n  ): Observable<Product> {\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\n  }\n\n  removeInterest(\n    relation: ProductInterestEntryRelation & {\n      product$?: Observable<Product>;\n    }\n  ): void {\n    this.productInterestService.removeProdutInterest({\n      product: relation.product,\n      productInterestEntry: relation.productInterestEntry,\n    });\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      0,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.productInterestService.clearProductInterests();\n    this.productInterestService.resetRemoveInterestState();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { MyInterestsComponent } from './my-interests.component';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport {\n  ConfigModule,\n  CmsConfig,\n  I18nModule,\n  UrlModule,\n  AuthGuard,\n} from '@spartacus/core';\n\n@NgModule({\n  declarations: [MyInterestsComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        MyInterestsComponent: {\n          component: MyInterestsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    RouterModule,\n    ListNavigationModule,\n    I18nModule,\n    UrlModule,\n    MediaModule,\n    SpinnerModule,\n  ],\n  exports: [MyInterestsComponent],\n  entryComponents: [MyInterestsComponent],\n})\nexport class MyInterestsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMeta,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent implements OnInit {\n  title$: Observable<string>;\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n    this.setCrumbs();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(Boolean),\n      map((meta: PageMeta) => meta.heading || meta.title)\n    );\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta && meta.breadcrumbs\n          ? meta.breadcrumbs\n          : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ConfigModule, CmsConfig, CmsPageTitleModule } from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n    CmsPageTitleModule,\n  ],\n  declarations: [BreadcrumbComponent],\n  exports: [BreadcrumbComponent],\n  entryComponents: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return {\n          title: data.name,\n          children: [nav],\n        };\n      })\n    );\n  }\n\n  /**\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n   * This function will load the navigation underlying entries and childs if they haven't been\n   * loaded so far.\n   */\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter(data => !!data),\n      switchMap(data => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap(items => {\n            if (items === undefined) {\n              this.loadNavigationEntryItems(navigation, true);\n            } else {\n              // we should check whether the existing node items are what expected\n              const expectedItems = [];\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\n              const existingItems = Object.keys(items).map(\n                key => items[key].uid\n              );\n              const missingItems = expectedItems.filter(\n                it => !existingItems.includes(it.id)\n              );\n              if (missingItems.length > 0) {\n                this.cmsService.loadNavigationItems(\n                  navigation.uid,\n                  missingItems\n                );\n              }\n            }\n          }),\n          filter(Boolean),\n          map(items => this.populateNavigationNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private loadNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ): void {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach(entry => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      nodeData.children.forEach(child =>\n        this.loadNavigationEntryItems(child, false, itemsList)\n      );\n    }\n\n    if (root) {\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for the view\n   * @param nodeData\n   * @param items\n   */\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    if (nodeData.title) {\n      // the node title will be populated by the first entry (if any)\n      // if there's no nodeData.title available\n      node.title = nodeData.title;\n    }\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.populateLink(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      const children = nodeData.children\n        .map(child => this.populateNavigationNode(child, items))\n        .filter(Boolean);\n      if (children.length > 0) {\n        node.children = children;\n      }\n    }\n\n    // return null in case there are no children\n    return Object.keys(node).length === 0 ? null : node;\n  }\n\n  /**\n   * The node link is driven by the first entry.\n   */\n  private populateLink(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (item && entry.itemType === 'CMSLinkComponent') {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n      const url = this.getLink(item);\n      // only populate the node link if we have a visible node\n      if (node.title && url) {\n        node.url = url;\n        // the backend provide boolean value for the target\n        // in case the link should be opened in a new window\n        node.target = !!item.target ? '_blank' : '';\n      }\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category)\n   */\n  private getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n  @Input() allowAlignToRight = false;\n\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navitation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter(event => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  toggleOpen(event: UIEvent): void {\n    const node = <HTMLElement>event.currentTarget;\n    if (this.openNodes.includes(node)) {\n      this.openNodes = this.openNodes.filter(n => n !== node);\n      this.renderer.removeClass(node, 'is-open');\n    } else {\n      this.openNodes.push(node);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    this.renderer.removeClass(\n      this.openNodes[this.openNodes.length - 1],\n      'is-open'\n    );\n    this.openNodes.pop();\n    this.updateClasses();\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(...node.children.map(n => this.getDepth(n, depth + 1)));\n    } else {\n      return depth;\n    }\n  }\n\n  getColumnCount(length: number): number {\n    return Math.round(length / (this.wrapAfter || length));\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\n      target.parentElement.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    if (this.allowAlignToRight) {\n      const wrapper = <HTMLElement>node.querySelector('.wrapper');\n      const navBar = <HTMLElement>this.elemRef.nativeElement;\n      if (wrapper) {\n        this.renderer.removeStyle(wrapper, 'margin-left');\n        if (\n          wrapper.offsetLeft + wrapper.offsetWidth >\n          navBar.offsetLeft + navBar.offsetWidth\n        ) {\n          this.renderer.setStyle(\n            wrapper,\n            'margin-left',\n            `${node.offsetWidth - wrapper.offsetWidth}px`\n          );\n        }\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter(node => node.tagName === 'NAV')\n      .forEach(nav => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  entryComponents: [NavigationComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NavigationModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  entryComponents: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  ANONYMOUS_CONSENTS_FEATURE,\n  CmsNavigationComponent,\n  isFeatureEnabled,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map(d => d.styleClass)\n  );\n\n  // in order to preserve the backwards compatibility, this should render only if anonymous consents feature is disabled\n  data$ = this.componentData.data$.pipe(\n    filter(\n      _ =>\n        !isFeatureEnabled(\n          this.anonymousConsentsConfig,\n          ANONYMOUS_CONSENTS_FEATURE\n        )\n    )\n  );\n\n  constructor(\n    componentData: CmsComponentData<CmsNavigationComponent>,\n    service: NavigationService,\n    // tslint:disable-next-line: unified-signatures\n    anonymousConsentsConfig: AnonymousConsentsConfig\n  );\n  /**\n   * @deprecated since version 1.3\n   * Instead, use:\n   * \n    ```ts\n      constructor(\n      componentData: CmsComponentData<CmsNavigationComponent>,\n      service: NavigationService,\n      anonymousConsentsConfig: AnonymousConsentsConfig\n    )\n    ```\n   */\n  constructor(\n    componentData: CmsComponentData<CmsNavigationComponent>,\n    service: NavigationService\n  );\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService,\n    protected anonymousConsentsConfig?: AnonymousConsentsConfig\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    GenericLinkModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [FooterNavigationComponent],\n  entryComponents: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","export interface NavigationNode {\n  title?: string;\n\n  /** The url or route (parts) */\n  url?: string | string[];\n\n  target?: string | boolean;\n\n  children?: Array<NavigationNode>;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap(results =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  private hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  private getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  private getProductSuggestions(config: SearchBoxConfig): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map(res => res.map(suggestion => suggestion.value)),\n        switchMap(suggestions => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map(match => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  private getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap(productResult => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  private getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          (suggestions && suggestions.length === 0)\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  public launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { CmsSearchBoxComponent } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCHBOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent {\n  config: SearchBoxConfig;\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n\n  /**\n   * The component data is optional, so that this component\n   * can be reused without CMS integration.\n   */\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>\n  ) {}\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    tap(c => (this.config = c)),\n    switchMap(config => this.searchBoxComponentService.getResults(config))\n  );\n\n  /**\n   * Returns the backend configuration or default configuration for the searchbox.\n   */\n  private get config$(): Observable<SearchBoxConfig> {\n    if (this.componentData) {\n      return <Observable<SearchBoxConfig>>this.componentData.data$.pipe(\n        // Since the backend returns string values (i.e. displayProducts: \"true\") for\n        // boolean values, we replace them with boolean values.\n        map(c => {\n          return {\n            ...c,\n            displayProducts:\n              <any>c.displayProducts === 'true' || c.displayProducts === true,\n            displayProductImages:\n              <any>c.displayProductImages === 'true' ||\n              c.displayProductImages === true,\n            displaySuggestions:\n              <any>c.displaySuggestions === 'true' ||\n              c.displaySuggestions === true,\n          };\n        })\n      );\n    } else {\n      return of(DEFAULT_SEARCHBOX_CONFIG);\n    }\n  }\n\n  /**\n   * Closes the searchbox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchbox to open\n    this.open();\n  }\n\n  /**\n   * Opens the typeahead searchbox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Closes the typehead searchbox.\n   */\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.searchBoxComponentService.toggleBodyClass(\n        'searchbox-is-active',\n        false\n      );\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a single product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    if (!query || query.trim().length === 0) {\n      return;\n    }\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  public clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n  }\n}\n","export interface SearchBoxConfig {\n  displaySuggestions: boolean;\n  displayProducts: boolean;\n  displayProductImages?: boolean;\n  maxProducts?: number;\n  maxSuggestions?: number;\n  minCharactersBeforeRequest?: number;\n}\n\nexport interface SearchResults {\n  message?: string;\n  products?: any[];\n  suggestions?: string[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  entryComponents: [SearchBoxComponent],\n  exports: [SearchBoxComponent],\n})\nexport class SearchBoxModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  CheckoutService,\n  Order,\n  PromotionResult,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PromotionService } from '../../../../shared/services/promotion/promotion.service';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\n  order$: Observable<Order>;\n  orderPromotions$: Observable<PromotionResult[]>;\n\n  constructor(\n    checkoutService: CheckoutService,\n    // tslint:disable-next-line:unified-signatures\n    promotionService: PromotionService\n  );\n\n  /**\n   * @deprecated Since 1.5\n   * Use promotionService instead of the promotion inputs.\n   * Remove issue: #5670\n   */\n  constructor(checkoutService: CheckoutService);\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    protected promotionService?: PromotionService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n    this.orderPromotions$ = this.promotionService.getOrderPromotions(\n      this.promotionLocation\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  Address,\n  CheckoutService,\n  DeliveryMode,\n  Order,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Card } from '../../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(\n    protected checkoutService: CheckoutService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      filter(_ => Boolean(deliveryAddress)),\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n        text: [\n          deliveryAddress.line1,\n          deliveryAddress.line2,\n          `${deliveryAddress.town}, ${deliveryAddress.country.isocode}, ${deliveryAddress.postalCode}`,\n          deliveryAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('checkoutShipping.shippingMethod').pipe(\n      filter(_ => Boolean(deliveryMode)),\n      map(textTitle => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [deliveryMode.description],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.billTo').pipe(\n      filter(_ => Boolean(billingAddress)),\n      map(textTitle => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [\n          billingAddress.line1,\n          billingAddress.line2,\n          `${billingAddress.town}, ${billingAddress.country.isocode}, ${billingAddress.postalCode}`,\n          billingAddress.phone,\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: Boolean(payment) ? payment.expiryMonth : '',\n        year: Boolean(payment) ? payment.expiryYear : '',\n      }),\n    ]).pipe(\n      filter(_ => Boolean(payment)),\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n  isGuestCustomer = false;\n  orderGuid: string;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\n      tap(order => {\n        this.isGuestCustomer = order.guestCustomer;\n        this.orderGuid = order.guid;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutService, Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutService) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, RoutingService, UserService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-guest-register-form',\n  templateUrl: './guest-register-form.component.html',\n})\nexport class GuestRegisterFormComponent implements OnDestroy {\n  @Input() guid: string;\n  @Input() email: string;\n\n  subscription: Subscription;\n\n  guestRegisterForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n    },\n    { validator: CustomFormValidators.matchPassword }\n  );\n\n  constructor(\n    protected userService: UserService,\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected fb: FormBuilder\n  ) {}\n\n  submit() {\n    this.userService.registerGuest(\n      this.guid,\n      this.guestRegisterForm.value.password\n    );\n    if (!this.subscription) {\n      this.subscription = this.authService.getUserToken().subscribe(token => {\n        if (token.access_token) {\n          this.routingService.go({ cxRoute: 'home' });\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CheckoutService, SemanticPathService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutService,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map(orderDetails => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  FeaturesConfigModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../shared/components/card/card.module';\nimport { CartSharedModule } from '../cart/cart-shared/cart-shared.module';\nimport { PwaModule } from './../../cms-structure/pwa/pwa.module';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\n// tslint:disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\nimport { PromotionsModule } from '../checkout/components/promotions/promotions.module';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n  GuestRegisterFormComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n  entryComponents: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","export interface ProductCarouselItem {\n  title?: string;\n  media?: { container: any; format?: string };\n  price?: any;\n  route?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Product,\n  ProductReference,\n  ProductReferenceService,\n  ProductService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected referenceService: ProductReferenceService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map(product => this.convertProduct(product))\n    );\n  }\n\n  getProductReferences(\n    code: string,\n    referenceType: string,\n    displayTitle: boolean,\n    displayProductPrices: boolean\n  ): Observable<ProductCarouselItem[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) =>\n        refs.map(ref =>\n          this.convertProduct(ref.target, displayTitle, displayProductPrices)\n        )\n      )\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  FeatureConfigService,\n  Product,\n  ProductScope,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  protected readonly PRODUCT_SCOPE =\n    this.features && this.features.isLevel('1.4') ? ProductScope.LIST : '';\n\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean)\n  );\n\n  /**\n   * returns an Obervable string for the title.\n   */\n  title$: Observable<string> = this.componentData$.pipe(\n    map(data => data.title)\n  );\n\n  /**\n   * Obervable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\n    map(data => data.productCodes.trim().split(' ')),\n    map(codes =>\n      codes.map(code => this.productService.get(code, this.PRODUCT_SCOPE))\n    )\n  );\n\n  constructor(\n    componentData: CmsComponentData<model>,\n    productService: ProductService,\n    // tslint:disable-next-line: unified-signatures\n    features?: FeatureConfigService\n  );\n\n  /**\n   * @deprecated since 1.4\n   */\n  constructor(\n    componentData: CmsComponentData<model>,\n    productService: ProductService\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService,\n    protected features?: FeatureConfigService\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, UrlModule } from '@spartacus/core';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CarouselModule,\n    MediaModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  entryComponents: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  tap,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  /**\n   * returns an Obervable string for the title\n   */\n  title$ = this.component.data$.pipe(map(d => d.title));\n\n  private currentProductCode$: Observable<\n    string\n  > = this.current.getProduct().pipe(\n    filter(Boolean),\n    map((p: Product) => p.code),\n    distinctUntilChanged(),\n    tap(() => this.referenceService.cleanReferences())\n  );\n\n  /**\n   * Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = combineLatest([\n    this.currentProductCode$,\n    this.component.data$,\n  ]).pipe(\n    switchMap(([code, data]) =>\n      this.getProductReferences(code, data.productReferenceTypes)\n    )\n  );\n\n  constructor(\n    protected component: CmsComponentData<CmsProductReferencesComponent>,\n    protected current: CurrentProductService,\n    protected referenceService: ProductReferenceService\n  ) {}\n\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product>[]> {\n    return this.referenceService.get(code, referenceType).pipe(\n      filter(Boolean),\n      map((refs: ProductReference[]) => refs.map(ref => of(ref.target)))\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CarouselModule,\n    MediaModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  entryComponents: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultScrollConfig: ViewConfig = {\n  view: {\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  private mainMediaContainer = new BehaviorSubject(null);\n\n  private product$: Observable<\n    Product\n  > = this.currentProductService.getProduct().pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap((p: Product) =>\n      this.mainMediaContainer.next(p.images ? p.images.PRIMARY : {})\n    )\n  );\n\n  /**\n   * @deprecated since version 1.5\n   * This variable will no longer be in use. Use thumbs$ observable instead.\n   * TODO(issue:#6166).\n   */\n  isThumbsEmpty: boolean;\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map(product => this.createThumbs(product)),\n    // TODO: deprecated, remove the below tap (issue:#6166)\n    tap(thumbs => {\n      this.isThumbsEmpty = thumbs.length === 0;\n    })\n  );\n\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\n    map(([, container]) => container)\n  );\n\n  constructor(private currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          t =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map(c => of({ container: c }));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, ConfigModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n    CarouselModule,\n  ],\n  declarations: [ProductImagesComponent],\n  entryComponents: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\n      .subscribe(reviewsTabLabel => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through h3 tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const h3Elements: HTMLCollectionOf<\n        HTMLElement\n      > = tabsComponent.getElementsByTagName('h3');\n\n      // Look through h3 tab elements until finding tab with label\n      for (const h3Element of Array.from(h3Elements)) {\n        if (h3Element.innerHTML.includes(label)) {\n          return h3Element;\n        }\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    StarRatingModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  exports: [ProductIntroComponent],\n  entryComponents: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RoutingService,\n  SearchConfig,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  pluck,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\n\ninterface ProductListRouteParams {\n  brandCode?: string;\n  categoryCode?: string;\n  query?: string;\n}\n\ninterface SearchCriteria {\n  currentPage?: number;\n  pageSize?: number;\n  sortCode?: string;\n  query?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  protected defaultPageSize = 10;\n\n  protected sub: Subscription;\n\n  protected readonly RELEVANCE_CATEGORY = ':relevance:category:';\n  protected readonly RELEVANCE_BRAND = ':relevance:brand:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router\n  ) {}\n\n  private searchResults$: Observable<\n    ProductSearchPage\n  > = this.productSearchService\n    .getResults()\n    .pipe(filter(searchResult => Object.keys(searchResult).length > 0));\n\n  private searchByRouting$: Observable<\n    ActivatedRouterStateSnapshot\n  > = combineLatest([\n    this.routing.getRouterState().pipe(\n      distinctUntilChanged((x, y) => {\n        // router emits new value also when the anticipated `nextState` changes\n        // but we want to perform search only when current url changes\n        return x.state.url === y.state.url;\n      })\n    ),\n    // also trigger search on site context changes\n    this.languageService.getActive(),\n    this.currencyService.getActive(),\n  ]).pipe(\n    pluck(0, 'state'),\n    tap((state: ActivatedRouterStateSnapshot) => {\n      const criteria = this.getCriteriaFromRoute(\n        state.params,\n        state.queryParams\n      );\n      this.search(criteria);\n    })\n  );\n\n  /**\n   * This stream should be used only on the Product Listing Page.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = combineLatest([\n    this.searchResults$,\n    this.searchByRouting$,\n  ]).pipe(\n    pluck(0),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  clearSearchResults(): void {\n    this.productSearchService.clearResults();\n  }\n\n  private getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  private getQueryFromRouteParams({\n    brandCode,\n    categoryCode,\n    query,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_CATEGORY + categoryCode;\n    }\n    if (brandCode) {\n      return this.RELEVANCE_BRAND + brandCode;\n    }\n  }\n\n  private search(criteria: SearchCriteria): void {\n    const query = criteria.query;\n    const searchConfig = this.getSearchConfig(criteria);\n\n    this.productSearchService.search(query, searchConfig);\n  }\n\n  private getSearchConfig(criteria: SearchCriteria): SearchConfig {\n    const result: SearchConfig = {\n      currentPage: criteria.currentPage,\n      pageSize: criteria.pageSize,\n      sortCode: criteria.sortCode,\n    };\n\n    // drop empty keys\n    Object.keys(result).forEach(key => !result[key] && delete result[key]);\n\n    return result;\n  }\n\n  setQuery(query: string): void {\n    this.setQueryParams({ query, currentPage: undefined });\n  }\n\n  viewPage(pageNumber: number): void {\n    this.setQueryParams({ currentPage: pageNumber });\n  }\n\n  /**\n   * Get items from a given page without using navigation\n   */\n  getPageItems(pageNumber: number): void {\n    this.routing\n      .getRouterState()\n      .subscribe(route => {\n        const routeCriteria = this.getCriteriaFromRoute(\n          route.state.params,\n          route.state.queryParams\n        );\n        const criteria = {\n          ...routeCriteria,\n          currentPage: pageNumber,\n        };\n        this.search(criteria);\n      })\n      .unsubscribe();\n  }\n\n  sort(sortCode: string): void {\n    this.setQueryParams({ sortCode });\n  }\n\n  private setQueryParams(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Subscription, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\nimport { ViewConfig } from '../../../../shared/config/view-config';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  isInfiniteScroll: boolean;\n\n  model$: Observable<ProductSearchPage> = this.productListComponentService\n    .model$;\n\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    pageLayoutService: PageLayoutService,\n    productListComponentService: ProductListComponentService,\n    // tslint:disable-next-line: unified-signatures\n    scrollConfig: ViewConfig\n  );\n\n  /**\n   * @deprecated since version 1.x\n   *  Use constructor(pageLayoutService: PageLayoutService,\n   *  productListComponentService: ProductListComponentService,\n   *  ref: ChangeDetectorRef,\n   *  scrollConfig: ViewConfig) instead\n   */\n  constructor(\n    pageLayoutService: PageLayoutService,\n    productListComponentService: ProductListComponentService\n  );\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService,\n    public scrollConfig?: ViewConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.isInfiniteScroll = this.scrollConfig.view.infiniteScroll.active;\n\n    this.productListComponentService.clearSearchResults();\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$.pipe(take(1)).subscribe(template => {\n        this.viewMode$.next(\n          template === 'ProductGridPageTemplate'\n            ? ViewModes.Grid\n            : ViewModes.List\n        );\n      })\n    );\n  }\n\n  viewPage(pageNumber: number): void {\n    this.productListComponentService.viewPage(pageNumber);\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { ViewModes } from '../../product-view/product-view.component';\nimport { Subscription } from 'rxjs';\nimport { ProductListComponentService } from '../product-list-component.service';\nimport { ViewConfig } from '../../../../../shared/config/view-config';\n\n@Component({\n  selector: 'cx-product-scroll',\n  templateUrl: './product-scroll.component.html',\n})\nexport class ProductScrollComponent implements OnDestroy {\n  private subscription = new Subscription();\n\n  @Input('scrollConfig')\n  set setConfig(inputConfig: ViewConfig) {\n    this.setComponentConfigurations(inputConfig);\n  }\n\n  model: ProductSearchPage;\n  @Input('model')\n  set setModel(inputModel: ProductSearchPage) {\n    this.infiniteScrollOperations(inputModel);\n  }\n\n  inputViewMode: ViewModes;\n  @Input('inputViewMode')\n  set setViewMode(inputViewMode: ViewModes) {\n    this.inputViewMode = inputViewMode;\n    //If viewMode is already set (meaning it is not the first load)\n    //Reset the product list\n    if (this.viewMode) {\n      this.resetListOnViewModeChange();\n    } else {\n      //If viewMode is not set (meaning it is the first load)\n      //Set the viewMode\n      this.viewMode = inputViewMode;\n    }\n  }\n\n  viewMode: ViewModes;\n  productLimit: number;\n  maxProducts: number;\n\n  ViewModes = ViewModes;\n  appendProducts = false;\n  resetList = false;\n  isMaxProducts = false;\n  isLastPage = false;\n  isEmpty = false;\n\n  constructor(\n    private productListComponentService: ProductListComponentService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  scrollPage(pageNumber: number): void {\n    this.appendProducts = true;\n    this.ref.markForCheck();\n    this.productListComponentService.getPageItems(pageNumber);\n  }\n\n  loadNextPage(pageNumber: number): void {\n    this.isMaxProducts = false;\n    this.scrollPage(pageNumber);\n  }\n\n  scrollToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\n    const isButton = scrollConfig.view.infiniteScroll.showMoreButton;\n    const configProductLimit = scrollConfig.view.infiniteScroll.productLimit;\n\n    //Display \"show more\" button every time when button configuration is true\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\n    this.productLimit = isButton ? 1 : configProductLimit;\n  }\n\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\n    if (this.isSamePage(inputModel)) {\n      return;\n    }\n\n    if (this.appendProducts) {\n      this.model = {\n        ...inputModel,\n        products: this.model.products.concat(inputModel.products),\n      };\n    } else {\n      this.model = inputModel;\n      this.maxProducts = this.productLimit;\n    }\n    this.setConditions();\n    this.ref.markForCheck();\n  }\n\n  private resetListOnViewModeChange(): void {\n    this.scrollToTop();\n    this.resetList = true;\n    this.productListComponentService.getPageItems(0);\n  }\n\n  //Set booleans after model has been retrieved\n  private setConditions(): void {\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\n\n    this.isLastPage =\n      this.model.pagination.currentPage ===\n      this.model.pagination.totalPages - 1;\n\n    this.isMaxProducts =\n      this.productLimit &&\n      this.productLimit !== 0 &&\n      this.model.products.length >= this.maxProducts;\n\n    //Add the productLimit to the current number of products to determine the next max number of products\n    if (this.isMaxProducts) {\n      this.maxProducts = this.model.products.length + this.productLimit;\n    }\n\n    //Only change viewMode once the new model is set\n    //This prevents flickering issues\n    if (this.viewMode !== this.inputViewMode) {\n      this.viewMode = this.inputViewMode;\n    }\n\n    this.resetList = false;\n    this.appendProducts = false;\n  }\n\n  /**\n   * @deprecated at release 2.0.\n   * If the new list is the same and it is not intended to reset the list then return true\n   * Return false otherwise.\n   */\n  private isSamePage(inputModel: ProductSearchPage): boolean {\n    if (\n      !this.resetList &&\n      this.model &&\n      this.model.breadcrumbs &&\n      inputModel.breadcrumbs &&\n      this.model.breadcrumbs.length > 0 &&\n      inputModel.breadcrumbs.length > 0\n    ) {\n      if (this.model.breadcrumbs.length === inputModel.breadcrumbs.length) {\n        for (let i = 0; i < this.model.breadcrumbs.length; i++) {\n          if (\n            this.model.breadcrumbs[i].facetCode ===\n              inputModel.breadcrumbs[i].facetCode &&\n            this.model.breadcrumbs[i].facetValueCode ===\n              inputModel.breadcrumbs[i].facetValueCode &&\n            this.model.breadcrumbs[i].removeQuery.query.value ===\n              inputModel.breadcrumbs[i].removeQuery.query.value &&\n            this.model.pagination.currentPage ===\n              inputModel.pagination.currentPage\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Facet, ProductSearchPage } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/index';\nimport { ModalService } from '../../../../shared/components/modal/index';\nimport { ProductListComponentService } from '../container/product-list-component.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent implements OnInit, OnDestroy {\n  private sub: Subscription;\n\n  iconTypes = ICON_TYPE;\n\n  activeFacetValueCode: string;\n  searchResult: ProductSearchPage;\n  minPerFacet = 6;\n  showAllPerFacetMap: Map<String, boolean>;\n  protected queryCodec: HttpUrlEncodingCodec;\n  private collapsedFacets = new Set<string>();\n  searchResult$: Observable<ProductSearchPage>;\n  visibleFacets$: Observable<Facet[]>;\n\n  constructor(\n    private modalService: ModalService,\n    private activatedRoute: ActivatedRoute,\n    private productListComponentService: ProductListComponentService\n  ) {\n    this.showAllPerFacetMap = new Map<String, boolean>();\n    this.queryCodec = new HttpUrlEncodingCodec();\n  }\n\n  ngOnInit(): void {\n    this.sub = this.activatedRoute.params.subscribe(params => {\n      this.activeFacetValueCode = params.categoryCode || params.brandCode;\n    });\n\n    this.searchResult$ = this.productListComponentService.model$.pipe(\n      tap(searchResult => {\n        if (searchResult.facets) {\n          searchResult.facets.forEach(el => {\n            this.showAllPerFacetMap.set(el.name, false);\n          });\n        }\n      })\n    );\n\n    this.visibleFacets$ = this.searchResult$.pipe(\n      map(searchResult => {\n        return searchResult.facets\n          ? searchResult.facets.filter(facet => facet.visible)\n          : [];\n      })\n    );\n  }\n\n  openFilterModal(content): void {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n  }\n\n  toggleValue(query: string): void {\n    this.productListComponentService.setQuery(\n      this.queryCodec.decodeValue(query)\n    );\n  }\n\n  showLess(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, false);\n  }\n\n  showMore(facetName: String): void {\n    this.updateShowAllPerFacetMap(facetName, true);\n  }\n\n  private updateShowAllPerFacetMap(facetName: String, showAll: boolean): void {\n    this.showAllPerFacetMap.set(facetName, showAll);\n  }\n\n  isFacetCollapsed(facetName: string): boolean {\n    return this.collapsedFacets.has(facetName);\n  }\n\n  toggleFacet(facetName: string): void {\n    if (this.collapsedFacets.has(facetName)) {\n      this.collapsedFacets.delete(facetName);\n    } else {\n      this.collapsedFacets.add(facetName);\n    }\n  }\n\n  getVisibleFacetValues(facet): any {\n    return facet.values.slice(\n      0,\n      this.showAllPerFacetMap.get(facet.name)\n        ? facet.values.length\n        : this.minPerFacet\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductGridItemComponent {\n  @Input() product: any;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListItemComponent {\n  @Input() product: any;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Product, BaseOption, VariantType } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { tap, filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variants',\n  templateUrl: './product-variants.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsComponent implements OnInit {\n  constructor(private currentProductService: CurrentProductService) {}\n\n  variants: BaseOption[] = [];\n  variantType = VariantType;\n  product$: Observable<Product>;\n\n  ngOnInit(): void {\n    this.product$ = this.currentProductService.getProduct().pipe(\n      filter(product => !!(product && product.baseOptions)),\n      distinctUntilChanged(),\n      tap(product => {\n        product.baseOptions.forEach(option => {\n          if (option && option.variantType) {\n            this.variants[option.variantType] = option;\n          }\n        });\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  OccConfig,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  Product,\n  ProductService,\n  ProductScope,\n  RoutingService,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-style-selector',\n  templateUrl: './variant-style-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleSelectorComponent {\n  constructor(\n    private config: OccConfig,\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  variantQualifier = VariantQualifier;\n\n  @Input()\n  variants: BaseOption;\n\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find(q => q.qualifier === VariantQualifier.STYLE);\n    return obj ? obj.value : '';\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const qualifier = variantOptionQualifiers.find(item => item.image);\n    return qualifier\n      ? `${this.config.backend.occ.baseUrl}${qualifier.image.url}`\n      : '';\n  }\n\n  changeStyle(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleSelectorComponent } from './variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleSelectorComponent],\n  entryComponents: [VariantStyleSelectorComponent],\n  exports: [VariantStyleSelectorComponent],\n})\nexport class VariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Product,\n  RoutingService,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  ProductService,\n  ProductScope,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-variant-size-selector',\n  templateUrl: './variant-size-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantSizeSelectorComponent {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeSize(code: string): void {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter(Boolean),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find(q => q.qualifier === VariantQualifier.SIZE);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantSizeSelectorComponent } from './variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantSizeSelectorComponent],\n  entryComponents: [VariantSizeSelectorComponent],\n  exports: [VariantSizeSelectorComponent],\n})\nexport class VariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BaseOption,\n  Product,\n  RoutingService,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-color-selector',\n  templateUrl: './variant-color-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantColorSelectorComponent {\n  constructor(private routingService: RoutingService) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeColor(code: string, name: string): void {\n    if (code) {\n      this.routingService.go({\n        cxRoute: 'product',\n        params: { code, name },\n      });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find(q => q.qualifier === VariantQualifier.COLOR);\n    return obj ? obj.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantColorSelectorComponent } from './variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantColorSelectorComponent],\n  entryComponents: [VariantColorSelectorComponent],\n  exports: [VariantColorSelectorComponent],\n})\nexport class VariantColorSelectorModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {\n  OccConfig,\n  VariantOption,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-variant-style-icons',\n  templateUrl: './variant-style-icons.component.html',\n  styleUrls: ['./variant-style-icons.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantStyleIconsComponent implements OnInit {\n  constructor(private config: OccConfig) {}\n\n  @Input()\n  variants: VariantOption[];\n\n  variantNames: { [key: string]: string } = {};\n\n  ngOnInit() {\n    this.variants.forEach(variant => {\n      this.variantNames[variant.code] = this.getVariantName(\n        variant.variantOptionQualifiers\n      );\n    });\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const thumbnail = variantOptionQualifiers.find(\n      item => item.qualifier === VariantQualifier.THUMBNAIL\n    );\n    return thumbnail\n      ? `${this.config.backend.occ.baseUrl}${thumbnail.image.url}`\n      : '';\n  }\n\n  private getVariantName(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const rollupProperty = variantOptionQualifiers.find(\n      item => item.qualifier === VariantQualifier.ROLLUP_PROPERTY\n    );\n    const property = rollupProperty\n      ? variantOptionQualifiers.find(\n          item => item.qualifier === rollupProperty.value\n        )\n      : null;\n    return property ? property.value : '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { VariantStyleIconsComponent } from './variant-style-icons.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [VariantStyleIconsComponent],\n  entryComponents: [VariantStyleIconsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class VariantStyleIconsModule {}\n","import { CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, filter, take } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  VariantOption,\n  ProductService,\n  Product,\n  RoutingService,\n  ProductScope,\n  CmsService,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductVariantGuard implements CanActivate {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService,\n    private cmsService: CmsService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.routingService.getRouterState().pipe(\n      map(state => state.nextState.params.productCode),\n      switchMap((productCode: string) => {\n        // if open pdp from smartedit\n        if (this.cmsService.isLaunchInSmartEdit() && !productCode) {\n          return of(true);\n        }\n\n        return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\n          filter(Boolean),\n          map((product: Product) => {\n            if (!product.purchasable) {\n              const variant = this.findVariant(product.variantOptions);\n              // below call might looks redundant but in fact this data is going to be loaded anyways\n              // we're just calling it earlier and storing\n              this.productService\n                .get(variant.code, ProductScope.LIST)\n                .pipe(\n                  filter(Boolean),\n                  take(1)\n                )\n                .subscribe((_product: Product) => {\n                  this.routingService.go({\n                    cxRoute: 'product',\n                    params: _product,\n                  });\n                });\n              return false;\n            } else {\n              return true;\n            }\n          })\n        );\n      })\n    );\n  }\n\n  findVariant(variants: VariantOption[]): VariantOption {\n    const results: VariantOption[] = variants.filter(variant => {\n      return variant.stock && variant.stock.stockLevel ? variant : false;\n    });\n    return !results.length && variants.length ? variants[0] : results[0];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  ConfigModule,\n  UrlModule,\n  I18nModule,\n} from '@spartacus/core';\nimport { ProductVariantsComponent } from './product-variants.component';\nimport { RouterModule } from '@angular/router';\nimport { VariantStyleSelectorModule } from './variant-style-selector/variant-style-selector.module';\nimport { VariantSizeSelectorModule } from './variant-size-selector/variant-size-selector.module';\nimport { VariantColorSelectorModule } from './variant-color-selector/variant-color-selector.module';\nimport { VariantStyleIconsModule } from './variant-style-icons/variant-style-icons.module';\nimport { ProductVariantGuard } from './guards/product-variant.guard';\nimport { VariantStyleIconsComponent } from './variant-style-icons/variant-style-icons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductVariantSelectorComponent: {\n          component: ProductVariantsComponent,\n          guards: [ProductVariantGuard],\n        },\n      },\n    }),\n    I18nModule,\n    VariantStyleSelectorModule,\n    VariantSizeSelectorModule,\n    VariantColorSelectorModule,\n    VariantStyleIconsModule,\n  ],\n  declarations: [ProductVariantsComponent],\n  entryComponents: [ProductVariantsComponent],\n  exports: [VariantStyleIconsComponent],\n})\nexport class ProductVariantsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n  FeaturesConfigModule,\n} from '@spartacus/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ViewConfig } from '../../../shared/config/view-config';\nimport { ViewConfigModule } from '../../../shared/config/view-config.module';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { defaultScrollConfig } from '../config/default-scroll-config';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation/product-facet-navigation.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\nimport { ProductVariantsModule } from '../product-variants/product-variants.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<ViewConfig>defaultScrollConfig),\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        ProductGridComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n    SpinnerModule,\n    InfiniteScrollModule,\n    ViewConfigModule,\n    ProductVariantsModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductFacetNavigationComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductFacetNavigationComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  entryComponents: [ProductListComponent, ProductFacetNavigationComponent],\n})\nexport class ProductListModule {}\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OutletModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  entryComponents: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent implements OnInit {\n  product$: Observable<Product> = this.currentProductService.getProduct(\n    ProductScope.ATTRIBUTES\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  // TODO deprecated since 1.4, remove\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigModule, CmsConfig, I18nModule } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  entryComponents: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigModule, CmsConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  entryComponents: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter(p => !!p),\n    map(p => p.code),\n    distinctUntilChanged(),\n    switchMap(productCode => this.reviewService.getByProductCode(productCode)),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n  }\n\n  setRating(rating): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [0, [Validators.min(1), Validators.max(5)]],\n      reviewerName: '',\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ConfigModule, CmsConfig, I18nModule } from '@spartacus/core';\nimport { StarRatingModule } from '../../../../shared/index';\nimport { ProductReviewsComponent } from './product-reviews.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  entryComponents: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-stock-notification-dialog',\n  templateUrl: './stock-notification-dialog.component.html',\n})\nexport class StockNotificationDialogComponent implements OnDestroy {\n  subscribeSuccess$: Observable<boolean>;\n  enabledPrefs: NotificationPreference[] = [];\n\n  constructor(\n    private modalService: ModalService,\n    private interestsService: UserInterestsService\n  ) {}\n\n  close() {\n    this.modalService.dismissActiveModal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribeSuccess$) {\n      this.subscribeSuccess$\n        .subscribe(success => {\n          if (success) {\n            this.interestsService.resetAddInterestState();\n          }\n        })\n        .unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  UserInterestsService,\n  UserNotificationPreferenceService,\n  AuthService,\n  OCC_USER_ID_ANONYMOUS,\n  NotificationPreference,\n  NotificationType,\n  Product,\n  GlobalMessageService,\n  TranslationService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { map, filter, tap, first } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\n\n@Component({\n  selector: 'cx-stock-notification',\n  templateUrl: './stock-notification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationComponent implements OnInit, OnDestroy {\n  hasProductInterests$: Observable<boolean>;\n  prefsEnabled$: Observable<boolean>;\n  outOfStock$: Observable<boolean>;\n  isRemoveInterestLoading$: Observable<boolean>;\n  anonymous = true;\n\n  private enabledPrefs: NotificationPreference[] = [];\n  private productCode: string;\n  private subscribeSuccess$: Observable<boolean>;\n  private subscriptions = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private currentProductService: CurrentProductService,\n    private globalMessageService: GlobalMessageService,\n    private translationService: TranslationService,\n    private interestsService: UserInterestsService,\n    private modalService: ModalService,\n    private notificationPrefService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.outOfStock$ = combineLatest([\n      this.currentProductService.getProduct().pipe(filter(Boolean)),\n      this.authService.getOccUserId(),\n    ]).pipe(\n      tap(([product, userId]: [Product, String]) => {\n        this.productCode = product.code;\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\n          this.anonymous = false;\n          this.notificationPrefService.loadPreferences();\n          this.interestsService.loadProductInterests(\n            null,\n            null,\n            null,\n            product.code,\n            NotificationType.BACK_IN_STOCK\n          );\n        }\n      }),\n      map(\n        ([product]: [Product, String]) =>\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\n      )\n    );\n\n    this.hasProductInterests$ = this.interestsService\n      .getProductInterests()\n      .pipe(\n        map(interests => !!interests.results && interests.results.length === 1)\n      );\n    this.subscribeSuccess$ = this.interestsService.getAddProductInterestSuccess();\n    this.isRemoveInterestLoading$ = this.interestsService.getRemoveProdutInterestLoading();\n    this.prefsEnabled$ = this.notificationPrefService\n      .getEnabledPreferences()\n      .pipe(\n        tap(prefs => (this.enabledPrefs = prefs)),\n        map(prefs => prefs.length > 0)\n      );\n\n    this.subscriptions.add(\n      this.interestsService.getAddProductInterestError().subscribe(error => {\n        if (error) {\n          this.onInterestAddingError();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.interestsService\n        .getRemoveProdutInterestSuccess()\n        .subscribe(success => {\n          if (success) {\n            this.onInterestRemovingSuccess();\n          }\n        })\n    );\n  }\n\n  subscribe() {\n    this.openDialog();\n    this.interestsService.addProductInterest(\n      this.productCode,\n      NotificationType.BACK_IN_STOCK\n    );\n  }\n\n  unsubscribe() {\n    this.interestsService.removeProdutInterest(\n      {\n        product: {\n          code: this.productCode,\n        },\n        productInterestEntry: [\n          {\n            interestType: NotificationType.BACK_IN_STOCK,\n          },\n        ],\n      },\n      true\n    );\n  }\n\n  private onInterestRemovingSuccess() {\n    this.subscriptions.add(\n      this.translationService\n        .translate('stockNotification.unsubscribeSuccess')\n        .pipe(first())\n        .subscribe(text =>\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\n        )\n    );\n    this.interestsService.resetRemoveInterestState();\n  }\n\n  private onInterestAddingError() {\n    this.modalService.dismissActiveModal();\n    this.interestsService.resetAddInterestState();\n  }\n\n  private openDialog() {\n    const modalInstance = this.modalService.open(\n      StockNotificationDialogComponent,\n      {\n        centered: true,\n        size: 'lg',\n      }\n    ).componentInstance;\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\n    modalInstance.enabledPrefs = this.enabledPrefs;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.interestsService.clearProductInterests();\n    this.notificationPrefService.clearPreferences();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockNotificationComponent } from './stock-notification.component';\nimport {\n  ConfigModule,\n  CmsConfig,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        StockNotificationComponent: {\n          component: StockNotificationComponent,\n        },\n      },\n    }),\n    RouterModule,\n    I18nModule,\n    SpinnerModule,\n    UrlModule,\n  ],\n  entryComponents: [\n    StockNotificationComponent,\n    StockNotificationDialogComponent,\n  ],\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\n})\nexport class StockNotificationModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nconst WEEK_DAYS_NUMBER = 7;\n\n@Component({\n  selector: 'cx-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnChanges {\n  @Input()\n  location: any;\n  displayDays: Date[] = null;\n\n  constructor(private storeDataService: StoreDataService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.location && this.location) {\n      const initialDate = this.getInitialDate();\n      this.displayDays = [];\n\n      for (let i = 0; i < WEEK_DAYS_NUMBER; i++) {\n        const date = new Date(initialDate.valueOf());\n        date.setDate(date.getDate() + i);\n        this.displayDays.push(date);\n      }\n    }\n  }\n\n  /**\n   * Returns the store's opening time for the given date\n   * @param date date\n   */\n  getStoreOpeningTime(date: Date): string {\n    return this.storeDataService.getStoreOpeningTime(this.location, date);\n  }\n\n  /**\n   * Returns the store's closing time for the given date\n   * @param date date\n   */\n  getStoreClosingTime(date: Date): string {\n    return this.storeDataService.getStoreClosingTime(this.location, date);\n  }\n\n  /**\n   * return initial (first) date to be displayed in the schedule\n   */\n  private getInitialDate(): Date {\n    const currentDate = new Date();\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    return currentDate;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RoutingService, StoreFinderService, GeoPoint } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-grid',\n  templateUrl: './store-finder-grid.component.html',\n})\nexport class StoreFinderGridComponent implements OnInit, OnDestroy {\n  locations$: any;\n  isLoading$: Observable<boolean>;\n  defaultLocation: GeoPoint;\n  country: string;\n  region: string;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.defaultLocation = {};\n\n    if (this.route.snapshot.params.country) {\n      this.storeFinderService.findStoresAction(\n        '',\n        {\n          pageSize: -1,\n        },\n        undefined,\n        this.route.snapshot.params.country\n      );\n    }\n  }\n\n  viewStore(location: any): void {\n    this.routingService.go([this.prepareRouteUrl(location)]);\n  }\n\n  prepareRouteUrl(location: any): string {\n    const countryParam = this.route.snapshot.params.country\n      ? `country/${this.route.snapshot.params.country}/`\n      : '';\n    const regionParam = this.route.snapshot.params.region\n      ? `region/${this.route.snapshot.params.region}/`\n      : '';\n    return `store-finder/${countryParam}${regionParam}${location.name}`;\n  }\n\n  ngOnDestroy() {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder-header',\n  templateUrl: './store-finder-header.component.html',\n})\nexport class StoreFinderHeaderComponent {}\n","import { Input } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\n\nexport class AbstractStoreItemComponent {\n  @Input()\n  location;\n\n  constructor(protected storeDataService: StoreDataService) {}\n\n  getDirections(location: any): string {\n    const google_map_url = 'https://www.google.com/maps/dir/Current+Location/';\n    const latitude = this.storeDataService.getStoreLatitude(location);\n    const longitude = this.storeDataService.getStoreLongitude(location);\n    return google_map_url + latitude + ',' + longitude;\n  }\n\n  getFormattedStoreAddress(addressParts: string[]): string {\n    return addressParts.filter(Boolean).join(', ');\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { StoreDataService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-list-item',\n  templateUrl: './store-finder-list-item.component.html',\n})\nexport class StoreFinderListItemComponent extends AbstractStoreItemComponent {\n  @Input()\n  locationIndex: number = null;\n  @Input()\n  listOrderLabel: any;\n  @Input()\n  displayDistance: boolean;\n  @Output()\n  storeItemClick: EventEmitter<number> = new EventEmitter();\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n\n  handleStoreItemClick() {\n    if (this.locationIndex !== null) {\n      this.storeItemClick.emit(this.locationIndex);\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleMapRendererService } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-map',\n  templateUrl: './store-finder-map.component.html',\n})\nexport class StoreFinderMapComponent implements OnChanges {\n  @ViewChild('mapElement', { static: true })\n  mapElement: ElementRef;\n  @Input()\n  locations: any[];\n  @Output()\n  selectedStoreItem: EventEmitter<number> = new EventEmitter();\n\n  constructor(private googleMapRendererService: GoogleMapRendererService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.locations && this.locations) {\n      this.renderMap();\n    }\n  }\n\n  /**\n   * Sets the center of the map to the given location\n   * @param latitude latitude of the new center\n   * @param longitude longitude of the new center\n   */\n  centerMap(latitude: number, longitude: number): void {\n    this.googleMapRendererService.centerMap(latitude, longitude);\n  }\n\n  renderMap(): void {\n    this.googleMapRendererService.renderMap(\n      this.mapElement.nativeElement,\n      this.locations,\n      markerIndex => {\n        this.selectStoreItemClickHandle(markerIndex);\n      }\n    );\n  }\n\n  private selectStoreItemClickHandle(markerIndex: number) {\n    this.selectedStoreItem.emit(markerIndex);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-store-finder-pagination-details',\n  templateUrl: './store-finder-pagination-details.component.html',\n})\nexport class StoreFinderPaginationDetailsComponent {\n  @Input()\n  pagination: PaginationModel;\n\n  constructor() {}\n\n  getResultsPerPage(): string {\n    if (this.pagination.totalResults > this.pagination.pageSize) {\n      const firstItem =\n        this.pagination.currentPage * this.pagination.pageSize + 1;\n\n      let resultsPerPage =\n        (this.pagination.currentPage + 1) * this.pagination.pageSize;\n\n      if (resultsPerPage > this.pagination.totalResults) {\n        resultsPerPage = this.pagination.totalResults;\n      }\n\n      return `${firstItem} - ${resultsPerPage}`;\n    } else {\n      return `1 - ${this.pagination.totalResults}`;\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input, ViewChild } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { StoreFinderMapComponent } from '../../store-finder-map/store-finder-map.component';\nimport { ICON_TYPE } from './../../../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-store-finder-list',\n  templateUrl: './store-finder-list.component.html',\n})\nexport class StoreFinderListComponent {\n  @Input()\n  locations: any;\n  @Input()\n  useMylocation: boolean;\n  @ViewChild('storeMap', { static: false })\n  storeMap: StoreFinderMapComponent;\n\n  selectedStore: PointOfService;\n  selectedStoreIndex: number;\n  isDetailsModeVisible: boolean;\n  storeDetails: PointOfService;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    private storeDataService: StoreDataService,\n    @Inject(DOCUMENT) private document: any\n  ) {\n    this.isDetailsModeVisible = false;\n  }\n\n  centerStoreOnMapByIndex(index: number, location: PointOfService): void {\n    this.showStoreDetails(location);\n    this.selectedStoreIndex = index;\n    this.selectedStore = location;\n    this.storeMap.centerMap(\n      this.storeDataService.getStoreLatitude(this.locations.stores[index]),\n      this.storeDataService.getStoreLongitude(this.locations.stores[index])\n    );\n  }\n\n  selectStoreItemList(index: number): void {\n    this.selectedStoreIndex = index;\n    const storeListItem = this.document.getElementById('item-' + index);\n    storeListItem.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n    });\n  }\n\n  showStoreDetails(location: PointOfService) {\n    this.isDetailsModeVisible = true;\n    this.storeDetails = location;\n  }\n\n  hideStoreDetails() {\n    this.isDetailsModeVisible = false;\n    this.selectedStoreIndex = undefined;\n    this.selectedStore = undefined;\n    this.storeMap.renderMap();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {\n  GeoPoint,\n  SearchConfig,\n  StoreFinderSearchQuery,\n  StoreFinderService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-search-result',\n  templateUrl: './store-finder-search-result.component.html',\n})\nexport class StoreFinderSearchResultComponent implements OnInit, OnDestroy {\n  locations: any;\n  searchQuery: StoreFinderSearchQuery;\n  locations$: Observable<any>;\n  isLoading$: Observable<any>;\n  geolocation: GeoPoint;\n  subscription: Subscription;\n  useMyLocation: boolean;\n  countryCode: string = null;\n  searchConfig: SearchConfig = {\n    currentPage: 0,\n  };\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.route.queryParams.subscribe(params =>\n      this.initialize(params)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  viewPage(pageNumber: number) {\n    this.searchConfig = { ...this.searchConfig, currentPage: pageNumber };\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation\n    );\n  }\n\n  private initialize(params: Params) {\n    this.searchQuery = this.parseParameters(params);\n    this.useMyLocation = params && params.useMyLocation ? true : false;\n    this.searchConfig = { ...this.searchConfig, currentPage: 0 };\n    this.storeFinderService.findStoresAction(\n      this.searchQuery.queryText,\n      this.searchConfig,\n      this.geolocation,\n      this.countryCode,\n      this.useMyLocation\n    );\n\n    this.isLoading$ = this.storeFinderService.getStoresLoading();\n    this.locations$ = this.storeFinderService.getFindStoresEntities();\n  }\n\n  private parseParameters(queryParams: {\n    [key: string]: any;\n  }): StoreFinderSearchQuery {\n    let searchQuery: StoreFinderSearchQuery;\n\n    if (queryParams.query) {\n      searchQuery = { queryText: queryParams.query };\n    } else {\n      searchQuery = { queryText: '' };\n    }\n\n    searchQuery.useMyLocation =\n      queryParams.useMyLocation != null &&\n      queryParams.useMyLocation.toUpperCase() === 'TRUE';\n\n    return searchQuery;\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-search',\n  templateUrl: './store-finder-search.component.html',\n})\nexport class StoreFinderSearchComponent {\n  searchBox: FormControl = new FormControl();\n  iconTypes = ICON_TYPE;\n\n  constructor(private routingService: RoutingService) {}\n\n  findStores(address: string) {\n    this.routingService.go(['store-finder/find'], { query: address });\n  }\n\n  viewStoresWithMyLoc() {\n    this.routingService.go(['store-finder/find'], { useMyLocation: true });\n  }\n\n  onKey(event: any) {\n    if (\n      this.searchBox.value &&\n      this.searchBox.value.length &&\n      event.key === 'Enter'\n    ) {\n      this.findStores(this.searchBox.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { StoreDataService, PointOfService } from '@spartacus/core';\nimport { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';\n\n@Component({\n  selector: 'cx-store-finder-store-description',\n  templateUrl: './store-finder-store-description.component.html',\n})\nexport class StoreFinderStoreDescriptionComponent extends AbstractStoreItemComponent {\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(protected storeDataService: StoreDataService) {\n    super(storeDataService);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StoreFinderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-store-finder-stores-count',\n  templateUrl: './store-finder-stores-count.component.html',\n})\nexport class StoreFinderStoresCountComponent implements OnInit {\n  locations$: Observable<any>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private storeFinderService: StoreFinderService) {}\n\n  ngOnInit() {\n    this.storeFinderService.viewAllStores();\n    this.locations$ = this.storeFinderService.getViewAllStoresEntities();\n    this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-store-finder',\n  templateUrl: './store-finder.component.html',\n})\nexport class StoreFinderComponent {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  StoreFinderService,\n  PointOfService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICON_TYPE } from '../../../misc/icon';\n\n@Component({\n  selector: 'cx-store-finder-store',\n  templateUrl: './store-finder-store.component.html',\n})\nexport class StoreFinderStoreComponent implements OnInit {\n  location$: Observable<any>;\n  isLoading$: Observable<any>;\n  iconTypes = ICON_TYPE;\n\n  @Input() location: PointOfService;\n  @Input() disableMap: boolean;\n\n  constructor(\n    private storeFinderService: StoreFinderService,\n    private route: ActivatedRoute,\n    private routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    if (!this.location) {\n      this.requestStoresData();\n      this.location$ = this.storeFinderService.getFindStoresEntities();\n      this.isLoading$ = this.storeFinderService.getStoresLoading();\n    }\n  }\n\n  requestStoresData() {\n    this.storeFinderService.viewStoreById(this.route.snapshot.params.store);\n  }\n\n  goBack(): void {\n    this.routingService.go([\n      `store-finder/country/${this.route.snapshot.params.country}`,\n    ]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  StoreFinderCoreModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { ListNavigationModule } from '../../shared/components/list-navigation/list-navigation.module';\nimport { SpinnerModule } from '../../shared/components/spinner/spinner.module';\nimport { IconModule } from './../misc/icon/icon.module';\nimport { ScheduleComponent } from './components/schedule-component/schedule.component';\nimport { StoreFinderGridComponent } from './components/store-finder-grid/store-finder-grid.component';\nimport { StoreFinderHeaderComponent } from './components/store-finder-header/store-finder-header.component';\nimport { StoreFinderListItemComponent } from './components/store-finder-list-item/store-finder-list-item.component';\nimport { StoreFinderMapComponent } from './components/store-finder-map/store-finder-map.component';\nimport { StoreFinderPaginationDetailsComponent } from './components/store-finder-pagination-details/store-finder-pagination-details.component';\nimport { StoreFinderListComponent } from './components/store-finder-search-result/store-finder-list/store-finder-list.component';\nimport { StoreFinderSearchResultComponent } from './components/store-finder-search-result/store-finder-search-result.component';\nimport { StoreFinderSearchComponent } from './components/store-finder-search/store-finder-search.component';\nimport { StoreFinderStoreDescriptionComponent } from './components/store-finder-store-description/store-finder-store-description.component';\nimport { StoreFinderStoresCountComponent } from './components/store-finder-stores-count/store-finder-stores-count.component';\nimport { StoreFinderComponent } from './components/store-finder/store-finder.component';\nimport { StoreFinderStoreComponent } from './components/store-finder-store/store-finder-store.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ListNavigationModule,\n    NgbTabsetModule,\n    SpinnerModule,\n    UrlModule,\n    StoreFinderCoreModule,\n    I18nModule,\n    IconModule,\n    ConfigModule.withConfig(<CmsConfig | LayoutConfig>{\n      cmsComponents: {\n        StoreFinderComponent: {\n          component: StoreFinderComponent,\n          childRoutes: [\n            {\n              path: 'find',\n              component: StoreFinderSearchResultComponent,\n            },\n            {\n              path: 'view-all',\n              component: StoreFinderStoresCountComponent,\n            },\n            {\n              path: 'country/:country',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region',\n              component: StoreFinderGridComponent,\n            },\n            {\n              path: 'country/:country/region/:region/:store',\n              component: StoreFinderStoreComponent,\n            },\n            {\n              path: 'country/:country/:store',\n              component: StoreFinderStoreComponent,\n            },\n          ],\n        },\n      },\n      layoutSlots: {\n        StoreFinderPageTemplate: {\n          slots: ['MiddleContent', 'SideContent'],\n        },\n      },\n    }),\n  ],\n  declarations: [\n    StoreFinderSearchComponent,\n    StoreFinderListComponent,\n    StoreFinderMapComponent,\n    StoreFinderListItemComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreDescriptionComponent,\n    ScheduleComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderStoreComponent,\n  ],\n  exports: [\n    ScheduleComponent,\n    StoreFinderComponent,\n    StoreFinderGridComponent,\n    StoreFinderHeaderComponent,\n    StoreFinderListItemComponent,\n    StoreFinderMapComponent,\n    StoreFinderPaginationDetailsComponent,\n    StoreFinderSearchComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderListComponent,\n    StoreFinderStoreDescriptionComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderStoreComponent,\n  ],\n  entryComponents: [\n    StoreFinderComponent,\n    StoreFinderSearchResultComponent,\n    StoreFinderStoresCountComponent,\n    StoreFinderGridComponent,\n    StoreFinderStoreComponent,\n  ],\n})\nexport class StoreFinderModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { AuthRedirectService, CartService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { FormUtils } from '../../../shared/utils/forms/form-utils';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-checkout-login',\n  templateUrl: './checkout-login.component.html',\n})\nexport class CheckoutLoginComponent implements OnDestroy {\n  form: FormGroup = this.formBuilder.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      emailConfirmation: ['', [Validators.required]],\n    },\n    { validator: this.emailsMatch }\n  );\n\n  sub: Subscription;\n\n  private submitClicked = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private cartService: CartService,\n    private authRedirectService: AuthRedirectService\n  ) {}\n\n  isNotValid(formControlName: string): boolean {\n    return FormUtils.isNotValidField(\n      this.form,\n      formControlName,\n      this.submitClicked\n    );\n  }\n\n  isEmailConfirmInvalid(): boolean {\n    return (\n      this.form.hasError('NotEqual') &&\n      (this.submitClicked ||\n        (this.form.get('emailConfirmation').touched &&\n          this.form.get('emailConfirmation').dirty))\n    );\n  }\n\n  onSubmit() {\n    this.submitClicked = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const email = this.form.value.email;\n    this.cartService.addEmail(email);\n\n    if (!this.sub) {\n      this.sub = this.cartService.getAssignedUser().subscribe(_ => {\n        if (this.cartService.isGuestCart()) {\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private emailsMatch(abstractControl: AbstractControl): { NotEqual: boolean } {\n    return abstractControl.get('email').value !==\n      abstractControl.get('emailConfirmation').value\n      ? { NotEqual: true }\n      : null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { CheckoutLoginComponent } from './checkout-login.component';\nimport { NotCheckoutAuthGuard } from '../../checkout/guards/not-checkout-auth.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        GuestCheckoutLoginComponent: {\n          component: CheckoutLoginComponent,\n          guards: [NotCheckoutAuthGuard],\n        },\n      },\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [CheckoutLoginComponent],\n  exports: [CheckoutLoginComponent],\n  entryComponents: [CheckoutLoginComponent],\n})\nexport class CheckoutLoginModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\nimport { CheckoutConfigService } from '../../checkout/services/checkout-config.service';\n\n@Component({\n  selector: 'cx-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  form: FormGroup;\n  loginAsGuest = false;\n\n  constructor(\n    auth: AuthService,\n    globalMessageService: GlobalMessageService,\n    fb: FormBuilder,\n    authRedirectService: AuthRedirectService,\n    winRef: WindowRef, // tslint:disable-line,\n    activatedRoute: ActivatedRoute,\n    checkoutConfigService: CheckoutConfigService\n  );\n\n  /**\n   * @deprecated since 1.1.0\n   * Use constructor(\n   * auth: AuthService,\n   * globalMessageService: GlobalMessageService,\n   * fb: FormBuilder,\n   * authRedirectService: AuthRedirectService,\n   *  winRef: WindowRef,\n   * activatedRoute: ActivatedRoute,\n   * checkoutConfigService: CheckoutConfigService) instead\n   *\n   * TODO(issue:#4055) Deprecated since 1.1.0\n   */\n  constructor(\n    auth: AuthService,\n    globalMessageService: GlobalMessageService,\n    fb: FormBuilder,\n    authRedirectService: AuthRedirectService\n  );\n  constructor(\n    private auth: AuthService,\n    private globalMessageService: GlobalMessageService,\n    private fb: FormBuilder,\n    private authRedirectService: AuthRedirectService,\n    private winRef?: WindowRef,\n    private activatedRoute?: ActivatedRoute,\n    private checkoutConfigService?: CheckoutConfigService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userId: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: ['', Validators.required],\n    });\n\n    if (\n      this.checkoutConfigService &&\n      this.checkoutConfigService.isGuestCheckout()\n    ) {\n      this.loginAsGuest = this.activatedRoute.snapshot.queryParams['forced'];\n    }\n\n    // TODO(issue:#4055) Deprecated since 1.1.0\n    if (this.winRef && this.winRef.nativeWindow) {\n      const routeState =\n        this.winRef.nativeWindow.history &&\n        this.winRef.nativeWindow.history.state;\n\n      if (routeState && routeState['newUid'] && routeState['newUid'].length) {\n        this.prefillForm('userId', routeState['newUid']);\n      }\n    }\n  }\n\n  login(): void {\n    const { userId, password } = this.form.controls;\n    this.auth.authorize(\n      userId.value.toLowerCase(), // backend accepts lowercase emails only\n      password.value\n    );\n\n    if (!this.sub) {\n      this.sub = this.auth.getUserToken().subscribe(data => {\n        if (data && data.access_token) {\n          this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n          this.authRedirectService.redirect();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private prefillForm(field: string, value: string): void {\n    this.form.patchValue({\n      [field]: value,\n    });\n\n    this.form.get(field).markAsTouched(); // this action will check field validity on load\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { LoginFormComponent } from './login-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [LoginFormComponent],\n  exports: [LoginFormComponent],\n  entryComponents: [LoginFormComponent],\n})\nexport class LoginFormModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService, User, UserService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(private auth: AuthService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user$ = this.auth.isUserLoggedIn().pipe(\n      switchMap(isUserLoggedIn => {\n        if (isUserLoggedIn) {\n          return this.userService.get();\n        } else {\n          return of(undefined);\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    PageSlotModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent,\n        },\n      },\n    }),\n    I18nModule,\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [LoginComponent],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  AuthService,\n  CmsService,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n  ProtectedRoutesService,\n  FeatureConfigService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  /**\n   * @deprecated since 1.4\n   * Check #5666 for more info\n   *\n   * TODO(issue:5666) Deprecated since 1.4\n   */\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected routing: RoutingService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutes?: ProtectedRoutesService,\n    protected featureConfig?: FeatureConfigService\n  ) {}\n\n  canActivate(): Observable<any> {\n    this.logout();\n\n    return this.cms\n      .hasPage({\n        id: this.semanticPathService.get('logout'),\n        type: PageType.CONTENT_PAGE,\n      })\n      .pipe(\n        tap(hasPage => {\n          if (!hasPage) {\n            this.redirect();\n          }\n        })\n      );\n  }\n\n  protected redirect(): void {\n    // TODO(issue:5666) Deprecated since 1.4\n    const cxRoute: string =\n      this.featureConfig.isLevel('1.4') &&\n      this.protectedRoutes &&\n      this.protectedRoutes.shouldProtect\n        ? 'login'\n        : 'home';\n\n    this.routing.go({ cxRoute });\n  }\n\n  protected logout(): void {\n    this.auth.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout-guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ANONYMOUS_CONSENTS_FEATURE,\n  AuthRedirectService,\n  AuthService,\n  ConsentTemplate,\n  FeatureConfigService,\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  Title,\n  UserService,\n  UserSignUp,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { sortTitles } from '../../../shared/utils/forms/title-utils';\nimport { CustomFormValidators } from '../../../shared/utils/validators/custom-form-validators';\n\n@Component({\n  selector: 'cx-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  titles$: Observable<Title[]>;\n  loading$: Observable<boolean>;\n  private subscription = new Subscription();\n\n  anonymousConsent$: Observable<{\n    consent: AnonymousConsent;\n    template: string;\n  }>;\n\n  // TODO(issue:4237) Register flow\n  isNewRegisterFlowEnabled: boolean =\n    this.featureConfig && this.featureConfig.isLevel('1.1');\n\n  isAnonymousConsentEnabled =\n    this.featureConfig &&\n    this.featureConfig.isEnabled(ANONYMOUS_CONSENTS_FEATURE);\n\n  userRegistrationForm: FormGroup = this.fb.group(\n    {\n      titleCode: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n      newsletter: new FormControl({\n        value: false,\n        disabled: this.isAnonymousConsentEnabled\n          ? this.isConsentRequired()\n          : false,\n      }),\n      termsandconditions: [false, Validators.requiredTrue],\n    },\n    { validator: CustomFormValidators.matchPassword }\n  );\n\n  constructor(\n    auth: AuthService,\n    authRedirectService: AuthRedirectService,\n    userService: UserService,\n    globalMessageService: GlobalMessageService,\n    fb: FormBuilder,\n    // tslint:disable-next-line:unified-signatures\n    router: RoutingService,\n    featureConfig: FeatureConfigService,\n    anonymousConsentsService: AnonymousConsentsService,\n    anonymousConsentsConfig: AnonymousConsentsConfig\n  );\n\n  /**\n   * @deprecated since 1.1.0\n   *\n   * Use constructor(\n   * protected auth: AuthService,\n   * protected authRedirectService: AuthRedirectService,\n   * protected userService: UserService,\n   * protected globalMessageService: GlobalMessageService,\n   * protected fb: FormBuilder,\n   * protected router?: RoutingService,\n   * protected featureConfig?: FeatureConfigService,\n   * protected anonymousConsentsService?: AnonymousConsentsService,\n   * protected anonymousConsentsConfig?: AnonymousConsentsConfig) instead\n   *\n   * TODO(issue:4237) Register flow\n   * TODO(issue:4989) Anonymous consents\n   */\n  constructor(\n    auth: AuthService,\n    authRedirectService: AuthRedirectService,\n    userService: UserService,\n    globalMessageService: GlobalMessageService,\n    fb: FormBuilder\n  );\n  constructor(\n    protected auth: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected userService: UserService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected router?: RoutingService,\n    protected featureConfig?: FeatureConfigService,\n    protected anonymousConsentsService?: AnonymousConsentsService,\n    protected anonymousConsentsConfig?: AnonymousConsentsConfig\n  ) {}\n\n  ngOnInit() {\n    this.titles$ = this.userService.getTitles().pipe(\n      tap(titles => {\n        if (Object.keys(titles).length === 0) {\n          this.userService.loadTitles();\n        }\n      }),\n      map(titles => {\n        return titles.sort(sortTitles);\n      })\n    );\n\n    // TODO(issue:4237) Register flow\n    if (this.isNewRegisterFlowEnabled) {\n      this.loading$ = this.userService.getRegisterUserResultLoading();\n      this.registerUserProcessInit();\n    } else {\n      if (this.auth && this.authRedirectService) {\n        this.subscription.add(\n          this.userService\n            .getRegisterUserResultSuccess()\n            .subscribe((success: boolean) => {\n              if (success) {\n                const { uid, password } = this.collectDataFromRegisterForm(\n                  this.userRegistrationForm.value\n                );\n                this.auth.authorize(uid, password);\n              }\n            })\n        );\n        this.subscription.add(\n          this.auth.getUserToken().subscribe(data => {\n            if (data && data.access_token) {\n              this.globalMessageService.remove(\n                GlobalMessageType.MSG_TYPE_ERROR\n              );\n              this.authRedirectService.redirect();\n            }\n          })\n        );\n      }\n    }\n\n    // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n    this.subscription.add(\n      this.globalMessageService\n        .get()\n        .pipe(filter(messages => !!Object.keys(messages).length))\n        .subscribe((globalMessageEntities: GlobalMessageEntities) => {\n          const messages =\n            globalMessageEntities &&\n            globalMessageEntities[GlobalMessageType.MSG_TYPE_ERROR];\n\n          if (\n            messages &&\n            messages.some(message => message === 'This field is required.')\n          ) {\n            this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.globalMessageService.add(\n              { key: 'register.titleRequired' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n          }\n        })\n    );\n\n    if (\n      this.isAnonymousConsentEnabled &&\n      Boolean(this.anonymousConsentsConfig) &&\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(this.anonymousConsentsConfig.anonymousConsents.registerConsent)\n    ) {\n      this.anonymousConsent$ = combineLatest([\n        this.anonymousConsentsService.getConsent(\n          this.anonymousConsentsConfig.anonymousConsents.registerConsent\n        ),\n        this.anonymousConsentsService.getTemplate(\n          this.anonymousConsentsConfig.anonymousConsents.registerConsent\n        ),\n      ]).pipe(\n        map(([consent, template]: [AnonymousConsent, ConsentTemplate]) => {\n          return {\n            consent,\n            template: template ? template.description : '',\n          };\n        })\n      );\n\n      this.subscription.add(\n        this.userRegistrationForm\n          .get('newsletter')\n          .valueChanges.subscribe(_ => {\n            this.toggleAnonymousConsent();\n          })\n      );\n    }\n  }\n\n  submit(): void {\n    this.userService.register(\n      this.collectDataFromRegisterForm(this.userRegistrationForm.value)\n    );\n  }\n\n  titleSelected(title: Title): void {\n    this.userRegistrationForm['controls'].titleCode.setValue(title.code);\n  }\n\n  collectDataFromRegisterForm(formData: any): UserSignUp {\n    const { firstName, lastName, email, password, titleCode } = formData;\n\n    return {\n      firstName,\n      lastName,\n      uid: email.toLowerCase(),\n      password,\n      titleCode,\n    };\n  }\n\n  isConsentGiven(consent: AnonymousConsent): boolean {\n    return this.anonymousConsentsService.isConsentGiven(consent);\n  }\n\n  private isConsentRequired(): boolean {\n    if (\n      Boolean(this.anonymousConsentsService) &&\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(this.anonymousConsentsConfig.anonymousConsents.registerConsent) &&\n      Boolean(this.anonymousConsentsConfig.anonymousConsents.requiredConsents)\n    ) {\n      return this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n        this.anonymousConsentsConfig.anonymousConsents.registerConsent\n      );\n    }\n    return false;\n  }\n\n  private onRegisterUserSuccess(success: boolean): void {\n    if (this.router && success) {\n      this.router.go('login');\n      this.globalMessageService.add(\n        { key: 'register.postRegisterMessage' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  toggleAnonymousConsent(): void {\n    if (Boolean(this.userRegistrationForm.get('newsletter').value)) {\n      this.anonymousConsentsService.giveConsent(\n        this.anonymousConsentsConfig.anonymousConsents.registerConsent\n      );\n    } else {\n      this.anonymousConsentsService.withdrawConsent(\n        this.anonymousConsentsConfig.anonymousConsents.registerConsent\n      );\n    }\n  }\n\n  private registerUserProcessInit(): void {\n    this.userService.resetRegisterUserProcessState();\n    this.subscription.add(\n      this.userService.getRegisterUserResultSuccess().subscribe(success => {\n        this.onRegisterUserSuccess(success);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.userService.resetRegisterUserProcessState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  NotAuthGuard,\n  UrlModule,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/index';\nimport { LoginModule } from '../login/login.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          component: RegisterComponent,\n          guards: [NotAuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n    SpinnerModule,\n  ],\n  declarations: [RegisterComponent],\n  exports: [RegisterComponent],\n  entryComponents: [RegisterComponent],\n})\nexport class RegisterComponentModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { CheckoutLoginModule } from './checkout-login/checkout-login.module';\nimport { LoginFormModule } from './login-form/login-form.module';\nimport { LoginModule } from './login/login.module';\nimport { LogoutModule } from './logout/logout.module';\nimport { RegisterComponentModule } from './register/register.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginModule,\n    LoginFormModule,\n    LogoutModule,\n    CheckoutLoginModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    RegisterComponentModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../shared/index';\nimport { AddToCartModule } from '../cart/index';\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\nimport { WishListComponent } from './components/wish-list/wish-list.component';\n\n@NgModule({\n  imports: [\n    AddToCartModule,\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        WishListComponent: {\n          component: WishListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    I18nModule,\n    MediaModule,\n    RouterModule,\n    StarRatingModule,\n    UrlModule,\n    ItemCounterModule,\n  ],\n  declarations: [WishListComponent, WishListItemComponent],\n  entryComponents: [WishListComponent],\n  exports: [WishListComponent, WishListItemComponent],\n})\nexport class WishListModule {}\n","import { NgModule } from '@angular/core';\nimport { HamburgerMenuModule } from '../layout/index';\nimport { AnonymousConsentManagementBannerModule } from './anonymous-consent-management/anonymous-consent-management.module';\nimport { AsmModule } from './asm/asm.module';\nimport { CartComponentModule } from './cart/cart.module';\nimport { CheckoutComponentModule } from './checkout/checkout.module';\nimport { BannerCarouselModule } from './content/banner-carousel/banner-carousel.module';\nimport {\n  BannerModule,\n  CmsParagraphModule,\n  LinkModule,\n  TabParagraphContainerModule,\n} from './content/index';\nimport { QualtricsModule, SiteContextSelectorModule } from './misc/index';\nimport {\n  AddressBookModule,\n  CloseAccountModule,\n  ConsentManagementModule,\n  ForgotPasswordModule,\n  MyInterestsModule,\n  NotificationPreferenceModule,\n  OrderCancellationModule,\n  OrderDetailsModule,\n  OrderHistoryModule,\n  OrderReturnModule,\n  PaymentMethodsModule,\n  ResetPasswordModule,\n  ReturnRequestDetailModule,\n  ReturnRequestListModule,\n  UpdateEmailModule,\n  UpdatePasswordModule,\n  UpdateProfileModule,\n  MyCouponsModule,\n} from './myaccount/index';\nimport {\n  BreadcrumbModule,\n  CategoryNavigationModule,\n  FooterNavigationModule,\n  NavigationModule,\n  SearchBoxModule,\n} from './navigation/index';\nimport { OrderConfirmationModule } from './order-confirmation/index';\nimport {\n  ProductCarouselModule,\n  ProductIntroModule,\n  ProductListModule,\n  ProductReferencesModule,\n  ProductTabsModule,\n  StockNotificationModule,\n} from './product/index';\nimport { ProductImagesModule } from './product/product-images/product-images.module';\nimport { ProductSummaryModule } from './product/product-summary/product-summary.module';\nimport { ProductVariantsModule } from './product/product-variants/product-variants.module';\nimport { StoreFinderModule } from './storefinder/store-finder.module';\nimport { UserComponentModule } from './user/user.module';\nimport { WishListModule } from './wish-list/wish-list.module';\n\n@NgModule({\n  imports: [\n    AnonymousConsentManagementBannerModule,\n    AsmModule,\n    HamburgerMenuModule,\n    CmsParagraphModule,\n    LinkModule,\n    BannerModule,\n    CategoryNavigationModule,\n    NavigationModule,\n    FooterNavigationModule,\n    BreadcrumbModule,\n    SearchBoxModule,\n    SiteContextSelectorModule,\n    QualtricsModule,\n    AddressBookModule,\n    OrderHistoryModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n    ProductListModule,\n    ProductTabsModule,\n    ProductCarouselModule,\n    ProductReferencesModule,\n    OrderDetailsModule,\n    PaymentMethodsModule,\n    UpdateEmailModule,\n    UpdatePasswordModule,\n    UpdateProfileModule,\n    ConsentManagementModule,\n    CloseAccountModule,\n    CartComponentModule,\n    TabParagraphContainerModule,\n    OrderConfirmationModule,\n    StoreFinderModule,\n    ProductImagesModule,\n    ProductSummaryModule,\n    ProductVariantsModule,\n    ProductIntroModule,\n    CheckoutComponentModule,\n    ForgotPasswordModule,\n    ResetPasswordModule,\n    BannerCarouselModule,\n    UserComponentModule,\n    MyCouponsModule,\n    WishListModule,\n    NotificationPreferenceModule,\n    MyInterestsModule,\n    StockNotificationModule,\n  ],\n})\nexport class CmsLibModule {}\n","import {\n  Route,\n  UrlMatchResult,\n  UrlSegment,\n  UrlSegmentGroup,\n} from '@angular/router';\n\nexport interface SuffixRoute extends Route {\n  data: {\n    cxSuffixUrlMatcher: {\n      marker: string;\n      paramName: string;\n      precedingParamName?: string;\n    };\n  };\n}\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function suffixUrlMatcher(\n  segments: UrlSegment[],\n  _segmentGroup: UrlSegmentGroup,\n  route: SuffixRoute\n): UrlMatchResult | null {\n  const config = route.data.cxSuffixUrlMatcher;\n  const { marker, paramName } = config;\n  const precedingParamName = config.precedingParamName || 'param';\n\n  const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n  const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n  if (markerIndex === -1 || isMarkerLastSegment) {\n    return null;\n  }\n\n  const paramIndex = markerIndex + 1;\n  const posParams: { [name: string]: UrlSegment } = {\n    [paramName]: segments[paramIndex],\n  };\n\n  for (let i = 0; i < markerIndex; i++) {\n    posParams[`${precedingParamName}${i}`] = segments[i];\n  }\n\n  return { consumed: segments.slice(0, paramIndex + 1), posParams };\n}\n\nexport function findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { suffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n      {\n        matcher: suffixUrlMatcher,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxSuffixUrlMatcher: {\n            marker: 'p',\n            paramName: 'productCode',\n          },\n        },\n      },\n    ]),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { suffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        matcher: suffixUrlMatcher,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxSuffixUrlMatcher: {\n            marker: 'c',\n            paramName: 'categoryCode',\n          },\n        },\n      },\n    ]),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\nexport const b2cLayoutConfig: LayoutConfig = {\n  // deferredLoading: {\n  //   strategy: DeferLoadingStrategy.DEFER,\n  //   intersectionMargin: '50px',\n  // },\n  layoutSlots: {\n    header: {\n      md: {\n        slots: [\n          'PreHeader',\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      xs: {\n        slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n      },\n    },\n    navigation: {\n      md: { slots: [] },\n      xs: {\n        slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n      },\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      pageFold: 'Section2B',\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      pageFold: 'Section2',\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductListSlot', 'ProductLeftRefinements'],\n    },\n    ProductGridPageTemplate: {\n      slots: ['ProductGridSlot', 'ProductLeftRefinements'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'SearchResultsListSlot',\n        'ProductLeftRefinements',\n        'Section4',\n      ],\n    },\n    SearchResultsGridPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsGridSlot',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      md: {\n        pageFold: 'UpSelling',\n      },\n      xs: {\n        pageFold: 'Summary',\n      },\n      slots: [\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n    CheckoutLoginPageTemplate: {\n      slots: ['RightContentSlot'],\n    },\n  },\n};\n","import { CmsPageSlotsConfig, ContentSlotComponentData } from '@spartacus/core';\n\nexport const headerComponents: {\n  [key: string]: ContentSlotComponentData | any;\n} = {\n  HamburgerMenuComponent: {\n    typeCode: 'HamburgerMenuComponent',\n    flexType: 'HamburgerMenuComponent',\n  },\n  LoginComponent: {\n    typeCode: 'LoginComponent',\n    flexType: 'LoginComponent',\n    uid: 'LoginComponent',\n  },\n};\n\nexport const defaultPageHeaderConfig: CmsPageSlotsConfig = {\n  PreHeader: {\n    componentIds: ['HamburgerMenuComponent'],\n  },\n  SiteLogin: {\n    componentIds: ['LoginComponent'],\n  },\n};\n","import { CmsStructureConfig } from '@spartacus/core';\nimport {\n  defaultPageHeaderConfig,\n  headerComponents,\n} from './default-header.config';\n\nexport function defaultCmsContentConfig(): CmsStructureConfig {\n  return {\n    cmsStructure: {\n      components: {\n        ...headerComponents,\n      },\n      slots: {\n        ...defaultPageHeaderConfig,\n      },\n      pages: [],\n    },\n  };\n}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: { paths: ['login'], protected: false },\n  register: { paths: ['login/register'], protected: false },\n  forgotPassword: { paths: ['login/forgot-password'], protected: false },\n  resetPassword: { paths: ['login/pw/change'], protected: false },\n  logout: { paths: ['logout'] },\n  checkoutLogin: { paths: ['checkout-login'] },\n\n  checkout: { paths: ['checkout'] },\n  checkoutShippingAddress: { paths: ['checkout/shipping-address'] },\n  checkoutDeliveryMode: { paths: ['checkout/delivery-mode'] },\n  checkoutPaymentDetails: { paths: ['checkout/payment-details'] },\n  checkoutReviewOrder: { paths: ['checkout/review-order'] },\n  orderConfirmation: { paths: ['order-confirmation'] },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n  orders: {\n    paths: ['my-account/orders'],\n  },\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderGuest: {\n    paths: ['guest/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturn: {\n    paths: ['my-account/order/return/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderReturnConfirmation: {\n    paths: ['my-account/order/return/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancel: {\n    paths: ['my-account/order/cancel/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  orderCancelConfirmation: {\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  returnRequestDetails: {\n    paths: ['my-account/return-request/:returnCode'],\n    paramsMapping: { returnCode: 'rma' },\n  },\n  coupons: { paths: ['my-account/coupons'] },\n  couponClaim: {\n    paths: ['my-account/coupon/claim/:couponCode'],\n    paramsMapping: { couponCode: 'code' },\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  AnonymousConsentsModule,\n  AuthModule,\n  CartModule,\n  CheckoutModule,\n  CmsModule,\n  ConfigInitializerModule,\n  ConfigModule,\n  FeaturesConfigModule,\n  GlobalMessageModule,\n  I18nModule,\n  ProcessModule,\n  ProductModule,\n  provideConfigFromMetaTags,\n  StateModule,\n  UserModule,\n} from '@spartacus/core';\nimport { RoutingModule } from '../cms-structure/routing/routing.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { ViewConfigModule } from '../shared/config/view-config.module';\n\n@NgModule({\n  imports: [\n    StateModule.forRoot(),\n    AuthModule.forRoot(),\n    AnonymousConsentsModule.forRoot(),\n    ConfigModule.forRoot(),\n    ConfigInitializerModule.forRoot(),\n    RoutingModule.forRoot(),\n    I18nModule.forRoot(),\n    CmsModule.forRoot(),\n    GlobalMessageModule.forRoot(),\n    ProcessModule.forRoot(),\n    CartModule.forRoot(),\n    CheckoutModule.forRoot(),\n    UserModule.forRoot(),\n    ProductModule.forRoot(),\n    ViewConfigModule.forRoot(),\n    FeaturesConfigModule.forRoot('1.0'),\n    LayoutModule,\n  ],\n  exports: [LayoutModule],\n  providers: [...provideConfigFromMetaTags()],\n})\nexport class StorefrontFoundationModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  ExternalRoutesModule,\n  OccModule,\n  PersonalizationModule,\n  provideConfig,\n  SiteContextModule,\n  SmartEditModule,\n} from '@spartacus/core';\nimport { AsmModule } from '../cms-components/asm/asm.module';\nimport { ProductDetailsPageModule } from '../cms-pages/product-details-page/product-details-page.module';\nimport { ProductListingPageModule } from '../cms-pages/product-listing-page/product-listing-page.module';\nimport { MainModule } from '../layout/main/main.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { StorefrontFoundationModule } from './storefront-foundation.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n    }),\n\n    StoreModule.forRoot(\n      {},\n      {\n        runtimeChecks: {\n          strictStateImmutability: true,\n          strictStateSerializability: true,\n          strictActionImmutability: true,\n          strictActionSerializability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n\n    // ASM module must be imported before the `AuthModule (which is imported in `StorefrontFoundationModule`)\n    // since we might have conflicting interceptor logic. See #5461.\n    AsmModule,\n\n    StorefrontFoundationModule,\n    MainModule,\n    SiteContextModule.forRoot(), // should be imported after RouterModule.forRoot, because it overwrites UrlSerializer\n\n    SmartEditModule.forRoot(), // should be custom\n    PersonalizationModule.forRoot(), // should be custom\n\n    // opt-in explicitly\n    OccModule.forRoot(),\n    ProductDetailsPageModule,\n    ProductListingPageModule,\n    ExternalRoutesModule.forRoot(),\n  ],\n  exports: [MainModule, StorefrontFoundationModule],\n})\nexport class StorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<StorefrontModule> {\n    return {\n      ngModule: StorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ConfigModule, provideConfig } from '@spartacus/core';\nimport { CmsLibModule } from '../cms-components/cms-lib.module';\nimport { StorefrontConfig } from '../storefront-config';\nimport { b2cLayoutConfig } from './config/b2c-layout-config';\nimport { defaultCmsContentConfig } from './config/static-cms-structure/default-cms-content.config';\nimport { StorefrontModule } from './storefront.module';\n\n@NgModule({\n  imports: [\n    StorefrontModule.withConfig(<StorefrontConfig>{\n      pwa: {\n        enabled: true,\n        addToHomeScreen: true,\n      },\n    }),\n\n    ConfigModule.withConfig(b2cLayoutConfig),\n    ConfigModule.withConfigFactory(defaultCmsContentConfig),\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n  ],\n  exports: [StorefrontModule],\n})\nexport class B2cStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2cStorefrontModule> {\n    return {\n      ngModule: B2cStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n"],"names":["tslib_1.__extends","tslib_1.__values","_a","AsmCoreModule","Subscription","CoreRoutingModule","AnonymousConsentsModule"],"mappings":"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"}