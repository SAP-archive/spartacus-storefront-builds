import { Injectable } from '@angular/core';
import { Config } from '@spartacus/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
export var ICON_TYPE;
(function (ICON_TYPE) {
    ICON_TYPE["STAR"] = "STAR";
    ICON_TYPE["SEARCH"] = "SEARCH";
    ICON_TYPE["CART"] = "CART";
    ICON_TYPE["INFO"] = "INFO";
    ICON_TYPE["GRID"] = "GRID";
    ICON_TYPE["LIST"] = "LIST";
    ICON_TYPE["CARET_DOWN"] = "CARET_DOWN";
    ICON_TYPE["CARET_LEFT"] = "CARET_LEFT";
    ICON_TYPE["CARET_RIGHT"] = "CARET_RIGHT";
    ICON_TYPE["CLOSE"] = "CLOSE";
    ICON_TYPE["ERROR"] = "ERROR";
    ICON_TYPE["WARNING"] = "WARNING";
    ICON_TYPE["SUCCESS"] = "SUCCESS";
    ICON_TYPE["VISA"] = "VISA";
    ICON_TYPE["MASTER_CARD"] = "MASTER_CARD";
    ICON_TYPE["AMEX"] = "AMEX";
    ICON_TYPE["DINERS_CLUB"] = "DINERS_CLUB";
    ICON_TYPE["CREDIT_CARD"] = "CREDIT_CARD";
    ICON_TYPE["EXPAND"] = "EXPAND";
    ICON_TYPE["COLLAPSE"] = "COLLAPSE";
    ICON_TYPE["RESET"] = "RESET";
    ICON_TYPE["CIRCLE"] = "CIRCLE";
    ICON_TYPE["HEART"] = "HEART";
    ICON_TYPE["EMPTY_HEART"] = "EMPTY_HEART";
    ICON_TYPE["FILTER"] = "FILTER";
    ICON_TYPE["PENCIL"] = "PENCIL";
})(ICON_TYPE || (ICON_TYPE = {}));
export class IconConfig {
}
IconConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function IconConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: IconConfig, providedIn: "root" });
IconConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
                useExisting: Config,
            },] }
];
/**
 * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.
 * The resources will be automatically loaded in case they're required for the `ICON_TYPE`.
 */
export var IconResourceType;
(function (IconResourceType) {
    /**
     * An svg based icon requires an SVG resource that must be loaded,
     * this is typically a sprite svg file.
     */
    IconResourceType["SVG"] = "svg";
    /**
     * A font based ICON might require an additional CSS file to be loaded.
     */
    IconResourceType["LINK"] = "link";
    /**
     * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image
     * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)
     */
    IconResourceType["TEXT"] = "text";
})(IconResourceType || (IconResourceType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvc3JjL2Ntcy1jb21wb25lbnRzL21pc2MvaWNvbi9pY29uLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7QUFHekMsTUFBTSxDQUFOLElBQVksU0EyQlg7QUEzQkQsV0FBWSxTQUFTO0lBQ25CLDBCQUFhLENBQUE7SUFDYiw4QkFBaUIsQ0FBQTtJQUNqQiwwQkFBYSxDQUFBO0lBQ2IsMEJBQWEsQ0FBQTtJQUNiLDBCQUFhLENBQUE7SUFDYiwwQkFBYSxDQUFBO0lBQ2Isc0NBQXlCLENBQUE7SUFDekIsc0NBQXlCLENBQUE7SUFDekIsd0NBQTJCLENBQUE7SUFDM0IsNEJBQWUsQ0FBQTtJQUNmLDRCQUFlLENBQUE7SUFDZixnQ0FBbUIsQ0FBQTtJQUNuQixnQ0FBbUIsQ0FBQTtJQUNuQiwwQkFBYSxDQUFBO0lBQ2Isd0NBQTJCLENBQUE7SUFDM0IsMEJBQWEsQ0FBQTtJQUNiLHdDQUEyQixDQUFBO0lBQzNCLHdDQUEyQixDQUFBO0lBQzNCLDhCQUFpQixDQUFBO0lBQ2pCLGtDQUFxQixDQUFBO0lBQ3JCLDRCQUFlLENBQUE7SUFDZiw4QkFBaUIsQ0FBQTtJQUNqQiw0QkFBZSxDQUFBO0lBQ2Ysd0NBQTJCLENBQUE7SUFDM0IsOEJBQWlCLENBQUE7SUFDakIsOEJBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQTNCVyxTQUFTLEtBQVQsU0FBUyxRQTJCcEI7QUFNRCxNQUFNLE9BQWdCLFVBQVU7Ozs7WUFKL0IsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2dCQUNsQixXQUFXLEVBQUUsTUFBTTthQUNwQjs7QUEyQ0Q7OztHQUdHO0FBQ0gsTUFBTSxDQUFOLElBQVksZ0JBZ0JYO0FBaEJELFdBQVksZ0JBQWdCO0lBQzFCOzs7T0FHRztJQUNILCtCQUFXLENBQUE7SUFFWDs7T0FFRztJQUNILGlDQUFhLENBQUE7SUFDYjs7O09BR0c7SUFDSCxpQ0FBYSxDQUFBO0FBQ2YsQ0FBQyxFQWhCVyxnQkFBZ0IsS0FBaEIsZ0JBQWdCLFFBZ0IzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBEaXJlY3Rpb25Nb2RlIH0gZnJvbSAnLi4vLi4vLi4vbGF5b3V0L2RpcmVjdGlvbi9jb25maWcvZGlyZWN0aW9uLm1vZGVsJztcblxuZXhwb3J0IGVudW0gSUNPTl9UWVBFIHtcbiAgU1RBUiA9ICdTVEFSJyxcbiAgU0VBUkNIID0gJ1NFQVJDSCcsXG4gIENBUlQgPSAnQ0FSVCcsXG4gIElORk8gPSAnSU5GTycsXG4gIEdSSUQgPSAnR1JJRCcsXG4gIExJU1QgPSAnTElTVCcsXG4gIENBUkVUX0RPV04gPSAnQ0FSRVRfRE9XTicsXG4gIENBUkVUX0xFRlQgPSAnQ0FSRVRfTEVGVCcsXG4gIENBUkVUX1JJR0hUID0gJ0NBUkVUX1JJR0hUJyxcbiAgQ0xPU0UgPSAnQ0xPU0UnLFxuICBFUlJPUiA9ICdFUlJPUicsXG4gIFdBUk5JTkcgPSAnV0FSTklORycsXG4gIFNVQ0NFU1MgPSAnU1VDQ0VTUycsXG4gIFZJU0EgPSAnVklTQScsXG4gIE1BU1RFUl9DQVJEID0gJ01BU1RFUl9DQVJEJyxcbiAgQU1FWCA9ICdBTUVYJyxcbiAgRElORVJTX0NMVUIgPSAnRElORVJTX0NMVUInLFxuICBDUkVESVRfQ0FSRCA9ICdDUkVESVRfQ0FSRCcsXG4gIEVYUEFORCA9ICdFWFBBTkQnLFxuICBDT0xMQVBTRSA9ICdDT0xMQVBTRScsXG4gIFJFU0VUID0gJ1JFU0VUJyxcbiAgQ0lSQ0xFID0gJ0NJUkNMRScsXG4gIEhFQVJUID0gJ0hFQVJUJyxcbiAgRU1QVFlfSEVBUlQgPSAnRU1QVFlfSEVBUlQnLFxuICBGSUxURVIgPSAnRklMVEVSJyxcbiAgUEVOQ0lMID0gJ1BFTkNJTCcsXG59XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICB1c2VFeGlzdGluZzogQ29uZmlnLFxufSlcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBJY29uQ29uZmlnIHtcbiAgaWNvbj86IEljb25PcHRpb25zO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEljb25PcHRpb25zIHtcbiAgLyoqXG4gICAqIEVhY2ggaWNvbiB0eXBlIGNhbiBiZSBjb25maWd1cmVkIHdpdGggYSBzby1jYWxsZWQgc3ltYm9sLiBUaGUgc3ltYm9sIHdpbGxcbiAgICogYmUgdXNlZCB0byBtYXAgdGhlIGljb24gdG8gYW4gU1ZHIGBzeW1ib2xgIChpZCkgb3IgdG8gdGhlIHN0eWxlIGNsYXNzZXMgb2ZcbiAgICogYSBmb250IGJhc2VkIGljb24uIFRoZSBmb2xsb3dpbmcgY29uZmlndXJhdGlvbiB3b3VsZCBtYXAgdG8gYSBmb250YXdlc29tZVxuICAgKiBpY29uOlxuICAgKlxuICAgKiBpY29uOiB7XG4gICAqICAgc3ltYm9sczoge1xuICAgKiAgICAgQ0FSVDogJ2ZhcyBmYS1zaG9wcGluZy1jYXJ0J1xuICAgKiAgIH1cbiAgICogfVxuICAgKi9cbiAgc3ltYm9scz86IHtcbiAgICBbSUNPTl9UWVBFOiBzdHJpbmddOiBzdHJpbmc7XG4gIH07XG5cbiAgLyoqXG4gICAqIFJlc291cmNlcyBhcmUgdXNlZCB0byBtYXAgaWNvbiB0eXBlcyB0byBjZXJ0YWluIGFzc2V0LCBzdWNoIGFzIGFuIFNWRyAoc3ByaXRlKSBpbWFnZS5cbiAgICogVGhlIHJlc291cmNlIHR5cGUgKGBJY29uUmVzb3VyY2VUeXBlYCkgZGljdGF0ZXMgd2hldGhlciBhbiBTVkcgaW1hZ2UgaXMgdXNlZC4gVGhlIFVSTFxuICAgKiBpcyB1c2VkIGZvciB0aGUgU1ZHIHhsaW5rIHJlZmVyZW5jZS5cbiAgICovXG4gIHJlc291cmNlcz86IEljb25Db25maWdSZXNvdXJjZVtdO1xuXG4gIC8qKlxuICAgKiBMaXN0cyBpY29ucyB0aGF0IHNob3VsZCBiZSBmbGlwcGVkIGZvciBhIHNwZWNpZmljIGRpcmVjdGlvbi5cbiAgICovXG4gIGZsaXBEaXJlY3Rpb24/OiB7XG4gICAgW0lDT05fVFlQRTogc3RyaW5nXTogRGlyZWN0aW9uTW9kZTtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJY29uQ29uZmlnUmVzb3VyY2Uge1xuICB0eXBlOiBJY29uUmVzb3VyY2VUeXBlIHwgc3RyaW5nO1xuICB1cmw/OiBzdHJpbmc7XG4gIHR5cGVzPzogKElDT05fVFlQRSB8IHN0cmluZylbXTtcbn1cblxuLyoqXG4gKiBFYWNoIElDT04gdHlwZSBjYW4gaGF2ZSBhbiBjb21wYW5pZWQgcmVzb3VyY2UgdHlwZSwgc3VjaCBhcyBTVkcsIExJTksgKGZvbnQpIG9yIGp1c3QgVEVYVC5cbiAqIFRoZSByZXNvdXJjZXMgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGxvYWRlZCBpbiBjYXNlIHRoZXkncmUgcmVxdWlyZWQgZm9yIHRoZSBgSUNPTl9UWVBFYC5cbiAqL1xuZXhwb3J0IGVudW0gSWNvblJlc291cmNlVHlwZSB7XG4gIC8qKlxuICAgKiBBbiBzdmcgYmFzZWQgaWNvbiByZXF1aXJlcyBhbiBTVkcgcmVzb3VyY2UgdGhhdCBtdXN0IGJlIGxvYWRlZCxcbiAgICogdGhpcyBpcyB0eXBpY2FsbHkgYSBzcHJpdGUgc3ZnIGZpbGUuXG4gICAqL1xuICBTVkcgPSAnc3ZnJyxcblxuICAvKipcbiAgICogQSBmb250IGJhc2VkIElDT04gbWlnaHQgcmVxdWlyZSBhbiBhZGRpdGlvbmFsIENTUyBmaWxlIHRvIGJlIGxvYWRlZC5cbiAgICovXG4gIExJTksgPSAnbGluaycsXG4gIC8qKlxuICAgKiBUZXh0IGJhc2VkIGljb25zIHdpbGwgc2ltcGx5IGFkZCB0aGUgSUNPTiBzdHJpbmcgdG8gdGhlIERPTS4gVGV4dCBpY29ucyBkbyBub3QgbmVlZCBhbiBpbWFnZVxuICAgKiBvciBDU1MgcHNldWRvIGNsYXNzIChpLmUuIDpiZWZvcmUpLCBhcyB0aGUgdGV4dCBpdHNlbGYgaXMgdGhlIGljb24gKGkuZS4gKylcbiAgICovXG4gIFRFWFQgPSAndGV4dCcsXG59XG4iXX0=