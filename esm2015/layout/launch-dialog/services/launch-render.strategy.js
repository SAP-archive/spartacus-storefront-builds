export class LaunchRenderStrategy {
    constructor() {
        // List of called references; only used for rendered elements
        this.renderedCallers = [];
    }
    /**
     * Determines if element should render
     *
     * @param caller
     * @param config
     */
    shouldRender(caller, config) {
        return this.renderedCallers.some((el) => el.caller === caller)
            ? !!config.multi
            : true;
    }
    /**
     * Method to call when rendered element is destroyed
     * The element will be removed from the list of rendered elements
     *
     * @param caller
     * @param _config optional parameters used in children strategies
     */
    remove(caller, _config) {
        this.renderedCallers = this.renderedCallers.filter((el) => el.caller === caller);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF1bmNoLXJlbmRlci5zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvc3RvcmVmcm9udC8iLCJzb3VyY2VzIjpbImxheW91dC9sYXVuY2gtZGlhbG9nL3NlcnZpY2VzL2xhdW5jaC1yZW5kZXIuc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsTUFBTSxPQUFnQixvQkFBb0I7SUFBMUM7UUFDRSw2REFBNkQ7UUFDbkQsb0JBQWUsR0FHcEIsRUFBRSxDQUFDO0lBNENWLENBQUM7SUF4QkM7Ozs7O09BS0c7SUFDTyxZQUFZLENBQUMsTUFBcUIsRUFBRSxNQUFvQjtRQUNoRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQztZQUM1RCxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1lBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDWCxDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLE1BQXFCLEVBQUUsT0FBdUI7UUFDMUQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FDaEQsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUM3QixDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTEFVTkNIX0NBTExFUiwgTGF1bmNoRGlhbG9nLCBMYXVuY2hPcHRpb25zIH0gZnJvbSAnLi4vY29uZmlnJztcbmltcG9ydCB7IEhhbmRsZXIgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTGF1bmNoUmVuZGVyU3RyYXRlZ3kgaW1wbGVtZW50cyBIYW5kbGVyIHtcbiAgLy8gTGlzdCBvZiBjYWxsZWQgcmVmZXJlbmNlczsgb25seSB1c2VkIGZvciByZW5kZXJlZCBlbGVtZW50c1xuICBwcm90ZWN0ZWQgcmVuZGVyZWRDYWxsZXJzOiBBcnJheTx7XG4gICAgY2FsbGVyOiBMQVVOQ0hfQ0FMTEVSO1xuICAgIGVsZW1lbnQ/OiBhbnk7XG4gIH0+ID0gW107XG5cbiAgLyoqXG4gICAqIFJlbmRlciBtZXRob2QgdG8gaW1wbGVtZW50IGJhc2VkIG9uIHRoZSBzdHJhdGVneVxuICAgKlxuICAgKiBAcGFyYW0gY29uZmlnIExhdW5jaCBjb25maWd1cmF0aW9uXG4gICAqL1xuICBhYnN0cmFjdCByZW5kZXIoXG4gICAgY29uZmlnOiBMYXVuY2hPcHRpb25zLFxuICAgIGNhbGxlcjogTEFVTkNIX0NBTExFUixcbiAgICB2Y3I/OiBWaWV3Q29udGFpbmVyUmVmXG4gICk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIERldGVybWluZXMgaWYgdGhlIHN0cmF0ZWd5IGlzIHRoZSByaWdodCBvbmUgZm9yIHRoZSBwcm92aWRlZCBjb25maWd1cmF0aW9uXG4gICAqXG4gICAqIEBwYXJhbSBjb25maWdcbiAgICovXG4gIGFic3RyYWN0IGhhc01hdGNoKGNvbmZpZzogTGF1bmNoT3B0aW9ucyk6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIERldGVybWluZXMgaWYgZWxlbWVudCBzaG91bGQgcmVuZGVyXG4gICAqXG4gICAqIEBwYXJhbSBjYWxsZXJcbiAgICogQHBhcmFtIGNvbmZpZ1xuICAgKi9cbiAgcHJvdGVjdGVkIHNob3VsZFJlbmRlcihjYWxsZXI6IExBVU5DSF9DQUxMRVIsIGNvbmZpZzogTGF1bmNoRGlhbG9nKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucmVuZGVyZWRDYWxsZXJzLnNvbWUoKGVsKSA9PiBlbC5jYWxsZXIgPT09IGNhbGxlcilcbiAgICAgID8gISFjb25maWcubXVsdGlcbiAgICAgIDogdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNZXRob2QgdG8gY2FsbCB3aGVuIHJlbmRlcmVkIGVsZW1lbnQgaXMgZGVzdHJveWVkXG4gICAqIFRoZSBlbGVtZW50IHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHRoZSBsaXN0IG9mIHJlbmRlcmVkIGVsZW1lbnRzXG4gICAqXG4gICAqIEBwYXJhbSBjYWxsZXJcbiAgICogQHBhcmFtIF9jb25maWcgb3B0aW9uYWwgcGFyYW1ldGVycyB1c2VkIGluIGNoaWxkcmVuIHN0cmF0ZWdpZXNcbiAgICovXG4gIHB1YmxpYyByZW1vdmUoY2FsbGVyOiBMQVVOQ0hfQ0FMTEVSLCBfY29uZmlnPzogTGF1bmNoT3B0aW9ucyk6IHZvaWQge1xuICAgIHRoaXMucmVuZGVyZWRDYWxsZXJzID0gdGhpcy5yZW5kZXJlZENhbGxlcnMuZmlsdGVyKFxuICAgICAgKGVsKSA9PiBlbC5jYWxsZXIgPT09IGNhbGxlclxuICAgICk7XG4gIH1cbn1cbiJdfQ==