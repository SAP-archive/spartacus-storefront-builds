/** The element attribute used to store the focus state */
export const FOCUS_ATTR = 'data-cx-focus';
/** The element attribute used to store the focus group state */
export const FOCUS_GROUP_ATTR = 'data-cx-focus-group';
export var TrapFocus;
(function (TrapFocus) {
    /**
     * Will trap the focus at the start of the focus group.
     */
    TrapFocus["start"] = "start";
    /**
     * Will trap the focus only at the end of the focus group.
     */
    TrapFocus["end"] = "end";
    /**
     * Will not trap the focus in both directions. This is actually not are
     * a great example of focus trap, but it will give the benefit of keyboard
     * tabbing by arrows.
     */
    TrapFocus["both"] = "both";
})(TrapFocus || (TrapFocus = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5Ym9hcmQtZm9jdXMubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NyYy9sYXlvdXQvYTExeS9rZXlib2FyZC1mb2N1cy9rZXlib2FyZC1mb2N1cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwREFBMEQ7QUFDMUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLGVBQWUsQ0FBQztBQUMxQyxnRUFBZ0U7QUFDaEUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcscUJBQXFCLENBQUM7QUErRHRELE1BQU0sQ0FBTixJQUFZLFNBZVg7QUFmRCxXQUFZLFNBQVM7SUFDbkI7O09BRUc7SUFDSCw0QkFBZSxDQUFBO0lBQ2Y7O09BRUc7SUFDSCx3QkFBVyxDQUFBO0lBQ1g7Ozs7T0FJRztJQUNILDBCQUFhLENBQUE7QUFDZixDQUFDLEVBZlcsU0FBUyxLQUFULFNBQVMsUUFlcEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVGhlIGVsZW1lbnQgYXR0cmlidXRlIHVzZWQgdG8gc3RvcmUgdGhlIGZvY3VzIHN0YXRlICovXG5leHBvcnQgY29uc3QgRk9DVVNfQVRUUiA9ICdkYXRhLWN4LWZvY3VzJztcbi8qKiBUaGUgZWxlbWVudCBhdHRyaWJ1dGUgdXNlZCB0byBzdG9yZSB0aGUgZm9jdXMgZ3JvdXAgc3RhdGUgKi9cbmV4cG9ydCBjb25zdCBGT0NVU19HUk9VUF9BVFRSID0gJ2RhdGEtY3gtZm9jdXMtZ3JvdXAnO1xuXG5leHBvcnQgY29uc3QgZW51bSBNT1ZFX0ZPQ1VTIHtcbiAgTkVYVCA9IDEsXG4gIFBSRVYgPSAtMSxcbn1cblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1lbXB0eS1pbnRlcmZhY2VcbmV4cG9ydCBpbnRlcmZhY2UgQmFzZUZvY3VzQ29uZmlnIHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmlzaWJsZUZvY3VzQ29uZmlnIHtcbiAgLyoqXG4gICAqIFdoZW4gc2V0IHRvIHRydWUsIHRoZSBgbW91c2UtZm9jdXNgIGNsYXNzIGlzIGFkZGVkIHRvIHRoZSBob3N0IGVsZW1lbnQsXG4gICAqIGluZGljYXRpbmcgdGhhdCB0aGUgZWxlbWVudCBmb2N1cyBzaG91bGQgbm90IGJlIG1hZGUgdmlzaWJsZS5cbiAgICovXG4gIGRpc2FibGVNb3VzZUZvY3VzPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCbG9ja0ZvY3VzQ29uZmlnIGV4dGVuZHMgVmlzaWJsZUZvY3VzQ29uZmlnIHtcbiAgYmxvY2s/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBlcnNpc3RGb2N1c0NvbmZpZyBleHRlbmRzIEJsb2NrRm9jdXNDb25maWcge1xuICAvKipcbiAgICogQSBrZXkgdG8gbWFpbnRhaW4gdGhlIGZvY3VzIG9mIGFuIGVsZW1lbnQgaW4gY2FzZSB0aGUgY29tcG9uZW50IGlzXG4gICAqIHJlY3JlYXRlZCAod2hpY2ggb2Z0ZW4gaXMgdGhlIGNhc2Ugd2hlbiBhbiBgKm5nSWZgIG9yIGAqbmdGb3JgIGlzIHVzZWQpLlxuICAgKi9cbiAga2V5Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBPcHRpb25hbCBncm91cCBpZGVudGlmaWVyIHRoYXQgY2FuIGJlIHVzZWQgdG8gcGVyc2lzdCB0aGUgZm9jdXMuIFRoaXMgYWxsb3dzXG4gICAqIHRvIGhhdmUgc2VwYXJhdGUgcGVyc2lzdGVkIGZvY3VzIGF2YWlsYWJsZSB3aGVuIHRoZSBET00gaXMgcGFydGlhbGx5IHJlYnVpbGQuXG4gICAqL1xuICBncm91cD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFc2NhcGVGb2N1c0NvbmZpZyBleHRlbmRzIFBlcnNpc3RGb2N1c0NvbmZpZyB7XG4gIGZvY3VzT25Fc2NhcGU/OiBib29sZWFuO1xuICAvKipcbiAgICogRm9yY2UgYW4gYXV0b2ZvY3VzIGluIGNhc2Ugb2YgZG91YmxlLWVzY2FwZVxuICAgKi9cbiAgZm9jdXNPbkRvdWJsZUVzY2FwZT86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXV0b0ZvY3VzQ29uZmlnIGV4dGVuZHMgRXNjYXBlRm9jdXNDb25maWcge1xuICAvKipcbiAgICogQXV0b2ZvY3VzIGlzIGVuYWJsZWQgYnkgZGVmYXVsdCwgYW5kIHdpbGwgdHJ5IHRvIGZvY3VzIGFuIF9hdXRvZm9jdXNfIGVsZW1lbnQuXG4gICAqIEluIGNhc2UgdGhlIGZvY3VzIGlzIGV4cGxpY2l0bHkgc2V0IHRvIGB0cnVlYCwgdGhlIGZpcnN0IGFjY2Vzc2libGUgZWxlbWVudFxuICAgKiBpcyBmb2N1c3NlZCBpbiBjYXNlIHRoZXJlIGlzIG5vIF9hdXRvZm9jdXNfIGVsZW1lbnQgZm91bmQuXG4gICAqIElmIHRoZSBmb2N1cyBpcyBzZXQgdG8gZmFsc2UsIGF1dG9mb2N1cyB3aWxsIGJlIGRpc2FibGVkIGNvbXBsZXRlbHkuXG4gICAqXG4gICAqIElmIGEgc3RyaW5nIHZhbHVlIGlzIGdpdmVuLCB0aGUgYXV0b2ZvY3VzIHdpbGwgYmUgcmVzdG9yZWQgYmFzZWQgb24gdGhlIHBlcnNpc3RlZFxuICAgKiBmb2N1cyBncm91cCwgd2hpY2ggaXMgZHJpdmVuIGJ5IGBQZXJzaXN0Rm9jdXNDb25maWcua2V5YCBhbmQgYFBlcnNpc3RGb2N1c0NvbmZpZy5ncm91cGAuXG4gICAqXG4gICAqIERlZmF1bHRzIHRvIGB0cnVlYC5cbiAgICovXG4gIGF1dG9mb2N1cz86IGJvb2xlYW4gfCBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFiRm9jdXNDb25maWcgZXh0ZW5kcyBBdXRvRm9jdXNDb25maWcge1xuICB0YWI/OiBib29sZWFuIHwgJ3Njcm9sbCcgfCBzdHJpbmc7XG59XG5cbmV4cG9ydCBlbnVtIFRyYXBGb2N1cyB7XG4gIC8qKlxuICAgKiBXaWxsIHRyYXAgdGhlIGZvY3VzIGF0IHRoZSBzdGFydCBvZiB0aGUgZm9jdXMgZ3JvdXAuXG4gICAqL1xuICBzdGFydCA9ICdzdGFydCcsXG4gIC8qKlxuICAgKiBXaWxsIHRyYXAgdGhlIGZvY3VzIG9ubHkgYXQgdGhlIGVuZCBvZiB0aGUgZm9jdXMgZ3JvdXAuXG4gICAqL1xuICBlbmQgPSAnZW5kJyxcbiAgLyoqXG4gICAqIFdpbGwgbm90IHRyYXAgdGhlIGZvY3VzIGluIGJvdGggZGlyZWN0aW9ucy4gVGhpcyBpcyBhY3R1YWxseSBub3QgYXJlXG4gICAqIGEgZ3JlYXQgZXhhbXBsZSBvZiBmb2N1cyB0cmFwLCBidXQgaXQgd2lsbCBnaXZlIHRoZSBiZW5lZml0IG9mIGtleWJvYXJkXG4gICAqIHRhYmJpbmcgYnkgYXJyb3dzLlxuICAgKi9cbiAgYm90aCA9ICdib3RoJyxcbn1cblxuZXhwb3J0IHR5cGUgVHJhcEZvY3VzVHlwZSA9XG4gIHwgYm9vbGVhblxuICB8IFRyYXBGb2N1cy5zdGFydFxuICB8IFRyYXBGb2N1cy5lbmRcbiAgfCBUcmFwRm9jdXMuYm90aDtcblxuLyoqXG4gKiBUaGUga2V5Ym9hcmQgbmF2aWdhdGlvbiAodGFiLCBzaGlmdC10YWIgYW5kIHVwIGRvd24ga2V5cykgaXMgX3RyYXBwZWRfXG4gKiBmb3IgdGhlIG5lc3RlZCBmb2N1c2FibGUgZWxlbWVudHMuIFRoaXMgbWVhbnMgdGhhdCB0aGUgZm9jdXMgY2FuIG5vdFxuICogXCJsZWF2ZVwiIHRoZSBlbGVtZW50cy4gSWYgdGhlIGxhc3QgZWxlbWVudCBpcyBmb2N1c2VkLCB0aGUga2V5Ym9hcmQgd2lsbFxuICogbmF2aWdhdGUgdG8gdGhlIGZpcnN0IGVsZW1lbnQgYW5kIHZpc2EgdmVyc2EuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVHJhcEZvY3VzQ29uZmlnIGV4dGVuZHMgVGFiRm9jdXNDb25maWcge1xuICAvKiogdHJhcHMgdGhlIGZvY3VzICovXG4gIHRyYXA/OiBUcmFwRm9jdXNUeXBlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExvY2tGb2N1c0NvbmZpZyBleHRlbmRzIFRyYXBGb2N1c0NvbmZpZyB7XG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgbmVzdGVkIERPTSBpcyBsb2NrZWQgZm9yIGtleWJvYXJkaW5nIChgVEFCYCkuXG4gICAqL1xuICBsb2NrPzogYm9vbGVhbjtcbn1cblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1lbXB0eS1pbnRlcmZhY2VcbmV4cG9ydCBpbnRlcmZhY2UgRm9jdXNDb25maWcgZXh0ZW5kcyBMb2NrRm9jdXNDb25maWcge31cbiJdfQ==