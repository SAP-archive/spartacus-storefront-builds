import { Injectable } from '@angular/core';
import { Config } from '@spartacus/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
/**
 * The `TableConfig` provides table configurations. The configuration allows for a
 * an optional breakpoint specific structure, so a dedicated table structure per
 * screen size can be generated (see `TableService`).
 *
 * The string based key is used to define a configuration for a specific type. The type
 * binds to a specific component, such as the cost-center table. The various table types
 * should be exposed by feature modules, to ease the configuration.
 *
 * The `TableConfiguration` is added in an array, so that any opinionated default configurations
 * can be replaced by customer configurations.
 */
export class TableConfig {
}
TableConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function TableConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: TableConfig, providedIn: "root" });
TableConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
                useExisting: Config,
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RvcmVmcm9udGxpYi9zcmMvc2hhcmVkL2NvbXBvbmVudHMvdGFibGUvY29uZmlnL3RhYmxlLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7O0FBV3pDOzs7Ozs7Ozs7OztHQVdHO0FBS0gsTUFBTSxPQUFnQixXQUFXOzs7O1lBSmhDLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTtnQkFDbEIsV0FBVyxFQUFFLE1BQU07YUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgQlJFQUtQT0lOVCB9IGZyb20gJy4uLy4uLy4uLy4uL2xheW91dC9jb25maWcvbGF5b3V0LWNvbmZpZyc7XG5pbXBvcnQgeyBUYWJsZVN0cnVjdHVyZUNvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi90YWJsZS5tb2RlbCc7XG5cbi8qKlxuICogSGVscGVyIGNvbmZpZ3VyYXRpb24gdG8gaW50cm9kdWNlIGEgYnJlYWtwb2ludCBzcGVjaWZpYyB0YWJsZSBjb25maWd1cmF0aW9uLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlQ29uZmlndXJhdGlvbiBleHRlbmRzIFRhYmxlU3RydWN0dXJlQ29uZmlndXJhdGlvbiB7XG4gIGJyZWFrcG9pbnQ/OiBCUkVBS1BPSU5UO1xufVxuXG4vKipcbiAqIFRoZSBgVGFibGVDb25maWdgIHByb3ZpZGVzIHRhYmxlIGNvbmZpZ3VyYXRpb25zLiBUaGUgY29uZmlndXJhdGlvbiBhbGxvd3MgZm9yIGFcbiAqIGFuIG9wdGlvbmFsIGJyZWFrcG9pbnQgc3BlY2lmaWMgc3RydWN0dXJlLCBzbyBhIGRlZGljYXRlZCB0YWJsZSBzdHJ1Y3R1cmUgcGVyXG4gKiBzY3JlZW4gc2l6ZSBjYW4gYmUgZ2VuZXJhdGVkIChzZWUgYFRhYmxlU2VydmljZWApLlxuICpcbiAqIFRoZSBzdHJpbmcgYmFzZWQga2V5IGlzIHVzZWQgdG8gZGVmaW5lIGEgY29uZmlndXJhdGlvbiBmb3IgYSBzcGVjaWZpYyB0eXBlLiBUaGUgdHlwZVxuICogYmluZHMgdG8gYSBzcGVjaWZpYyBjb21wb25lbnQsIHN1Y2ggYXMgdGhlIGNvc3QtY2VudGVyIHRhYmxlLiBUaGUgdmFyaW91cyB0YWJsZSB0eXBlc1xuICogc2hvdWxkIGJlIGV4cG9zZWQgYnkgZmVhdHVyZSBtb2R1bGVzLCB0byBlYXNlIHRoZSBjb25maWd1cmF0aW9uLlxuICpcbiAqIFRoZSBgVGFibGVDb25maWd1cmF0aW9uYCBpcyBhZGRlZCBpbiBhbiBhcnJheSwgc28gdGhhdCBhbnkgb3BpbmlvbmF0ZWQgZGVmYXVsdCBjb25maWd1cmF0aW9uc1xuICogY2FuIGJlIHJlcGxhY2VkIGJ5IGN1c3RvbWVyIGNvbmZpZ3VyYXRpb25zLlxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290JyxcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgVGFibGVDb25maWcge1xuICB0YWJsZToge1xuICAgIFtrZXk6IHN0cmluZ106IFRhYmxlQ29uZmlndXJhdGlvbltdO1xuICB9O1xufVxuIl19